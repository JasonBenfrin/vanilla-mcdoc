dispatch minecraft:item[firework_rocket] to struct FireworkRocket {
	...super::ItemBase,
	Fireworks?: LegacyFireworks,
}

dispatch minecraft:item[firework_star] to struct FireworkStar {
	...super::ItemBase,
	Explosion?: LegacyExplosion,
}

dispatch minecraft:item_component[firework_rocket] to (
	super::ItemBaseComponents |
	"fireworks" |
)

dispatch minecraft:item_component[firework_star] to (
	super::ItemBaseComponents |
	"firework_explosion" |
)

struct LegacyFireworks {
	/// Duration of flight.
	Flight?: byte,
	Explosions?: [LegacyExplosion],
}

struct LegacyExplosion {
	/// Whether the explosion should flicker.
	Flicker?: boolean,
	/// Whether the explosion should have a trail.
	Trail?: boolean,
	Type?: LegacyExplosionType,
	/// Colors of the explosion.
	/// Calculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.
	Colors?: #[color="composite_rgb"] int[],
	/// Colors of the explosion fade.
	/// Calculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.
	FadeColors?: #[color="composite_rgb"] int[],
}

enum(byte) LegacyExplosionType {
	SmallBall = 0,
	LargeBall = 1,
	Star = 2,
	Creeper = 3,
	Burst = 4,
}
