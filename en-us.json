{
   "mcdoc.java.assets.atlas.Unstitch.divisor_x": "If set to the resource width, regions will use pixel coordinates.",
   "mcdoc.java.assets.atlas.Unstitch.divisor_y": "If set to the resource height, regions will use pixel coordinates.",
   "mcdoc.java.assets.block_state_definition.BlockStateDefinitionMultipartEntry.when": "One condition or an array where at least one condition must apply.",
   "mcdoc.java.assets.block_state_definition.ModelVariantBase.uvlock": "If set to `true`, the textures are not rotated with the block.",
   "mcdoc.java.assets.credits.CreditsCompanySegment.section": "Company segment.",
   "mcdoc.java.assets.credits.CreditsJobTitle.names": "Employees with the title.",
   "mcdoc.java.assets.font.UnihexProvider.hex_file": "ZIP archive containing one or more *.hex files (files in archive with different extensions are ignored).",
   "mcdoc.java.assets.font.UnihexSizeOverrides.from": "Minimum in codepoint range (inclusive).",
   "mcdoc.java.assets.font.UnihexSizeOverrides.to": "Maximum in codepoint range (inclusive).",
   "mcdoc.java.assets.font.UnihexSizeOverrides.left": "Position of left-most column of the glyph.",
   "mcdoc.java.assets.font.UnihexSizeOverrides.right": "Position of right-most column of the glyph.",
   "mcdoc.java.assets.font.glyph_provider.__dispatch.ReferenceProvider": "Inclusion is performed after all fonts are loaded, so it will include all providers for a given font defined in all datapacks.",
   "mcdoc.java.assets.regional_compliancies.Notification.struct": "Region code.",
   "mcdoc.java.assets.sounds.SoundEventRegistration.sounds": "The sound files this sound event uses. One sound is randomly selected to play when the event is triggered. Defaults to assumed path.",
   "mcdoc.java.assets.sounds.SoundEventRegistration.replace": "If true the sounds listed should replace the ones listed in the minecraft sounds.json for this sound event.\nFalse if the sounds listed should be added. If undefined. Defaults to false.",
   "mcdoc.java.assets.sounds.SoundEventRegistration.subtitle": "Translated as the subtitle when Show Subtitles is enabled. Section sign formatting codes are supported.",
   "mcdoc.java.assets.sounds.Sound.type": "Changes how `name` is interpreted. Defaults to `sound`.",
   "mcdoc.java.assets.sounds.Sound.volume": "Defaults to 1.0.",
   "mcdoc.java.assets.sounds.Sound.pitch": "Default is 1.0.",
   "mcdoc.java.assets.sounds.Sound.weight": "Chance that this sound is selected to play. Defaults to 1.",
   "mcdoc.java.assets.sounds.Sound.preload": "Whether the sound should be loaded when loading the pack instead of when the sound is played. Used by the underwater ambience. Defaults to false.",
   "mcdoc.java.assets.sounds.Sound.stream": "If true it will be streamed from its file. Sounds longer than a few seconds should enable this to avoid lag. Defaults to false.\nWhen false many instances of the sound can be ran at the same time. When true only allows 4 instances (of that type) can be played.",
   "mcdoc.java.assets.sounds.Sound.attenuation_distance": "Modify sound reduction rate based on distance. Defaults to 16.",
   "mcdoc.java.assets.sounds.SoundType.File": "A file.",
   "mcdoc.java.assets.sounds.SoundType.SoundEvent": "An already defined event.",
   "mcdoc.java.assets.texture_meta.TextureAnimation.interpolate": "If true, additional frames will be generated between frames with a frame time greater than 1 between them. Defaults to false.",
   "mcdoc.java.assets.texture_meta.TextureAnimation.width": "The width of the tile, as a direct ratio rather than in pixels. Can be used by resource packs to have frames that are not perfect squares.",
   "mcdoc.java.assets.texture_meta.TextureAnimation.height": "The height of the tile, as a direct ratio rather than in pixels. Can be used by resource packs to have frames that are not perfect squares.",
   "mcdoc.java.assets.texture_meta.TextureAnimation.frametime": "Sets the default time for each frame in increments of one game tick. Defaults to 1.",
   "mcdoc.java.assets.texture_meta.TextureAnimation.frames": "Defaults to displaying all the frames from top to bottom.",
   "mcdoc.java.assets.texture_meta.TextureAnimationFrame.index": "A number corresponding to position of a frame from the top, with the top frame being 0.",
   "mcdoc.java.assets.texture_meta.TextureAnimationFrame.time": "The time in ticks to show this frame, overriding `frametime` above.",
   "mcdoc.java.assets.texture_meta.TextureMeta.villager": "Only available for villager textures.",
   "mcdoc.java.assets.texture_meta.VillagerTextureMeta.hat": "Determines whether the villager's 'profession' hat layer should allow the 'type' hat layer to render or not. If this mcmeta is undefined the default is used.",
   "mcdoc.java.assets.texture_meta.TextureMeta.texture": "Only available for colormaps.",
   "mcdoc.java.assets.texture_meta.ColormapTextureMeta.blur": "Causes the texture to blur when viewed from close up. Defaults to false.",
   "mcdoc.java.assets.texture_meta.ColormapTextureMeta.clamp": "Causes the texture to stretch instead of tiling in cases where it otherwise would, such as on the shadow. Defaults to false.",
   "mcdoc.java.assets.texture_meta.ColormapTextureMeta.mipmaps": "Custom mipmap values for the texture.",
   "mcdoc.java.data.damage_type.DamageType.message_id": "The message id used for deaths caused by this damage type.\nIs combined with the result of `death_message_type` to form a translation key.",
   "mcdoc.java.data.damage_type.DamageType.exhaustion": "Amount of hunger exhaustion to cause.",
   "mcdoc.java.data.damage_type.DamageType.scaling": "Whether to scale damage with difficulty levels.",
   "mcdoc.java.data.damage_type.DamageType.effects": "Controls how damage manifests when inflicted on players. Defaults to `hurt`.",
   "mcdoc.java.data.damage_type.DamageType.death_message_type": "Controls if special death message variants are used. Defaults to `default`.\nFor more info see: https://minecraft.wiki/w/Damage_type#Death_messages",
   "mcdoc.java.data.damage_type.DamageScaling.Never": "Always the same.",
   "mcdoc.java.data.damage_type.DamageScaling.Always": "Always scale with difficulty.",
   "mcdoc.java.data.damage_type.DamageScaling.LivingNonPlayer": "Scale with difficulty if it was caused by a living entity who is not a player.",
   "mcdoc.java.data.damage_type.DamageEffects.Hurt": "Default hurt sound.",
   "mcdoc.java.data.damage_type.DamageEffects.Thorns": "Thorns hurt sound.",
   "mcdoc.java.data.damage_type.DamageEffects.Drowning": "Drowing sound.",
   "mcdoc.java.data.damage_type.DamageEffects.Burning": "A single tick of burning hurt sound.",
   "mcdoc.java.data.damage_type.DamageEffects.Poking": "Berry bush poke sound.",
   "mcdoc.java.data.damage_type.DamageEffects.Freezing": "A single tick of freezing hurt sound.",
   "mcdoc.java.data.damage_type.DeathMessageType.Default": "Resulting translation key of `death.attack.` + message_id.",
   "mcdoc.java.data.damage_type.DeathMessageType.FallVariants": "Resulting translation key of `death.attack.` + message_id.",
   "mcdoc.java.data.damage_type.DeathMessageType.IntentionalGameDesign": "Resulting translation key of `death.attack.` + message_id + `.link`.",
   "mcdoc.java.data.enchantment.Enchantment.primary_items": "Item types for which this Enchantment shows up in Enchanting Tables and on traded equipment.\nMust be a subset of `supported_items`.",
   "mcdoc.java.data.enchantment.Enchantment.weight": "How commonly the Enchantment appears, compared to the total combined `weight` of all available Enchantments.",
   "mcdoc.java.data.enchantment.Enchantment.min_cost": "Minimum experience cost.",
   "mcdoc.java.data.enchantment.Enchantment.max_cost": "Maximum experience cost.",
   "mcdoc.java.data.enchantment.Enchantment.anvil_cost": "Halved when an Enchantment is added to a book.\nThe effective fee is multiplied by the level of the Enchantment.",
   "mcdoc.java.data.enchantment.EnchantmentCost.base": "Base cost at level 1.",
   "mcdoc.java.data.enchantment.EnchantmentCost.per_level_above_first": "Cost increase per level above 1.",
   "mcdoc.java.data.enchantment.LinearLevelValue.base": "Base cost at level 1.",
   "mcdoc.java.data.enchantment.LinearLevelValue.per_level_above_first": "Cost increase per level above 1.",
   "mcdoc.java.data.enchantment.level_based_value.__dispatch.ClampedLevelValue": "Clamps another Level-Based Value",
   "mcdoc.java.data.enchantment.level_based_value.__dispatch.FractionLevelValue": "Fraction constructed from two other Level-Based Values",
   "mcdoc.java.data.enchantment.level_based_value.__dispatch.SquaredLevelValue": "Value based on the level squared.",
   "mcdoc.java.data.enchantment.SquaredLevelValue.added": "Added to the exponent; `0.0` for squared, `1.0` for cubed, `.5` for square root, `-4` for negpow(2), etc.",
   "mcdoc.java.data.enchantment.level_based_value.__dispatch.LookupLevelValue": "Maps a list of values to specific levels, and applies a fallback if the level is greater than the number of values supplied.",
   "mcdoc.java.data.enchantment.LookupLevelValue.values": "Indexed by `level - 1` to apply, if present",
   "mcdoc.java.data.enchantment.LookupLevelValue.fallback": "Applied if the level is greater than the size of `values`.",
   "mcdoc.java.data.enchantment.value_effect.__dispatch.AllOfEffectValue": "Runs a number of other Effect Values, in order",
   "mcdoc.java.data.enchantment.MultiplyEffectValue.factor": "Level-Based Value determining the factor to multiply in",
   "mcdoc.java.data.enchantment.value_effect.__dispatch.ReduceBinomialEffectValue": "Runs a Binomial series of checks, reducing the input value by 1 for every successful check.",
   "mcdoc.java.data.enchantment.ReduceBinomialEffectValue.chance": "Chance that an input value is dropped by 1.\nThe span is 0 to 1, with 0 being no chance to drop an input value and 1 dropping all input values.",
   "mcdoc.java.data.enchantment.AttributeEffect.id": "Used when equipping and unequipping the item to identify which modifier to add or remove from the entity.\nPostfixed with the slot name when the enchanted item is equipped.",
   "mcdoc.java.data.enchantment.AttributeEffect.amount": "Change in the attribute.",
   "mcdoc.java.data.enchantment.AttributeEffect.operation": "The attribute operation to use.",
   "mcdoc.java.data.enchantment.entity_effect.__dispatch.AllOfEntityEffect": "Runs a list of other Entity Effects. Useful when a set of conditions should apply to more than one Entity Effect.",
   "mcdoc.java.data.enchantment.location_based_effect.__dispatch.AllOfLocationBasedEffect": "Runs a list of other Entity Effects. Useful when a set of conditions should apply to more than one Entity Effect.",
   "mcdoc.java.data.enchantment.ApplyMobEffectEntityEffect.to_apply": "If multiple mob effects are specified, a random effect is selected.",
   "mcdoc.java.data.enchantment.DamageEntityEffect.min_damage": "Amount of damage is randomized within the given min/max span.",
   "mcdoc.java.data.enchantment.DamageItemEffect.struct": "Applies damage to the Enchanted Item. The damage is not applied to items held by players in creative mode.",
   "mcdoc.java.data.enchantment.ExplodeEntityEffect.attribute_to_user": "Whether the explosion should be attributed to the user of the enchanted tool.",
   "mcdoc.java.data.enchantment.ExplodeEntityEffect.damage_type": "If omitted, no damage is dealt by the explosion.",
   "mcdoc.java.data.enchantment.ExplodeEntityEffect.immune_blocks": "List of Blocks or hash-prefixed Block Tag specifying which blocks fully block the explosion.",
   "mcdoc.java.data.enchantment.ExplodeEntityEffect.knockback_multiplier": "If omitted, the default explosion knockback is applied.",
   "mcdoc.java.data.enchantment.ExplodeEntityEffect.offset": "Relative coordinates to offset the explosion by. Defaults to `[0, 0, 0]`.",
   "mcdoc.java.data.enchantment.ExplodeEntityEffect.create_fire": "Whether fire is placed within the explosion radius.",
   "mcdoc.java.data.enchantment.ExplodeEntityEffect.block_interaction": "Whether the explosion has special effects on blocks.",
   "mcdoc.java.data.enchantment.undefined.ExplodeEntityEffect.undefined.None": "No item drops or special behavior.",
   "mcdoc.java.data.enchantment.undefined.ExplodeEntityEffect.undefined.Block": "Drops items as if a block caused the explosion; `blockExplosionDropDecay` game rule applies.",
   "mcdoc.java.data.enchantment.undefined.ExplodeEntityEffect.undefined.Mob": "Drops items as if a mob caused the explosion; `mobExplosionDropDecay` game rule applies.",
   "mcdoc.java.data.enchantment.undefined.ExplodeEntityEffect.undefined.TNT": "Drops items as if TNT caused the explosion; `tntExplosionDropDecay` game rule applies.",
   "mcdoc.java.data.enchantment.undefined.ExplodeEntityEffect.undefined.Trigger": "Triggers redstone-activated blocks.",
   "mcdoc.java.data.enchantment.IgniteEntityEffect.duration": "Seconds the fire should last.",
   "mcdoc.java.data.enchantment.ReplaceBlockEntityEffect.offset": "Relative coordinates to offset the placed block by. Defaults to `[0, 0, 0]`.",
   "mcdoc.java.data.enchantment.ReplaceBlockEntityEffect.predicate": "If omitted, all block types are replaced.",
   "mcdoc.java.data.enchantment.ReplaceBlockEntityEffect.trigger_game_event": "Defaults to no game event dispatched.",
   "mcdoc.java.data.enchantment.ReplaceDiskEntityEffect.offset": "Relative coordinates to offset the center of the cylinder by. Defaults to `[0, 0, 0]`.",
   "mcdoc.java.data.enchantment.RunFunctionEntityEffect.struct": "Runs an mcfunction as/at the entity.\nBecause of function call overhead, this is only useful for events, not for continuous effects, `@e[tag=...]` in that case.",
   "mcdoc.java.data.enchantment.SetBlockPropertiesEntityEffect.offset": "Relative coordinates to offset the block by. Defaults to `[0, 0, 0]`.",
   "mcdoc.java.data.enchantment.SetBlockPropertiesEntityEffect.trigger_game_event": "Defaults to no game event dispatched.",
   "mcdoc.java.data.enchantment.ParticlePosition.offset": "Defaults to 0.",
   "mcdoc.java.data.enchantment.ParticlePosition.scale": "Defaults to 1.",
   "mcdoc.java.data.enchantment.ParticleVelocity.base": "Defaults to 0.",
   "mcdoc.java.data.enchantment.ParticleVelocity.movement_scale": "Scale factor applied to the given axis (`1` adds the velocity of the entity to the spawned particles). Defaults to 0.",
   "mcdoc.java.data.enchantment.SummonEntityEffect.entity": "If multiple entity types are specified, a random entity type is selected.",
   "mcdoc.java.data.enchantment.SummonEntityEffect.join_team": "Whether the summoned entity should join the team of the owner of the Enchanted Item.",
   "mcdoc.java.data.enchantment.DamageEnchantmentEffect.requirements": "Predicate context: Damage Parameters.",
   "mcdoc.java.data.enchantment.DamageEnchantmentEffect.effect": "Determines armor effectiveness; `0.0` for no effect, `1.0` for full effect.",
   "mcdoc.java.data.enchantment.AmmoUseEnchantmentEffect.requirements": "Predicate context: Item Parameters.",
   "mcdoc.java.data.enchantment.AmmoUseEnchantmentEffect.effect": "Amount of ammunition being used up.",
   "mcdoc.java.data.enchantment.BlockExperienceEnchantmentEffect.requirements": "Predicate context: Item Parameters.",
   "mcdoc.java.data.enchantment.BlockExperienceEnchantmentEffect.effect": "Amount of experience awarded.",
   "mcdoc.java.data.enchantment.effect_component.__dispatch.crossbow_charge_sounds": "Each entry in the list represents the sounds at one level of the Enchantment, so the first entry represents the sounds used by a level 1 Enchantment.",
   "mcdoc.java.data.enchantment.CrossbowChargeSoundsEnchantmentEffect.start": "Start of charging.",
   "mcdoc.java.data.enchantment.CrossbowChargeSoundsEnchantmentEffect.mid": "Middle of charging.",
   "mcdoc.java.data.enchantment.CrossbowChargeSoundsEnchantmentEffect.end": "End of charging.",
   "mcdoc.java.data.enchantment.effect_component.__dispatch.crossbow_charge_time": "Charge time of the Crossbow in seconds",
   "mcdoc.java.data.enchantment.effect_component.__dispatch.damage_immunity": "Complete damage immunity given the conditions are met.",
   "mcdoc.java.data.enchantment.DamageImmunityEnchantmentEffect.requirements": "Predicate context: Damage Parameters.",
   "mcdoc.java.data.enchantment.DamageImmunityEnchantmentEffect.effect": "Dummy value; this is a boolean effect.",
   "mcdoc.java.data.enchantment.DamageProtectionEnchantmentEffect.requirements": "Predicate context: Damage Parameters.",
   "mcdoc.java.data.enchantment.DamageProtectionEnchantmentEffect.effect": "Amount of damage being absorbed; as \"fake armor\".",
   "mcdoc.java.data.enchantment.effect_component.__dispatch.equipment_drops": "Chance of equipment dropping when a target is killed by the owner of the Enchanted Item.",
   "mcdoc.java.data.enchantment.EquipmentDropsEnchantmentEffect.requirements": "Predicate context: Damage Parameters.",
   "mcdoc.java.data.enchantment.EquipmentDropsEnchantmentEffect.effect": "Chance between `0.0` and `1.0` of an equipped piece dropping.",
   "mcdoc.java.data.enchantment.EquipmentDropsEnchantmentEffect.enchanted": "Which subject needs to be enchanted for the effect to apply.",
   "mcdoc.java.data.enchantment.FishingLuckBonusEnchantmentEffect.requirements": "Predicate context: Entity Parameters.\n`this` is the player fishing.",
   "mcdoc.java.data.enchantment.FishingLuckBonusEnchantmentEffect.effect": "Amount of luck being added.",
   "mcdoc.java.data.enchantment.FishingTimeReductionEnchantmentEffect.requirements": "Predicate context: Entity Parameters.\n`this` is the player fishing.",
   "mcdoc.java.data.enchantment.FishingTimeReductionEnchantmentEffect.effect": "Time reduction in seconds (higher values mean less time until a fish bites).",
   "mcdoc.java.data.enchantment.HitBlockEnchantmentEffect.requirements": "Predicate context: Entity Parameters.\n`this` is the entity hitting the Block, unless during a projectile attack, then, `this` is the projectile.",
   "mcdoc.java.data.enchantment.HitBlockEnchantmentEffect.effect": "On the entity hitting the Block",
   "mcdoc.java.data.enchantment.KnockbackEnchantmentEffect.requirements": "Predicate context: Damage Parameters.",
   "mcdoc.java.data.enchantment.KnockbackEnchantmentEffect.effect": "Amount of knockback being applied.",
   "mcdoc.java.data.enchantment.ItemDamageEnchantmentEffect.requirements": "Predicate context: Item Parameters.",
   "mcdoc.java.data.enchantment.ItemDamageEnchantmentEffect.effect": "Amount of damage being dealt to the item.",
   "mcdoc.java.data.enchantment.LocationChangedEnchantmentEffect.requirements": "Predicate context: Location Parameters.",
   "mcdoc.java.data.enchantment.LocationChangedEnchantmentEffect.effect": "On the entity changing location.",
   "mcdoc.java.data.enchantment.MobExperienceEnchantmentEffect.requirements": "Predicate context: Entity Parameters.\n`this` is the killed mob.",
   "mcdoc.java.data.enchantment.MobExperienceEnchantmentEffect.effect": "Amount of experience awarded.",
   "mcdoc.java.data.enchantment.PostAttackEnchantmentEffect.requirements": "Predicate context: Damage Parameters.",
   "mcdoc.java.data.enchantment.PostAttackEnchantmentEffect.effect": "Examples:\n- A Fire Aspect Enchant would specify that when the attacker is enchanted, the ignite effect is applied, and the affected party is the victim.\n- Thorns would specify that when the victim is enchanted, the damage_entity effect is applied, and the affected party is the attacker.",
   "mcdoc.java.data.enchantment.effect_component.__dispatch_89": "Prevents the enchanted item from being unequipped from an armor slot.",
   "mcdoc.java.data.enchantment.effect_component.__dispatch_90": "Prevents the enchanted item from being dropped when the owner dies.",
   "mcdoc.java.data.enchantment.ProjectileCountEnchantmentEffect.requirements": "Predicate context: Entity Parameters.\n`this` is the entity drawing the weapon.",
   "mcdoc.java.data.enchantment.ProjectileCountEnchantmentEffect.effect": "Amount of projectiles being loaded/drawn.",
   "mcdoc.java.data.enchantment.effect_component.__dispatch.projectile_piercing": "Controls the amount of entities a shot projectile will pierce through before despawning.",
   "mcdoc.java.data.enchantment.ProjectilePiercingEnchantmentEffect.requirements": "Predicate context: Item Parameters.\nTool is the ammunition item.",
   "mcdoc.java.data.enchantment.ProjectilePiercingEnchantmentEffect.effect": "Amount of entities the projectile will pierce through before despawning.",
   "mcdoc.java.data.enchantment.effect_component.__dispatch.projectile_spread": "Spread of arrows from a projectile weapon firing multiple projectiles",
   "mcdoc.java.data.enchantment.ProjectileSpreadEnchantmentEffect.requirements": "Predicate context: Entity Parameters.\n`this` is the entity shooting the projectile.",
   "mcdoc.java.data.enchantment.ProjectileSpreadEnchantmentEffect.effect": "Maximum spread of projectiles measured in degrees from the aim line.",
   "mcdoc.java.data.enchantment.effect_component.__dispatch.projectile_spawned": "Effect(s) to apply to projectile entities that have been spawned when firing a projectile weapon.",
   "mcdoc.java.data.enchantment.ProjectileSpawnedEnchantmentEffect.requirements": "Predicate context: Entity Parameters.\n`this` is the newly spawned projectile.",
   "mcdoc.java.data.enchantment.ProjectileSpawnedEnchantmentEffect.effect": "On the newly spawned projectile.",
   "mcdoc.java.data.enchantment.effect_component.__dispatch.repair_with_xp": "Repairs the enchanted item with experience points picked up by the player.",
   "mcdoc.java.data.enchantment.RepairWithXpEnchantmentEffect.requirements": "Predicate context: Item Parameters.",
   "mcdoc.java.data.enchantment.RepairWithXpEnchantmentEffect.effect": "Amount of durability increase per experience point, `mending` uses 2x.",
   "mcdoc.java.data.enchantment.effect_component.__dispatch.smash_damage_per_block_fallen": "Amount of damage caused by a Mace's smash attack per block fallen.",
   "mcdoc.java.data.enchantment.SmashDamagePerBlockFallenEnchantmentEffect.requirements": "Predicate context: Damage Parameters.",
   "mcdoc.java.data.enchantment.SmashDamagePerBlockFallenEnchantmentEffect.effect": "Amount of damage dealt per block fallen.",
   "mcdoc.java.data.enchantment.TickEnchantmentEffect.requirements": "Predicate context: Entity Parameters.\n`this` is the entity with the Enchanted Item.",
   "mcdoc.java.data.enchantment.TickEnchantmentEffect.effect": "On every tick. Performance recommendation: don't use with `run_function` unless necessary.",
   "mcdoc.java.data.enchantment.TridentReturnAccelerationEnchantmentEffect.requirements": "Predicate context: Entity Parameters.\n`this` is the trident entity.",
   "mcdoc.java.data.enchantment.TridentReturnAccelerationEnchantmentEffect.effect": "Amount of acceleration applied to the returning trident.",
   "mcdoc.java.data.enchantment.effect_component.__dispatch.trident_spin_attack_strength": "Amount of strength applied to the spin attack.\nAny resulting value greater than 0 converts the Trident to be a spin attack weapon instead of a thrown attack.",
   "mcdoc.java.data.enchantment.effect_component.__dispatch.trident_sound": "Each entry in the list represents the sound at one level of the Enchantment, so the first entry represents the sound used by a level 1 Enchantment.",
   "mcdoc.java.data.enchantment.enchantment_provider.__dispatch.SingleProvider": "Returns a specified Enchantment",
   "mcdoc.java.data.enchantment.enchantment_provider.__dispatch.ByCostEnchantmentProvider": "Gives one or more Enchantments from a set of options according to a given cost (similar to the cost value in the Enchantment Table).",
   "mcdoc.java.data.enchantment.ByCostEnchantmentProvider.cost": "Cost to use for the Enchanting process.",
   "mcdoc.java.data.enchantment.ByCostWithDifficultyEnchantmentProvider.min_cost": "Positive integer representing the minimum possible cost",
   "mcdoc.java.data.enchantment.ByCostWithDifficultyEnchantmentProvider.max_cost_span": "Span of the cost randomization when the special factor is at its maximum.",
   "mcdoc.java.data.recipe.CraftingShaped.group": "Identifier to group multiple recipes in the recipe book.",
   "mcdoc.java.data.recipe.CraftingShaped.category": "Identifier for the category this goes in the recipe book.",
   "mcdoc.java.data.recipe.CraftingShaped.show_notification": "Determines if a notification is shown when unlocking this recipe. Defaults to true.",
   "mcdoc.java.data.recipe.CraftingShapeless.category": "Identifier for the category this goes in the recipe book.",
   "mcdoc.java.data.recipe.CraftingTransmute.category": "Identifier for the category this goes in the recipe book.",
   "mcdoc.java.data.recipe.CraftingTransmute.input": "The ingredient that will transfer its data components to the result item.",
   "mcdoc.java.data.recipe.CraftingTransmute.material": "An additional ingredient.",
   "mcdoc.java.data.recipe.Smelting.category": "Identifier for the category this goes in the recipe book.",
   "mcdoc.java.data.recipe.RequiredSmithingIngredients.base": "Ingredient specifying an item to be trimmed. (eg. `{ \"tag\": \"minecraft:trimmable_armor\" }`)",
   "mcdoc.java.data.recipe.RequiredSmithingIngredients.addition": "Material that will be used. (eg. `{ \"tag\": \"minecraft:trim_materials\" }`)",
   "mcdoc.java.data.recipe.RequiredSmithingIngredients.template": "Template item that will be used for the pattern.",
   "mcdoc.java.data.recipe.OptionalSmithingIngredients.base": "Ingredient specifying an item to be trimmed. (eg. `\"#minecraft:trimmable_armor\" }`)",
   "mcdoc.java.data.recipe.OptionalSmithingIngredients.addition": "Material that will be used. (eg. `\"#minecraft:trim_materials\"`)",
   "mcdoc.java.data.recipe.OptionalSmithingIngredients.template": "Template item that will be used for the pattern.",
   "mcdoc.java.data.recipe.SmithingTransform.result": "Resulting transformed item.",
   "mcdoc.java.data.structure.StructureNBT.DataVersion": "[Data version](https://minecraft.fandom.com/wiki/Data_version).",
   "mcdoc.java.data.structure.RandomizedPalette.palettes": "Sets of different block states used in the structure, a random palette gets selected based on coordinates.",
   "mcdoc.java.data.trial_spawner.TrialSpawnerConfig.spawn_range": "Maximum distance from the spawner that en entity can spawn",
   "mcdoc.java.data.trial_spawner.TrialSpawnerConfig.total_mobs": "Total amount of entities that are spawned during one activation, when 1 player is nearby",
   "mcdoc.java.data.trial_spawner.TrialSpawnerConfig.total_mobs_added_per_player": "Number added to `total_mobs` for each additional player",
   "mcdoc.java.data.trial_spawner.TrialSpawnerConfig.simultaneous_mobs": "Number of entities that that can be present at once, when 1 player is nearby",
   "mcdoc.java.data.trial_spawner.TrialSpawnerConfig.simultaneous_mobs_added_per_player": "Number added to `simultaneous_mobs` for each additional player",
   "mcdoc.java.data.trial_spawner.TrialSpawnerConfig.ticks_between_spawn": "Ticks until the next spawn.",
   "mcdoc.java.data.trial_spawner.TrialSpawnerConfig.spawn_potentials": "Entities that can be placed.",
   "mcdoc.java.data.trial_spawner.TrialSpawnerConfig.loot_tables_to_eject": "Loot tables to use when ejecting loot. Chooses one loot table based on weight and then uses it as often as there are players nearby.",
   "mcdoc.java.data.trial_spawner.TrialSpawnerConfig.items_to_drop_when_ominous": "Loot table to use when summoning ominous item spawners. One roll seeded based on rough location to determine all items used during the battle.",
   "mcdoc.java.data.trim.TrimMaterial.asset_name": "ID which will be used in the resource pack.",
   "mcdoc.java.data.trim.TrimMaterial.description": "Text displayed in the item tooltip.",
   "mcdoc.java.data.trim.TrimMaterial.ingredient": "Item used in the smithing table for this material.",
   "mcdoc.java.data.trim.TrimMaterial.item_model_index": "Model override predicate float.",
   "mcdoc.java.data.trim.TrimMaterial.override_armor_materials": "Armor materials that should have a different color palette.",
   "mcdoc.java.data.trim.TrimPattern.asset_id": "ID of the pattern that will be used in the resource pack as an overlay on the armor.",
   "mcdoc.java.data.trim.TrimPattern.description": "Text displayed in the item tooltip.",
   "mcdoc.java.data.trim.TrimPattern.template_item": "The item used in the smithing table for this pattern.",
   "mcdoc.java.data.trim.TrimPattern.decal": "Whether the pattern texture will be masked based on the underlying armor. Defaults to `false`.",
   "mcdoc.java.data.advancement.mod.Advancement.display": "If present, advancement will be visible in the advancement tabs.",
   "mcdoc.java.data.advancement.mod.Advancement.parent": "If this field is absent, this advancement is a root advancement.\nCircular references cause a loading failure.",
   "mcdoc.java.data.advancement.mod.Advancement.criteria": "If `requirements` is not defined, all defined criteria will be required.",
   "mcdoc.java.data.advancement.mod.Advancement.requirements": "Contains all of the `criteria` keys.\nIf all criteria are required at once, this may be omitted.\nWith multiple criteria: this contains a list of lists with criteria (all criteria must be mentioned).\nIf all of the lists each have any criteria met, the advancement is complete (basically AND grouping of OR groups).",
   "mcdoc.java.data.advancement.mod.Advancement.rewards": "Provided to the player when this advancement is obtained.",
   "mcdoc.java.data.advancement.mod.Advancement.sends_telemetry_event": "Defaults to `false`. The vanilla game client only reads this for advancements from the `minecraft` namespace.",
   "mcdoc.java.data.advancement.mod.AdvancementDisplay.background": "Used for the advancement tab (root advancement only).",
   "mcdoc.java.data.advancement.mod.AdvancementDisplay.frame": "Controls the advancement tile frame. Defaults to `task`.",
   "mcdoc.java.data.advancement.mod.AdvancementDisplay.show_toast": "Whether to show the toast pop up after completing this advancement. Defaults to `true`.",
   "mcdoc.java.data.advancement.mod.AdvancementDisplay.announce_to_chat": "Whether to announce in the chat when this advancement has been completed. Defaults to `true`.",
   "mcdoc.java.data.advancement.mod.AdvancementDisplay.hidden": "Whether or not to hide this advancement and all its children from the advancement screen,\nuntil this advancement have been completed.\nHas no effect on root advancements themselves, but still affects all their children.\nDefaults to `false`.",
   "mcdoc.java.data.advancement.mod.AdvancementFrame.Task": "Normal border.",
   "mcdoc.java.data.advancement.mod.AdvancementFrame.Challenge": "Fancy spiked border (used for the kill all mobs advancement).",
   "mcdoc.java.data.advancement.mod.AdvancementFrame.Goal": "Rounded border (used for the full beacon advancement).",
   "mcdoc.java.data.advancement.mod.AdvancementCriterion.trigger": "Many triggers can occur multiple times, however, the reward will only be provided multiple times if the advancement is first revoked, which is often done within the function reward.",
   "mcdoc.java.data.advancement.mod.AdvancementRewards.function": "Function to run as the player (not at). Function group tags are not allowed.",
   "mcdoc.java.data.advancement.mod.AdvancementRewards.loot": "Loot tables to give.",
   "mcdoc.java.data.advancement.mod.AdvancementRewards.recipes": "Recipes to unlock.",
   "mcdoc.java.data.advancement.mod.AdvancementRewards.experience": "XP to add.",
   "mcdoc.java.data.advancement.predicate.LocationPredicate.light": "Calculated using: `max(sky-darkening, block)`.",
   "mcdoc.java.data.advancement.predicate.LocationPredicate.smokey": "Whether the block is above (5 blocks or less) a campfire or soul campfire.",
   "mcdoc.java.data.advancement.predicate.LocationPredicate.can_see_sky": "Whether the location has the maximum possible level of sky light",
   "mcdoc.java.data.advancement.predicate.EntityPredicate.targeted_entity": "The entity that a mob's AI/aggro is targeting.",
   "mcdoc.java.data.advancement.predicate.EntityPredicate.periodic_tick": "True every `n` ticks of an entity's lifetime.",
   "mcdoc.java.data.advancement.predicate.EntityPredicate.movement_affected_by": "Whether the block at most 0.5 blocks below the entity is present which can affect its movement.",
   "mcdoc.java.data.advancement.predicate.AxolotlVariant.Blue": "The rare variant.",
   "mcdoc.java.data.advancement.predicate.PlayerPredicate.level": "Experience/XP level.",
   "mcdoc.java.data.advancement.predicate.PlayerPredicate.input": "Checks the movement keys of the player.",
   "mcdoc.java.data.advancement.predicate.RabbitVariant.Evil": "Killer rabbit",
   "mcdoc.java.data.advancement.predicate.TropicalFishPredicate.variant": "The pattern of the tropical fish.",
   "mcdoc.java.data.advancement.predicate.DamagePredicate.dealt": "Amount of incoming damage before damage reduction.",
   "mcdoc.java.data.advancement.predicate.DamagePredicate.taken": "Amount of incoming damage after damage reduction.",
   "mcdoc.java.data.advancement.predicate.DamagePredicate.blocked": "Whether the damage was successfully blocked.",
   "mcdoc.java.data.advancement.predicate.DamagePredicate.source_entity": "Source of the damage (eg: a skeleton shooting an arrow or player igniting tnt).",
   "mcdoc.java.data.advancement.predicate.DamagePredicate.type": "The type of the damage source.",
   "mcdoc.java.data.advancement.predicate.DamageSourcePredicate.tags": "Damage type tags that the damage type is in.",
   "mcdoc.java.data.advancement.predicate.DamageSourcePredicate.source_entity": "Source of the damage (eg: a skeleton shooting an arrow or player igniting tnt).",
   "mcdoc.java.data.advancement.predicate.DamageSourcePredicate.direct_entity": "Direct entity responsible for the damage (eg: the arrow or tnt).",
   "mcdoc.java.data.advancement.predicate.DamageSourcePredicate.is_direct": "Damage is direct when its direct and source entities are the same.",
   "mcdoc.java.data.advancement.predicate.DamageTagPredicate.id": "The damage type tag to check.",
   "mcdoc.java.data.advancement.predicate.DamageTagPredicate.expected": "Whether the damage is expected to have or not have the tag.",
   "mcdoc.java.data.advancement.trigger.BeeNestDestroyed.num_bees_inside": "Number of bees that were inside the bee nest/beehive before it was broken.",
   "mcdoc.java.data.advancement.trigger.BeeNestDestroyed.item": "Item used to break the block.",
   "mcdoc.java.data.advancement.trigger.trigger.__dispatch.brewed_potion": "Player took any item out of a brewing stand.",
   "mcdoc.java.data.advancement.trigger.trigger.__dispatch.channeled_lightning": "Player successfully used the Channeling enchantment on an entity.",
   "mcdoc.java.data.advancement.trigger.trigger.__dispatch.construct_beacon": "Player changed the base of a beacon to a valid base; when the beacon updates itself, occurs both on setup & expansion.",
   "mcdoc.java.data.advancement.trigger.ConstructBeacon.level": "Tier of the updated beacon base.",
   "mcdoc.java.data.advancement.trigger.trigger.__dispatch.consume_item": "Player had a status effect applied or taken from them.",
   "mcdoc.java.data.advancement.trigger.DefaultBlockUse.location": "The location of the block.",
   "mcdoc.java.data.advancement.trigger.trigger.__dispatch.effects_changed": "Player had a status effect applied or taken from them.",
   "mcdoc.java.data.advancement.trigger.trigger.__dispatch.enchanted_item": "Player enchanted an item using an enchanting table; not with an anvil or through commands.",
   "mcdoc.java.data.advancement.trigger.trigger.__dispatch.enter_block": "Player stands in a block.\nChecked every tick and will trigger for each successful match (up to 8 times, the maximum amount of blocks a player can stand in).",
   "mcdoc.java.data.advancement.trigger.trigger.__dispatch.fishing_rod_hooked": "Player successfully caught an item with a fishing rod or pulled an entity.",
   "mcdoc.java.data.advancement.trigger.FishingRodHooked.entity": "Entity that was pulled.",
   "mcdoc.java.data.advancement.trigger.FishingRodHooked.item": "Item that was caught.",
   "mcdoc.java.data.advancement.trigger.FishingRodHooked.rod": "Fishing rod used.",
   "mcdoc.java.data.advancement.trigger.trigger.__dispatch.hero_of_the_village": "Player killed the last mob of the last wave in a raid.",
   "mcdoc.java.data.advancement.trigger.InventoryChangedSlots.empty": "Amount of empty slots.",
   "mcdoc.java.data.advancement.trigger.InventoryChangedSlots.occupied": "Amount of occupied slots.",
   "mcdoc.java.data.advancement.trigger.InventoryChangedSlots.full": "Amount of slots that are a full stack.",
   "mcdoc.java.data.advancement.trigger.trigger.__dispatch.item_durability_changed": "Any equipped item was damaged or repaired.",
   "mcdoc.java.data.advancement.trigger.ItemDurabilityChanged.delta": "Change in durability (negative numbers are used to indicate a decrease in durability).",
   "mcdoc.java.data.advancement.trigger.ItemDurabilityChanged.durability": "The resulting durability.",
   "mcdoc.java.data.advancement.trigger.ItemDurabilityChanged.item": "The item before its durability changed.",
   "mcdoc.java.data.advancement.trigger.trigger.__dispatch.undefined": "Player had thrown an item and any player picked it up (optimized shortcut for entity type condition).",
   "mcdoc.java.data.advancement.trigger.KilledByCrossbow.unique_entity_types": "How many different types of entities were killed.",
   "mcdoc.java.data.advancement.trigger.KilledByArrow.unique_entity_types": "How many different types of entities were killed.",
   "mcdoc.java.data.advancement.trigger.KilledByArrow.fired_from_weapon": "The weapon item that was used to fire the arrow.",
   "mcdoc.java.data.advancement.trigger.trigger.__dispatch.levitation": "Player has the levitation status effect.",
   "mcdoc.java.data.advancement.trigger.trigger.__dispatch.lightning_strike": "Lightning bolt finished striking (it is already despawned), activates for all players within a 256 block radius of the strike.",
   "mcdoc.java.data.advancement.trigger.trigger.__dispatch.location": "Activates every 20 ticks (1 second).",
   "mcdoc.java.data.advancement.trigger.trigger.__dispatch.nether_travel": "Player returned to the Overworld after traveling to the Nether.",
   "mcdoc.java.data.advancement.trigger.NetherTravel.start_position": "Where in the Overworld the player was when they travelled to the Nether.",
   "mcdoc.java.data.advancement.trigger.NetherTravel.distance": "How far the player now is from the coordinate they started at in the Overworld before travelling.",
   "mcdoc.java.data.advancement.trigger.NetherTravel.entered": "Where in the Overworld the player was when they travelled to the Nether.",
   "mcdoc.java.data.advancement.trigger.NetherTravel.exited": "Where in the Nether the player was when they travelled back to the Overworld.",
   "mcdoc.java.data.advancement.trigger.PlacedBlock.item": "Item that was used to place the block before the item was consumed.",
   "mcdoc.java.data.advancement.trigger.PlacedBlock.location": "Where the block was placed.",
   "mcdoc.java.data.advancement.trigger.trigger.__dispatch.recipe_unlocked": "Player unlocked a recipe by either crafting it, receiving it in an advancement reward, using a knowledge book, or receiving it through `/recipe`.",
   "mcdoc.java.data.advancement.trigger.ShotCrossbow.item": "Crossbow that was used.",
   "mcdoc.java.data.advancement.trigger.trigger.__dispatch.summoned_entity": "Activated when the last required block is placed for summoning\niron golems (pumpkin and iron blocks), snow golems (pumpkin and snow blocks), the ender dragon (end crystals),\nor the wither (wither skulls and soul sand/soul soil).\nWhen the block is not placed by a player directly this will activate for all players within an area:\n- Golems: from the golem's position, their hitbox plus 5 blocks in each direction.\n- Wither: from the wither's position, their hitbox plus 50 blocks in each direction.\n- Ender dragon: 192 blocks from `0, 128, 0`.\n(Spawn eggs, commands and mob spawners do not activate this)",
   "mcdoc.java.data.advancement.trigger.trigger.__dispatch.tick": "Activates every tick (20 times a second). Should only be used in-place of `#minecraft:tick` when utilizing multiple criteria to optimize.",
   "mcdoc.java.data.advancement.trigger.trigger.__dispatch.used_ender_eye": "Player used an eye of ender (in a world where strongholds generate).",
   "mcdoc.java.data.advancement.trigger.UsedEnderEye.distance": "Horizontal distance between the player and the stronghold.",
   "mcdoc.java.data.advancement.trigger.VillagerTrade.item": "Item that was purchased. `count` tag checks the item count from one trade, not the total amount traded for.",
   "mcdoc.java.data.advancement.trigger.trigger.__dispatch.voluntary_exile": "Player caused a raid to start.",
   "mcdoc.java.data.loot.condition.loot_condition.__dispatch.Alternative": "Whether any condition within a list passes.",
   "mcdoc.java.data.loot.condition.AnyOf.terms": "Passes when any of these conditions pass.",
   "mcdoc.java.data.loot.condition.AllOf.terms": "Passes when all of these conditions pass.",
   "mcdoc.java.data.loot.condition.loot_condition.__dispatch.EnchantmentActiveCheck": "Requires the \"Enchantment Active\" parameter to exist in the context, which currently means it only works in Enchantment conditions.",
   "mcdoc.java.data.loot.condition.loot_condition.__dispatch.Inverted": "Whether a condition does not pass.",
   "mcdoc.java.data.loot.condition.RandomChanceWithLooting.looting_multiplier": "Looting adjustment to the base success rate. Formula is `chance + (looting_level * looting_multiplier)` .",
   "mcdoc.java.data.loot.condition.loot_condition.__dispatch.Reference": "Whether another predicate passes.",
   "mcdoc.java.data.loot.condition.Reference.name": "A cyclic reference causes a parsing failure.",
   "mcdoc.java.data.loot.condition.TableBonus.chances": "Probabilities for each enchantment level",
   "mcdoc.java.data.loot.condition.TimeCheck.value": "Check the current game tick.",
   "mcdoc.java.data.loot.condition.TimeCheck.period": "Game tick supplied to `value` check gets modulo-divided by this.\nFor example, if set to 24000, `value` operates on a time period of days.",
   "mcdoc.java.data.loot.condition.ValueCheck.range": "Passes when `value` is within this range.",
   "mcdoc.java.data.loot.function.apply_bonus_formula.__dispatch_21": "`Count * (max(0; random(0..Level + 2) - 1)+1)`",
   "mcdoc.java.data.loot.function.apply_bonus_formula.__dispatch.UniformBonusFormula": "`level * bonusMultiplier`",
   "mcdoc.java.data.loot.function.apply_bonus_formula.__dispatch.BinomialWithBonusCountFormula": "`n=level + extra`, `p=probability`",
   "mcdoc.java.data.loot.function.loot_function.__dispatch.CopyName": "Copies `CustomName` tag from an entity or block entity into the item's `display.Name` tag.",
   "mcdoc.java.data.loot.function.CopyComponents.include": "If omitted, all components present are included",
   "mcdoc.java.data.loot.function.CopyComponents.exclude": "Defaults to none.",
   "mcdoc.java.data.loot.function.CopyNbtStrategy.Replace": "Replace any existing contents of the target.",
   "mcdoc.java.data.loot.function.CopyNbtStrategy.Append": "Append to a list.",
   "mcdoc.java.data.loot.function.CopyNbtStrategy.Merge": "Merge into a compound tag.",
   "mcdoc.java.data.loot.function.loot_function.__dispatch.CopyState": "Copies state properties from dropped block to the item's `BlockStateTag` tag. Fails if the block doesn't match.",
   "mcdoc.java.data.loot.function.loot_function.__dispatch.EnchantRandomly": "Enchants the item with one randomly-selected enchantment. The level of the enchantment, if applicable, is random.",
   "mcdoc.java.data.loot.function.EnchantRandomly.enchantments": "If omitted, all enchantments applicable to the item are possible",
   "mcdoc.java.data.loot.function.EnchantRandomly.options": "The allowed enchantments. If omitted, all enchantments applicable to the item are possible.",
   "mcdoc.java.data.loot.function.EnchantRandomly.only_compatible": "Whether to only enchant with item-compatible enchantments. Defaults to `true`.\nNote: Books are considered compatible with all Enchantments.",
   "mcdoc.java.data.loot.function.loot_function.__dispatch.EnchantWithLevels": "Enchants the item, with the specified [enchantment level](https://minecraft.wiki/w/Enchanting_mechanics#How_enchantments_are_chosen).\n(roughly equivalent to using an enchantment table at that level)",
   "mcdoc.java.data.loot.function.EnchantWithLevels.levels": "The levels to enchant this item with.",
   "mcdoc.java.data.loot.function.EnchantWithLevels.options": "The allowed enchantments. If omitted, all enchantments applicable to the item are possible.",
   "mcdoc.java.data.loot.function.EnchantWithLevels.treasure": "Whether treasure enchantments are allowed on this item.",
   "mcdoc.java.data.loot.function.loot_function.__dispatch.ExplorationMap": "Converts an empty map into an `explorer map` leading to a nearby generated structure.",
   "mcdoc.java.data.loot.function.ExplorationMap.destination": "Generated structure to locate. Accepts any of the structure types used by the `/locate` command. Defaults to buried treasure.",
   "mcdoc.java.data.loot.function.ExplorationMap.decoration": "The icon used to mark the destination on the map. Accepts any of the map icon text IDs (case insensitive).\nIf `mansion` or `monument` is used, the color of the lines on the item texture changes to match the corresponding explorer map.",
   "mcdoc.java.data.loot.function.ExplorationMap.zoom": "Defaults to 2.",
   "mcdoc.java.data.loot.function.ExplorationMap.search_radius": "The size, in chunks, of the area to search for structures.\nThe area checked is square, not circular.\nRadius `0` causes only the current chunk to be searched, radius `1` causes the current chunk and eight adjacent chunks to be searched, and so on.\nDefaults to `50`.",
   "mcdoc.java.data.loot.function.ExplorationMap.skip_existing_chunks": "Whether to not search in chunks that have already been generated. Defaults to `true`.",
   "mcdoc.java.data.loot.function.loot_function.__dispatch_36": "Removes some items from a stack, if there was an explosion. Each item has a chance of 1/explosion radius to be lost.",
   "mcdoc.java.data.loot.function.loot_condition.__dispatch.Filtered": "Applies loot function(s) to items that match an item predicate.",
   "mcdoc.java.data.loot.function.Filtered.item_filter": "Item predicate to select items to modify.",
   "mcdoc.java.data.loot.function.Filtered.modifier": "Loot function to apply to the selected items.",
   "mcdoc.java.data.loot.function.loot_function.__dispatch_38": "Smelts the item as it would be in a furnace (used in combination with the `entity_properties` condition to cook food from animals on death).",
   "mcdoc.java.data.loot.function.FillPlayerHead.entity": "`this` to use the entity that died or the player that gained the advancement, opened the container, or broke the block.",
   "mcdoc.java.data.loot.function.LimitCount.limit": "Limits the count of the item to a range.",
   "mcdoc.java.data.loot.function.loot_function.__dispatch.LootingEnchant": "Adjusts the stack size based on the level of the `Looting` enchantment on the `killer` entity's weapon.",
   "mcdoc.java.data.loot.function.LootingEnchant.count": "If the number is fractional the result is rounded *after* the number was multiplied by the looting level.",
   "mcdoc.java.data.loot.function.LootingEnchant.limit": "Limits the count of the item to a range.",
   "mcdoc.java.data.loot.function.EnchantedCountIncrease.enchantment": "Enchantment that increases yields.",
   "mcdoc.java.data.loot.function.Reference.name": "Item modifier to reference.",
   "mcdoc.java.data.loot.function.Sequence.functions": "List of functions to apply to this item.",
   "mcdoc.java.data.loot.function.SetAttributes.modifiers": "List of attribute modifiers to apply to this item.",
   "mcdoc.java.data.loot.function.SetAttributes.replace": "Whether to replace existing attributes (otherwise append to existing). Defaults to `true`.",
   "mcdoc.java.data.loot.function.AttributeModifier.attribute": "Attribute type to modify.",
   "mcdoc.java.data.loot.function.id": "The unique identifier of this attribute modifier.",
   "mcdoc.java.data.loot.function.AttributeModifier.operation": "The operation used for this modifier.",
   "mcdoc.java.data.loot.function.AttributeModifier.slot": "If a list, one of the listed slots will be chosen randomly.",
   "mcdoc.java.data.loot.function.SetBannerPattern.patterns": "List of banner pattern layers.",
   "mcdoc.java.data.loot.function.SetBannerPattern.append": "Whether to add to the banner pattern list.",
   "mcdoc.java.data.loot.function.loot_function.__dispatch.SetContents": "For a container block item's contents.",
   "mcdoc.java.data.loot.function.SetContents.component": "Describes target component to be filled with items.",
   "mcdoc.java.data.loot.function.ModifyContents.component": "Describes target component's items to modify.",
   "mcdoc.java.data.loot.function.ModifyContents.modifier": "Applied to every item inside container.",
   "mcdoc.java.data.loot.function.loot_function.__dispatch.SetItem": "Replaces item type of item stack without changing count and components",
   "mcdoc.java.data.loot.function.SetCount.add": "Whether to add to the existing count. Defaults to `false`.",
   "mcdoc.java.data.loot.function.loot_function.__dispatch.SetDamage": "Sets the durability of applicable items.",
   "mcdoc.java.data.loot.function.SetDamage.damage": "Decimal percentage. Can be negative when used in combination with `add`.",
   "mcdoc.java.data.loot.function.SetDamage.add": "Whether to add to the existing damage of the item. Defaults to `false`.",
   "mcdoc.java.data.loot.function.SetEnchantments.enchantments": "A map of enchantments to levels. Setting an enchantment to `0` removes it from the item.",
   "mcdoc.java.data.loot.function.SetEnchantments.add": "Whether to add to the level of each enchantment. Defaults to `false`.",
   "mcdoc.java.data.loot.function.SetInstrument.options": "Sets the instrument tag for a goat horn.",
   "mcdoc.java.data.loot.function.loot_function.__dispatch.SetLootTable": "For a container block item's loot table.",
   "mcdoc.java.data.loot.function.SetLootTable.type": "The block entity type of the container.",
   "mcdoc.java.data.loot.function.SetLootTable.name": "The loot table to set to the container block item.",
   "mcdoc.java.data.loot.function.SetLootTable.seed": "The container seed to use. Defaults to a random seed.",
   "mcdoc.java.data.loot.function.SetLore.entity": "The entity used to resolve the text components.",
   "mcdoc.java.data.loot.function.SetLore.replace": "Whether to replace the existing lore list. Defaults to true.",
   "mcdoc.java.data.loot.function.SetName.entity": "Specifies the entity to act as the target `@s` in the JSON text component.",
   "mcdoc.java.data.loot.function.SetName.target": "Which name component to set. Defaults to `custom_name`.",
   "mcdoc.java.data.loot.function.SetCustomModelData.value": "Tag that describes the custom model an item will take.\nUsed by the `custom_model_data` model overrides predicate.\nHas certain restrictions due to float conversion.",
   "mcdoc.java.data.loot.function.SetPotion.id": "The potion identifier.",
   "mcdoc.java.data.loot.function.SetStewEffect.effects": "Sets the status effects for suspicious stew.",
   "mcdoc.java.data.loot.function.SetFireworks.flight_duration": "If omitted, the flight duration of the item is left untouched - or set to 0 if the component did not exist before.",
   "mcdoc.java.data.loot.function.SetFireworkExplosion.shape": "If omitted, the original shape is kept (or `small_ball` is used if there was no component).",
   "mcdoc.java.data.loot.function.SetFireworkExplosion.colors": "If omitted, the original colors are kept (or `[]` is used if there was no component).\nCalculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.",
   "mcdoc.java.data.loot.function.SetFireworkExplosion.fade_colors": "If omitted, the original fade colors are kept (or `[]` is used if there was no component).\nCalculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.",
   "mcdoc.java.data.loot.function.SetFireworkExplosion.trail": "If omitted, the original `has_trail` value is kept (or `false` is used if there was no component).",
   "mcdoc.java.data.loot.function.SetFireworkExplosion.twinkle": "If omitted, the original `has_twinkle` value is kept (or `false` is used if there was no component).",
   "mcdoc.java.data.loot.function.SetBookCover.title": "If omitted, the original title is kept (or an empty string is used if there was no component)",
   "mcdoc.java.data.loot.function.SetBookCover.author": "If omitted, the original author is kept (or an empty string is used if there was no component)",
   "mcdoc.java.data.loot.function.SetBookCover.generation": "If omitted, the original generation is kept (or 0 is used if there was no component)",
   "mcdoc.java.data.loot.function.SetWriteableBookPages.pages": "Sets the pages of a book and quill.",
   "mcdoc.java.data.loot.function.SetWrittenBookPages.pages": "Sets the pages of a written book.",
   "mcdoc.java.data.loot.function.ToggleTooltips.toggles": "Toggles which tooltips are shown.",
   "mcdoc.java.data.loot.function.ListOperation.mode": "Determines how the existing list should be modified.",
   "mcdoc.java.data.loot.function.InsertListOperation.offset": "The offset in the list to insert into. Defaults to 0.",
   "mcdoc.java.data.loot.function.ReplaceSectionListOperation.offset": "The offset of the section to replace. Defaults to 0.",
   "mcdoc.java.data.loot.function.ReplaceSectionListOperation.size": "The size of the section to replace. Defaults to size of the new list.",
   "mcdoc.java.data.loot.function.StewEffect.type": "The status effect of this stew effect.",
   "mcdoc.java.data.loot.function.StewEffect.duration": "The duration of this stew effect, in seconds.",
   "mcdoc.java.data.loot.mod.loot_pool_entry.__dispatch.DynamicPoolEntry": "Gets block specific drops.",
   "mcdoc.java.data.loot.mod.DynamicDrops.Contents": "Drops the items in a shulker box.",
   "mcdoc.java.data.loot.mod.DynamicDrops.Sherds": "Drops the sherds of a decorated pot.",
   "mcdoc.java.data.loot.mod.loot_pool_entry.__dispatch.ItemPoolEntry": "Adds a single item.",
   "mcdoc.java.data.loot.mod.loot_pool_entry.__dispatch.LootTablePoolEntry": "Adds the contents of another loot table.",
   "mcdoc.java.data.loot.mod.loot_pool_entry.__dispatch.TagPoolEntry": "Adds the contents of an item tag.",
   "mcdoc.java.data.loot.mod.TagPoolEntry.expand": "If `true`, drops a random item from the tag. If `false`, drops all items in the tag.",
   "mcdoc.java.data.loot.mod.loot_pool_entry.__dispatch.alternatives": "Tests conditions of the child entries and executes the first that can run.",
   "mcdoc.java.data.loot.mod.loot_pool_entry.__dispatch.group": "Executes all child entries when own conditions pass.",
   "mcdoc.java.data.loot.mod.loot_pool_entry.__dispatch.sequence": "Executes child entries until the first one that can't run due to conditions.",
   "mcdoc.java.data.util.mod.SoundEventRef.type": "Server sound events use a static registry, so can't be modified via data packs.\nCustom sound events can be defined inline, referencing a client sound_id.",
   "mcdoc.java.data.util.mod.WeightedSoundEvent.range": "Range in blocks. If the player is further than this range from the source of the sound, the sound will be inaudible. If omitted, the sound will have a variable range.",
   "mcdoc.java.data.variants.banner_pattern.BannerPattern.asset_id": "Also resolves to `assets/<namespace>/textures/entity/shield/<name>.png`.",
   "mcdoc.java.data.variants.banner_pattern.BannerPattern.translation_key": "Translation key prefix per dye color (e.g. `block.minecraft.banner.custom.pattern` resolves to `block.minecraft.banner.custom.pattern.<dye color>`).",
   "mcdoc.java.data.variants.instrument.Instrument.range": "Maximum range in blocks that the sound can be heard",
   "mcdoc.java.data.variants.instrument.Instrument.use_duration": "Duration of use in seconds, used as item cooldown",
   "mcdoc.java.data.variants.jukebox_song.JukeboxSong.description": "Displayed in the HUD actionbar & item tooltip.",
   "mcdoc.java.data.variants.painting.PaintingVariant.width": "Dimension in blocks.",
   "mcdoc.java.data.variants.painting.PaintingVariant.height": "Dimension in blocks.",
   "mcdoc.java.data.worldgen.biome.Biome.depth": "Raises or lowers the terrain. Positive values are considered land and negative are oceans.",
   "mcdoc.java.data.worldgen.biome.Biome.scale": "Vertically stretches the terrain. Lower values produce flatter terrain.",
   "mcdoc.java.data.worldgen.biome.Biome.player_spawn_friendly": "If true, the world spawn will be preferred in this biome.",
   "mcdoc.java.data.worldgen.noise_settings.NoiseGeneratorSettings.bedrock_roof_position": "Relative position of the bedrock roof starting at the world height. Higher numbers move the roof down.",
   "mcdoc.java.data.worldgen.noise_settings.NoiseGeneratorSettings.disable_mob_generation": "If true, mobs will not spawn during generation.",
   "mcdoc.java.data.worldgen.noise_settings.NoiseSettings.min_y": "Minimum height where blocks start generating.",
   "mcdoc.java.data.worldgen.noise_settings.NoiseSettings.height": "The total height where blocks can generate. Max Y = Min Y + Height.",
   "mcdoc.java.data.worldgen.noise_settings.NoiseSettings.top_slide": "Adds or removes terrain at the top of the world. Does nothing when size is 0.",
   "mcdoc.java.data.worldgen.noise_settings.NoiseSettings.bottom_slide": "Adds or removes terrain at the bottom of the world. Does nothing when size is 0.",
   "mcdoc.java.data.worldgen.noise_settings.NoiseSettings.island_noise_override": "If true, terrain will be shaped like islands similar to the end.",
   "mcdoc.java.data.worldgen.noise_settings.NoiseSlideSettings.target": "The target density. Positive values add terrain and negative values remove terrain.",
   "mcdoc.java.data.worldgen.noise_settings.NoiseSlideSettings.size": "Defines a range of 'Size * Size vertical * 4' blocks where the existing density and target are interpolated.",
   "mcdoc.java.data.worldgen.noise_settings.NoiseSlideSettings.offset": "Defines an range of 'Offset * Size vertical * 4' blocks where the density is set to the target.",
   "mcdoc.java.data.worldgen.structure.Structure.step": "The step when the structure generates.",
   "mcdoc.java.data.worldgen.structure.Structure.adapt_noise": "Whether to add extra terrain below the structure.",
   "mcdoc.java.data.worldgen.structure_set.RandomSpreadPlacement.spacing": "Average distance in chunks between two structures of this type.",
   "mcdoc.java.data.worldgen.structure_set.RandomSpreadPlacement.separation": "Minimum distance in chunks between two structures of this type.",
   "mcdoc.java.server.util.attribute.AttributeOperation.AddValue": "Adds all of the modifiers' amounts to the current value of the attribute.",
   "mcdoc.java.server.util.attribute.AttributeOperation.AddMultipliedBase": "Multiplies the current value of the attribute by `(1 + x)`,\nwhere `x` is the sum of the modifiers' amounts.",
   "mcdoc.java.server.util.attribute.AttributeOperation.AddMultipliedTotal": "For every modifier, multiplies the current value of the attribute by `(1 + x)`,\nwhere `x` is the amount of the particular modifier.",
   "mcdoc.java.server.util.attribute.LegacyOperation.Additive": "aka. `add_value`. Adds all of the modifiers' amounts to the current value of the attribute.",
   "mcdoc.java.server.util.attribute.LegacyOperation.Multiplicative": "aka. `add_multiplied_base`. Multiplies the current value of the attribute by (1 + x),\nwhere x is the sum of the modifiers' amounts.",
   "mcdoc.java.server.util.attribute.LegacyOperation.Percentage": "aka. `add_multiplied_total`. For every modifier, multiplies the current value of the attribute by (1 + x),\nwhere x is the amount of the particular modifier.\nFunctions the same as Operation 1 if there is only a single modifier with operation 1 or 2.\nHowever, for multiple modifiers it will multiply the modifiers rather than adding them",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.BottomStripe": "Bottom Stripe (Base)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.TopStripe": "Top Stripe (Chief)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.LeftStripe": "Left Stripe (Pale dexter)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.RightStripe": "Right Stripe (Pale sinister)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.CenterStripeVertical": "Center Stripe (Vertical) (Pale)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.MiddleStripeHorizontal": "Middle Stripe (Horizontal) (Fess)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.DownRightStripe": "Down Right Stripe (Bend)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.DownLeftStripe": "Down Left Stripe (Bend sinister)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.SmallVerticalStripes": "Small (Vertical) Stripes (Paly)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.DiagonalCross": "Diagonal Cross (Saltire)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.SquareCross": "Square Cross (Cross)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.LeftOfDiagonal": "Left of Diagonal (Per bend sinister)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.RightOfUpsideDownDiagonal": "Right of upside-down Diagonal (Per bend)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.LeftOfUpsideDownDiagonal": "Left of upside-down Diagonal (Per bend inverted)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.RightOfDiagonal": "Right of Diagonal (Per bend sinister inverted)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.VerticalHalfLeft": "Vertical Half (left) (Per pale)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.VerticalHalfRight": "Vertical Half (right) (Per pale inverted)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.HorizontalHalfTop": "Horizontal Half (top) (Per fess)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.HorizontalHalfBottom": "Horizontal Half (bottom) (Per fess inverted)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.BottomLeftCorner": "Bottom Left Corner (Base dexter canton)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.BottomRightCorner": "Bottom Right Corner (Base sinister canton)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.TopLeftCorner": "Top Left Corner (Chief dexter canton)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.TopRightCorner": "Top Right Corner (Chief sinister canton)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.BottomTriangle": "Bottom Triangle (Chevron)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.TopTriangle": "Top Triangle (Inverted chevron)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.BottomTriangleSawtooth": "Bottom Triangle Sawtooth (Base indented)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.TopTriangleSawtooth": "Top Triangle Sawtooth (Chief indented)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.MiddleCircle": "Middle Circle (Roundel)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.MiddleRhombus": "Middle Rhombus (Lozenge)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.Border": "Border (Bordure)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.CurlyBorder": "Curly Border (Bordure indented)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.Brick": "Brick (Field masoned)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.Gradient": "Gradient (Gradient)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.GradientUpsideDown": "Gradient upside-down (Base gradient)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.Creeper": "Creeper (Creeper charge)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.Skull": "Skull (Skull charge)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.Flower": "Flower (Flower charge)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.Mojang": "Mojang (Thing)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.Globe": "Globe (Globe)",
   "mcdoc.java.server.util.banner_pattern.BannerPattern.Piglin": "Piglin (Piglin)",
   "mcdoc.java.server.util.effect.OldMobEffect.Duration": "Duration of the effect in ticks. Infinite is represented by `-1`.",
   "mcdoc.java.server.util.effect.OldMobEffect.Ambient": "Whether particles are semi-transparent. (like with a Beacon)",
   "mcdoc.java.server.util.effect.OldMobEffect.ShowParticles": "Whether particles should be shown.",
   "mcdoc.java.server.util.effect.OldMobEffect.ShowIcon": "Whether the effect icon should be shown.",
   "mcdoc.java.server.util.effect.OldMobEffect.HiddenEffect": "A lower amplifier effect of the same type.",
   "mcdoc.java.server.util.effect.ModernMobEffect.amplifier": "Level I having value 0. Defaults to 0.",
   "mcdoc.java.server.util.effect.ModernMobEffect.duration": "Duration of the effect in ticks. Infinite is represented by `-1`.",
   "mcdoc.java.server.util.effect.ModernMobEffect.ambient": "Whether the effect appears as a HUD icon in addition to in the inventory GUI (same behavior as beacons when `true`). Defaults to `false`.",
   "mcdoc.java.server.util.effect.ModernMobEffect.show_particles": "Defaults to `true`.",
   "mcdoc.java.server.util.effect.ModernMobEffect.show_icon": "Whether the effect appears in the inventory GUI. Defaults to `true`",
   "mcdoc.java.server.util.effect.ModernMobEffect.hidden_effect": "A lower amplifier effect of the same type.",
   "mcdoc.java.server.util.effect.EffectByteId.enum": "Numerical ids for effects",
   "mcdoc.java.server.util.game_event.VibrationListener.range": "Range in blocks where vibrations can be detected",
   "mcdoc.java.server.util.game_event.VibrationListener.event": "Event that is being received, if any",
   "mcdoc.java.server.util.game_event.VibrationListener.event_distance": "Distance in blocks to the event that is being received",
   "mcdoc.java.server.util.game_event.VibrationListener.event_delay": "Delay in ticks until the event reaches this listener",
   "mcdoc.java.server.util.game_event.ReceivingEvent.distance": "Distance in blocks to the source",
   "mcdoc.java.server.util.game_event.ReceivingEvent.pos": "Origin of the event",
   "mcdoc.java.server.util.game_event.ReceivingEvent.source": "UUID of the source entity of the event, if one exists",
   "mcdoc.java.server.util.game_event.ReceivingEvent.projectile_owner": "UUID of the owner of the projectile, if one exists",
   "mcdoc.java.server.util.game_event.BlockPositionSource.pos": "Block position",
   "mcdoc.java.server.util.game_event.EntityPositionSource.y_offset": "offset from the entity's feet to the source position",
   "mcdoc.java.server.util.global_pos.GlobalPos.pos": "Coordinates of the location in [x, y, z]",
   "mcdoc.java.server.util.global_pos.GlobalPos.dimension": "Dimension of the location",
   "mcdoc.java.server.util.inventory.InventoryItem.type": "@deprecated",
   "mcdoc.java.server.util.inventory.SlottedItem.Slot": "Inventory slot the item is in",
   "mcdoc.java.server.util.memory.TimedMemory.ttl": "Ticks before this memory is removed.",
   "mcdoc.java.server.util.memory.TimedEntityMemory.value": "Target entity's UUID.",
   "mcdoc.java.server.util.memory.TickMemory.value": "Tick value",
   "mcdoc.java.server.util.memory.PositionMemory.value": "Position",
   "mcdoc.java.server.util.mod.FilteredText.filtered": "Shown only to players with chat filtering enabled.",
   "mcdoc.java.server.util.particle.DustColor.type": "Randomized color interpreted from three floats.\nCheat Sheet:\n- Floats between 0 and 1 are interpreted as a percentage of the original color. Weirdness begins when floats are outside of this range.\n- 0-20% of darkness is added per channel.\n- The final color is 0-40% darker. \n- `1e100000f` produces a solid channel with no randomization.\nSimplified internal behavior ([graph demo](https://www.desmos.com/calculator/drwzjaxgks)):\n```js\nfunction integerToByte(integer) {\n\tif (integer >= 0) {\n\t\t// Integer is positive\n\t\tif (integer <= 255) {\n\t\t\t// Integer already fits in a color channel\n\t\t\treturn integer\n\t\t}\n\t\t// Integer doesn't fit in color channel; modulo it\n\t\treturn integer % 256\n\t}\n\t// Integer is negative\n\treturn Math.abs((Math.floor(integer / 256) * 256)) + integer\n}\n\nvar baseShade = randomBetween(0.6, 1),\n\tr = integerToByte(Math.floor(color[0] * randomBetween(0.8, 1) * baseShade * 255)),\n\tg = integerToByte(Math.floor(color[1] * randomBetween(0.8, 1) * baseShade * 255)),\n\tb = integerToByte(Math.floor(color[2] * randomBetween(0.8, 1) * baseShade * 255))\n```",
   "mcdoc.java.server.util.particle.EntityEffect.color": "Translucent color interpreted from four floats.\nCheat Sheet:\n- Floats between 0 and 1 are interpreted as a percentage of the original color.\n- Negative values & values above 1 simply loop the 0-255 range, since there isn't randomization there's no weirdness.\nSimplified internal behavior ([graph demo](https://www.desmos.com/calculator/drwzjaxgks)):\n```js\nfunction integerToByte(integer) {\n\tif (integer >= 0) {\n\t\t// Integer is positive\n\t\tif (integer <= 255) {\n\t\t\t// Integer already fits in a color channel\n\t\t\treturn integer\n\t\t}\n\t\t// Integer doesn't fit in color channel; modulo it\n\t\treturn integer % 256\n\t}\n\t// Integer is negative\n\treturn Math.abs((Math.floor(integer / 256) * 256)) + integer\n}\n```",
   "mcdoc.java.server.util.particle.SculkCharge.roll": "Angle the particle texture is rotated to, measured in radians (π ~ 3.14 for 180° clockwise, negative for counter clockwise).",
   "mcdoc.java.server.util.particle.ShriekParticle.delay": "Ticks until the particle renders.",
   "mcdoc.java.server.util.particle.VibrationParticle.arrival_in_ticks": "Ticks in which to interpolate the particle's initial position to the destination.",
   "mcdoc.java.data.worldgen.dimension.biome_source.biome_source.__dispatch.Checkerboard": "Biomes generate in a checkerboard chunk pattern.",
   "mcdoc.java.data.worldgen.dimension.biome_source.biome_source.__dispatch.Fixed": "One biome for the whole world.",
   "mcdoc.java.data.worldgen.dimension.biome_source.biome_source.__dispatch.BiomesMultiNoise": "Custom biome distribution with configurable parameters.",
   "mcdoc.java.data.worldgen.dimension.biome_source.biome_source.__dispatch.TheEnd": "Biome distribution for the End.",
   "mcdoc.java.data.worldgen.dimension.biome_source.biome_source.__dispatch.VanillaLayered": "Biome distribution for the Overworld.",
   "mcdoc.java.data.worldgen.dimension.mod.DimensionType.ultrawarm": "If true, water will evaporate and sponges will dry.",
   "mcdoc.java.data.worldgen.dimension.mod.DimensionType.natural": "If true, portals will spawn zombified piglins. If false, compasses and clocks spin randomly.",
   "mcdoc.java.data.worldgen.dimension.mod.DimensionType.piglin_safe": "If false, piglins will shake and convert to zombified piglins.",
   "mcdoc.java.data.worldgen.dimension.mod.DimensionType.respawn_anchor_works": "If true, players can charge and use respawn anchors to set their spawn. If false, respawn anchors will blow up when used.",
   "mcdoc.java.data.worldgen.dimension.mod.DimensionType.bed_works": "If true, players can use beds to set their spawn and advance time. If false, beds will blow up when used.",
   "mcdoc.java.data.worldgen.dimension.mod.DimensionType.has_raids": "If true, players with the Bad Omen effect can cause a raid.",
   "mcdoc.java.data.worldgen.dimension.mod.DimensionType.has_skylight": "Affects the weather, lighting engine and respawning rules.",
   "mcdoc.java.data.worldgen.dimension.mod.DimensionType.has_ceiling": "Affects the weather, map items and respawning rules.",
   "mcdoc.java.data.worldgen.dimension.mod.DimensionType.fixed_time": "Setting this value will keep the sun in a fixed position.",
   "mcdoc.java.data.worldgen.dimension.mod.DimensionType.logical_height": "Portals can't spawn and chorus fruit can't teleport players above this height.",
   "mcdoc.java.data.worldgen.dimension.mod.DimensionType.effects": "Sky effects.",
   "mcdoc.java.data.worldgen.dimension.mod.DimensionType.infiniburn": "Block tag defining what blocks keep fire infinitely burning.",
   "mcdoc.java.data.worldgen.dimension.mod.DimensionType.min_y": "The minimum height in which blocks can exist.",
   "mcdoc.java.data.worldgen.dimension.mod.DimensionType.height": "The total height in which blocks can exist. Max Y = Min Y + Height.",
   "mcdoc.java.data.worldgen.feature.block_predicate.block_predicate.__dispatch.UnobstructedPredicate": "Whether the selected block is unobstructed (no entities are in the space of the block).",
   "mcdoc.java.data.worldgen.feature.mod.DripstoneClusterConfig.max_stalagmite_stalactite_height_diff": "Max height difference between the stalagmite and stalactite.",
   "mcdoc.java.data.worldgen.feature.mod.FossilConfig.max_empty_corners_allowed": "If more corners are exposed to air, feature placement is cancelled.",
   "mcdoc.java.data.worldgen.feature.mod.GeodeBlockSettings.cannot_replace": "Blocks that will not be replaced by the geode.",
   "mcdoc.java.data.worldgen.feature.mod.GeodeBlockSettings.invalid_blocks": "When encountering an invalid block, feature placement is cancelled.",
   "mcdoc.java.data.worldgen.feature.mod.OreConfig.discard_chance_on_air_exposure": "Chance that feature placement will be discarded if the ore is exposed to air blocks.",
   "mcdoc.java.server.world.block.banner.Banner.CustomName": "Shows up on map markers",
   "mcdoc.java.server.world.block.beacon.Beacon.Levels": "Number of levels from the pyramid.",
   "mcdoc.java.server.world.block.beacon.Beacon.Primary": "Potion effect.",
   "mcdoc.java.server.world.block.beacon.Beacon.Secondary": "Potion effect.",
   "mcdoc.java.server.world.block.brewing_stand.BrewingStand.Items": "* 0: left brewing slot\n* 1: middle brewing slot\n* 2: right brewing slot\n* 3: ingredient slot\n* 4: fuel slot",
   "mcdoc.java.server.world.block.brewing_stand.BrewingStand.BrewTime": "Number of ticks until the brewing is complete.",
   "mcdoc.java.server.world.block.brewing_stand.BrewingStand.Fuel": "Amount of fuel the brewing stand has left.",
   "mcdoc.java.server.world.block.campfire.Campfire.CookingTimes": "Ticks each item has been cooking.\nIndex is according to item slot.",
   "mcdoc.java.server.world.block.campfire.Campfire.CookingTotalTimes": "Ticks each item still has to cook.\nIndex is according to item slot.",
   "mcdoc.java.server.world.block.chiseled_bookshelf.ChiseledBookshelf.Items": "Slots from 0 to 5.",
   "mcdoc.java.server.world.block.command_block.CommandBlock.SuccessCount": "Success count of the last command.",
   "mcdoc.java.server.world.block.command_block.CommandBlock.LastOutput": "Output of the last command.",
   "mcdoc.java.server.world.block.command_block.CommandBlock.TrackOutput": "Whether to record command output.",
   "mcdoc.java.server.world.block.command_block.CommandBlock.powered": "Whether it is powered by redstone.",
   "mcdoc.java.server.world.block.command_block.CommandBlock.auto": "Whether it is automatically powered.",
   "mcdoc.java.server.world.block.command_block.CommandBlock.conditionMet": "Whether the previous command block was successful when the command block was executed.\nThis is always true for non-conditional command blocks.",
   "mcdoc.java.server.world.block.command_block.CommandBlock.UpdateLastExecution": "Whether to record the tick of the latest command execution.",
   "mcdoc.java.server.world.block.command_block.CommandBlock.LastExecution": "Tick of the latest command execution.",
   "mcdoc.java.server.world.block.comparator.Comparator.OutputSignal": "Strength of the redstone output.",
   "mcdoc.java.server.world.block.conduit.TargetUuid.M": "Upper bits of the target's UUID",
   "mcdoc.java.server.world.block.conduit.TargetUuid.L": "Lower bits of the target's UUID",
   "mcdoc.java.server.world.block.container.ContainerBase.LootTable": "Loot table that will populate this container.",
   "mcdoc.java.server.world.block.container.ContainerBase.LootTableSeed": "Seed of the loot table.",
   "mcdoc.java.server.world.block.container.Container27.Items": "Slots from 0 to 26.",
   "mcdoc.java.server.world.block.container.Container9.Items": "Slots from 0 to 8.",
   "mcdoc.java.server.world.block.container.Hopper.Items": "Slots from 0 to 4.",
   "mcdoc.java.server.world.block.container.Hopper.TransferCooldown": "Ticks until an item can be transferred.",
   "mcdoc.java.server.world.block.decorated_pot.DecoratedPot.sherds": "Item ID of what was used for each side of the pot.",
   "mcdoc.java.server.world.block.decorated_pot.DecoratedPot.LootTable": "Loot table that will populate this container.",
   "mcdoc.java.server.world.block.decorated_pot.DecoratedPot.LootTableSeed": "Seed of the loot table.",
   "mcdoc.java.server.world.block.end_gateway.EndGateway.Age": "In game ticks.",
   "mcdoc.java.server.world.block.end_gateway.EndGateway.ExactTeleport": "Whether to teleport to the exact location.",
   "mcdoc.java.server.world.block.end_gateway.EndGateway.ExitPortal": "Coordinates of where to teleport entities to.",
   "mcdoc.java.server.world.block.end_gateway.EndGateway.exit_portal": "Coordinates of where to teleport entities to.",
   "mcdoc.java.server.world.block.furnace.Furnace.Items": "The items in this furnace, with slots:\n* 0: Item being smelted\n* 1: Fuel\n* 2: Output",
   "mcdoc.java.server.world.block.furnace.Furnace.BurnTime": "Ticks until the fuel runs out.",
   "mcdoc.java.server.world.block.furnace.Furnace.CookTime": "Ticks the item has been smelting for.",
   "mcdoc.java.server.world.block.furnace.Furnace.CookTimeTotal": "Ticks the item will take to be smelted.",
   "mcdoc.java.server.world.block.head.PlayerHead.Owner": "Owner of the skull.",
   "mcdoc.java.server.world.block.head.PlayerHead.ExtraType": "Name of the owner, if exists will be converted to SkullOwner.",
   "mcdoc.java.server.world.block.head.SkullOwner.Id": "Optional.",
   "mcdoc.java.server.world.block.head.SkullOwner.Name": "If missing appears as a steve head.",
   "mcdoc.java.server.world.block.head.Texture.Value": "Base64 encoded JSON value of the texture index.",
   "mcdoc.java.server.world.block.jigsaw.Jigsaw.target_pool": "Structure pool this will connect to.",
   "mcdoc.java.server.world.block.jigsaw.Jigsaw.joint": "How the resultant structure can be transformed.",
   "mcdoc.java.server.world.block.jigsaw.Jigsaw.pool": "Structure pool this will \"spawn\" in.",
   "mcdoc.java.server.world.block.jigsaw.Jigsaw.name": "ID this will \"spawn\" in.",
   "mcdoc.java.server.world.block.jigsaw.Jigsaw.target": "ID of the type of jigsaw this will be \"spawned\" from.",
   "mcdoc.java.server.world.block.jigsaw.Jigsaw.final_state": "Final block state of the jigsaw.",
   "mcdoc.java.server.world.block.jigsaw.Jigsaw.attachment_type": "ID of the type of jigsaw this connects to.",
   "mcdoc.java.server.world.block.jigsaw.JointType.Rollable": "The structure can be rotated",
   "mcdoc.java.server.world.block.jigsaw.JointType.Aligned": "The structure cannot be transformed",
   "mcdoc.java.server.world.block.lectern.Lectern.Page": "Current page the book is on.",
   "mcdoc.java.server.world.block.mod.BlockEntity.keepPacked": "Unknown\n0 for regular block entities",
   "mcdoc.java.server.world.block.mod.Lockable.Lock": "Name of the item that a player has to be holding to open this container.\nSource is flattened to plain text and has formatting removed before the check.",
   "mcdoc.java.server.world.block.mod.Lockable.lock": "Item predicate testing the item that a player has to be holding to open this container.",
   "mcdoc.java.server.world.block.moving_piston.MovingPiston.blockState": "Moving block represented by the moving piston.",
   "mcdoc.java.server.world.block.moving_piston.MovingPiston.facing": "The direction it is moving.",
   "mcdoc.java.server.world.block.moving_piston.MovingPiston.progress": "How far it has moved.",
   "mcdoc.java.server.world.block.moving_piston.MovingPiston.source": "Whether the moving piston is the piston head.",
   "mcdoc.java.server.world.block.sculk_sensor.SculkSensor.listener": "Vibration listener",
   "mcdoc.java.server.world.block.sign.Sign.is_waxed": "Whether the sign can no longer be edited. If a sign is editable",
   "mcdoc.java.server.world.block.sign.OldSign.Color": "Color the text has been dyed.",
   "mcdoc.java.server.world.block.sign.OldSign.Text1": "First line of text.",
   "mcdoc.java.server.world.block.sign.OldSign.Text2": "Second line of text.",
   "mcdoc.java.server.world.block.sign.OldSign.Text3": "Third line of text.",
   "mcdoc.java.server.world.block.sign.OldSign.Text4": "Fourth line of text.",
   "mcdoc.java.server.world.block.spawner.Spawner.SpawnPotentials": "Entities that can be placed.",
   "mcdoc.java.server.world.block.spawner.Spawner.SpawnData": "Data for the next mob to spawn.\nOverwritten by `SpawnPotentials`.",
   "mcdoc.java.server.world.block.spawner.Spawner.SpawnCount": "Number of entities that will be placed.",
   "mcdoc.java.server.world.block.spawner.Spawner.SpawnRange": "Range that the spawned entities will be placed.",
   "mcdoc.java.server.world.block.spawner.Spawner.Delay": "Ticks until the next spawn.",
   "mcdoc.java.server.world.block.spawner.Spawner.MinSpawnDelay": "Minimum random delay for the next spawn.",
   "mcdoc.java.server.world.block.spawner.Spawner.MaxSpawnDelay": "Maximum random delay for the next spawn.",
   "mcdoc.java.server.world.block.spawner.Spawner.MaxNearbyEntities": "Maximum number of entities nearby.",
   "mcdoc.java.server.world.block.spawner.Spawner.RequiredPlayerRange": "Radius in blocks that a player has to be within to spawn entities.",
   "mcdoc.java.server.world.block.spawner.TrialSpawner.normal_config": "Spawning behavior when the player does not have the Bad Omen effect.",
   "mcdoc.java.server.world.block.spawner.TrialSpawner.ominous_config": "Spawning behavior when the player has the Bad Omen effect.",
   "mcdoc.java.server.world.block.spawner.TrialSpawner.required_player_range": "Maximum distance for players to activate the trial spawner, or join a battle",
   "mcdoc.java.server.world.block.spawner.TrialSpawner.target_cooldown_length": "Time in ticks for the cooldown period. Included the time spend dispensing the reward.",
   "mcdoc.java.server.world.block.spawner.TrialSpawner.registered_players": "Players that are have been nearby during the current battle",
   "mcdoc.java.server.world.block.spawner.TrialSpawner.current_mobs": "All mobs that have been spawned by this trial spawner and are currently alive",
   "mcdoc.java.server.world.block.spawner.TrialSpawner.cooldown_ends_at": "Gametime in ticks when the cooldown ends",
   "mcdoc.java.server.world.block.spawner.TrialSpawner.next_mob_spawns_at": "Gametime in ticks when the next spawning attempt happens",
   "mcdoc.java.server.world.block.spawner.TrialSpawner.spawn_data": "The next entity to spawn, also controlls the entity displayed in the trial spawner",
   "mcdoc.java.server.world.block.spawner.TrialSpawner.ejecting_loot_table": "The loot table selected to be used to determine the reward",
   "mcdoc.java.server.world.block.spawner.SpawnPotential.Weight": "Weight for this entry to be chosen.",
   "mcdoc.java.server.world.block.spawner.SpawnPotential.weight": "Weight for this entry to be chosen.",
   "mcdoc.java.server.world.block.spawner.SpawnEquipment.loot_table": "Generates the equipment.",
   "mcdoc.java.server.world.block.spawner.SpawnEquipment.slot_drop_chances": "Chance the mob will drop the equipment on death.",
   "mcdoc.java.server.world.block.spawner.SpawnerEntry.equipment": "Rolled items from the specified loot table will be equipped to the mob that spawns.",
   "mcdoc.java.server.world.block.spawner.CustomSpawnRules.block_light_limit": "Range of block light level required for the entity to spawn.",
   "mcdoc.java.server.world.block.spawner.CustomSpawnRules.sky_light_limit": "Range of sky light level required for the entity to spawn.",
   "mcdoc.java.server.world.block.structure_block.StructureBlock.author": "Author of the structure.",
   "mcdoc.java.server.world.block.structure_block.StructureBlock.metadata": "Custom data for the structure. Stores the data id for \"DATA\" mode.",
   "mcdoc.java.server.world.block.structure_block.StructureBlock.posX": "Relative offset.",
   "mcdoc.java.server.world.block.structure_block.StructureBlock.posY": "Relative offset.",
   "mcdoc.java.server.world.block.structure_block.StructureBlock.posZ": "Relative offset.",
   "mcdoc.java.server.world.block.structure_block.StructureBlock.showboundingbox": "Whether to show the bounding box.",
   "mcdoc.java.server.world.block.structure_block.StructureBlock.powered": "Whether it has been powered by redstone.",
   "mcdoc.java.server.world.block.structure_block.StructureBlock.integrity": "Chance for each block to stay.",
   "mcdoc.java.server.world.block.structure_block.StructureBlock.seed": "Seed for the integrity random.",
   "mcdoc.java.server.world.block.structure_block.StructureBlock.showair": "Whether to show invisible blocks inside the bounding box.",
   "mcdoc.java.server.world.block.vault.ServerData.state_updating_resumes_at": "Ticks until the loot table is ran again to update the display item.",
   "mcdoc.java.server.world.block.vault.ServerData.rewarded_players": "When a player is in this list they can no longer open the vault, but other players can.",
   "mcdoc.java.server.world.block.vault.ServerData.items_to_eject": "Items that are being ejected from the vault when it is opened. As each item is ejected, it is removed from this list, before ejection, it is previewed as the `display_item`.",
   "mcdoc.java.server.world.block.vault.ServerData.total_ejections_needed": "Number of items that the loot table started off the opening with, does not change while items are ejected.",
   "mcdoc.java.server.world.block.vault.Config.key_item": "Item required to open the vault.",
   "mcdoc.java.server.world.block.vault.Config.loot_table": "Defaults to \"minecraft:chests/trial_chambers/reward\".",
   "mcdoc.java.server.world.block.vault.Vault.shared_data": "When a player is in range of the vault, the same display item will be shown to all players.\nThis is also used for the items that are being ejected from the vault.",
   "mcdoc.java.server.world.block.vault.SharedData.display_item": "Item that is displayed to players when they are in range of the vault.",
   "mcdoc.java.server.world.entity.area_effect_cloud.AreaEffectCloud.Age": "Number of ticks it has existed.\nControls when it will despawn; when greater than `Duration + WaitTime`.",
   "mcdoc.java.server.world.entity.area_effect_cloud.AreaEffectCloud.Color": "Color of the particles.\ncalculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive",
   "mcdoc.java.server.world.entity.area_effect_cloud.AreaEffectCloud.Duration": "Maximum number of ticks until it will disappear after `WaitTime` is done",
   "mcdoc.java.server.world.entity.area_effect_cloud.AreaEffectCloud.ReapplicationDelay": "Number of ticks until the effects are reapplied.",
   "mcdoc.java.server.world.entity.area_effect_cloud.AreaEffectCloud.WaitTime": "Number of ticks until it appears.",
   "mcdoc.java.server.world.entity.area_effect_cloud.AreaEffectCloud.DurationOnUse": "Amount the duration changes when it is active.",
   "mcdoc.java.server.world.entity.area_effect_cloud.AreaEffectCloud.OwnerUUIDMost": "Upper bits of the owner's UUID.",
   "mcdoc.java.server.world.entity.area_effect_cloud.AreaEffectCloud.OwnerUUIDLeast": "Lower bits of the owner's UUID.",
   "mcdoc.java.server.world.entity.area_effect_cloud.AreaEffectCloud.Radius": "Radius of the particles & effect applications.",
   "mcdoc.java.server.world.entity.area_effect_cloud.AreaEffectCloud.RadiusOnUse": "Change in the radius when it is used.",
   "mcdoc.java.server.world.entity.area_effect_cloud.AreaEffectCloud.RadiusPerTick": "Change in the radius per tick.",
   "mcdoc.java.server.world.entity.area_effect_cloud.AreaEffectCloud.Particle": "Particle the area effect cloud displays.",
   "mcdoc.java.server.world.entity.area_effect_cloud.AreaEffectCloud.Potion": "Default potion effect.",
   "mcdoc.java.server.world.entity.area_effect_cloud.AreaEffectCloud.Effects": "Potion effects that get applied on use.",
   "mcdoc.java.server.world.entity.boat.Boat.Type": "Wood type of this boat",
   "mcdoc.java.server.world.entity.boat.ChestBoat.LootTable": "Loot table that will populate this chest boat.",
   "mcdoc.java.server.world.entity.boat.ChestBoat.LootTableSeed": "Seed of the loot table.",
   "mcdoc.java.server.world.entity.boat.ChestBoat.Items": "Slots from 0 to 26.",
   "mcdoc.java.server.world.entity.end_crystal.EvokerFangs.ShowBottom": "Whether to show the base of the end crystal.",
   "mcdoc.java.server.world.entity.end_crystal.EvokerFangs.BeamTarget": "Coordinates that the beam is pointing to",
   "mcdoc.java.server.world.entity.end_crystal.EvokerFangs.beam_target": "Coordinates that the beam is pointing to",
   "mcdoc.java.server.world.entity.evoker_fangs.EvokerFangs.Warmup": "Ticks until the fangs pop out of the ground.",
   "mcdoc.java.server.world.entity.evoker_fangs.Owner.OwnerUUIDMost": "Upper bits of the owner's UUID.",
   "mcdoc.java.server.world.entity.evoker_fangs.Owner.OwnerUUIDLeast": "Lower bits of the owner's UUID.",
   "mcdoc.java.server.world.entity.experience_orb.ExperienceOrb.Age": "Ticks that it has existed.",
   "mcdoc.java.server.world.entity.experience_orb.ExperienceOrb.Value": "Amount of experience it will give.",
   "mcdoc.java.server.world.entity.experience_orb.ExperienceOrb.Count": "Remaining number of times that the orb can be picked up.\nWhen the orb is picked up, the value decreases by 1.\nWhen multiple orbs are merged, their values are added up to result orb.\nWhen the value reaches 0, the orb is depleted.",
   "mcdoc.java.server.world.entity.eye_of_ender.EyeOfEnder.Item": "Item to render as",
   "mcdoc.java.server.world.entity.falling_block.FallingBlock.TileEntityData": "NBT data for the placed block.",
   "mcdoc.java.server.world.entity.falling_block.FallingBlock.BlockState": "Block state for the placed block.",
   "mcdoc.java.server.world.entity.falling_block.FallingBlock.Time": "Ticks it has existed.",
   "mcdoc.java.server.world.entity.falling_block.FallingBlock.DropItem": "Whether it should drop as a block when destroyed.",
   "mcdoc.java.server.world.entity.falling_block.FallingBlock.HurtEntities": "Whether this it should hurt entities.",
   "mcdoc.java.server.world.entity.falling_block.FallingBlock.FallHurtMax": "Maximum damage it should deal.",
   "mcdoc.java.server.world.entity.falling_block.FallingBlock.FallHurtAmount": "Damage multiplier.",
   "mcdoc.java.server.world.entity.falling_block.FallingBlock.CancelDrop": "Whether the block should be destroyed instead of placed after landing on a solid block.\nWhen `true`, the block is not dropped as an item, even if the DropItem tag is set to `true`.\nHowever, if the entity is deleted due to its Time value being too high, this tag is ignored and an item is dropped depending on the `DropItem` tag.\nDefaults to `1` for falling suspicious sand and suspicious gravel, and `0` for the other vanilla falling blocks and any summoned falling block.",
   "mcdoc.java.server.world.entity.firework_rocket.FireWorkRocket.Life": "Ticks it has existed.",
   "mcdoc.java.server.world.entity.firework_rocket.FireWorkRocket.LifeTime": "Ticks it will exist.",
   "mcdoc.java.server.world.entity.firework_rocket.FireWorkRocket.ShotAtAngle": "Whether it should move at an angle.",
   "mcdoc.java.server.world.entity.interaction.Interaction.width": "Cube hitbox width centered on the entity. Negative values are effectively `| x |`.",
   "mcdoc.java.server.world.entity.interaction.Interaction.height": "Cube hitbox height stretching up from the entity position. Negative values stretch the hitbox down.",
   "mcdoc.java.server.world.entity.interaction.Interaction.response": "Whether an action should trigger a response. Defaults to false.\nResponse:\nAttack - When true, the default attack sound is played.\nInteraction - When true, the player's arm swings.",
   "mcdoc.java.server.world.entity.interaction.Interaction.attack": "Record of last attack (left click) event, can be updated every tick (no invulnerability frames).",
   "mcdoc.java.server.world.entity.interaction.Interaction.interaction": "Record of last interaction (use; right click) event, can be updated every tick, if the player is holding the key it updates every 3 ticks.",
   "mcdoc.java.server.world.entity.interaction.Action.timestamp": "Game tick of when the event occured.",
   "mcdoc.java.server.world.entity.item.Item.Age": "Ticks it has existed.",
   "mcdoc.java.server.world.entity.item.Item.PickupDelay": "Ticks until an entity can pick up this item.",
   "mcdoc.java.server.world.entity.item.Item.Owner": "Only this entity can pick up the item.",
   "mcdoc.java.server.world.entity.item.Item.Thrower": "Player who threw the item. Can be set and/or changed to any entity.",
   "mcdoc.java.server.world.entity.item.Uuid.L": "Lower bits of the target player's UUID",
   "mcdoc.java.server.world.entity.item.Uuid.M": "Upper bits of the target player's UUID",
   "mcdoc.java.server.world.entity.item_frame.ItemFrame.Facing": "Direction it is facing.",
   "mcdoc.java.server.world.entity.item_frame.ItemFrame.ItemDropChance": "Chance the item has to drop.",
   "mcdoc.java.server.world.entity.item_frame.ItemFrame.ItemRotation": "Rotation of the item.",
   "mcdoc.java.server.world.entity.item_frame.ItemFrame.Invisible": "Whether the item frame should be invisible.\nThe item inside the frame is not effected.",
   "mcdoc.java.server.world.entity.item_frame.ItemFrame.Fixed": "Whether the item frame should not be able to be broken and should disallow the item to be moved.",
   "mcdoc.java.server.world.entity.marker.Marker.data": "Any stored data",
   "mcdoc.java.server.world.entity.minecart.ContainerMinecart.LootTable": "Loot table that will populate this minecart.",
   "mcdoc.java.server.world.entity.minecart.ContainerMinecart.LootTableSeed": "Seed of the loot table.",
   "mcdoc.java.server.world.entity.minecart.Minecart.CustomDisplayTile": "Whether to display a custom block.",
   "mcdoc.java.server.world.entity.minecart.Minecart.DisplayState": "Custom block to display.\nOnly has effects when `CustomDisplayTile` is true.",
   "mcdoc.java.server.world.entity.minecart.Minecart.DisplayOffset": "Vertical offset of the custom block display.",
   "mcdoc.java.server.world.entity.minecart.ChestMinecart.Items": "Slots from 0 to 26.",
   "mcdoc.java.server.world.entity.minecart.CommandBlockMinecart.SuccessCount": "Success count of the last command.",
   "mcdoc.java.server.world.entity.minecart.CommandBlockMinecart.LastOutput": "Output of the last command.",
   "mcdoc.java.server.world.entity.minecart.CommandBlockMinecart.TrackOutput": "Whether to record command output.",
   "mcdoc.java.server.world.entity.minecart.FurnaceMinecart.PushX": "Acceleration in x axis.",
   "mcdoc.java.server.world.entity.minecart.FurnaceMinecart.PushZ": "Acceleration in z axis.",
   "mcdoc.java.server.world.entity.minecart.FurnaceMinecart.Fuel": "Ticks until the fuel runs out.",
   "mcdoc.java.server.world.entity.minecart.HopperMinecart.Items": "Slots from 0 to 4.",
   "mcdoc.java.server.world.entity.minecart.HopperMinecart.TransferCooldown": "Ticks until an item can be transferred.",
   "mcdoc.java.server.world.entity.minecart.HopperMinecart.Enabled": "Whether it should pick up items.",
   "mcdoc.java.server.world.entity.minecart.SpawnerMinecart.SpawnPotentials": "List of potential entities to place next.",
   "mcdoc.java.server.world.entity.minecart.SpawnerMinecart.SpawnData": "Data for the next mob to place.\nWill be overwritten by `SpawnPotentials`.",
   "mcdoc.java.server.world.entity.minecart.SpawnerMinecart.SpawnCount": "Number of entities that will be placed.",
   "mcdoc.java.server.world.entity.minecart.SpawnerMinecart.SpawnRange": "Range that the spawned entities will be placed in.",
   "mcdoc.java.server.world.entity.minecart.SpawnerMinecart.Delay": "Ticks until the next spawn.",
   "mcdoc.java.server.world.entity.minecart.SpawnerMinecart.MinSpawnDelay": "Minimum random delay for the next spawn.",
   "mcdoc.java.server.world.entity.minecart.SpawnerMinecart.MaxSpawnDelay": "Maximum random delay for the next spawn.",
   "mcdoc.java.server.world.entity.minecart.SpawnerMinecart.MaxNearbyEntities": "Maximum number of entities nearby.",
   "mcdoc.java.server.world.entity.minecart.SpawnerMinecart.RequiredPlayerRange": "Radius in blocks that a player has to be within to spawn entities.",
   "mcdoc.java.server.world.entity.minecart.TntMinecart.TNTFuse": "Ticks until it explodes.",
   "mcdoc.java.server.world.entity.mod.EntityBase.struct": "Base NBT for all entities,",
   "mcdoc.java.server.world.entity.mod.EntityBase.Rotation": "Rotation in [y-rotation, x-rotation]",
   "mcdoc.java.server.world.entity.mod.EntityBase.FallDistance": "How far the entity has fallen.",
   "mcdoc.java.server.world.entity.mod.EntityBase.Fire": "Ticks of fire left, or if negative, ticks until the entity starts to burn.",
   "mcdoc.java.server.world.entity.mod.EntityBase.Air": "Ticks of air left.",
   "mcdoc.java.server.world.entity.mod.EntityBase.HasVisualFire": "Whether the entity has visual fire.",
   "mcdoc.java.server.world.entity.mod.EntityBase.OnGround": "Whether the entity is on the ground.",
   "mcdoc.java.server.world.entity.mod.EntityBase.NoGravity": "Whether the entity should be effected by gravity.",
   "mcdoc.java.server.world.entity.mod.EntityBase.Invulnerable": "Whether the entity should take damage.",
   "mcdoc.java.server.world.entity.mod.EntityBase.PortalCooldown": "How long until the entity can go through a nether portal.",
   "mcdoc.java.server.world.entity.mod.EntityBase.UUIDMost": "Upper bits of the entity's UUID.",
   "mcdoc.java.server.world.entity.mod.EntityBase.UUIDLeast": "Lower bits of the entity's UUID.",
   "mcdoc.java.server.world.entity.mod.EntityBase.CustomNameVisible": "Whether the custom name should always be visible.",
   "mcdoc.java.server.world.entity.mod.EntityBase.Silent": "Whether the entity should make any sound.",
   "mcdoc.java.server.world.entity.mod.EntityBase.Passengers": "Passengers on the entity.",
   "mcdoc.java.server.world.entity.mod.EntityBase.Glowing": "Whether the entity should glow.",
   "mcdoc.java.server.world.entity.mod.EntityBase.Tags": "Labelling tags on the entity.",
   "mcdoc.java.server.world.entity.mod.EntityBase.TicksFrozen": "Ticks that this entity has been freezing. Although this tag is defined for all entities,\nit is actually only used by mobs that are not in the `freeze_immune_entity_types` entity type tag.\nThis increases by one every tick the entity is in powdered snow, and decreases by two when it's out of it.",
   "mcdoc.java.server.world.entity.painting.Painting.Facing": "Direction it is facing.",
   "mcdoc.java.server.world.entity.painting.Painting.Motive": "Type of painting.",
   "mcdoc.java.server.world.entity.painting.Painting.variant": "Type of painting.",
   "mcdoc.java.server.world.entity.tnt.Tnt.Fuse": "Ticks until it explodes.",
   "mcdoc.java.server.world.entity.tnt.Tnt.fuse": "Ticks until it explodes.",
   "mcdoc.java.server.world.item.book.WrittenBookContent.generation": "Number of times this written book has been copied. Defaults to 0. If the value is greater than 1, the book cannot be copied.",
   "mcdoc.java.server.world.item.book.WrittenBookContent.resolved": "Whether the dynamic content on the pages has been resolved.",
   "mcdoc.java.server.world.item.book.item.__dispatch.WritableBook": "A writable book",
   "mcdoc.java.server.world.item.book.WrittenBook.resolved": "Whether the dynamic content on the pages has been resolved.",
   "mcdoc.java.server.world.item.book.WrittenBook.pages": "Pages of the book as JSON text components.",
   "mcdoc.java.server.world.item.book.WrittenBook.generation": "Generation of the book.",
   "mcdoc.java.server.world.item.compass.LodestoneTracker.target": "Location of the lodestone. Optional. If not set, the compass will spin randomly.",
   "mcdoc.java.server.world.item.compass.LodestoneTarget.pos": "Coordinates.",
   "mcdoc.java.server.world.item.compass.LodestoneTracker.tracked": "When `true`, the component is removed when the lodestone is broken. When `false`, the component is kept. Defaults to true.",
   "mcdoc.java.server.world.item.compass.Compass.LodestoneTracked": "Whether the compass should be linked to a lodestone.\nWhen true, the compass will reset if the lodestone at the position is removed.",
   "mcdoc.java.server.world.item.crossbow.data_component.__dispatch.charged_projectiles": "Crossbow projectiles that are loaded.",
   "mcdoc.java.server.world.item.crossbow.data_component.__dispatch_2": "If set, this projectile item can't be picked up by a player when fired, except in creative mode. Can only be used within charged_projectiles components.",
   "mcdoc.java.server.world.item.crossbow.item.__dispatch.Crossbow": "A crossbow",
   "mcdoc.java.server.world.item.crossbow.Crossbow.ChargedProjectiles": "Projectiles that are loaded.",
   "mcdoc.java.server.world.item.crossbow.Crossbow.Charged": "Whether the crossbow is charged.",
   "mcdoc.java.server.world.item.firework.Explosion.colors": "Colors of the initial particles of the explosion, randomly selected from.\nCalculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.",
   "mcdoc.java.server.world.item.firework.Explosion.fade_colors": "Colors of the fading particles of the explosion",
   "mcdoc.java.server.world.item.firework.Explosion.has_trail": "Added to a firework star via Diamond.",
   "mcdoc.java.server.world.item.firework.Explosion.has_twinkle": "Added to a firework star via Glowstone Dust.",
   "mcdoc.java.server.world.item.firework.LegacyFireworks.Flight": "Duration of flight.",
   "mcdoc.java.server.world.item.firework.LegacyExplosion.Flicker": "Whether the explosion should flicker.",
   "mcdoc.java.server.world.item.firework.LegacyExplosion.Trail": "Whether the explosion should have a trail.",
   "mcdoc.java.server.world.item.firework.LegacyExplosion.Colors": "Colors of the explosion.\nCalculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.",
   "mcdoc.java.server.world.item.firework.LegacyExplosion.FadeColors": "Colors of the explosion fade.\nCalculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.",
   "mcdoc.java.server.world.item.fish_bucket.BucketEntityData.HuntingCooldown": "Turns into the expiry time of the memory module `has_hunting_cooldown` for axolotls.",
   "mcdoc.java.server.world.item.fish_bucket.BucketEntityData.BucketVariantTag": "Turns into the `Variant` entity tag for tropical fish.",
   "mcdoc.java.server.world.item.fish_bucket.AxolotlBucket.BucketVariantTag": "Turns into the `Variant` entity tag.",
   "mcdoc.java.server.world.item.head.Profile.name": "Name of a player profile, i.e. its username.",
   "mcdoc.java.server.world.item.head.Profile.id": "UUID of the owner. Used to update the other tags when the chunk loads or the holder logs in, in case the owner's name has changed.",
   "mcdoc.java.server.world.item.head.Profile.properties": "Resolved textures hosted on the minecraft CDN.",
   "mcdoc.java.server.world.item.head.ProfileProperty.name": "Usually `textures`.",
   "mcdoc.java.server.world.item.head.ProfileProperty.value": "Base64 encoded JSON value of the texture index.",
   "mcdoc.java.server.world.item.head.ProfileProperty.signature": "Verifies the hash of the resulting texture.",
   "mcdoc.java.server.world.item.head.ProfilePropertyMap.__map_key": "The key is usually `textures`.\nBase64 encoded JSON value of the texture index.",
   "mcdoc.java.server.world.item.head.data_component.__dispatch.note_block_sound": "Sound to be played by a note block if this player head is placed above it.",
   "mcdoc.java.server.world.item.head.SkullOwner.Id": "Optional.",
   "mcdoc.java.server.world.item.head.SkullOwner.Name": "Name of the owner, if missing appears as a steve head.",
   "mcdoc.java.server.world.item.head.Texture.Value": "Base64 encoded JSON value of the texture index.",
   "mcdoc.java.server.world.item.leather_armor.DyedColor.rgb": "Color of the armor.\nCalculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.",
   "mcdoc.java.server.world.item.leather_armor.ColorDisplay.color": "Color of the armor.\nCalculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.",
   "mcdoc.java.server.world.item.map.data_component.__dispatch.map_color": "Calculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.",
   "mcdoc.java.server.world.item.map.data_component.__dispatch.MapDecorations": "Key-value pairs of the icons to display, where the key is an arbitrary unique string identifying the decoration.",
   "mcdoc.java.server.world.item.map.data_component.__dispatch.map_id": "Map number, representing the shared state holding map contents and markers.",
   "mcdoc.java.server.world.item.map.FilledMap.map": "Map number, representing the shared state holding map contents and markers.",
   "mcdoc.java.server.world.item.map.FilledMap.map_scale_direction": "Amount to increase the current map scale by when crafting.",
   "mcdoc.java.server.world.item.map.FilledMap.map_to_lock": "Whether the map should be locked after being taken out of the cartography table.",
   "mcdoc.java.server.world.item.map.FilledMap.Decorations": "Decorations on the map.",
   "mcdoc.java.server.world.item.map.IdentifiedDecoration.id": "An arbitrary unique string identifying the decoration.",
   "mcdoc.java.server.world.item.map.FilledMap.display": "Display for the item.",
   "mcdoc.java.server.world.item.map.ColorDisplay.MapColor": "Calculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.",
   "mcdoc.java.server.world.item.map.Decoration.type": "Decoration type.",
   "mcdoc.java.server.world.item.map.Decoration.x": "World x position.",
   "mcdoc.java.server.world.item.map.Decoration.z": "World z position.",
   "mcdoc.java.server.world.item.map.Decoration.rot": "Rotation of the decoration, measured in degrees clockwise.",
   "mcdoc.java.server.world.item.map.IconByteId.Player": "White pentagon.",
   "mcdoc.java.server.world.item.map.IconByteId.Frame": "Green pentagon.",
   "mcdoc.java.server.world.item.map.IconByteId.RedMarker": "Red pentagon.",
   "mcdoc.java.server.world.item.map.IconByteId.BlueMarker": "Blue pentagon.",
   "mcdoc.java.server.world.item.map.IconByteId.TargetX": "White x.",
   "mcdoc.java.server.world.item.map.IconByteId.TargetPoint": "Red triangle.",
   "mcdoc.java.server.world.item.map.IconByteId.PlayerOffMap": "Large white dot.",
   "mcdoc.java.server.world.item.map.IconByteId.PlayerOffLimits": "Small white dot.",
   "mcdoc.java.server.world.item.map.IconByteId.Mansion": "Woodland mansion.",
   "mcdoc.java.server.world.item.map.IconByteId.Monument": "Ocean monument.",
   "mcdoc.java.server.world.item.mod.data_component.__dispatch.attribute_modifiers": "Applied to an entity that has equipped/is holding the item.",
   "mcdoc.java.server.world.item.mod.Consumable.consume_seconds": "Time taken for a player to consume the item. Defaults to 1.6.",
   "mcdoc.java.server.world.item.mod.Consumable.animation": "View model/arms animation used during consumption of the item. Defaults to `eat`.",
   "mcdoc.java.server.world.item.mod.Consumable.sound": "Sound played during and on completion of item consumption.",
   "mcdoc.java.server.world.item.mod.Consumable.has_consume_particles": "Whether the `item` particle is emitted while consuming the item. Defaults to `true`.",
   "mcdoc.java.server.world.item.mod.Consumable.on_consume_effects": "Side effects which take place after consuming the item.",
   "mcdoc.java.server.world.item.mod.ItemUseAnimation.Spear": "Used for Tridents.",
   "mcdoc.java.server.world.item.mod.ItemUseAnimation.TootHorn": "Used for Goat Horns.",
   "mcdoc.java.server.world.item.mod.consume_effect.__dispatch.ApplyEffectsConsumeEffect": "Adding status/mob effects to the player.",
   "mcdoc.java.server.world.item.mod.ApplyEffectsConsumeEffect.probability": "Chance the effects will be applied once consumed.",
   "mcdoc.java.server.world.item.mod.consume_effect.__dispatch.RemoveEffectsConsumeEffect": "Removing specific status/mob effect types from the player.",
   "mcdoc.java.server.world.item.mod.consume_effect.__dispatch_20": "Removing all status/mob effects from the player.",
   "mcdoc.java.server.world.item.mod.TeleportRandomlyConsumeEffect.diameter": "Defaults to 16.",
   "mcdoc.java.server.world.item.mod.data_component.__dispatch.custom_model_data": "Tag that describes the custom model an item will take.\nUsed by the `custom_model_data` model overrides predicate.\nHas certain restrictions due to float conversion.",
   "mcdoc.java.server.world.item.mod.data_component.__dispatch.damage": "Damage that an item has. Only used for tools, armor, etc.",
   "mcdoc.java.server.world.item.mod.DamageResistant.types": "The damage types which the item is resistant to when in entity form.\nAdditionally, this also affects whether the equipped item will be damaged when the wearer is hurt by a specified damage type.",
   "mcdoc.java.server.world.item.mod.DeathProtection.death_effects": "Effects applied when the item protects the holder.",
   "mcdoc.java.server.world.item.mod.data_component.__dispatch.Enchantable": "Makes an item enchantable in an enchanting table",
   "mcdoc.java.server.world.item.mod.data_component.__dispatch.enchantment_glint_override": "If set, changes enchantment glint behavior. When true, this item will display a glint, even without enchantments. When false, this item will not display a glint, even with enchantments.",
   "mcdoc.java.server.world.item.mod.data_component.__dispatch.enchantments": "List of enchantments that are on the item.\nAn enchantment level of zero doesn't cause the enchantment section to be displayed in the tooltip, but the glint will still be shown, and the following rules apply:\n- Boolean enchantments are treated as level 1 (active).\n- Leveled enchantments are ignored.",
   "mcdoc.java.server.world.item.mod.Equippable.equip_sound": "Sound event to play when the item is equipped.\nIf not specified, the default armor equip sound will be played.",
   "mcdoc.java.server.world.item.mod.Equippable.model": "The equipment model to use when equipped.\nFalls back to rendering as the item itself when in the head slot (or no rendering if not applicable).",
   "mcdoc.java.server.world.item.mod.Equippable.allowed_entities": "Limits which entities can equip this item",
   "mcdoc.java.server.world.item.mod.Equippable.dispensable": "Whether the item can be equipped by using a dispenser. Defaults to `true`.",
   "mcdoc.java.server.world.item.mod.Equippable.swappable": "Whether the item can be equipped by right-clicking. Defaults to `true`.",
   "mcdoc.java.server.world.item.mod.Equippable.damage_on_hurt": "Whether the item will be damaged when the wearer is damaged. Defaults to `true`.",
   "mcdoc.java.server.world.item.mod.data_component.__dispatch_38": "If set, this item will not burn in fire or lava.",
   "mcdoc.java.server.world.item.mod.FoodEffect.probability": "Chance for the effect to be applied. Defaults to 1.",
   "mcdoc.java.server.world.item.mod.Food.nutrition": "Food points/haunches restored when eaten (capped to 20.0).",
   "mcdoc.java.server.world.item.mod.Food.saturation": "Exact value added to the player's saturation level, capped at whatever the [new] food points value is.",
   "mcdoc.java.server.world.item.mod.Food.can_always_eat": "Whether the item can be eaten when the player's food points/haunches are full. Defaults to `false`",
   "mcdoc.java.server.world.item.mod.Food.eat_seconds": "Seconds it takes to eat the item. Defaults to `1.6`",
   "mcdoc.java.server.world.item.mod.Food.effects": "Applied when eaten.",
   "mcdoc.java.server.world.item.mod.Food.using_converts_to": "Works similarly to a milk bucket.",
   "mcdoc.java.server.world.item.mod.data_component.__dispatch.food": "If set, this item is considered as a food, and can be eaten.",
   "mcdoc.java.server.world.item.mod.data_component.__dispatch_43": "If set, several specific tooltip entries without an applicable `show_in_tooltip` option available are hidden.\nIncluded entries:\n- Banner pattern layers\n- Banner Pattern description\n- Decorated Pot sherds\n- Shulker Box items\n- Spawner entity type and interaction description\n- Bundle occupancy and items\n- Charged Crossbow projectiles\n- Painting variant\n- Disc Fragment description\n- Tropical Fish Bucket entity variant\n- Filled Map lock and scale level\n- Firework Rocket duration\n- Firework explosions\n- Goat Horn instrument\n- Potion effect, amplifier & duration\n- Music Disc description\n- Smithing Template description\n- Written Book author & generation",
   "mcdoc.java.server.world.item.mod.data_component.__dispatch_44": "If set, it will completely hide this item's tooltip, including its name.",
   "mcdoc.java.server.world.item.mod.data_component.__dispatch.item_name": "Replaces default item name with contained chat component.\nDifferences from `custom_name`:\n- Can't be changed or removed in anvil.\n- Not styled with italics when displayed to player.\n- Does not show labels where applicable (for example: banner markers, names in item frames).",
   "mcdoc.java.server.world.item.mod.data_component.__dispatch.JukeboxPlayable": "If set, this item can be played in a jukebox like a music disc.",
   "mcdoc.java.server.world.item.mod.data_component.__dispatch.lore": "A list of JSON text components, each element being a lore line.",
   "mcdoc.java.server.world.item.mod.data_component.__dispatch.max_damage": "Maximum amount of damage that this item can take (ie. **Durability**). If not set, this item cannot take damage. Cannot be combined with the `max_stack_size` component.",
   "mcdoc.java.server.world.item.mod.Rarity.Common": "White name, or aqua when enchanted.",
   "mcdoc.java.server.world.item.mod.Rarity.Uncommon": "Yellow name, or aqua when enchanted.",
   "mcdoc.java.server.world.item.mod.Rarity.Rare": "Aqua name, or light purple when enchanted.",
   "mcdoc.java.server.world.item.mod.Rarity.Epic": "Light purple name.",
   "mcdoc.java.server.world.item.mod.data_component.__dispatch.rarity": "Default color of this item's name.",
   "mcdoc.java.server.world.item.mod.data_component.__dispatch.repair_cost": "Number of experience levels to add to the base level cost when repairing, combining, or renaming this item with an anvil.",
   "mcdoc.java.server.world.item.mod.data_component.__dispatch.Repairable": "Makes an item enchantable in an enchanting table",
   "mcdoc.java.server.world.item.mod.ToolRule.speed": "Overrides the default mining speed.",
   "mcdoc.java.server.world.item.mod.ToolRule.correct_for_drops": "Overrides whether or not this tool is considered correct to mine at its most efficient speed, and to drop items if the block's loot table requires it.",
   "mcdoc.java.server.world.item.mod.Tool.rules": "Blocks that this tool has a special behavior with.",
   "mcdoc.java.server.world.item.mod.Tool.default_mining_speed": "Used if no rules override it. Defaults to 1.0.",
   "mcdoc.java.server.world.item.mod.Tool.damage_per_block": "Amount of durability to remove each time a block is broken with this tool. Must be a non-negative integer.",
   "mcdoc.java.server.world.item.mod.data_component.__dispatch.Trim": "Trim to apply to the item & armor when worn.",
   "mcdoc.java.server.world.item.mod.Trim.material": "The trim material of this item..",
   "mcdoc.java.server.world.item.mod.Trim.pattern": "The trim pattern of this item.",
   "mcdoc.java.server.world.item.mod.UseCooldown.seconds": "Time the cooldown will last.",
   "mcdoc.java.server.world.item.mod.UseCooldown.cooldown_group": "If present, this item will be part of a cooldown group and no longer share cooldowns with its base item type.\nInstead, cooldowns applied to this item will only be shared with any other items that are part of the same cooldown group.",
   "mcdoc.java.server.world.item.mod.ItemBase.Damage": "Damage that an item has. Only used for tools, armor, etc.",
   "mcdoc.java.server.world.item.mod.ItemBase.Unbreakable": "Whether the item should be unbreakable.\nOnly used for tools, armor, etc.",
   "mcdoc.java.server.world.item.mod.ItemBase.CanDestroy": "List of the block states that can be destroyed by this item when holding it in adventure mode.",
   "mcdoc.java.server.world.item.mod.ItemBase.CustomModelData": "Tag that describes the custom model an item will take.\nUsed by the `custom_model_data` model overrides predicate.\nHas certain restrictions due to float conversion.",
   "mcdoc.java.server.world.item.mod.ItemBase.Enchantments": "List of enchantments that are on the item.",
   "mcdoc.java.server.world.item.mod.ItemBase.RepairCost": "Number of experience levels to add to the base level cost when repairing, combining, or renaming this item with an anvil.",
   "mcdoc.java.server.world.item.mod.ItemBase.AttributeModifiers": "Applied to an entity that has equipped the item.",
   "mcdoc.java.server.world.item.mod.ItemBase.display": "Display settings.",
   "mcdoc.java.server.world.item.mod.ItemBase.HideFlags": "Bitfield for which flags to hide on an item.",
   "mcdoc.java.server.world.item.mod.ItemBase.Trim": "Trim to apply to the item & armor when worn.",
   "mcdoc.java.server.world.item.mod.Enchantment.struct": "An individual enchantment, with ID and level.",
   "mcdoc.java.server.world.item.mod.Enchantment.id": "Which enchantment is being described.",
   "mcdoc.java.server.world.item.mod.Enchantment.lvl": "Which level the enchantment is.",
   "mcdoc.java.server.world.item.mod.AttributeModifier.type": "A single attribute modifier.",
   "mcdoc.java.server.world.item.mod.AttributeModifier.id": "Used when equipping and unequipping the item to identify which modifier to add or remove from the entity.",
   "mcdoc.java.server.world.item.mod.AttributeModifier.amount": "Change in the attribute.",
   "mcdoc.java.server.world.item.mod.AttributeModifier.slot": "Slot or slot type the item must be in for the modifier to take effect. Defaults to `any`.",
   "mcdoc.java.server.world.item.mod.AttributeModifier.Name": "Identifying name of the modifier, has no real effect.",
   "mcdoc.java.server.world.item.mod.AttributeModifier.Slot": "Slot that the modifier is active in.",
   "mcdoc.java.server.world.item.mod.AttributeModifier.Amount": "Change in the attribute.",
   "mcdoc.java.server.world.item.mod.AttributeModifier.UUIDMost": "Upper bits of the modifier's UUID.",
   "mcdoc.java.server.world.item.mod.AttributeModifier.UUIDLeast": "Lower bits of the modifier's UUID.",
   "mcdoc.java.server.world.item.mod.Display.struct": "Display settings of an item.",
   "mcdoc.java.server.world.item.mod.Display.Name": "A JSON text component.",
   "mcdoc.java.server.world.item.mod.Display.Lore": "A list of JSON text components, each element being a lore line.",
   "mcdoc.java.server.world.item.mod.SingleItem.id": "ID of the item.",
   "mcdoc.java.server.world.item.mod.AnyItem.type": "@deprecated",
   "mcdoc.java.server.world.item.mod.ItemStack.count": "Number of items in the stack",
   "mcdoc.java.server.world.item.mod.ItemStack.Count": "Number of items in the stack",
   "mcdoc.java.server.world.item.ominous_bottle.data_component.__dispatch.ominous_bottle_amplifier": "Bad Omen amplifier level +1 (value of `0` corresponds to `Bad Omen I`).",
   "mcdoc.java.server.world.item.potion.PotionContents.custom_color": "Calculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.",
   "mcdoc.java.server.world.item.potion.PotionContents.custom_name": "If present, is used to generate the item name using the translation key `item.minecraft.<potion_type>.effect.<custom_name>`.",
   "mcdoc.java.server.world.item.potion.item.__dispatch.EffectItem": "An item that has a potion effect",
   "mcdoc.java.server.world.item.potion.EffectItem.CustomPotionEffects": "List of the effects that will be applied with this item.",
   "mcdoc.java.server.world.item.potion.EffectItem.Potion": "Default potion effect",
   "mcdoc.java.server.world.item.potion.EffectItem.CustomPotionColor": "Calculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.",
   "mcdoc.java.server.world.item.shield.Shield.BlockEntityTag": "Banner Data.",
   "mcdoc.java.server.world.item.shield.BlockEntityTag.Base": "Base color.",
   "mcdoc.java.server.world.item.shield.Pattern.Color": "Color of the pattern.",
   "mcdoc.java.server.world.item.shield.Pattern.Pattern": "Pattern id.",
   "mcdoc.java.server.world.item.spawn_item.SpawnItem.EntityTag": "Data of the spawned entity.",
   "mcdoc.java.server.world.item.suspicious_stew.SuspiciousStewEffect.duration": "Duration of the effect in ticks. Defaults to `160`; 8 seconds.",
   "mcdoc.java.server.world.item.suspicious_stew.SuspiciousStew.Effects": "Effects this stew will give.",
   "mcdoc.java.server.world.item.suspicious_stew.Effect.struct": "A suspicious stew effect.",
   "mcdoc.java.server.world.item.suspicious_stew.Effect.EffectDuration": "Duration in ticks.",
   "mcdoc.java.server.world.entity.display.mod.DisplayBase.transformation": "Transformation applied to model (after normal entity orientation). Defaults to identity. Interpolated.\nFor an easy GUI, check out [Misode's tool](https://misode.github.io/transformation/).\nThe value is stored in decomposed object form for interpolation & ease-of-use,\nSupports storing a non-canonical matrix form describing a row-major matrix, is automatically decomposed by the game with a performance cost.\nThe matrix takes the following form:\n```js\n[ \n\ts0, s1, s2, tx,\n\ts3, s4, s5, ty,\n\ts6, s7, s8, tz,\n\ti0, i1, i2, w\n]\n```\nWhere:\n - `i0`-`i2`: Ignored values, these can be anything, but the game will ignore the values.\n - `w`: This value is used as a divisor of all other values (except `i0`-`i2`). i.e. all the other values get divided by `w` before doing any further calculations.\n - `tx`, `ty`, `tz`: Translation value, this is used directly as the `transformation.translation` after dividing by `w`. i.e. `transformation:{translation:[tx/w, ty/w, tz/w]}`.\n - `s0`-`s8`: After dividing each element by `w`, this top left 3x3 of the matrix is passed through the [Singular Value Decomposition](https://en.wikipedia.org/wiki/Singular_value_decomposition) algorithm to extract the `transformation.left_rotation`, `transformation.scale`, and `transformation.right_rotation`. The exact values of this decomposition are difficult to predict.",
   "mcdoc.java.server.world.entity.display.mod.DecomposedTransformation.translation": "Translation in [x, y, z].",
   "mcdoc.java.server.world.entity.display.mod.DecomposedTransformation.left_rotation": "Using this rotation is enough for most transformations.",
   "mcdoc.java.server.world.entity.display.mod.DecomposedTransformation.right_rotation": "For more complex transformations.",
   "mcdoc.java.server.world.entity.display.mod.DecomposedTransformation.scale": "Scale in [x, y, z].",
   "mcdoc.java.server.world.entity.display.mod.DisplayBase.shadow_radius": "Size of shadow. Defaults to 0 (no shadow). Interpolated.",
   "mcdoc.java.server.world.entity.display.mod.DisplayBase.shadow_strength": "Strength of the shadow. Controls the opacity of the shadow as a function of distance to block below. Defaults to 1. Interpolated.",
   "mcdoc.java.server.world.entity.display.mod.DisplayBase.start_interpolation": "Ticks after the next client tick to wait until starting the interpolation.\nInfo:\nAll interpolated properties are part of a single interpolation set.\nAny update to an interpolated property will cause all values of the interpolation set to be saved as \"current\".\n - Data command executions that do not change value of property (even if it's present in NBT) do not count as updates.\n - Updates are synchronized to clients at most once per tick, so multiple updates within command will still count as single update.\nPrevious current values are saved as \"previous\".\nIf interpolation is enabled, entity will transition between \"previous\" and \"current\" values over time.\n`interpolation_duration` must be set every time an interpolatable property is updated to cause interpolation.\nNegative values are allowed, will cause an instant jump to the subtracted duration value, then interpolation will continue as normal.",
   "mcdoc.java.server.world.entity.display.mod.DisplayBase.interpolation_duration": "Ticks the interpolation should take to complete.",
   "mcdoc.java.server.world.entity.display.mod.DisplayBase.teleport_duration": "How long in game ticks the entity takes to interpolate from it's starting location to it's destination when teleported. Defaults to 0 (no interpolation).",
   "mcdoc.java.server.world.entity.display.mod.DisplayBase.billboard": "Controls if model should pivot to face player when rendered. Defaults to `fixed`.",
   "mcdoc.java.server.world.entity.display.mod.Billboard.Fixed": "No rotation.",
   "mcdoc.java.server.world.entity.display.mod.Billboard.Vertical": "Pivot around vertical axis.",
   "mcdoc.java.server.world.entity.display.mod.Billboard.Horizontal": "Pivot around horizontal axis.",
   "mcdoc.java.server.world.entity.display.mod.Billboard.Center": "Pivot around both axes.",
   "mcdoc.java.server.world.entity.display.mod.DisplayBase.brightness": "When defined, overrides light values used for rendering. Omitted by default (which means rendering uses values from entity position).",
   "mcdoc.java.server.world.entity.display.mod.Brightness.sky": "Value of skylight.",
   "mcdoc.java.server.world.entity.display.mod.Brightness.block": "Value of block light.",
   "mcdoc.java.server.world.entity.display.mod.DisplayBase.view_range": "Maximum view range of this entity. Actual distance depends on client-side render distance and entity distance scaling. Default value 1.0 (roughly the same as fireball).",
   "mcdoc.java.server.world.entity.display.mod.DisplayBase.width": "Describe width of culling bounding box.\nBounding box spans vertically y to y+height and horizontally width/2 in all directions from entity position.\nIf field is set to 0, culling is disabled. Defaults to 0.",
   "mcdoc.java.server.world.entity.display.mod.DisplayBase.height": "Describe height of culling bounding box.\nBounding box spans vertically y to y+height and horizontally width/2 in all directions from entity position.\nIf field is set to 0, culling is disabled. Defaults to 0.",
   "mcdoc.java.server.world.entity.display.mod.DisplayBase.glow_color_override": "Override glow border color. If field is set to 0, uses team color. Defaults to 0.\nCalculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.",
   "mcdoc.java.server.world.entity.display.mod.AxisAngle.axis": "Local position of the axis in [x, y, z].",
   "mcdoc.java.server.world.entity.display.mod.AxisAngle.angle": "Angle to rotate around axis in radians.",
   "mcdoc.java.server.world.entity.display.mod.BlockDisplay.block_state": "Block state to display.\nDoes display most block entities (eg. Chests, Beds, Furnaces, etc).\nDoes not display specially rendered block entities (eg. The bell in a bell block, an end gateway, the book on an enchantment table, a banner, a sign, etc).",
   "mcdoc.java.server.world.entity.display.mod.ItemDisplay.item": "Item stack to display.",
   "mcdoc.java.server.world.entity.display.mod.ItemDisplay.item_display": "Describes item model transform applied to item (as defined in `display` section in model JSON). Defaults to `fixed`.",
   "mcdoc.java.server.world.entity.display.text.TextDisplay.text": "Text to display. Components are resolved with the executor set to the display entity and the position set to `0 0 0`.",
   "mcdoc.java.server.world.entity.display.text.TextDisplay.line_width": "Line width in pixels used to split lines (note: new line can be also added with \\n characters). Defaults to 200.",
   "mcdoc.java.server.world.entity.display.text.TextDisplay.text_opacity": "Opacity (alpha component) of rendered text. Defaults to 255. Interpolated.",
   "mcdoc.java.server.world.entity.display.text.TextDisplay.background": "Color of background. Includes alpha channel. Defaults to 0x40000000. Interpolated.\nCalculated as `ALPHA << 24 | RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.",
   "mcdoc.java.server.world.entity.display.text.TextDisplay.default_background": "If true, overrides `background` & rendering uses default text background color (same as in chat). Defaults to false.",
   "mcdoc.java.server.world.entity.display.text.TextDisplay.shadow": "Should text be displayed with shadow. Defaults to false.",
   "mcdoc.java.server.world.entity.display.text.TextDisplay.see_through": "Should text be visible through blocks. Defaults to false.",
   "mcdoc.java.server.world.entity.display.text.TextDisplay.alignment": "How text should be aligned. Defaults to `center`.",
   "mcdoc.java.server.world.entity.mob.allay.Allay.CanDuplicate": "Whether the allay can duplicate. This is set to false when the allay duplicates.",
   "mcdoc.java.server.world.entity.mob.allay.Allay.DuplicationCooldown": "Ticks until `CanDuplicate` is set to true. This is set to 6000 game ticks (5 minutes) when the allay duplicates.",
   "mcdoc.java.server.world.entity.mob.allay.Allay.Inventory": "Items it has picked up. Note that the item given by the player is in\nthe allay's `HandItems[0]` tag, not here.",
   "mcdoc.java.server.world.entity.mob.allay.Allay.listener": "Vibration game event listener.",
   "mcdoc.java.server.world.entity.mob.armor_stand.ArmorStand.Invisible": "Whether it should be invisible.",
   "mcdoc.java.server.world.entity.mob.armor_stand.ArmorStand.Marker": "Whether it has no hitbox.",
   "mcdoc.java.server.world.entity.mob.armor_stand.ArmorStand.NoBasePlate": "Whether it should have a no base plate.",
   "mcdoc.java.server.world.entity.mob.armor_stand.ArmorStand.ShowArms": "Whether it should show its arms.",
   "mcdoc.java.server.world.entity.mob.armor_stand.ArmorStand.Small": "Whether it is small.",
   "mcdoc.java.server.world.entity.mob.armor_stand.ArmorStand.DisabledSlots": "A bitfield of the slots that cannot be used.",
   "mcdoc.java.server.world.entity.mob.armor_stand.ArmorStand.Pose": "Body part rotations.",
   "mcdoc.java.server.world.entity.mob.bat.Bat.BatFlags": "Whether it is upside down.",
   "mcdoc.java.server.world.entity.mob.creeper.Creeper.powered": "Whether it is being struck by lightning.",
   "mcdoc.java.server.world.entity.mob.creeper.Creeper.ExplosionRadius": "Radius of the explosion.",
   "mcdoc.java.server.world.entity.mob.creeper.Creeper.Fuse": "Ticks until it explodes.",
   "mcdoc.java.server.world.entity.mob.creeper.Creeper.ignited": "Whether it was lit with flint and steel.",
   "mcdoc.java.server.world.entity.mob.dolphin.Dolphin.TreasurePosX": "X coordinate of the treasure it leads to.",
   "mcdoc.java.server.world.entity.mob.dolphin.Dolphin.TreasurePosY": "Y coordinate of the treasure it leads to.",
   "mcdoc.java.server.world.entity.mob.dolphin.Dolphin.TreasurePosZ": "Z coordinate of the treasure it leads to.",
   "mcdoc.java.server.world.entity.mob.dolphin.Dolphin.GotFish": "Whether it has gotten fish from a player.",
   "mcdoc.java.server.world.entity.mob.dolphin.Dolphin.CanFindTreasure": "Whether it will lead a player to treasure.",
   "mcdoc.java.server.world.entity.mob.ender_dragon.EnderDragon.DragonPhase": "Fighting phase it is in.",
   "mcdoc.java.server.world.entity.mob.enderman.Enderman.carriedBlockState": "Block it is carrying.",
   "mcdoc.java.server.world.entity.mob.endermite.Endermite.Lifetime": "How long it has existed.",
   "mcdoc.java.server.world.entity.mob.endermite.Endermite.PlayerSpawned": "Whether enderman should attack it.",
   "mcdoc.java.server.world.entity.mob.fish.Fish.FromBucket": "If it was released from a bucket.",
   "mcdoc.java.server.world.entity.mob.fish.Pufferfish.PuffState": "How puffed it is.",
   "mcdoc.java.server.world.entity.mob.ghast.Ghast.ExplosionPower": "Explosion radius of fireballs that are shot from it.",
   "mcdoc.java.server.world.entity.mob.glow_squid.GlowSquid.DarkTicksRemaining": "Ticks that it will wait before glowing.",
   "mcdoc.java.server.world.entity.mob.iron_golem.IronGolem.PlayerCreated": "Whether a player created it.",
   "mcdoc.java.server.world.entity.mob.mod.LivingEntity.AbsorptionAmount": "How much absorption health it has.",
   "mcdoc.java.server.world.entity.mob.mod.LivingEntity.HurtTime": "Timer since it has been damaged. Counts down to zero.",
   "mcdoc.java.server.world.entity.mob.mod.LivingEntity.HurtByTimestamp": "Ticks since it was last damaged, from its creation.",
   "mcdoc.java.server.world.entity.mob.mod.LivingEntity.DeathTime": "Timer since it was marked as dead. Counts down to zero.",
   "mcdoc.java.server.world.entity.mob.mod.LivingEntity.FallFlying": "Whether it will glide when it falls.",
   "mcdoc.java.server.world.entity.mob.mod.LivingEntity.SleepingX": "X coordinate of where it is sleeping.",
   "mcdoc.java.server.world.entity.mob.mod.LivingEntity.SleepingY": "Y coordinate of where it is sleeping.",
   "mcdoc.java.server.world.entity.mob.mod.LivingEntity.SleepingZ": "Z coordinate of where it is sleeping.",
   "mcdoc.java.server.world.entity.mob.mod.LivingEntity.ActiveEffects": "Active potion effects",
   "mcdoc.java.server.world.entity.mob.mod.LivingEntity.NoAI": "Whether it should have an AI.",
   "mcdoc.java.server.world.entity.mob.mod.LivingEntity.Team": "Team to join when it is spawned.",
   "mcdoc.java.server.world.entity.mob.mod.MobBase.struct": "Base NBT for all mobs.",
   "mcdoc.java.server.world.entity.mob.mod.MobBase.HandItems": "[main hand, offhand]",
   "mcdoc.java.server.world.entity.mob.mod.MobBase.ArmorItems": "[feet, legs, body, head]",
   "mcdoc.java.server.world.entity.mob.mod.MobBase.HandDropChances": "Chance to drop the items it is holding, in [main hand, offhand].",
   "mcdoc.java.server.world.entity.mob.mod.MobBase.ArmorDropChances": "Chance to drop the items it is wearing, in [feet, legs, body, head].",
   "mcdoc.java.server.world.entity.mob.mod.MobBase.body_armor_item": "Used for wolf armor & llama carpet decoration.",
   "mcdoc.java.server.world.entity.mob.mod.MobBase.body_armor_drop_chance": "Chance to drop the item it is wearing.",
   "mcdoc.java.server.world.entity.mob.mod.MobBase.DeathLootTableSeed": "Seed for generating the death loot table.",
   "mcdoc.java.server.world.entity.mob.mod.MobBase.CanPickUpLoot": "Whether it can pick up loot.",
   "mcdoc.java.server.world.entity.mob.mod.MobBase.PersistenceRequired": "Whether it should not despawn naturally.",
   "mcdoc.java.server.world.entity.mob.mod.MobBase.LeftHanded": "Whether it is left handed.",
   "mcdoc.java.server.world.entity.mob.mod.MobBase.Leash": "What the leash is attached to.",
   "mcdoc.java.server.world.entity.mob.mod.MobBase.leash": "What the leash is attached to.",
   "mcdoc.java.server.world.entity.mob.mod.NeutralMob.AngerTime": "Ticks that it will be angry for.",
   "mcdoc.java.server.world.entity.mob.mod.Attribute.struct": "A single attribute.",
   "mcdoc.java.server.world.entity.mob.mod.Attribute.Modifiers": "Modifiers that act on it.",
   "mcdoc.java.server.world.entity.mob.mod.AttributeModifier.type": "A single attribute modifier",
   "mcdoc.java.server.world.entity.mob.mod.AttributeModifier.Name": "Has no real effect.",
   "mcdoc.java.server.world.entity.mob.mod.AttributeModifier.Slot": "Slot that the modifier is active in.",
   "mcdoc.java.server.world.entity.mob.mod.AttributeModifier.Amount": "Change in the attribute.",
   "mcdoc.java.server.world.entity.mob.mod.AttributeModifier.UUIDMost": "Upper bits of the modifier's UUID.",
   "mcdoc.java.server.world.entity.mob.mod.AttributeModifier.UUIDLeast": "Lower bits of the modifier's UUID.",
   "mcdoc.java.server.world.entity.mob.mod.UUIDLeash.UUIDMost": "Upper bits of the other entity's UUID.",
   "mcdoc.java.server.world.entity.mob.mod.UUIDLeash.UUIDLeast": "Lower bits of the other entity's UUID.",
   "mcdoc.java.server.world.entity.mob.mod.BlockLeash.X": "X coordiante of leash knot.",
   "mcdoc.java.server.world.entity.mob.mod.BlockLeash.Y": "Y coordiante of leash knot.",
   "mcdoc.java.server.world.entity.mob.mod.BlockLeash.Z": "Z coordiante of leash knot.",
   "mcdoc.java.server.world.entity.mob.phantom.Phantom.AX": "Approximate circle x coordinate.",
   "mcdoc.java.server.world.entity.mob.phantom.Phantom.AY": "Approximate circle y coordinate.",
   "mcdoc.java.server.world.entity.mob.phantom.Phantom.AZ": "Approximate circle z coordinate.",
   "mcdoc.java.server.world.entity.mob.piglin.PiglinBase.IsImmuneToZombification": "Whether it will not transform to a zombified piglin when it is in the Overworld.",
   "mcdoc.java.server.world.entity.mob.piglin.PiglinBase.TimeInOverworld": "Ticks it has been in the overworld.",
   "mcdoc.java.server.world.entity.mob.piglin.memory_module.__dispatch.admiring_disabled": "Whether it cannot admire an item.",
   "mcdoc.java.server.world.entity.mob.piglin.memory_module.__dispatch.admiring_item": "Whether it is admiring an item.",
   "mcdoc.java.server.world.entity.mob.piglin.memory_module.__dispatch.angry_at": "The target of the piglin.",
   "mcdoc.java.server.world.entity.mob.piglin.memory_module.__dispatch.hunted_recently": "Whether it hunted recently.",
   "mcdoc.java.server.world.entity.mob.piglin.memory_module.__dispatch.universal_anger": "Whether it is being angered universally.",
   "mcdoc.java.server.world.entity.mob.piglin.Piglin.IsBaby": "Whether it is a baby.",
   "mcdoc.java.server.world.entity.mob.piglin.Piglin.CannotHunt": "Whether it does not hunt hoglins.",
   "mcdoc.java.server.world.entity.mob.player.Player.DataVersion": "Version of the player NBT structure",
   "mcdoc.java.server.world.entity.mob.player.Player.LastDeathLocation": "Location of the player's last death.",
   "mcdoc.java.server.world.entity.mob.player.Player.playerGameType": "Game mode that the player is in.",
   "mcdoc.java.server.world.entity.mob.player.Player.previousPlayerGameType": "Previous game mode that the player was in.",
   "mcdoc.java.server.world.entity.mob.player.Player.Score": "Score to display upon death.",
   "mcdoc.java.server.world.entity.mob.player.Player.SelectedItemSlot": "Hotbar slot the player has selected.",
   "mcdoc.java.server.world.entity.mob.player.Player.SelectedItem": "Item in the hotbar slot the player has selected.",
   "mcdoc.java.server.world.entity.mob.player.Player.SpawnDimension": "Dimension of the player's respawn point.",
   "mcdoc.java.server.world.entity.mob.player.Player.SpawnX": "X coordinate of the player's spawn point.",
   "mcdoc.java.server.world.entity.mob.player.Player.SpawnY": "Y coordinate of the player's spawn point.",
   "mcdoc.java.server.world.entity.mob.player.Player.SpawnZ": "Z coordinate of the player's spawn point.",
   "mcdoc.java.server.world.entity.mob.player.Player.SpawnForced": "Whether the player must spawn at the spawn point.",
   "mcdoc.java.server.world.entity.mob.player.Player.SleepTimer": "Ticks the player has been in bed.",
   "mcdoc.java.server.world.entity.mob.player.Player.foodLevel": "Level of the hunger bar.",
   "mcdoc.java.server.world.entity.mob.player.Player.foodExhaustionLevel": "Rate at which the `foodSaturationLevel` depletes.",
   "mcdoc.java.server.world.entity.mob.player.Player.foodSaturationLevel": "Rate at which the hunger bar depletes.",
   "mcdoc.java.server.world.entity.mob.player.Player.foodTickTimer": "Ticks until the player heals or takes starvation damage.",
   "mcdoc.java.server.world.entity.mob.player.Player.XpLevel": "Number of experience levels the player has.",
   "mcdoc.java.server.world.entity.mob.player.Player.XpP": "Percentage the experience bar is filled up.",
   "mcdoc.java.server.world.entity.mob.player.Player.XpTotal": "Total experience the player has.",
   "mcdoc.java.server.world.entity.mob.player.Player.XpSeed": "Seed for enchantments.",
   "mcdoc.java.server.world.entity.mob.player.Player.EnderItems": "The player's enderchest inventory.",
   "mcdoc.java.server.world.entity.mob.player.Player.abilities": "Abilities of the player.",
   "mcdoc.java.server.world.entity.mob.player.Player.enteredNetherPosition": "Position that the player entered the nether at.",
   "mcdoc.java.server.world.entity.mob.player.Player.RootVehicle": "Entity that the player is riding.",
   "mcdoc.java.server.world.entity.mob.player.Player.ShoulderEntityLeft": "Entity that is on the player's left shoulder.",
   "mcdoc.java.server.world.entity.mob.player.Player.ShoulderEntityRight": "Entity that is on the player's right shoulder.",
   "mcdoc.java.server.world.entity.mob.player.Player.seenCredits": "Whether the player has gone to the overworld after defeating the Ender Dragon.",
   "mcdoc.java.server.world.entity.mob.player.Player.recipeBook": "Recipes that the player has.",
   "mcdoc.java.server.world.entity.mob.player.Player.warden_spawn_tracker": "Tracking the warden spawning process for this player.",
   "mcdoc.java.server.world.entity.mob.player.Abilities.walkSpeed": "Speed that the player walks at.",
   "mcdoc.java.server.world.entity.mob.player.Abilities.flySpeed": "Speed that the player flies at.",
   "mcdoc.java.server.world.entity.mob.player.Abilities.mayfly": "Whether the player can fly.",
   "mcdoc.java.server.world.entity.mob.player.Abilities.flying": "Whether the player is flying.",
   "mcdoc.java.server.world.entity.mob.player.Abilities.invulnerable": "Whether the player can only take damage from the void.",
   "mcdoc.java.server.world.entity.mob.player.Abilities.mayBuild": "Whether the player may build.",
   "mcdoc.java.server.world.entity.mob.player.Abilities.instabuild": "Whether the player destroys blocks instantly.",
   "mcdoc.java.server.world.entity.mob.player.RootVehicle.AttachMost": "Upper bits of the ridden entity's UUID.",
   "mcdoc.java.server.world.entity.mob.player.RootVehicle.AttachLeast": "Lower bits of the ridden entity's UUID.",
   "mcdoc.java.server.world.entity.mob.player.RootVehicle.Attach": "Ridden entity's UUID.",
   "mcdoc.java.server.world.entity.mob.player.RootVehicle.Entity": "The ridden entity.",
   "mcdoc.java.server.world.entity.mob.player.RecipeBook.recipes": "Recipes the player has acquired.",
   "mcdoc.java.server.world.entity.mob.player.RecipeBook.toBeDisplayed": "Recipes that should pulse in the crafting book.",
   "mcdoc.java.server.world.entity.mob.player.RecipeBook.isFilteringCraftable": "Whether the player has filtered crafting on in the crafting table.",
   "mcdoc.java.server.world.entity.mob.player.RecipeBook.isGuiOpen": "Whether the player has the crafting book open in the crafting table.",
   "mcdoc.java.server.world.entity.mob.player.RecipeBook.isFurnaceFilteringCraftable": "Whether the player has filtered crafting on in the furnace.",
   "mcdoc.java.server.world.entity.mob.player.RecipeBook.isFurnaceGuiOpen": "Whether the player has the crafting book open in the furnace.",
   "mcdoc.java.server.world.entity.mob.player.WardenSpawnTracker.cooldown_ticks": "Ticks before the `warning_level` can be increased again.\nDecreases by 1 every tick. It is set to 200 game ticks (10 seconds) every time the warning level is increased.",
   "mcdoc.java.server.world.entity.mob.player.WardenSpawnTracker.ticks_since_last_warning": "Ticks since the player was warned for warden spawning.\nIncreases by 1 every tick. After 12000 game ticks (10 minutes) it will be set back to 0,\nand the `warning_level` will be decreased by 1.",
   "mcdoc.java.server.world.entity.mob.player.WardenSpawnTracker.warning_level": "The warden will spawn at level 3.",
   "mcdoc.java.server.world.entity.mob.raider.RaiderBase.Patrolling": "Whether the raider is patrolling.",
   "mcdoc.java.server.world.entity.mob.raider.RaiderBase.PatrolLeader": "Whether the raider is leading the patrol.",
   "mcdoc.java.server.world.entity.mob.raider.RaiderBase.PatrolTarget": "Where the raider is heading towards.",
   "mcdoc.java.server.world.entity.mob.raider.RaiderBase.patrol_target": "Where the raider is heading towards.",
   "mcdoc.java.server.world.entity.mob.raider.RaiderBase.CanJoinRaid": "Whether the raider can join raids and count towards the progress bar.",
   "mcdoc.java.server.world.entity.mob.raider.RaiderBase.RaidId": "Id of the raid that the raider is in.",
   "mcdoc.java.server.world.entity.mob.raider.RaiderBase.Wave": "Wave that the raider is in.",
   "mcdoc.java.server.world.entity.mob.raider.Ravager.AttackTick": "Ticks until it can attack.",
   "mcdoc.java.server.world.entity.mob.raider.Ravager.RoarTick": "Ticks until it can roar.",
   "mcdoc.java.server.world.entity.mob.raider.Ravager.StunTick": "Ticks it is stunned for.",
   "mcdoc.java.server.world.entity.mob.raider.Spellcaster.SpellTicks": "Ticks until the raider can cast its spell.",
   "mcdoc.java.server.world.entity.mob.raider.Vindicator.Johnny": "Whether it should try to attack most other mobs.",
   "mcdoc.java.server.world.entity.mob.shulker.Shulker.Peek": "Whether it is peeking.",
   "mcdoc.java.server.world.entity.mob.shulker.Shulker.AttachFace": "Which face it is attached to.",
   "mcdoc.java.server.world.entity.mob.shulker.Shulker.APX": "Approximate x coordinate of the shulker.",
   "mcdoc.java.server.world.entity.mob.shulker.Shulker.APY": "Approximate y coordinate of the shulker.",
   "mcdoc.java.server.world.entity.mob.shulker.Shulker.APZ": "Approximate z coordinate of the shulker.",
   "mcdoc.java.server.world.entity.mob.skeleton.Skeleton.StrayConversionTime": "Time until it converts to a stray.",
   "mcdoc.java.server.world.entity.mob.slime.Slime.wasOnGround": "Whether it is on the ground.",
   "mcdoc.java.server.world.entity.mob.snow_golem.SnowGolem.Pumpkin": "Whether it has a pumpkin.",
   "mcdoc.java.server.world.entity.mob.tadpoll.Tadpole.Age": "Age of it in ticks. When greater than or equal to 24000, it grows into a frog.",
   "mcdoc.java.server.world.entity.mob.tadpoll.Tadpole.FromBucket": "If it was released from a bucket.",
   "mcdoc.java.server.world.entity.mob.vex.Vex.BoundX": "X coordinate of the center of its wander bounds.",
   "mcdoc.java.server.world.entity.mob.vex.Vex.BoundY": "Y coordinate of the center of its wander bounds.",
   "mcdoc.java.server.world.entity.mob.vex.Vex.BoundZ": "Z coordinate of the center of its wander bounds.",
   "mcdoc.java.server.world.entity.mob.vex.Vex.LifeTicks": "Ticks until it starts to die.",
   "mcdoc.java.server.world.entity.mob.warden.Warden.anger": "Anger management",
   "mcdoc.java.server.world.entity.mob.warden.Warden.listener": "Vibration listener",
   "mcdoc.java.server.world.entity.mob.warden.AngerManagement.suspects": "Suspects that have angered the warden.",
   "mcdoc.java.server.world.entity.mob.warden.Suspect.anger": "Level of anger that will decrease by 1 every second.",
   "mcdoc.java.server.world.entity.mob.wither.Wither.Invul": "Ticks it is invulnerable for.",
   "mcdoc.java.server.world.entity.mob.zoglin.Zoglin.IsBaby": "Whether it is a baby.",
   "mcdoc.java.server.world.entity.mob.zombie.Zombie.IsBaby": "Whether it is a baby.",
   "mcdoc.java.server.world.entity.mob.zombie.Zombie.CanBreakDoors": "Whether it can break doors.",
   "mcdoc.java.server.world.entity.mob.zombie.Zombie.DrownedConversionTime": "Ticks until it converts.",
   "mcdoc.java.server.world.entity.mob.zombie.Zombie.InWaterTime": "Ticks it has been in the water.",
   "mcdoc.java.server.world.entity.mob.zombie.ZombieVillager.VillagerData": "Villager's skin data",
   "mcdoc.java.server.world.entity.mob.zombie.ZombieVillager.Gossips": "Villager's gossips",
   "mcdoc.java.server.world.entity.mob.zombie.ZombieVillager.Offers": "Villager's offers",
   "mcdoc.java.server.world.entity.mob.zombie.ZombieVillager.ConversionTime": "Ticks until the it is converted.",
   "mcdoc.java.server.world.entity.mob.zombie.ZombieVillager.ConversionPlayerLeast": "Lower bits of the player's uuid who triggered the conversion.",
   "mcdoc.java.server.world.entity.mob.zombie.ZombieVillager.ConversionPlayerMost": "Upper bits of the player's uuid who triggered the conversion.",
   "mcdoc.java.server.world.entity.mob.zombie.ZombieVillager.ConversionPlayer": "Player who triggered the conversion.",
   "mcdoc.java.server.world.entity.mob.zombified_piglin.ZombiePigman.IsBaby": "Whether it is a baby.",
   "mcdoc.java.server.world.entity.mob.zombified_piglin.ZombiePigman.Anger": "Ticks that it will be angry for.",
   "mcdoc.java.server.world.entity.mob.zombified_piglin.ZombiePigman.HurtBy": "Last player to hit a zombie pigman in this zombie pigman's detection range.",
   "mcdoc.java.server.world.entity.projectile.arrow.ArrowBase.shake": "Shake it creates.",
   "mcdoc.java.server.world.entity.projectile.arrow.ArrowBase.pickup": "How players can pick up it.",
   "mcdoc.java.server.world.entity.projectile.arrow.ArrowBase.player": "Whether a player shot it.",
   "mcdoc.java.server.world.entity.projectile.arrow.ArrowBase.life": "Ticks since it last moved.",
   "mcdoc.java.server.world.entity.projectile.arrow.ArrowBase.damage": "Damage it should deal.",
   "mcdoc.java.server.world.entity.projectile.arrow.ArrowBase.inGround": "Whether it is in the ground.",
   "mcdoc.java.server.world.entity.projectile.arrow.ArrowBase.inBlockState": "Block it is in.",
   "mcdoc.java.server.world.entity.projectile.arrow.ArrowBase.crit": "Whether it should do critical damage.",
   "mcdoc.java.server.world.entity.projectile.arrow.ArrowBase.ShotFromCrossbow": "Whether it was shot from a crossbow.",
   "mcdoc.java.server.world.entity.projectile.arrow.ArrowBase.weapon": "The item which has shot this arrow.",
   "mcdoc.java.server.world.entity.projectile.arrow.ArrowBase.PierceLevel": "Number of entities it can pass through.",
   "mcdoc.java.server.world.entity.projectile.arrow.ArrowBase.SoundEvent": "Sound event to play when it hits something.\nCan only be vanilla sound events",
   "mcdoc.java.server.world.entity.projectile.arrow.ArrowBase.OwnerUUIDMost": "Upper bits of the owner's UUID.",
   "mcdoc.java.server.world.entity.projectile.arrow.ArrowBase.OwnerUUIDLeast": "Lower bits of the owner's UUID.",
   "mcdoc.java.server.world.entity.projectile.arrow.Arrow.Color": "Color of the arrow's potion bubble trail particles.\ncalculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.",
   "mcdoc.java.server.world.entity.projectile.arrow.Arrow.CustomPotionEffects": "Effects to give to the hit entity.",
   "mcdoc.java.server.world.entity.projectile.arrow.Arrow.custom_potion_effects": "Effects to give to the hit entity.",
   "mcdoc.java.server.world.entity.projectile.arrow.Arrow.Potion": "Name of the default potion effect.",
   "mcdoc.java.server.world.entity.projectile.arrow.SpectralArrow.Duration": "Ticks the glowing effect lasts.",
   "mcdoc.java.server.world.entity.projectile.arrow.Trident.DealtDamage": "Whether it has already damaged an entity.",
   "mcdoc.java.server.world.entity.projectile.fireball.AcceleratingProjectileBase.power": "Acceleration",
   "mcdoc.java.server.world.entity.projectile.fireball.DespawnableProjectileBase.life": "Ticks since it last moved.",
   "mcdoc.java.server.world.entity.projectile.fireball.FireballBase.Item": "Item it should render as.",
   "mcdoc.java.server.world.entity.projectile.fireball.LargeFireball.ExplosionPower": "Explosion radius.",
   "mcdoc.java.server.world.entity.projectile.mod.ProjectileBase.HasBeenShot": "Whether it has been shot. This is set to true when it exists for\nat least one tick, and is used by the game to ensure it only triggers the projectile_shoot\ngame event once.",
   "mcdoc.java.server.world.entity.projectile.mod.ProjectileBase.LeftOwner": "Whether it has left its owner.",
   "mcdoc.java.server.world.entity.projectile.mod.OwnerUuid.OwnerUUIDMost": "Upper bits of the owner's UUID.",
   "mcdoc.java.server.world.entity.projectile.mod.OwnerUuid.OwnerUUIDLeast": "Lower bits of the owner's UUID.",
   "mcdoc.java.server.world.entity.projectile.shulker_bullet.ShulkerBullet.Steps": "Steps it takes to reach the target",
   "mcdoc.java.server.world.entity.projectile.shulker_bullet.ShulkerBullet.TXD": "X offset to move based on the target's location.",
   "mcdoc.java.server.world.entity.projectile.shulker_bullet.ShulkerBullet.TYD": "Y offset to move based on the target's location.",
   "mcdoc.java.server.world.entity.projectile.shulker_bullet.ShulkerBullet.TZD": "Z offset to move based on the target's location.",
   "mcdoc.java.server.world.entity.projectile.shulker_bullet.BulletTarget.M": "The upper bits of the its UUID.",
   "mcdoc.java.server.world.entity.projectile.shulker_bullet.BulletTarget.L": "The lower bits of the its UUID.",
   "mcdoc.java.server.world.entity.projectile.shulker_bullet.BulletTarget.X": "X block coordinate of the it.",
   "mcdoc.java.server.world.entity.projectile.shulker_bullet.BulletTarget.Y": "Y block coordinate of the it.",
   "mcdoc.java.server.world.entity.projectile.shulker_bullet.BulletTarget.Z": "Z block coordinate of the it.",
   "mcdoc.java.server.world.entity.projectile.throwable.Throwable.shake": "Shake it creates.",
   "mcdoc.java.server.world.entity.projectile.throwable.Throwable.owner": "Entity that threw it.",
   "mcdoc.java.server.world.entity.projectile.throwable.Throwable.inGround": "Whether it is in the ground.",
   "mcdoc.java.server.world.entity.projectile.throwable.Owner.M": "Upper bits of the owner's UUID.",
   "mcdoc.java.server.world.entity.projectile.throwable.Owner.L": "Lower bits of the owner's UUID.",
   "mcdoc.java.server.world.entity.projectile.throwable.ThrowableItem.Item": "Item representation of the projectile.",
   "mcdoc.java.server.world.entity.projectile.throwable.Potion.Potion": "Item representation of the potion.",
   "mcdoc.java.server.world.entity.projectile.throwable.Potion.Item": "Item representation of the potion.",
   "mcdoc.java.server.world.item.block.container.ContainerSlot.slot": "The slot ID of the container.",
   "mcdoc.java.server.world.item.block.container.ContainerSlot.item": "The item stack in this container slot.",
   "mcdoc.java.server.world.item.block.mod.data_component.__dispatch.can_place_on": "List of blocks that this block item can be placed on.",
   "mcdoc.java.server.world.item.block.mod.data_component.__dispatch.BlockEntityData": "NBT that the block entity that is placed can have.",
   "mcdoc.java.server.world.item.block.mod.data_component.__dispatch.block_state": "Blockstate that the placed block will have.",
   "mcdoc.java.server.world.item.block.mod.item.__dispatch.BlockItem": "An item that can be placed as a block",
   "mcdoc.java.server.world.item.block.mod.BlockItem.CanPlaceOn": "List of blockstates that this block item can be placed on.",
   "mcdoc.java.server.world.item.block.mod.BlockItem.BlockStateTag": "Blockstate that the placed block will have.",
   "mcdoc.java.server.world.entity.mob.breedable.axolotl.memory_module.__dispatch.has_hunting_cooldown": "Hunting cooldown active.",
   "mcdoc.java.server.world.entity.mob.breedable.axolotl.memory_module.__dispatch.play_dead_ticks": "Ticks until it stops playing dead.",
   "mcdoc.java.server.world.entity.mob.breedable.axolotl.Axolotl.Variant": "The variant of the axolotl.",
   "mcdoc.java.server.world.entity.mob.breedable.axolotl.Axolotl.FromBucket": "If this axolotl was released from a bucket.",
   "mcdoc.java.server.world.entity.mob.breedable.bee.Bee.FlowerPos": "Position of the flower the bee is circling",
   "mcdoc.java.server.world.entity.mob.breedable.bee.Bee.flower_pos": "Position of the flower the bee is circling",
   "mcdoc.java.server.world.entity.mob.breedable.bee.Bee.HasNectar": "Whether the bee has nectar.",
   "mcdoc.java.server.world.entity.mob.breedable.bee.Bee.HasStung": "Whether the bee has stung an entity.",
   "mcdoc.java.server.world.entity.mob.breedable.bee.Bee.TicksSincePollination": "Ticks since the bee has pollinated a crop.",
   "mcdoc.java.server.world.entity.mob.breedable.bee.Bee.CannotEnterHiveTicks": "Ticks until the bee can enter its hive.",
   "mcdoc.java.server.world.entity.mob.breedable.bee.Bee.CropsGrownSincePollination": "Crops grown since the bee has gathered nectar.",
   "mcdoc.java.server.world.entity.mob.breedable.bee.Bee.Anger": "Ticks the bee will be angry for.",
   "mcdoc.java.server.world.entity.mob.breedable.bee.Bee.HurtBy": "Player that has attacked the bee.",
   "mcdoc.java.server.world.entity.mob.breedable.chicken.Chicken.IsChickenJockey": "Whether it is from a chicken jockey.\nIf true it will despawn and will drop more experience.",
   "mcdoc.java.server.world.entity.mob.breedable.chicken.Chicken.EggLayTime": "Time until it lays another egg.",
   "mcdoc.java.server.world.entity.mob.breedable.fox.Fox.TrustedUUIDs": "List of trusted players.",
   "mcdoc.java.server.world.entity.mob.breedable.fox.Fox.Sleeping": "Whether it is sleeping.",
   "mcdoc.java.server.world.entity.mob.breedable.fox.Fox.Type": "The type of fox.",
   "mcdoc.java.server.world.entity.mob.breedable.fox.Fox.Sitting": "Whether it is sitting.",
   "mcdoc.java.server.world.entity.mob.breedable.fox.Fox.Crouching": "Whether it is crouching.",
   "mcdoc.java.server.world.entity.mob.breedable.fox.TrustedUUID.L": "Lower bits of the trusted player's UUID.",
   "mcdoc.java.server.world.entity.mob.breedable.fox.TrustedUUID.M": "Upper bits of the trusted player's UUID.",
   "mcdoc.java.server.world.entity.mob.breedable.goat.memory_module.__dispatch.long_jump_cooling_down": "Ticks until it can leap again.",
   "mcdoc.java.server.world.entity.mob.breedable.goat.memory_module.__dispatch.ram_cooldown_ticks": "Ticks until it can ram again.",
   "mcdoc.java.server.world.entity.mob.breedable.goat.Goat.HasLeftHorn": "Whether it has its left horn.",
   "mcdoc.java.server.world.entity.mob.breedable.goat.Goat.HasRightHorn": "Whether it has its right horn.",
   "mcdoc.java.server.world.entity.mob.breedable.goat.Goat.IsScreamingGoat": "Whether it is a screaming goat.",
   "mcdoc.java.server.world.entity.mob.breedable.hoglin.Hoglin.IsImmuneToZombification": "Whether it will not transform to a zoglin when it is in the Overword.",
   "mcdoc.java.server.world.entity.mob.breedable.hoglin.Hoglin.CannotBeHunted": "Whether it cannot be hunted by piglins",
   "mcdoc.java.server.world.entity.mob.breedable.hoglin.Hoglin.TimeInOverworld": "The number of ticks it has been in the overworld.",
   "mcdoc.java.server.world.entity.mob.breedable.horse.HorseBase.Bred": "Unknown use.\nRemains `0` even if it was bred.",
   "mcdoc.java.server.world.entity.mob.breedable.horse.HorseBase.EatingHaystack": "Whether it is eating a haystack.",
   "mcdoc.java.server.world.entity.mob.breedable.horse.HorseBase.Tame": "Whether it has been tamed.",
   "mcdoc.java.server.world.entity.mob.breedable.horse.HorseBase.Temper": "Higher values make it easier to tame. Increases with feeding.",
   "mcdoc.java.server.world.entity.mob.breedable.horse.HorseBase.OwnerUUID": "Player who tamed it.",
   "mcdoc.java.server.world.entity.mob.breedable.horse.HorseBase.Owner": "Player who tamed it.",
   "mcdoc.java.server.world.entity.mob.breedable.horse.ChestedHorse.ChestedHorse": "Whether it has a chest.",
   "mcdoc.java.server.world.entity.mob.breedable.horse.ChestedHorse.Items": "Slots from 0 to 14.",
   "mcdoc.java.server.world.entity.mob.breedable.horse.SkeletonHorse.SkeletonTrap": "Whether it was spawned by a trap.",
   "mcdoc.java.server.world.entity.mob.breedable.horse.SkeletonHorse.SkeletonTrapTime": "Ticks it has existed.",
   "mcdoc.java.server.world.entity.mob.breedable.horse.Camel.IsSitting": "Whether it is sitting.",
   "mcdoc.java.server.world.entity.mob.breedable.horse.Camel.LastPoseTick": "The tick when it started changing its pose.",
   "mcdoc.java.server.world.entity.mob.breedable.llama.Llama.Bred": "Unknown use.\nRemains `0` even if it was bred.",
   "mcdoc.java.server.world.entity.mob.breedable.llama.Llama.EatingHaystack": "Whether it is grazing.",
   "mcdoc.java.server.world.entity.mob.breedable.llama.Llama.Tame": "Whether it has been tamed.",
   "mcdoc.java.server.world.entity.mob.breedable.llama.Llama.Temper": "Higher values make it easier to tame.\nIncreases with feeding.",
   "mcdoc.java.server.world.entity.mob.breedable.llama.Llama.OwnerUUID": "Player who tamed it.",
   "mcdoc.java.server.world.entity.mob.breedable.llama.Llama.Owner": "Player who tamed the horse.",
   "mcdoc.java.server.world.entity.mob.breedable.llama.Llama.DecorItem": "Carpet decoration on its back.",
   "mcdoc.java.server.world.entity.mob.breedable.llama.Llama.ChestedHorse": "Whether it has a chest.",
   "mcdoc.java.server.world.entity.mob.breedable.llama.Llama.Items": "List of slots, scales with `Strength`.",
   "mcdoc.java.server.world.entity.mob.breedable.llama.Llama.Strength": "Determines both the number of items it can carry and how likely it is for wolves to run away.",
   "mcdoc.java.server.world.entity.mob.breedable.llama.llama_strength.__dispatch.1": "Slots from 0 to 2. Scales with `Strength`.",
   "mcdoc.java.server.world.entity.mob.breedable.llama.llama_strength.__dispatch.2": "Slots from 0 to 5. Scales with `Strength`.",
   "mcdoc.java.server.world.entity.mob.breedable.llama.llama_strength.__dispatch.3": "Slots from 0 to 8. Scales with `Strength`.",
   "mcdoc.java.server.world.entity.mob.breedable.llama.llama_strength.__dispatch.4": "Slots from 0 to 11. Scales with `Strength`.",
   "mcdoc.java.server.world.entity.mob.breedable.llama.TraderLlama.DespawnDelay": "When it will despawn.",
   "mcdoc.java.server.world.entity.mob.breedable.mod.Breedable.InLove": "Ticks until it stops searching for a mate.",
   "mcdoc.java.server.world.entity.mob.breedable.mod.Breedable.ForcedAge": "A value of age assigned to this mob when it grows up.\nIncremented when a baby mob is fed.",
   "mcdoc.java.server.world.entity.mob.breedable.mod.Breedable.LoveCauseLeast": "Lower bits of the UUID of the player that caused this mob to breed.",
   "mcdoc.java.server.world.entity.mob.breedable.mod.Breedable.LoveCauseMost": "Upper bits of the UUID of the player that caused this mob to breed.",
   "mcdoc.java.server.world.entity.mob.breedable.mod.Breedable.LoveCause": "Player that caused this mob to breed.",
   "mcdoc.java.server.world.entity.mob.breedable.mod.memory_module.__dispatch.is_tempted": "Tempted by the player.",
   "mcdoc.java.server.world.entity.mob.breedable.mod.memory_module.__dispatch.temptation_cooldown_ticks": "Ticks until it can be tempted again.",
   "mcdoc.java.server.world.entity.mob.breedable.mooshroom.Mooshroom.EffectId": "Effect that the mooshroom gives to suspicious stew.",
   "mcdoc.java.server.world.entity.mob.breedable.mooshroom.Mooshroom.EffectDuration": "Duration of the suspicious stew effect.",
   "mcdoc.java.server.world.entity.mob.breedable.ocelot.Ocelot.Trusting": "Whether it trusts players.",
   "mcdoc.java.server.world.entity.mob.breedable.panda.Panda.MainGene": "Displayed gene.\nIf this gene is recessive and 'HiddenGene' is not the same, the panda will display the 'normal' gene.",
   "mcdoc.java.server.world.entity.mob.breedable.panda.Panda.HiddenGene": "Hidden gene.",
   "mcdoc.java.server.world.entity.mob.breedable.panda.Gene.Normal": "(dominant)",
   "mcdoc.java.server.world.entity.mob.breedable.panda.Gene.Lazy": "(dominant)",
   "mcdoc.java.server.world.entity.mob.breedable.panda.Gene.Worried": "(dominant)",
   "mcdoc.java.server.world.entity.mob.breedable.panda.Gene.Playful": "(dominant)",
   "mcdoc.java.server.world.entity.mob.breedable.panda.Gene.Brown": "(recessive)",
   "mcdoc.java.server.world.entity.mob.breedable.panda.Gene.Weak": "(recessive)",
   "mcdoc.java.server.world.entity.mob.breedable.panda.Gene.Aggressive": "(dominant)",
   "mcdoc.java.server.world.entity.mob.breedable.rabbit.Rabbit.MoreCarrotTicks": "Ticks down once a carrot crop is eaten",
   "mcdoc.java.server.world.entity.mob.breedable.saddled.Saddled.Saddle": "Whether there is a saddle on it.",
   "mcdoc.java.server.world.entity.mob.breedable.sheep.Sheep.Sheared": "Whether it has been shorn.",
   "mcdoc.java.server.world.entity.mob.breedable.sniffer.memory_module.__dispatch.sniff_cooldown": "Ticks till it can explore another position.",
   "mcdoc.java.server.world.entity.mob.breedable.sniffer.memory_module.__dispatch.SnifferExploredPositions": "Coordinates in the world that it has already explored.",
   "mcdoc.java.server.world.entity.mob.breedable.tamable.Tamable.Sitting": "Whether the mob is sitting.",
   "mcdoc.java.server.world.entity.mob.breedable.tamable.Cat.CollarColor": "Collar color, present for stray cats.",
   "mcdoc.java.server.world.entity.mob.breedable.tamable.Wolf.Angry": "Whether it is angry.",
   "mcdoc.java.server.world.entity.mob.breedable.tamable.Wolf.CollarColor": "Collar color, present for wild wolfs.",
   "mcdoc.java.server.world.entity.mob.breedable.turtle.Turtle.HasEgg": "Whether it has an egg.",
   "mcdoc.java.server.world.entity.mob.breedable.turtle.Turtle.TravelPosX": "X coordinate of its travel target.",
   "mcdoc.java.server.world.entity.mob.breedable.turtle.Turtle.TravelPosY": "Y coordinate of its travel target.",
   "mcdoc.java.server.world.entity.mob.breedable.turtle.Turtle.TravelPosZ": "Z coordinate of its travel target.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.VillagerBase.Inventory": "Slots from 0 to 7.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.VillagerBase.Offers": "Trade offers it has.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.memory_module.__dispatch.golem_detected_recently": "Detected an iron golem recently.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.memory_module.__dispatch.home": "Location of home.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.memory_module.__dispatch.job_site": "Location of job site.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.memory_module.__dispatch.last_slept": "Gametick when it last slept.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.memory_module.__dispatch.last_woken": "Gametick when it last woke up.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.memory_module.__dispatch.last_worked_at_poi": "Gametick when it last worked.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.memory_module.__dispatch.meeting_point": "Location of meeting point.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.memory_module.__dispatch.potential_job_site": "Location of a potential job site.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.Villager.Gossips": "Gossips it has heard.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.Villager.LastRestock": "Tick of the last time it has restocked.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.Villager.LastGossipDecay": "Tick of the last time its gossips have decreased in strength.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.Villager.RestocksToday": "Times it has restocked in the past ten minutes.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.Villager.Xp": "XP it has, increases with trading.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.VillagerData.level": "Used for trading and badge rendering.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.Gossip.TargetMost": "Upper bits of the gossip target's UUID.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.Gossip.TargetLeast": "Lower bits of the gossip target's UUID.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.Offers.Recipes": "Trades it has to offer.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.Recipe.rewardExp": "Whether it should reward experience for using this trade.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.Recipe.maxUses": "Maximum number of uses for this trade before it has to restock.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.Recipe.uses": "Times this trade has been used since it last restocked.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.Recipe.buy": "First item it buys.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.Recipe.buyB": "Second item it buys.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.Recipe.sell": "Item it sells.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.Recipe.xp": "XP it gains from the trade.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.Recipe.priceMultiplier": "Multiplier on the demand price adjuster.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.Recipe.specialPrice": "Modifier added to the original price of the first cost item.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.Recipe.demand": "Price adjuster of the first cost item based on demand.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.WanderingTrader.DespawnDelay": "Ticks until it despawns.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.WanderingTrader.WanderTarget": "Where it is heading to.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.WanderingTrader.wander_target": "Where it is heading to."
}