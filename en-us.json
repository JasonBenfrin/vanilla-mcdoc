{
   "mcdoc.java.assets.atlas.divisor_x": "If set to the resource width, regions will use pixel coordinates.",
   "mcdoc.java.assets.atlas.divisor_y": "If set to the resource height, regions will use pixel coordinates.",
   "mcdoc.java.assets.block_definition.when": "One condition or an array where at least one condition must apply.",
   "mcdoc.java.assets.block_definition.uvlock": "If set to `true`, the textures are not rotated with the block.",
   "mcdoc.java.assets.credits.section": "Company segment.",
   "mcdoc.java.assets.credits.names": "People with the title.",
   "mcdoc.java.assets.font.hex_file": "ZIP archive containing one or more *.hex files (files in archive with different extensions are ignored).",
   "mcdoc.java.assets.font.from": "Minimum in codepoint range (inclusive).",
   "mcdoc.java.assets.font.to": "Maximum in codepoint range (inclusive).",
   "mcdoc.java.assets.font.left": "Position of left-most column of the glyph.",
   "mcdoc.java.assets.font.right": "Position of right-most column of the glyph.",
   "mcdoc.java.assets.font.dispatch": "Inclusion is performed after all fonts are loaded, so it will include all providers for a given font defined in all datapacks.",
   "mcdoc.java.assets.regional_compliancies.map_key": "Region code.",
   "mcdoc.java.assets.sounds.sounds": "The sound files this sound event uses. One sound is randomly selected to play when the event is triggered. Defaults to assumed path.",
   "mcdoc.java.assets.sounds.replace": "If true the sounds listed should replace the ones listed in the minecraft sounds.json for this sound event.\nFalse if the sounds listed should be added. If undefined. Defaults to false.",
   "mcdoc.java.assets.sounds.subtitle": "Translated as the subtitle when Show Subtitles is enabled. Section sign formatting codes are supported.",
   "mcdoc.java.assets.sounds.type": "Changes how `name` is interpreted. Defaults to `sound`.",
   "mcdoc.java.assets.sounds.volume": "Defaults to 1.0.",
   "mcdoc.java.assets.sounds.pitch": "Default is 1.0.",
   "mcdoc.java.assets.sounds.weight": "Chance that this sound is selected to play. Defaults to 1.",
   "mcdoc.java.assets.sounds.preload": "Whether the sound should be loaded when loading the pack instead of when the sound is played. Used by the underwater ambience. Defaults to false.",
   "mcdoc.java.assets.sounds.stream": "If true it will be streamed from its file. Sounds longer than a few seconds should enable this to avoid lag. Defaults to false.\nWhen false many instances of the sound can be ran at the same time. When true only allows 4 instances (of that type) can be played.",
   "mcdoc.java.assets.sounds.attenuation_distance": "Modify sound reduction rate based on distance. Defaults to 16.",
   "mcdoc.java.assets.sounds.File": "A file.",
   "mcdoc.java.assets.sounds.SoundEvent": "An already defined event.",
   "mcdoc.java.assets.texture_meta.interpolate": "If true, additional frames will be generated between frames with a frame time greater than 1 between them. Defaults to false.",
   "mcdoc.java.assets.texture_meta.width": "The width of the tile, as a direct ratio rather than in pixels. Can be used by resource packs to have frames that are not perfect squares.",
   "mcdoc.java.assets.texture_meta.height": "The height of the tile, as a direct ratio rather than in pixels. Can be used by resource packs to have frames that are not perfect squares.",
   "mcdoc.java.assets.texture_meta.frametime": "Sets the default time for each frame in increments of one game tick. Defaults to 1.",
   "mcdoc.java.assets.texture_meta.frames": "Defaults to displaying all the frames from top to bottom.",
   "mcdoc.java.assets.texture_meta.index": "A number corresponding to position of a frame from the top, with the top frame being 0.",
   "mcdoc.java.assets.texture_meta.time": "The time in ticks to show this frame, overriding `frametime` above.",
   "mcdoc.java.assets.texture_meta.villager": "Only available for villager textures.",
   "mcdoc.java.assets.texture_meta.hat": "Determines whether the villager's 'profession' hat layer should allow the 'type' hat layer to render or not. If this mcmeta is undefined the default is used.",
   "mcdoc.java.assets.texture_meta.texture": "Only available for colormaps.",
   "mcdoc.java.assets.texture_meta.blur": "Causes the texture to blur when viewed from close up. Defaults to false.",
   "mcdoc.java.assets.texture_meta.clamp": "Causes the texture to stretch instead of tiling in cases where it otherwise would, such as on the shadow. Defaults to false.",
   "mcdoc.java.assets.texture_meta.mipmaps": "Custom mipmap values for the texture.",
   "mcdoc.java.data.banner_pattern.asset_id": "Resolves to `assets/<namespace>/textures/entity/banner/<name>.png` & `assets/<namespace>/textures/entity/shield/<name>.png`.",
   "mcdoc.java.data.banner_pattern.translation_key": "Translation key prefix per dye color (e.g. `block.minecraft.banner.custom.pattern` resolves to `block.minecraft.banner.custom.pattern.<dye color>`).",
   "mcdoc.java.data.damage_type.message_id": "The message id used for deaths caused by this damage type.\nIs combined with the result of `death_message_type` to form a translation key.",
   "mcdoc.java.data.damage_type.exhaustion": "Amount of hunger exhaustion to cause.",
   "mcdoc.java.data.damage_type.scaling": "Whether to scale damage with difficulty levels.",
   "mcdoc.java.data.damage_type.Never": "Always the same.",
   "mcdoc.java.data.damage_type.Always": "Always scale with difficulty",
   "mcdoc.java.data.damage_type.LivingNonPlayer": "Scale with difficulty if it was caused by a living entity who is not a player.",
   "mcdoc.java.data.damage_type.effects": "Controls how damage manifests when inflicted on players. Defaults to `hurt`.",
   "mcdoc.java.data.damage_type.Hurt": "Default hurt sound.",
   "mcdoc.java.data.damage_type.Thorns": "Thorns hurt sound.",
   "mcdoc.java.data.damage_type.Drowning": "Drowing sound.",
   "mcdoc.java.data.damage_type.Burning": "A single tick of burning hurt sound.",
   "mcdoc.java.data.damage_type.Poking": "Berry bush poke sound.",
   "mcdoc.java.data.damage_type.Freezing": "A single tick of freezing hurt sound.",
   "mcdoc.java.data.damage_type.death_message_type": "Controls if special death message variants are used. Defaults to `default`.",
   "mcdoc.java.data.damage_type.Default": "Resulting translation key of `death.attack.` + message_id.",
   "mcdoc.java.data.damage_type.FallVariants": "Resulting translation key of `death.attack.` + message_id.",
   "mcdoc.java.data.damage_type.IntentionalGameDesign": "Resulting translation key of `death.attack.` + message_id + `.link`.",
   "mcdoc.java.data.recipe.group": "Identifier to group multiple recipes in the recipe book.",
   "mcdoc.java.data.recipe.category": "Identifier for the category this goes in the recipe book.",
   "mcdoc.java.data.recipe.show_notification": "Determines if a notification is shown when unlocking this recipe. Defaults to true.",
   "mcdoc.java.data.recipe.base": "Ingredient specifying an item to be transformed. (eg. `{ \"tag\": \"minecraft:diamond_helmet\" }`)",
   "mcdoc.java.data.recipe.addition": "Material that will be used for transforming. (eg. `{ \"tag\": \"minecraft:netherite_ingot\" }`)",
   "mcdoc.java.data.recipe.template": "Template item that will be used for the item transformation.",
   "mcdoc.java.data.recipe.result": "Resulting transformed item.",
   "mcdoc.java.data.structure.DataVersion": "[Data version](https://minecraft.fandom.com/wiki/Data_version).",
   "mcdoc.java.data.structure.state": "Index of the block in the palette.",
   "mcdoc.java.data.structure.palettes": "Sets of different block states used in the structure, a random palette gets selected based on coordinates.",
   "mcdoc.java.data.trim.asset_name": "A string which will be used in the resource pack.",
   "mcdoc.java.data.trim.description": "A JSON text component name, allowing color, translations, etc. Displayed in the result item tooltip.",
   "mcdoc.java.data.trim.ingredient": "The item used in the smithing table for this material.",
   "mcdoc.java.data.trim.item_model_index": "Model override predicate float.",
   "mcdoc.java.data.trim.override_armor_materials": "Armor materials that should have a different color palette.",
   "mcdoc.java.data.trim.asset_id": "A resource location (In the resource pack) of the pattern that will be used as an overlay on the armor.",
   "mcdoc.java.data.trim.template_item": "The item used in the smithing table for this pattern.",
   "mcdoc.java.data.advancement.mod.display": "If present, advancement will be visible in the advancement tabs.",
   "mcdoc.java.data.advancement.mod.background": "Used for the advancement tab (root advancement only).",
   "mcdoc.java.data.advancement.mod.frame": "Controls the advancement tile frame. Defaults to `task`.",
   "mcdoc.java.data.advancement.mod.Task": "Normal border.",
   "mcdoc.java.data.advancement.mod.Challenge": "Fancy spiked border (used for the kill all mobs advancement).",
   "mcdoc.java.data.advancement.mod.Goal": "Rounded border (used for the full beacon advancement).",
   "mcdoc.java.data.advancement.mod.show_toast": "Whether to show the toast pop up after completing this advancement. Defaults to `true`.",
   "mcdoc.java.data.advancement.mod.announce_to_chat": "Whether to announce in the chat when this advancement has been completed. Defaults to `true`.",
   "mcdoc.java.data.advancement.mod.hidden": "Whether or not to hide this advancement and all its children from the advancement screen,\nuntil this advancement have been completed.\nHas no effect on root advancements themselves, but still affects all their children.\nDefaults to `false`.",
   "mcdoc.java.data.advancement.mod.parent": "If this field is absent, this advancement is a root advancement.\nCircular references cause a loading failure.",
   "mcdoc.java.data.advancement.mod.criteria": "If `requirements` is not defined, all defined criteria will be required.",
   "mcdoc.java.data.advancement.mod.trigger": "Many triggers can occur multiple times, however, the reward will only be provided multiple times if the advancement is first revoked, which is often done within the function reward.",
   "mcdoc.java.data.advancement.mod.requirements": "Contains all of the `criteria` keys.\nIf all criteria are required at once, this may be omitted.\nWith multiple criteria: this contains a list of lists with criteria (all criteria must be mentioned).\nIf all of the lists each have any criteria met, the advancement is complete (basically AND grouping of OR groups).",
   "mcdoc.java.data.advancement.mod.rewards": "Provided to the player when this advancement is obtained.",
   "mcdoc.java.data.advancement.mod.function": "Function to run as the player (not at). Function group tags are not allowed.",
   "mcdoc.java.data.advancement.mod.loot": "Loot tables to give.",
   "mcdoc.java.data.advancement.mod.recipes": "Recipes to unlock.",
   "mcdoc.java.data.advancement.mod.experience": "XP to add.",
   "mcdoc.java.data.advancement.predicate.stored_enchantments": "Checks the `StoredEnchantments` nbt tag (used by enchanted books).",
   "mcdoc.java.data.advancement.predicate.light": "Calculated using: `max(sky-darkening, block)`.",
   "mcdoc.java.data.advancement.predicate.smokey": "Whether the block is above (5 blocks or less) a campfire or soul campfire.",
   "mcdoc.java.data.advancement.predicate.level": "Experience/XP level.",
   "mcdoc.java.data.advancement.predicate.dealt": "Amount of incoming damage before damage reduction.",
   "mcdoc.java.data.advancement.predicate.taken": "Amount of incoming damage after damage reduction.",
   "mcdoc.java.data.advancement.predicate.blocked": "Whether the damage was successfully blocked.",
   "mcdoc.java.data.advancement.predicate.source_entity": "Source of the damage (eg: the skeleton that shot the arrow).",
   "mcdoc.java.data.advancement.predicate.tags": "Damage type group tags that the damage type is in.",
   "mcdoc.java.data.advancement.predicate.expected": "Whether the damage is expected to have or not have the tag for the predicate to match.",
   "mcdoc.java.data.advancement.trigger.num_bees_inside": "Number of bees that were inside the bee nest/beehive before it was broken.",
   "mcdoc.java.data.advancement.trigger.item": "Item that was purchased. `count` tag checks the item count from one trade, not the total amount traded for.",
   "mcdoc.java.data.advancement.trigger.dispatch": "Player caused a raid to start.",
   "mcdoc.java.data.advancement.trigger.level": "Tier of the updated beacon base.",
   "mcdoc.java.data.advancement.trigger.entity": "Entity that was pulled.",
   "mcdoc.java.data.advancement.trigger.rod": "Fishing rod used.",
   "mcdoc.java.data.advancement.trigger.empty": "Amount of empty slots.",
   "mcdoc.java.data.advancement.trigger.occupied": "Amount of occupied slots.",
   "mcdoc.java.data.advancement.trigger.full": "Amount of slots that are a full stack.",
   "mcdoc.java.data.advancement.trigger.delta": "Change in durability (negative numbers are used to indicate a decrease in durability).",
   "mcdoc.java.data.advancement.trigger.durability": "The resulting durability.",
   "mcdoc.java.data.advancement.trigger.unique_entity_types": "How many different types of entities were killed.",
   "mcdoc.java.data.advancement.trigger.start_position": "Where in the Overworld the player was when they travelled to the Nether.",
   "mcdoc.java.data.advancement.trigger.distance": "Horizontal distance between the player and the stronghold.",
   "mcdoc.java.data.advancement.trigger.entered": "Where in the Overworld the player was when they travelled to the Nether.",
   "mcdoc.java.data.advancement.trigger.exited": "Where in the Nether the player was when they travelled back to the Overworld.",
   "mcdoc.java.data.advancement.trigger.location": "Where the block was placed.",
   "mcdoc.java.data.loot.condition.dispatch": "Whether another predicate passes.",
   "mcdoc.java.data.loot.condition.looting_multiplier": "Looting adjustment to the base success rate. Formula is `chance + (looting_level * looting_multiplier)` .",
   "mcdoc.java.data.loot.condition.name": "A cyclic reference causes a parsing failure.",
   "mcdoc.java.data.loot.condition.chances": "Probabilities for each enchantment level",
   "mcdoc.java.data.loot.condition.value": "Check the current game tick.",
   "mcdoc.java.data.loot.condition.period": "Game tick supplied to `value` check gets modulo-divided by this.\nFor example, if set to 24000, `value` operates on a time period of days.",
   "mcdoc.java.data.loot.function.dispatch": "Changes the `Effects` tag (used by suspicious stew).",
   "mcdoc.java.data.loot.function.include": "If omitted, all components present are included",
   "mcdoc.java.data.loot.function.exclude": "Defaults to none.",
   "mcdoc.java.data.loot.function.Replace": "Replace any existing contents of the target.",
   "mcdoc.java.data.loot.function.Append": "Append to a list.",
   "mcdoc.java.data.loot.function.Merge": "Merge into a compound tag.",
   "mcdoc.java.data.loot.function.enchantments": "If omitted, all enchantments applicable to the item are possible",
   "mcdoc.java.data.loot.function.treasure": "Whether treasure enchantments are allowed on this item.",
   "mcdoc.java.data.loot.function.destination": "Generated structure to locate. Accepts any of the structure types used by the `/locate` command. Defaults to buried treasure.",
   "mcdoc.java.data.loot.function.decoration": "The icon used to mark the destination on the map. Accepts any of the map icon text IDs (case insensitive).\nIf `mansion` or `monument` is used, the color of the lines on the item texture changes to match the corresponding explorer map.",
   "mcdoc.java.data.loot.function.zoom": "Defaults to 2.",
   "mcdoc.java.data.loot.function.search_radius": "The size, in chunks, of the area to search for structures.\nThe area checked is square, not circular.\nRadius `0` causes only the current chunk to be searched, radius `1` causes the current chunk and eight adjacent chunks to be searched, and so on.\nDefaults to `50`.",
   "mcdoc.java.data.loot.function.skip_existing_chunks": "Whether to not search in chunks that have already been generated. Defaults to `true`.",
   "mcdoc.java.data.loot.function.entity": "Specifies the entity to act as the target `@s` in the JSON text component.",
   "mcdoc.java.data.loot.function.count": "If the number is fractional the result is rounded *after* the number was multiplied by the looting level.",
   "mcdoc.java.data.loot.function.replace": "Defaults to true.",
   "mcdoc.java.data.loot.function.slot": "If a list, one of the listed slots will be chosen randomly.",
   "mcdoc.java.data.loot.function.component": "Describes target component's items to modify.",
   "mcdoc.java.data.loot.function.modifier": "Applied to every item inside container.",
   "mcdoc.java.data.loot.function.damage": "In decimal percentage. What to add to the durability (negative to decrease it).",
   "mcdoc.java.data.loot.function.seed": "Defaults to a random seed.",
   "mcdoc.java.data.loot.function.target": "Which name component to set. Defaults to `custom_name`.",
   "mcdoc.java.data.loot.function.value": "Tag that describes the custom model an item will take.\nUsed by the `custom_model_data` model overrides predicate.\nHas certain restrictions due to float conversion.",
   "mcdoc.java.data.loot.function.flight_duration": "If omitted, the flight duration of the item is left untouched - or set to 0 if the component did not exist before.",
   "mcdoc.java.data.loot.function.shape": "If omitted, the original shape is kept (or `small_ball` is used if there was no component).",
   "mcdoc.java.data.loot.function.colors": "If omitted, the original colors are kept (or `[]` is used if there was no component).\nCalculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.",
   "mcdoc.java.data.loot.function.fade_colors": "If omitted, the original fade colors are kept (or `[]` is used if there was no component).\nCalculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.",
   "mcdoc.java.data.loot.function.trail": "If omitted, the original `has_trail` value is kept (or `false` is used if there was no component).",
   "mcdoc.java.data.loot.function.twinkle": "If omitted, the original `has_twinkle` value is kept (or `false` is used if there was no component).",
   "mcdoc.java.data.loot.function.title": "If omitted, the original title is kept (or an empty string is used if there was no component)",
   "mcdoc.java.data.loot.function.filtered": "Shown only to players with chat filter enabled, instead of `text`.",
   "mcdoc.java.data.loot.function.author": "If omitted, the original author is kept (or an empty string is used if there was no component)",
   "mcdoc.java.data.loot.function.generation": "If omitted, the original generation is kept (or 0 is used if there was no component)",
   "mcdoc.java.data.loot.function.offset": "Defaults to 0.",
   "mcdoc.java.data.loot.function.size": "Defaults to size of the list.",
   "mcdoc.java.data.loot.mod.dispatch": "Executes child entries until the first one that can't run due to conditions.",
   "mcdoc.java.data.worldgen.biome.depth": "Raises or lowers the terrain. Positive values are considered land and negative are oceans.",
   "mcdoc.java.data.worldgen.biome.scale": "Vertically stretches the terrain. Lower values produce flatter terrain.",
   "mcdoc.java.data.worldgen.biome.player_spawn_friendly": "If true, the world spawn will be preferred in this biome.",
   "mcdoc.java.data.worldgen.noise_settings.bedrock_roof_position": "Relative position of the bedrock roof starting at the world height. Higher numbers move the roof down.",
   "mcdoc.java.data.worldgen.noise_settings.disable_mob_generation": "If true, mobs will not spawn during generation.",
   "mcdoc.java.data.worldgen.noise_settings.min_y": "Minimum height where blocks start generating.",
   "mcdoc.java.data.worldgen.noise_settings.height": "The total height where blocks can generate. Max Y = Min Y + Height.",
   "mcdoc.java.data.worldgen.noise_settings.top_slide": "Adds or removes terrain at the top of the world. Does nothing when size is 0.",
   "mcdoc.java.data.worldgen.noise_settings.bottom_slide": "Adds or removes terrain at the bottom of the world. Does nothing when size is 0.",
   "mcdoc.java.data.worldgen.noise_settings.island_noise_override": "If true, terrain will be shaped like islands similar to the end.",
   "mcdoc.java.data.worldgen.noise_settings.target": "The target density. Positive values add terrain and negative values remove terrain.",
   "mcdoc.java.data.worldgen.noise_settings.size": "Defines a range of 'Size * Size vertical * 4' blocks where the existing density and target are interpolated.",
   "mcdoc.java.data.worldgen.noise_settings.offset": "Defines an range of 'Offset * Size vertical * 4' blocks where the density is set to the target.",
   "mcdoc.java.data.worldgen.structure.adapt_noise": "Whether to add extra terrain below the structure.",
   "mcdoc.java.data.worldgen.structure_set.spacing": "Average distance in chunks between two structures of this type.",
   "mcdoc.java.data.worldgen.structure_set.separation": "Minimum distance in chunks between two structures of this type.",
   "mcdoc.java.server.util.attribute.enum": "A modifier operation",
   "mcdoc.java.server.util.attribute.Additive": "aka. `add_value`. Adds all of the modifiers' amounts to the current value of the attribute.",
   "mcdoc.java.server.util.attribute.Multiplicative": "aka. `add_multiplied_base`. Multiplies the current value of the attribute by (1 + x),\nwhere x is the sum of the modifiers' amounts.",
   "mcdoc.java.server.util.attribute.Percentage": "aka. `add_multiplied_total`. For every modifier, multiplies the current value of the attribute by (1 + x),\nwhere x is the amount of the particular modifier.\nFunctions the same as Operation 1 if there is only a single modifier with operation 1 or 2.\nHowever, for multiple modifiers it will multiply the modifiers rather than adding them",
   "mcdoc.java.server.util.banner_pattern.BottomStripe": "Bottom Stripe (Base)",
   "mcdoc.java.server.util.banner_pattern.TopStripe": "Top Stripe (Chief)",
   "mcdoc.java.server.util.banner_pattern.LeftStripe": "Left Stripe (Pale dexter)",
   "mcdoc.java.server.util.banner_pattern.RightStripe": "Right Stripe (Pale sinister)",
   "mcdoc.java.server.util.banner_pattern.CenterStripeVertical": "Center Stripe (Vertical) (Pale)",
   "mcdoc.java.server.util.banner_pattern.MiddleStripeHorizontal": "Middle Stripe (Horizontal) (Fess)",
   "mcdoc.java.server.util.banner_pattern.DownRightStripe": "Down Right Stripe (Bend)",
   "mcdoc.java.server.util.banner_pattern.DownLeftStripe": "Down Left Stripe (Bend sinister)",
   "mcdoc.java.server.util.banner_pattern.SmallVerticalStripes": "Small (Vertical) Stripes (Paly)",
   "mcdoc.java.server.util.banner_pattern.DiagonalCross": "Diagonal Cross (Saltire)",
   "mcdoc.java.server.util.banner_pattern.SquareCross": "Square Cross (Cross)",
   "mcdoc.java.server.util.banner_pattern.LeftOfDiagonal": "Left of Diagonal (Per bend sinister)",
   "mcdoc.java.server.util.banner_pattern.RightOfUpsideDownDiagonal": "Right of upside-down Diagonal (Per bend)",
   "mcdoc.java.server.util.banner_pattern.LeftOfUpsideDownDiagonal": "Left of upside-down Diagonal (Per bend inverted)",
   "mcdoc.java.server.util.banner_pattern.RightOfDiagonal": "Right of Diagonal (Per bend sinister inverted)",
   "mcdoc.java.server.util.banner_pattern.VerticalHalfLeft": "Vertical Half (left) (Per pale)",
   "mcdoc.java.server.util.banner_pattern.VerticalHalfRight": "Vertical Half (right) (Per pale inverted)",
   "mcdoc.java.server.util.banner_pattern.HorizontalHalfTop": "Horizontal Half (top) (Per fess)",
   "mcdoc.java.server.util.banner_pattern.HorizontalHalfBottom": "Horizontal Half (bottom) (Per fess inverted)",
   "mcdoc.java.server.util.banner_pattern.BottomLeftCorner": "Bottom Left Corner (Base dexter canton)",
   "mcdoc.java.server.util.banner_pattern.BottomRightCorner": "Bottom Right Corner (Base sinister canton)",
   "mcdoc.java.server.util.banner_pattern.TopLeftCorner": "Top Left Corner (Chief dexter canton)",
   "mcdoc.java.server.util.banner_pattern.TopRightCorner": "Top Right Corner (Chief sinister canton)",
   "mcdoc.java.server.util.banner_pattern.BottomTriangle": "Bottom Triangle (Chevron)",
   "mcdoc.java.server.util.banner_pattern.TopTriangle": "Top Triangle (Inverted chevron)",
   "mcdoc.java.server.util.banner_pattern.BottomTriangleSawtooth": "Bottom Triangle Sawtooth (Base indented)",
   "mcdoc.java.server.util.banner_pattern.TopTriangleSawtooth": "Top Triangle Sawtooth (Chief indented)",
   "mcdoc.java.server.util.banner_pattern.MiddleCircle": "Middle Circle (Roundel)",
   "mcdoc.java.server.util.banner_pattern.MiddleRhombus": "Middle Rhombus (Lozenge)",
   "mcdoc.java.server.util.banner_pattern.Border": "Border (Bordure)",
   "mcdoc.java.server.util.banner_pattern.CurlyBorder": "Curly Border (Bordure indented)",
   "mcdoc.java.server.util.banner_pattern.Brick": "Brick (Field masoned)",
   "mcdoc.java.server.util.banner_pattern.Gradient": "Gradient (Gradient)",
   "mcdoc.java.server.util.banner_pattern.GradientUpsideDown": "Gradient upside-down (Base gradient)",
   "mcdoc.java.server.util.banner_pattern.Creeper": "Creeper (Creeper charge)",
   "mcdoc.java.server.util.banner_pattern.Skull": "Skull (Skull charge)",
   "mcdoc.java.server.util.banner_pattern.Flower": "Flower (Flower charge)",
   "mcdoc.java.server.util.banner_pattern.Mojang": "Mojang (Thing)",
   "mcdoc.java.server.util.banner_pattern.Globe": "Globe (Globe)",
   "mcdoc.java.server.util.banner_pattern.Piglin": "Piglin (Piglin)",
   "mcdoc.java.server.util.effect.struct": "A single potion effect",
   "mcdoc.java.server.util.effect.Duration": "Since 1.19.4 a value of `-1` is supported, representing an infinite duration.",
   "mcdoc.java.server.util.effect.Ambient": "Whether particles are semi-transparent. (like with a Beacon)",
   "mcdoc.java.server.util.effect.ShowParticles": "Whether particles should be shown.",
   "mcdoc.java.server.util.effect.ShowIcon": "Whether the effect icon should be shown.",
   "mcdoc.java.server.util.effect.HiddenEffect": "A lower amplifier effect of the same type.",
   "mcdoc.java.server.util.effect.amplifier": "Level I having value 0. Defaults to 0.",
   "mcdoc.java.server.util.effect.duration": "Duration of the effect in ticks.",
   "mcdoc.java.server.util.effect.ambient": "Whether the effect appears as a HUD icon in addition to in the inventory GUI (same behavior as beacons when `true`). Defaults to `false`.",
   "mcdoc.java.server.util.effect.show_particles": "Defaults to `true`.",
   "mcdoc.java.server.util.effect.show_icon": "Whether the effect appears in the inventory GUI. Defaults to `true`",
   "mcdoc.java.server.util.effect.hidden_effect": "A lower amplifier effect of the same type.",
   "mcdoc.java.server.util.effect.enum": "Numerical ids for effects",
   "mcdoc.java.server.util.game_event.range": "Range in blocks where vibrations can be detected",
   "mcdoc.java.server.util.game_event.event": "Event that is being received, if any",
   "mcdoc.java.server.util.game_event.event_distance": "Distance in blocks to the event that is being received",
   "mcdoc.java.server.util.game_event.event_delay": "Delay in ticks until the event reaches this listener",
   "mcdoc.java.server.util.game_event.distance": "Distance in blocks to the source",
   "mcdoc.java.server.util.game_event.pos": "Block position",
   "mcdoc.java.server.util.game_event.source": "UUID of the source entity of the event, if one exists",
   "mcdoc.java.server.util.game_event.projectile_owner": "UUID of the owner of the projectile, if one exists",
   "mcdoc.java.server.util.game_event.y_offset": "offset from the entity's feet to the source position",
   "mcdoc.java.server.util.global_pos.pos": "Coordinates of the location in [x, y, z]",
   "mcdoc.java.server.util.global_pos.dimension": "Dimension of the location",
   "mcdoc.java.server.util.inventory.count": "Number of items in the stack",
   "mcdoc.java.server.util.inventory.Count": "Number of items in the stack",
   "mcdoc.java.server.util.inventory.Slot": "Inventory slot the item is in",
   "mcdoc.java.server.util.memory.ttl": "Ticks before this memory is removed.",
   "mcdoc.java.server.util.memory.value": "Position",
   "mcdoc.java.server.util.particle.type": "Randomized color interpreted from three floats.\nCheat Sheet:\n- Floats between 0 and 1 are interpreted as a percentage of the original color. Weirdness begins when floats are outside of this range.\n- 0-20% of darkness is added per channel.\n- The final color is 0-40% darker. \n- `1e100000f` produces a solid channel with no randomization.\nSimplified internal behavior ([graph demo](https://www.desmos.com/calculator/drwzjaxgks)):\n```js\nfunction integerToByte(integer) {\n\tif (integer >= 0) {\n\t\t// Integer is positive\n\t\tif (integer <= 255) {\n\t\t\t// Integer already fits in a color channel\n\t\t\treturn integer\n\t\t}\n\t\t// Integer doesn't fit in color channel; modulo it\n\t\treturn integer % 256\n\t}\n\t// Integer is negative\n\treturn Math.abs((Math.floor(integer / 256) * 256)) + integer\n}\n\nvar baseShade = randomBetween(0.6, 1),\n\tr = integerToByte(Math.floor(color[0] * randomBetween(0.8, 1) * baseShade * 255)),\n\tg = integerToByte(Math.floor(color[1] * randomBetween(0.8, 1) * baseShade * 255)),\n\tb = integerToByte(Math.floor(color[2] * randomBetween(0.8, 1) * baseShade * 255))\n```",
   "mcdoc.java.server.util.particle.color": "Translucent color interpreted from four floats.\nCheat Sheet:\n- Floats between 0 and 1 are interpreted as a percentage of the original color.\n- Negative values & values above 1 simply loop the 0-255 range, since there isn't randomization there's no weirdness.\nSimplified internal behavior ([graph demo](https://www.desmos.com/calculator/drwzjaxgks)):\n```js\nfunction integerToByte(integer) {\n\tif (integer >= 0) {\n\t\t// Integer is positive\n\t\tif (integer <= 255) {\n\t\t\t// Integer already fits in a color channel\n\t\t\treturn integer\n\t\t}\n\t\t// Integer doesn't fit in color channel; modulo it\n\t\treturn integer % 256\n\t}\n\t// Integer is negative\n\treturn Math.abs((Math.floor(integer / 256) * 256)) + integer\n}\n```",
   "mcdoc.java.server.util.particle.roll": "Angle the particle texture is rotated to, measured in radians (π ~ 3.14 for 180° clockwise, negative for counter clockwise).",
   "mcdoc.java.server.util.particle.delay": "Ticks until the particle renders.",
   "mcdoc.java.server.util.particle.arrival_in_ticks": "Ticks in which to interpolate the particle's initial position to the destination.",
   "mcdoc.java.data.worldgen.dimension.biome_source.dispatch": "Biome distribution for the Overworld.",
   "mcdoc.java.data.worldgen.dimension.mod.ultrawarm": "If true, water will evaporate and sponges will dry.",
   "mcdoc.java.data.worldgen.dimension.mod.natural": "If true, portals will spawn zombified piglins. If false, compasses and clocks spin randomly.",
   "mcdoc.java.data.worldgen.dimension.mod.piglin_safe": "If false, piglins will shake and convert to zombified piglins.",
   "mcdoc.java.data.worldgen.dimension.mod.respawn_anchor_works": "If true, players can charge and use respawn anchors to set their spawn. If false, respawn anchors will blow up when used.",
   "mcdoc.java.data.worldgen.dimension.mod.bed_works": "If true, players can use beds to set their spawn and advance time. If false, beds will blow up when used.",
   "mcdoc.java.data.worldgen.dimension.mod.has_raids": "If true, players with the Bad Omen effect can cause a raid.",
   "mcdoc.java.data.worldgen.dimension.mod.has_skylight": "Affects the weather, lighting engine and respawning rules.",
   "mcdoc.java.data.worldgen.dimension.mod.has_ceiling": "Affects the weather, map items and respawning rules.",
   "mcdoc.java.data.worldgen.dimension.mod.fixed_time": "Setting this value will keep the sun in a fixed position.",
   "mcdoc.java.data.worldgen.dimension.mod.logical_height": "Portals can't spawn and chorus fruit can't teleport players above this height.",
   "mcdoc.java.data.worldgen.dimension.mod.effects": "Sky effects.",
   "mcdoc.java.data.worldgen.dimension.mod.infiniburn": "Block tag defining what blocks keep fire infinitely burning.",
   "mcdoc.java.data.worldgen.dimension.mod.min_y": "The minimum height in which blocks can exist.",
   "mcdoc.java.data.worldgen.dimension.mod.height": "The total height in which blocks can exist. Max Y = Min Y + Height.",
   "mcdoc.java.data.worldgen.feature.mod.max_stalagmite_stalactite_height_diff": "Max height difference between the stalagmite and stalactite.",
   "mcdoc.java.data.worldgen.feature.mod.max_empty_corners_allowed": "If more corners are exposed to air, feature placement is cancelled.",
   "mcdoc.java.data.worldgen.feature.mod.cannot_replace": "Blocks that will not be replaced by the geode.",
   "mcdoc.java.data.worldgen.feature.mod.invalid_blocks": "When encountering an invalid block, feature placement is cancelled.",
   "mcdoc.java.data.worldgen.feature.mod.discard_chance_on_air_exposure": "Chance that feature placement will be discarded if the ore is exposed to air blocks.",
   "mcdoc.java.server.world.block.banner.CustomName": "Shows up on map markers",
   "mcdoc.java.server.world.block.beacon.Lock": "Name of the item that a player has to be holding to open this beacon.\nSource is flattened to plain text and has formatting removed before the check.",
   "mcdoc.java.server.world.block.beacon.Levels": "Number of levels from the pyramid.",
   "mcdoc.java.server.world.block.beacon.Primary": "Potion effect.",
   "mcdoc.java.server.world.block.beacon.Secondary": "Potion effect.",
   "mcdoc.java.server.world.block.brewing_stand.Lock": "Name of the item that a player has to be holding to open this brewing stand.\nSource is flattened to plain text and has formatting removed before the check.",
   "mcdoc.java.server.world.block.brewing_stand.Items": "* 0: left brewing slot\n* 1: middle brewing slot\n* 2: right brewing slot\n* 3: ingredient slot\n* 4: fuel slot",
   "mcdoc.java.server.world.block.brewing_stand.BrewTime": "Number of ticks until the brewing is complete.",
   "mcdoc.java.server.world.block.brewing_stand.Fuel": "Amount of fuel the brewing stand has left.",
   "mcdoc.java.server.world.block.campfire.CookingTimes": "Ticks each item has been cooking.\nIndex is according to item slot.",
   "mcdoc.java.server.world.block.campfire.CookingTotalTimes": "Ticks each item still has to cook.\nIndex is according to item slot.",
   "mcdoc.java.server.world.block.chiseled_bookshelf.Items": "Slots from 0 to 5.",
   "mcdoc.java.server.world.block.command_block.SuccessCount": "Success count of the last command.",
   "mcdoc.java.server.world.block.command_block.LastOutput": "Output of the last command.",
   "mcdoc.java.server.world.block.command_block.TrackOutput": "Whether to record command output.",
   "mcdoc.java.server.world.block.command_block.powered": "Whether it is powered by redstone.",
   "mcdoc.java.server.world.block.command_block.auto": "Whether it is automatically powered.",
   "mcdoc.java.server.world.block.command_block.conditionMet": "Whether the previous command block was successful when the command block was executed.\nThis is always true for non-conditional command blocks.",
   "mcdoc.java.server.world.block.command_block.UpdateLastExecution": "Whether to record the tick of the latest command execution.",
   "mcdoc.java.server.world.block.command_block.LastExecution": "Tick of the latest command execution.",
   "mcdoc.java.server.world.block.comparator.OutputSignal": "Strength of the redstone output.",
   "mcdoc.java.server.world.block.conduit.M": "Upper bits of the target's UUID",
   "mcdoc.java.server.world.block.conduit.L": "Lower bits of the target's UUID",
   "mcdoc.java.server.world.block.container.Lock": "Name of the item that a player has to be holding to open this container.\nSource is flattened to plain text and has formatting removed before the check.",
   "mcdoc.java.server.world.block.container.LootTable": "Loot table that will populate this container.",
   "mcdoc.java.server.world.block.container.LootTableSeed": "Seed of the loot table.",
   "mcdoc.java.server.world.block.container.Items": "Slots from 0 to 4.",
   "mcdoc.java.server.world.block.container.TransferCooldown": "Ticks until an item can be transferred.",
   "mcdoc.java.server.world.block.decorated_pot.sherds": "Item ID of what was used for each side of the pot.",
   "mcdoc.java.server.world.block.decorated_pot.LootTable": "Loot table that will populate this container.",
   "mcdoc.java.server.world.block.decorated_pot.LootTableSeed": "Seed of the loot table.",
   "mcdoc.java.server.world.block.end_gateway.Age": "In game ticks.",
   "mcdoc.java.server.world.block.end_gateway.ExactTeleport": "Whether to teleport to the exact location.",
   "mcdoc.java.server.world.block.end_gateway.ExitPortal": "Coordinates of where to teleport entities to.",
   "mcdoc.java.server.world.block.end_gateway.exit_portal": "Coordinates of where to teleport entities to.",
   "mcdoc.java.server.world.block.furnace.Lock": "Name of the item that a player has to be holding to open this furnace.\nSource is flattened to plain text and has formatting removed before the check.",
   "mcdoc.java.server.world.block.furnace.Items": "The items in this furnace, with slots:\n* 0: Item being smelted\n* 1: Fuel\n* 2: Output",
   "mcdoc.java.server.world.block.furnace.BurnTime": "Ticks until the fuel runs out.",
   "mcdoc.java.server.world.block.furnace.CookTime": "Ticks the item has been smelting for.",
   "mcdoc.java.server.world.block.furnace.CookTimeTotal": "Ticks the item will take to be smelted.",
   "mcdoc.java.server.world.block.head.Owner": "Owner of the skull.",
   "mcdoc.java.server.world.block.head.ExtraType": "Name of the owner, if exists will be converted to SkullOwner.",
   "mcdoc.java.server.world.block.head.Id": "Optional.",
   "mcdoc.java.server.world.block.head.Name": "If missing appears as a steve head.",
   "mcdoc.java.server.world.block.head.Value": "Base64 encoded JSON value of the texture index.",
   "mcdoc.java.server.world.block.jigsaw.target_pool": "Structure pool this will connect to.",
   "mcdoc.java.server.world.block.jigsaw.joint": "How the resultant structure can be transformed.",
   "mcdoc.java.server.world.block.jigsaw.pool": "Structure pool this will \"spawn\" in.",
   "mcdoc.java.server.world.block.jigsaw.name": "ID this will \"spawn\" in.",
   "mcdoc.java.server.world.block.jigsaw.target": "ID of the type of jigsaw this will be \"spawned\" from.",
   "mcdoc.java.server.world.block.jigsaw.final_state": "Final block state of the jigsaw.",
   "mcdoc.java.server.world.block.jigsaw.attachment_type": "ID of the type of jigsaw this connects to.",
   "mcdoc.java.server.world.block.jigsaw.Rollable": "The structure can be rotated",
   "mcdoc.java.server.world.block.jigsaw.Aligned": "The structure cannot be transformed",
   "mcdoc.java.server.world.block.lectern.Page": "Current page the book is on.",
   "mcdoc.java.server.world.block.mod.keepPacked": "Unknown\n0 for regular block entities",
   "mcdoc.java.server.world.block.moving_piston.blockState": "Moving block represented by the moving piston.",
   "mcdoc.java.server.world.block.moving_piston.facing": "The direction it is moving.",
   "mcdoc.java.server.world.block.moving_piston.progress": "How far it has moved.",
   "mcdoc.java.server.world.block.moving_piston.source": "Whether the moving piston is the piston head.",
   "mcdoc.java.server.world.block.sculk_sensor.listener": "Vibration listener",
   "mcdoc.java.server.world.block.sign.is_waxed": "Whether the sign can no longer be edited. If a sign is editable",
   "mcdoc.java.server.world.block.sign.Color": "Color the text has been dyed.",
   "mcdoc.java.server.world.block.sign.Text1": "First line of text.",
   "mcdoc.java.server.world.block.sign.Text2": "Second line of text.",
   "mcdoc.java.server.world.block.sign.Text3": "Third line of text.",
   "mcdoc.java.server.world.block.sign.Text4": "Fourth line of text.",
   "mcdoc.java.server.world.block.spawner.SpawnPotentials": "Entities that can be placed.",
   "mcdoc.java.server.world.block.spawner.SpawnData": "Data for the next mob to spawn.\nOverwritten by `SpawnPotentials`.",
   "mcdoc.java.server.world.block.spawner.SpawnCount": "Number of entities that will be placed.",
   "mcdoc.java.server.world.block.spawner.SpawnRange": "Range that the spawned entities will be placed.",
   "mcdoc.java.server.world.block.spawner.Delay": "Ticks until the next spawn.",
   "mcdoc.java.server.world.block.spawner.MinSpawnDelay": "Minimum random delay for the next spawn.",
   "mcdoc.java.server.world.block.spawner.MaxSpawnDelay": "Maximum random delay for the next spawn.",
   "mcdoc.java.server.world.block.spawner.MaxNearbyEntities": "Maximum number of entities nearby.",
   "mcdoc.java.server.world.block.spawner.RequiredPlayerRange": "Radius in blocks that a player has to be within to spawn entities.",
   "mcdoc.java.server.world.block.spawner.normal_config": "Spawning behavior when the player does not have the Bad Omen effect.",
   "mcdoc.java.server.world.block.spawner.ominous_config": "Spawning behavior when the player has the Bad Omen effect.",
   "mcdoc.java.server.world.block.spawner.loot_tables_to_eject": "Loot tables to use when summoning ominous item spawners.",
   "mcdoc.java.server.world.block.spawner.simultaneous_mobs": "Number of entities that will be placed.",
   "mcdoc.java.server.world.block.spawner.simultaneous_mobs_added_per_player": "Number of entities that will be added per player.",
   "mcdoc.java.server.world.block.spawner.ticks_between_spawn": "Ticks until the next spawn.",
   "mcdoc.java.server.world.block.spawner.spawn_potentials": "Entities that can be placed.",
   "mcdoc.java.server.world.block.spawner.Weight": "Weight for this entry to be chosen.",
   "mcdoc.java.server.world.block.spawner.weight": "Weight for this entry to be chosen.",
   "mcdoc.java.server.world.block.spawner.equipment": "Rolled items from the specified loot table will be equipped to the mob that spawns.",
   "mcdoc.java.server.world.block.spawner.loot_table": "Generates the equipment.",
   "mcdoc.java.server.world.block.spawner.slot_drop_chances": "Chance the mob will drop the equipment on death.",
   "mcdoc.java.server.world.block.spawner.block_light_limit": "Range of block light level required for the entity to spawn.",
   "mcdoc.java.server.world.block.spawner.sky_light_limit": "Range of sky light level required for the entity to spawn.",
   "mcdoc.java.server.world.block.structure_block.author": "Author of the structure.",
   "mcdoc.java.server.world.block.structure_block.metadata": "Custom data for the structure. Stores the data id for \"DATA\" mode.",
   "mcdoc.java.server.world.block.structure_block.posX": "Relative offset.",
   "mcdoc.java.server.world.block.structure_block.posY": "Relative offset.",
   "mcdoc.java.server.world.block.structure_block.posZ": "Relative offset.",
   "mcdoc.java.server.world.block.structure_block.showboundingbox": "Whether to show the bounding box.",
   "mcdoc.java.server.world.block.structure_block.powered": "Whether it has been powered by redstone.",
   "mcdoc.java.server.world.block.structure_block.integrity": "Chance for each block to stay.",
   "mcdoc.java.server.world.block.structure_block.seed": "Seed for the integrity random.",
   "mcdoc.java.server.world.block.structure_block.showair": "Whether to show invisible blocks inside the bounding box.",
   "mcdoc.java.server.world.block.vault.state_updating_resumes_at": "Ticks until the loot table is ran again to update the display item.",
   "mcdoc.java.server.world.block.vault.rewarded_players": "When a player is in this list they can no longer open the vault, but other players can.",
   "mcdoc.java.server.world.block.vault.items_to_eject": "Items that are being ejected from the vault when it is opened. As each item is ejected, it is removed from this list, before ejection, it is previewed as the `display_item`.",
   "mcdoc.java.server.world.block.vault.total_ejections_needed": "Number of items that the loot table started off the opening with, does not change while items are ejected.",
   "mcdoc.java.server.world.block.vault.key_item": "Item required to open the vault.",
   "mcdoc.java.server.world.block.vault.loot_table": "Defaults to \"minecraft:chests/trial_chambers/reward\".",
   "mcdoc.java.server.world.block.vault.shared_data": "When a player is in range of the vault, the same display item will be shown to all players.\nThis is also used for the items that are being ejected from the vault.",
   "mcdoc.java.server.world.block.vault.display_item": "Item that is displayed to players when they are in range of the vault.",
   "mcdoc.java.server.world.entity.area_effect_cloud.Age": "Number of ticks it has existed.\nControls when it will despawn; when greater than `Duration + WaitTime`.",
   "mcdoc.java.server.world.entity.area_effect_cloud.Color": "Color of the particles.\ncalculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive",
   "mcdoc.java.server.world.entity.area_effect_cloud.Duration": "Maximum number of ticks until it will disappear after `WaitTime` is done",
   "mcdoc.java.server.world.entity.area_effect_cloud.ReapplicationDelay": "Number of ticks until the effects are reapplied.",
   "mcdoc.java.server.world.entity.area_effect_cloud.WaitTime": "Number of ticks until it appears.",
   "mcdoc.java.server.world.entity.area_effect_cloud.DurationOnUse": "Amount the duration changes when it is active.",
   "mcdoc.java.server.world.entity.area_effect_cloud.OwnerUUIDMost": "Upper bits of the owner's UUID.",
   "mcdoc.java.server.world.entity.area_effect_cloud.OwnerUUIDLeast": "Lower bits of the owner's UUID.",
   "mcdoc.java.server.world.entity.area_effect_cloud.Radius": "Radius of the particles & effect applications.",
   "mcdoc.java.server.world.entity.area_effect_cloud.RadiusOnUse": "Change in the radius when it is used.",
   "mcdoc.java.server.world.entity.area_effect_cloud.RadiusPerTick": "Change in the radius per tick.",
   "mcdoc.java.server.world.entity.area_effect_cloud.Particle": "Particle the area effect cloud displays.",
   "mcdoc.java.server.world.entity.area_effect_cloud.Potion": "Default potion effect.",
   "mcdoc.java.server.world.entity.area_effect_cloud.Effects": "Potion effects that get applied on use.",
   "mcdoc.java.server.world.entity.boat.Type": "Wood type of this boat",
   "mcdoc.java.server.world.entity.boat.LootTable": "Loot table that will populate this chest boat.",
   "mcdoc.java.server.world.entity.boat.LootTableSeed": "Seed of the loot table.",
   "mcdoc.java.server.world.entity.boat.Items": "Slots from 0 to 26.",
   "mcdoc.java.server.world.entity.end_crystal.ShowBottom": "Whether to show the base of the end crystal.",
   "mcdoc.java.server.world.entity.end_crystal.BeamTarget": "Coordinates that the beam is pointing to",
   "mcdoc.java.server.world.entity.end_crystal.beam_target": "Coordinates that the beam is pointing to",
   "mcdoc.java.server.world.entity.evoker_fangs.Warmup": "Ticks until the fangs pop out of the ground.",
   "mcdoc.java.server.world.entity.evoker_fangs.OwnerUUIDMost": "Upper bits of the owner's UUID.",
   "mcdoc.java.server.world.entity.evoker_fangs.OwnerUUIDLeast": "Lower bits of the owner's UUID.",
   "mcdoc.java.server.world.entity.experience_orb.Age": "Ticks that it has existed.",
   "mcdoc.java.server.world.entity.experience_orb.Value": "Amount of experience it will give.",
   "mcdoc.java.server.world.entity.experience_orb.Count": "Remaining number of times that the orb can be picked up.\nWhen the orb is picked up, the value decreases by 1.\nWhen multiple orbs are merged, their values are added up to result orb.\nWhen the value reaches 0, the orb is depleted.",
   "mcdoc.java.server.world.entity.eye_of_ender.Item": "Item to render as",
   "mcdoc.java.server.world.entity.falling_block.TileEntityData": "NBT data for the placed block.",
   "mcdoc.java.server.world.entity.falling_block.BlockState": "Block state for the placed block.",
   "mcdoc.java.server.world.entity.falling_block.Time": "Ticks it has existed.",
   "mcdoc.java.server.world.entity.falling_block.DropItem": "Whether it should drop as a block when destroyed.",
   "mcdoc.java.server.world.entity.falling_block.HurtEntities": "Whether this it should hurt entities.",
   "mcdoc.java.server.world.entity.falling_block.FallHurtMax": "Maximum damage it should deal.",
   "mcdoc.java.server.world.entity.falling_block.FallHurtAmount": "Damage multiplier.",
   "mcdoc.java.server.world.entity.falling_block.CancelDrop": "Whether the block should be destroyed instead of placed after landing on a solid block.\nWhen `true`, the block is not dropped as an item, even if the DropItem tag is set to `true`.\nHowever, if the entity is deleted due to its Time value being too high, this tag is ignored and an item is dropped depending on the `DropItem` tag.\nDefaults to `1` for falling suspicious sand and suspicious gravel, and `0` for the other vanilla falling blocks and any summoned falling block.",
   "mcdoc.java.server.world.entity.firework_rocket.Life": "Ticks it has existed.",
   "mcdoc.java.server.world.entity.firework_rocket.LifeTime": "Ticks it will exist.",
   "mcdoc.java.server.world.entity.firework_rocket.ShotAtAngle": "Whether it should move at an angle.",
   "mcdoc.java.server.world.entity.interaction.width": "Cube hitbox width centered on the entity. Negative values are effectively `| x |`.",
   "mcdoc.java.server.world.entity.interaction.height": "Cube hitbox height stretching up from the entity position. Negative values stretch the hitbox down.",
   "mcdoc.java.server.world.entity.interaction.response": "Whether an action should trigger a response. Defaults to false.\nResponse:\nAttack - When true, the default attack sound is played.\nInteraction - When true, the player's arm swings.",
   "mcdoc.java.server.world.entity.interaction.attack": "Record of last attack (left click) event, can be updated every tick (no invulnerability frames).",
   "mcdoc.java.server.world.entity.interaction.interaction": "Record of last interaction (use; right click) event, can be updated every tick, if the player is holding the key it updates every 3 ticks.",
   "mcdoc.java.server.world.entity.interaction.timestamp": "Game tick of when the event occured.",
   "mcdoc.java.server.world.entity.item.Age": "Ticks it has existed.",
   "mcdoc.java.server.world.entity.item.PickupDelay": "Ticks until an entity can pick up this item.",
   "mcdoc.java.server.world.entity.item.Owner": "Only this entity can pick up the item.",
   "mcdoc.java.server.world.entity.item.Thrower": "Player who threw the item. Can be set and/or changed to any entity.",
   "mcdoc.java.server.world.entity.item.L": "Lower bits of the target player's UUID",
   "mcdoc.java.server.world.entity.item.M": "Upper bits of the target player's UUID",
   "mcdoc.java.server.world.entity.item_frame.Facing": "Direction it is facing.",
   "mcdoc.java.server.world.entity.item_frame.ItemDropChance": "Chance the item has to drop.",
   "mcdoc.java.server.world.entity.item_frame.ItemRotation": "Rotation of the item.",
   "mcdoc.java.server.world.entity.item_frame.Invisible": "Whether the item frame should be invisible.\nThe item inside the frame is not effected.",
   "mcdoc.java.server.world.entity.item_frame.Fixed": "Whether the item frame should not be able to be broken and should disallow the item to be moved.",
   "mcdoc.java.server.world.entity.marker.data": "Any stored data",
   "mcdoc.java.server.world.entity.minecart.CustomDisplayTile": "Whether to display a custom block.",
   "mcdoc.java.server.world.entity.minecart.DisplayState": "Custom block to display.\nOnly has effects when `CustomDisplayTile` is true.",
   "mcdoc.java.server.world.entity.minecart.DisplayOffset": "Vertical offset of the custom block display.",
   "mcdoc.java.server.world.entity.minecart.LootTable": "Loot table that will populate this chest minecart.",
   "mcdoc.java.server.world.entity.minecart.LootTableSeed": "Seed of the loot table.",
   "mcdoc.java.server.world.entity.minecart.Items": "Slots from 0 to 4.",
   "mcdoc.java.server.world.entity.minecart.SuccessCount": "Success count of the last command.",
   "mcdoc.java.server.world.entity.minecart.LastOutput": "Output of the last command.",
   "mcdoc.java.server.world.entity.minecart.TrackOutput": "Whether to record command output.",
   "mcdoc.java.server.world.entity.minecart.PushX": "Acceleration in x axis.",
   "mcdoc.java.server.world.entity.minecart.PushZ": "Acceleration in z axis.",
   "mcdoc.java.server.world.entity.minecart.Fuel": "Ticks until the fuel runs out.",
   "mcdoc.java.server.world.entity.minecart.TransferCooldown": "Ticks until an item can be transferred.",
   "mcdoc.java.server.world.entity.minecart.Enabled": "Whether it should pick up items.",
   "mcdoc.java.server.world.entity.minecart.SpawnPotentials": "List of potential entities to place next.",
   "mcdoc.java.server.world.entity.minecart.SpawnData": "Data for the next mob to place.\nWill be overwritten by `SpawnPotentials`.",
   "mcdoc.java.server.world.entity.minecart.SpawnCount": "Number of entities that will be placed.",
   "mcdoc.java.server.world.entity.minecart.SpawnRange": "Range that the spawned entities will be placed in.",
   "mcdoc.java.server.world.entity.minecart.Delay": "Ticks until the next spawn.",
   "mcdoc.java.server.world.entity.minecart.MinSpawnDelay": "Minimum random delay for the next spawn.",
   "mcdoc.java.server.world.entity.minecart.MaxSpawnDelay": "Maximum random delay for the next spawn.",
   "mcdoc.java.server.world.entity.minecart.MaxNearbyEntities": "Maximum number of entities nearby.",
   "mcdoc.java.server.world.entity.minecart.RequiredPlayerRange": "Radius in blocks that a player has to be within to spawn entities.",
   "mcdoc.java.server.world.entity.minecart.TNTFuse": "Ticks until it explodes.",
   "mcdoc.java.server.world.entity.mod.struct": "Base NBT for all entities,",
   "mcdoc.java.server.world.entity.mod.Rotation": "Rotation in [y-rotation, x-rotation]",
   "mcdoc.java.server.world.entity.mod.FallDistance": "How far the entity has fallen.",
   "mcdoc.java.server.world.entity.mod.Fire": "Ticks of fire left, or if negative, ticks until the entity starts to burn.",
   "mcdoc.java.server.world.entity.mod.Air": "Ticks of air left.",
   "mcdoc.java.server.world.entity.mod.HasVisualFire": "Whether the entity has visual fire.",
   "mcdoc.java.server.world.entity.mod.OnGround": "Whether the entity is on the ground.",
   "mcdoc.java.server.world.entity.mod.NoGravity": "Whether the entity should be effected by gravity.",
   "mcdoc.java.server.world.entity.mod.Invulnerable": "Whether the entity should take damage.",
   "mcdoc.java.server.world.entity.mod.PortalCooldown": "How long until the entity can go through a nether portal.",
   "mcdoc.java.server.world.entity.mod.UUIDMost": "Upper bits of the entity's UUID.",
   "mcdoc.java.server.world.entity.mod.UUIDLeast": "Lower bits of the entity's UUID.",
   "mcdoc.java.server.world.entity.mod.CustomNameVisible": "Whether the custom name should always be visible.",
   "mcdoc.java.server.world.entity.mod.Silent": "Whether the entity should make any sound.",
   "mcdoc.java.server.world.entity.mod.Passengers": "Passengers on the entity.",
   "mcdoc.java.server.world.entity.mod.Glowing": "Whether the entity should glow.",
   "mcdoc.java.server.world.entity.mod.Tags": "Labelling tags on the entity.",
   "mcdoc.java.server.world.entity.mod.TicksFrozen": "Ticks that this entity has been freezing. Although this tag is defined for all entities,\nit is actually only used by mobs that are not in the `freeze_immune_entity_types` entity type tag.\nThis increases by one every tick the entity is in powdered snow, and decreases by two when it's out of it.",
   "mcdoc.java.server.world.entity.painting.Facing": "Direction it is facing.",
   "mcdoc.java.server.world.entity.painting.Motive": "Type of painting.",
   "mcdoc.java.server.world.entity.painting.variant": "Type of painting.",
   "mcdoc.java.server.world.entity.tnt.Fuse": "Ticks until it explodes.",
   "mcdoc.java.server.world.entity.tnt.fuse": "Ticks until it explodes.",
   "mcdoc.java.server.world.item.book.filtered": "Shown only to players with chat filter enabled, instead of `text`.",
   "mcdoc.java.server.world.item.book.generation": "Generation of the book.",
   "mcdoc.java.server.world.item.book.resolved": "Whether the dynamic content on the pages has been resolved.",
   "mcdoc.java.server.world.item.book.dispatch": "A writable book",
   "mcdoc.java.server.world.item.book.pages": "Pages of the book as JSON text components.",
   "mcdoc.java.server.world.item.compass.target": "Location of the lodestone. Optional. If not set, the compass will spin randomly.",
   "mcdoc.java.server.world.item.compass.pos": "Coordinates.",
   "mcdoc.java.server.world.item.compass.tracked": "When `true`, the component is removed when the lodestone is broken. When `false`, the component is kept. Defaults to true.",
   "mcdoc.java.server.world.item.compass.LodestoneTracked": "Whether the compass should be linked to a lodestone.\nWhen true, the compass will reset if the lodestone at the position is removed.",
   "mcdoc.java.server.world.item.crossbow.dispatch": "A crossbow",
   "mcdoc.java.server.world.item.crossbow.map_key": "If set, this projectile item can't be picked up by a player when fired, except in creative mode. Can only be used within charged_projectiles components.",
   "mcdoc.java.server.world.item.crossbow.ChargedProjectiles": "Projectiles that are loaded.",
   "mcdoc.java.server.world.item.crossbow.Charged": "Whether the crossbow is charged.",
   "mcdoc.java.server.world.item.firework.colors": "Colors of the initial particles of the explosion, randomly selected from.\nCalculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.",
   "mcdoc.java.server.world.item.firework.fade_colors": "Colors of the fading particles of the explosion",
   "mcdoc.java.server.world.item.firework.has_trail": "Added to a firework star via Diamond.",
   "mcdoc.java.server.world.item.firework.has_twinkle": "Added to a firework star via Glowstone Dust.",
   "mcdoc.java.server.world.item.firework.map_key": "If set, this projectile item can't be picked up by a player when fired, except in creative mode. Can only be used within charged_projectiles components.",
   "mcdoc.java.server.world.item.firework.Flight": "Duration of flight.",
   "mcdoc.java.server.world.item.firework.Flicker": "Whether the explosion should flicker.",
   "mcdoc.java.server.world.item.firework.Trail": "Whether the explosion should have a trail.",
   "mcdoc.java.server.world.item.firework.Colors": "Colors of the explosion.\nCalculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.",
   "mcdoc.java.server.world.item.firework.FadeColors": "Colors of the explosion fade.\nCalculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.",
   "mcdoc.java.server.world.item.fish_bucket.HuntingCooldown": "Turns into the expiry time of the memory module `has_hunting_cooldown` for axolotls.",
   "mcdoc.java.server.world.item.fish_bucket.BucketVariantTag": "Turns into the `Variant` entity tag.",
   "mcdoc.java.server.world.item.head.name": "Usually `textures`.",
   "mcdoc.java.server.world.item.head.id": "UUID of the owner. Used to update the other tags when the chunk loads or the holder logs in, in case the owner's name has changed.",
   "mcdoc.java.server.world.item.head.properties": "Resolved textures hosted on the minecraft CDN.",
   "mcdoc.java.server.world.item.head.value": "Base64 encoded JSON value of the texture index.",
   "mcdoc.java.server.world.item.head.signature": "Verifies the hash of the resulting texture.",
   "mcdoc.java.server.world.item.head.map_key": "Sound event to be played by a note block if this player head is placed above it.",
   "mcdoc.java.server.world.item.head.Id": "Optional.",
   "mcdoc.java.server.world.item.head.Name": "Name of the owner, if missing appears as a steve head.",
   "mcdoc.java.server.world.item.head.Value": "Base64 encoded JSON value of the texture index.",
   "mcdoc.java.server.world.item.leather_armor.rgb": "Color of the armor.\nCalculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.",
   "mcdoc.java.server.world.item.leather_armor.color": "Color of the armor.\nCalculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.",
   "mcdoc.java.server.world.item.map.map_key": "Map number, representing the shared state holding map contents and markers.",
   "mcdoc.java.server.world.item.map.map": "Map number, representing the shared state holding map contents and markers.",
   "mcdoc.java.server.world.item.map.map_scale_direction": "Amount to increase the current map scale by when crafting.",
   "mcdoc.java.server.world.item.map.map_to_lock": "Whether the map should be locked after being taken out of the cartography table.",
   "mcdoc.java.server.world.item.map.Decorations": "Decorations on the map.",
   "mcdoc.java.server.world.item.map.id": "An arbitrary unique string identifying the decoration.",
   "mcdoc.java.server.world.item.map.display": "Display for the item.",
   "mcdoc.java.server.world.item.map.MapColor": "Calculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.",
   "mcdoc.java.server.world.item.map.type": "Decoration type.",
   "mcdoc.java.server.world.item.map.x": "World x position.",
   "mcdoc.java.server.world.item.map.z": "World z position.",
   "mcdoc.java.server.world.item.map.rot": "Rotation of the decoration, measured in degrees clockwise.",
   "mcdoc.java.server.world.item.map.Player": "White pentagon.",
   "mcdoc.java.server.world.item.map.Frame": "Green pentagon.",
   "mcdoc.java.server.world.item.map.RedMarker": "Red pentagon.",
   "mcdoc.java.server.world.item.map.BlueMarker": "Blue pentagon.",
   "mcdoc.java.server.world.item.map.TargetX": "White x.",
   "mcdoc.java.server.world.item.map.TargetPoint": "Red triangle.",
   "mcdoc.java.server.world.item.map.PlayerOffMap": "Large white dot.",
   "mcdoc.java.server.world.item.map.PlayerOffLimits": "Small white dot.",
   "mcdoc.java.server.world.item.map.Mansion": "Woodland mansion.",
   "mcdoc.java.server.world.item.map.Monument": "Ocean monument.",
   "mcdoc.java.server.world.item.mod.probability": "Chance for the effect to be applied.",
   "mcdoc.java.server.world.item.mod.nutrition": "Food points/haunches restored when eaten (capped to 20.0).",
   "mcdoc.java.server.world.item.mod.saturation": "Exact value added to the player's saturation level, capped at whatever the [new] food points value is.",
   "mcdoc.java.server.world.item.mod.can_always_eat": "Whether the item can be eaten when the player's food points/haunches are full. Defaults to `false`",
   "mcdoc.java.server.world.item.mod.eat_seconds": "Seconds it takes to eat the item. Defaults to `1.6`",
   "mcdoc.java.server.world.item.mod.effects": "Applied when eaten.",
   "mcdoc.java.server.world.item.mod.Common": "White name, or aqua when enchanted.",
   "mcdoc.java.server.world.item.mod.Uncommon": "Yellow name, or aqua when enchanted.",
   "mcdoc.java.server.world.item.mod.Rare": "Aqua name, or light purple when enchanted.",
   "mcdoc.java.server.world.item.mod.Epic": "Light purple name.",
   "mcdoc.java.server.world.item.mod.speed": "Overrides the default mining speed.",
   "mcdoc.java.server.world.item.mod.correct_for_drops": "Overrides whether or not this tool is considered correct to mine at its most efficient speed, and to drop items if the block's loot table requires it.",
   "mcdoc.java.server.world.item.mod.rules": "Blocks that this tool has a special behavior with.",
   "mcdoc.java.server.world.item.mod.default_mining_speed": "Used if no rules override it. Defaults to 1.0.",
   "mcdoc.java.server.world.item.mod.damage_per_block": "Amount of durability to remove each time a block is broken with this tool. Must be a non-negative integer.",
   "mcdoc.java.server.world.item.mod.material": "Used by the `trim_type` model overrides predicate via the material `item_model_index` and armor rendering for the material's `asset_name` for the `armor_trims` atlas.",
   "mcdoc.java.server.world.item.mod.pattern": "Used by armor rendering for the pattern's `asset_id`.",
   "mcdoc.java.server.world.item.mod.map_key": "Trim to apply to the item & armor when worn.",
   "mcdoc.java.server.world.item.mod.Damage": "Damage that an item has. Only used for tools, armor, etc.",
   "mcdoc.java.server.world.item.mod.Unbreakable": "Whether the item should be unbreakable.\nOnly used for tools, armor, etc.",
   "mcdoc.java.server.world.item.mod.CanDestroy": "List of the block states that can be destroyed by this item when holding it in adventure mode.",
   "mcdoc.java.server.world.item.mod.CustomModelData": "Tag that describes the custom model an item will take.\nUsed by the `custom_model_data` model overrides predicate.\nHas certain restrictions due to float conversion.",
   "mcdoc.java.server.world.item.mod.Enchantments": "List of enchantments that are on the item.",
   "mcdoc.java.server.world.item.mod.RepairCost": "Number of experience levels to add to the base level cost when repairing, combining, or renaming this item with an anvil.",
   "mcdoc.java.server.world.item.mod.AttributeModifiers": "Applied to an entity that has equipped the item.",
   "mcdoc.java.server.world.item.mod.display": "Display settings.",
   "mcdoc.java.server.world.item.mod.HideFlags": "Bitfield for which flags to hide on an item.",
   "mcdoc.java.server.world.item.mod.Trim": "Trim to apply to the item & armor when worn.",
   "mcdoc.java.server.world.item.mod.id": "Which enchantment is being described.",
   "mcdoc.java.server.world.item.mod.struct": "Display settings of an item.",
   "mcdoc.java.server.world.item.mod.lvl": "Which level the enchantment is.",
   "mcdoc.java.server.world.item.mod.type": "A single attribute modifier.",
   "mcdoc.java.server.world.item.mod.slot": "Slot or slot type the item must be in for the modifier to take effect.",
   "mcdoc.java.server.world.item.mod.uuid": "Used when equipping and unequipping the item to identify which modifier to add or remove from the entity.",
   "mcdoc.java.server.world.item.mod.name": "Identifying name of the modifier, has no real effect.",
   "mcdoc.java.server.world.item.mod.amount": "Change in the attribute.",
   "mcdoc.java.server.world.item.mod.Name": "A JSON text component.",
   "mcdoc.java.server.world.item.mod.Slot": "Slot that the modifier is active in.",
   "mcdoc.java.server.world.item.mod.Amount": "Change in the attribute.",
   "mcdoc.java.server.world.item.mod.UUIDMost": "Upper bits of the modifier's UUID.",
   "mcdoc.java.server.world.item.mod.UUIDLeast": "Lower bits of the modifier's UUID.",
   "mcdoc.java.server.world.item.mod.Lore": "A list of JSON text components, each element being a lore line.",
   "mcdoc.java.server.world.item.ominous_bottle.map_key": "Bad Omen amplifier level +1 (value of `0` corresponds to `Bad Omen I`).",
   "mcdoc.java.server.world.item.potion.custom_color": "Calculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.",
   "mcdoc.java.server.world.item.potion.dispatch": "An item that has a potion effect",
   "mcdoc.java.server.world.item.potion.CustomPotionEffects": "List of the effects that will be applied with this item.",
   "mcdoc.java.server.world.item.potion.Potion": "Default potion effect",
   "mcdoc.java.server.world.item.potion.CustomPotionColor": "Calculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.",
   "mcdoc.java.server.world.item.shield.BlockEntityTag": "Banner Data.",
   "mcdoc.java.server.world.item.shield.Base": "Base color.",
   "mcdoc.java.server.world.item.shield.Color": "Color of the pattern.",
   "mcdoc.java.server.world.item.shield.Pattern": "Pattern id.",
   "mcdoc.java.server.world.item.spawn_item.EntityTag": "Data of the spawned entity.",
   "mcdoc.java.server.world.item.suspicious_stew.duration": "Duration of the effect in ticks. Defaults to `160`; 8 seconds.",
   "mcdoc.java.server.world.item.suspicious_stew.struct": "A suspicious stew effect.",
   "mcdoc.java.server.world.item.suspicious_stew.Effects": "Effects this stew will give.",
   "mcdoc.java.server.world.item.suspicious_stew.EffectDuration": "Duration in ticks.",
   "mcdoc.java.server.world.entity.display.mod.transformation": "Transformation applied to model (after normal entity orientation). Defaults to identity. Interpolated.\nSee [Misode's tool](https://misode.github.io/transformation/) or [Singular value decomposition](https://en.wikipedia.org/wiki/Singular_value_decomposition).",
   "mcdoc.java.server.world.entity.display.mod.struct": "Decomposed form (used for saving & ease of use).",
   "mcdoc.java.server.world.entity.display.mod.translation": "Translation in [x, y, z].",
   "mcdoc.java.server.world.entity.display.mod.left_rotation": "Using this rotation is enough for most transformations.",
   "mcdoc.java.server.world.entity.display.mod.right_rotation": "For more complex transformations.",
   "mcdoc.java.server.world.entity.display.mod.scale": "Scale in [x, y, z].",
   "mcdoc.java.server.world.entity.display.mod.shadow_radius": "Size of shadow. Defaults to 0 (no shadow). Interpolated.",
   "mcdoc.java.server.world.entity.display.mod.shadow_strength": "Strength of the shadow. Controls the opacity of the shadow as a function of distance to block below. Defaults to 1. Interpolated.",
   "mcdoc.java.server.world.entity.display.mod.start_interpolation": "Ticks after the next client tick to wait until starting the interpolation.\nInfo:\nAll interpolated properties are part of a single interpolation set.\nAny update to an interpolated property will cause all values of the interpolation set to be saved as \"current\".\n- Data command executions that do not change value of property (even if it's present in NBT) do not count as updates.\n- Updates are synchronized to clients at most once per tick, so multiple updates within command will still count as single update.\nPrevious current values are saved as \"previous\".\nIf interpolation is enabled, entity will transition between \"previous\" and \"current\" values over time.",
   "mcdoc.java.server.world.entity.display.mod.interpolation_duration": "Ticks the interpolation should take to complete.",
   "mcdoc.java.server.world.entity.display.mod.billboard": "Controls if model should pivot to face player when rendered. Defaults to `fixed`.",
   "mcdoc.java.server.world.entity.display.mod.Fixed": "No rotation.",
   "mcdoc.java.server.world.entity.display.mod.Vertical": "Pivot around vertical axis.",
   "mcdoc.java.server.world.entity.display.mod.Horizontal": "Pivot around horizontal axis.",
   "mcdoc.java.server.world.entity.display.mod.Center": "Pivot around both axes.",
   "mcdoc.java.server.world.entity.display.mod.brightness": "When defined, overrides light values used for rendering. Omitted by default (which means rendering uses values from entity position).",
   "mcdoc.java.server.world.entity.display.mod.sky": "Value of skylight.",
   "mcdoc.java.server.world.entity.display.mod.block": "Value of block light.",
   "mcdoc.java.server.world.entity.display.mod.view_range": "Maximum view range of this entity. Actual distance depends on client-side render distance and entity distance scaling. Default value 1.0 (roughly the same as fireball).",
   "mcdoc.java.server.world.entity.display.mod.width": "Describe width of culling bounding box.\nBounding box spans vertically y to y+height and horizontally width/2 in all directions from entity position.\nIf field is set to 0, culling is disabled. Defaults to 0.",
   "mcdoc.java.server.world.entity.display.mod.height": "Describe height of culling bounding box.\nBounding box spans vertically y to y+height and horizontally width/2 in all directions from entity position.\nIf field is set to 0, culling is disabled. Defaults to 0.",
   "mcdoc.java.server.world.entity.display.mod.glow_color_override": "Override glow border color. If field is set to 0, uses team color. Defaults to 0.\nCalculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.",
   "mcdoc.java.server.world.entity.display.mod.axis": "Local position of the axis in [x, y, z].",
   "mcdoc.java.server.world.entity.display.mod.angle": "Angle to rotate around axis in radians.",
   "mcdoc.java.server.world.entity.display.mod.block_state": "Block state to display.\nDoes display most block entities (eg. Chests, Beds, Furnaces, etc).\nDoes not display specially rendered block entities (eg. The bell in a bell block, an end gateway, the book on an enchantment table, a banner, a sign, etc).",
   "mcdoc.java.server.world.entity.display.mod.item": "Item stack to display.",
   "mcdoc.java.server.world.entity.display.mod.item_display": "Describes item model transform applied to item (as defined in `display` section in model JSON). Defaults to `fixed`.",
   "mcdoc.java.server.world.entity.display.text.text": "Text to display. Components are resolved with the executor set to the display entity and the position set to `0 0 0`.",
   "mcdoc.java.server.world.entity.display.text.line_width": "Line width in pixels used to split lines (note: new line can be also added with \\n characters). Defaults to 200.",
   "mcdoc.java.server.world.entity.display.text.text_opacity": "Opacity (alpha component) of rendered text. Defaults to 255. Interpolated.",
   "mcdoc.java.server.world.entity.display.text.background": "Color of background. Includes alpha channel. Defaults to 0x40000000. Interpolated.\nCalculated as `ALPHA << 24 | RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.",
   "mcdoc.java.server.world.entity.display.text.default_background": "If true, overrides `background` & rendering uses default text background color (same as in chat). Defaults to false.",
   "mcdoc.java.server.world.entity.display.text.shadow": "Should text be displayed with shadow. Defaults to false.",
   "mcdoc.java.server.world.entity.display.text.see_through": "Should text be visible through blocks. Defaults to false.",
   "mcdoc.java.server.world.entity.display.text.alignment": "How text should be aligned. Defaults to `center`.",
   "mcdoc.java.server.world.entity.mob.allay.CanDuplicate": "Whether the allay can duplicate. This is set to false when the allay duplicates.",
   "mcdoc.java.server.world.entity.mob.allay.DuplicationCooldown": "Ticks until `CanDuplicate` is set to true. This is set to 6000 game ticks (5 minutes) when the allay duplicates.",
   "mcdoc.java.server.world.entity.mob.allay.Inventory": "Items it has picked up. Note that the item given by the player is in\nthe allay's `HandItems[0]` tag, not here.",
   "mcdoc.java.server.world.entity.mob.allay.listener": "Vibration game event listener.",
   "mcdoc.java.server.world.entity.mob.armor_stand.ArmorItems": "[feet, legs, body, head].",
   "mcdoc.java.server.world.entity.mob.armor_stand.HandItems": "[right hand, left hand].",
   "mcdoc.java.server.world.entity.mob.armor_stand.Invisible": "Whether it should be invisible.",
   "mcdoc.java.server.world.entity.mob.armor_stand.Marker": "Whether it has no hitbox.",
   "mcdoc.java.server.world.entity.mob.armor_stand.NoBasePlate": "Whether it should have a no base plate.",
   "mcdoc.java.server.world.entity.mob.armor_stand.ShowArms": "Whether it should show its arms.",
   "mcdoc.java.server.world.entity.mob.armor_stand.Small": "Whether it is small.",
   "mcdoc.java.server.world.entity.mob.armor_stand.DisabledSlots": "A bitfield of the slots that cannot be used.",
   "mcdoc.java.server.world.entity.mob.armor_stand.Pose": "Body part rotations.",
   "mcdoc.java.server.world.entity.mob.bat.BatFlags": "Whether it is upside down.",
   "mcdoc.java.server.world.entity.mob.breeze.map_key": "Position the breeze is going to jump to.",
   "mcdoc.java.server.world.entity.mob.creeper.powered": "Whether it is being struck by lightning.",
   "mcdoc.java.server.world.entity.mob.creeper.ExplosionRadius": "Radius of the explosion.",
   "mcdoc.java.server.world.entity.mob.creeper.Fuse": "Ticks until it explodes.",
   "mcdoc.java.server.world.entity.mob.creeper.ignited": "Whether it was lit with flint and steel.",
   "mcdoc.java.server.world.entity.mob.dolphin.TreasurePosX": "X coordinate of the treasure it leads to.",
   "mcdoc.java.server.world.entity.mob.dolphin.TreasurePosY": "Y coordinate of the treasure it leads to.",
   "mcdoc.java.server.world.entity.mob.dolphin.TreasurePosZ": "Z coordinate of the treasure it leads to.",
   "mcdoc.java.server.world.entity.mob.dolphin.GotFish": "Whether it has gotten fish from a player.",
   "mcdoc.java.server.world.entity.mob.dolphin.CanFindTreasure": "Whether it will lead a player to treasure.",
   "mcdoc.java.server.world.entity.mob.ender_dragon.DragonPhase": "Fighting phase it is in.",
   "mcdoc.java.server.world.entity.mob.enderman.carriedBlockState": "Block it is carrying.",
   "mcdoc.java.server.world.entity.mob.endermite.Lifetime": "How long it has existed.",
   "mcdoc.java.server.world.entity.mob.endermite.PlayerSpawned": "Whether enderman should attack it.",
   "mcdoc.java.server.world.entity.mob.fish.FromBucket": "If it was released from a bucket.",
   "mcdoc.java.server.world.entity.mob.fish.PuffState": "How puffed it is.",
   "mcdoc.java.server.world.entity.mob.ghast.ExplosionPower": "Explosion radius of fireballs that are shot from it.",
   "mcdoc.java.server.world.entity.mob.glow_squid.DarkTicksRemaining": "Ticks that it will wait before glowing.",
   "mcdoc.java.server.world.entity.mob.iron_golem.PlayerCreated": "Whether a player created it.",
   "mcdoc.java.server.world.entity.mob.mod.AbsorptionAmount": "How much absorption health it has.",
   "mcdoc.java.server.world.entity.mob.mod.HurtTime": "Timer since it has been damaged. Counts down to zero.",
   "mcdoc.java.server.world.entity.mob.mod.HurtByTimestamp": "Ticks since it was last damaged, from its creation.",
   "mcdoc.java.server.world.entity.mob.mod.DeathTime": "Timer since it was marked as dead. Counts down to zero.",
   "mcdoc.java.server.world.entity.mob.mod.FallFlying": "Whether it will glide when it falls.",
   "mcdoc.java.server.world.entity.mob.mod.SleepingX": "X coordinate of where it is sleeping.",
   "mcdoc.java.server.world.entity.mob.mod.SleepingY": "Y coordinate of where it is sleeping.",
   "mcdoc.java.server.world.entity.mob.mod.SleepingZ": "Z coordinate of where it is sleeping.",
   "mcdoc.java.server.world.entity.mob.mod.Brain": "The mob's brain, empty.",
   "mcdoc.java.server.world.entity.mob.mod.map_key": "The unit value.",
   "mcdoc.java.server.world.entity.mob.mod.ActiveEffects": "Active potion effects",
   "mcdoc.java.server.world.entity.mob.mod.NoAI": "Whether it should have an AI.",
   "mcdoc.java.server.world.entity.mob.mod.Team": "Team to join when it is spawned.",
   "mcdoc.java.server.world.entity.mob.mod.struct": "A single attribute modifier",
   "mcdoc.java.server.world.entity.mob.mod.HandItems": "[main hand, offhand]",
   "mcdoc.java.server.world.entity.mob.mod.ArmorItems": "[feet, legs, body, head]",
   "mcdoc.java.server.world.entity.mob.mod.HandDropChances": "Chance to drop the items it is holding, in [main hand, offhand].",
   "mcdoc.java.server.world.entity.mob.mod.ArmorDropChances": "Chance to drop the items it is wearing, in [feet, legs, body, head].",
   "mcdoc.java.server.world.entity.mob.mod.DeathLootTableSeed": "Seed for generating the death loot table.",
   "mcdoc.java.server.world.entity.mob.mod.CanPickUpLoot": "Whether it can pick up loot.",
   "mcdoc.java.server.world.entity.mob.mod.PersistenceRequired": "Whether it should not despawn naturally.",
   "mcdoc.java.server.world.entity.mob.mod.LeftHanded": "Whether it is left handed.",
   "mcdoc.java.server.world.entity.mob.mod.Leash": "What the leash is attached to.",
   "mcdoc.java.server.world.entity.mob.mod.leash": "What the leash is attached to.",
   "mcdoc.java.server.world.entity.mob.mod.AngerTime": "Ticks that it will be angry for.",
   "mcdoc.java.server.world.entity.mob.mod.Modifiers": "Modifiers that act on it.",
   "mcdoc.java.server.world.entity.mob.mod.Name": "Has no real effect.",
   "mcdoc.java.server.world.entity.mob.mod.Slot": "Slot that the modifier is active in.",
   "mcdoc.java.server.world.entity.mob.mod.Amount": "Change in the attribute.",
   "mcdoc.java.server.world.entity.mob.mod.UUIDMost": "Upper bits of the other entity's UUID.",
   "mcdoc.java.server.world.entity.mob.mod.UUIDLeast": "Lower bits of the other entity's UUID.",
   "mcdoc.java.server.world.entity.mob.mod.memories": "The mobs memories, empty.",
   "mcdoc.java.server.world.entity.mob.mod.X": "X coordiante of leash knot.",
   "mcdoc.java.server.world.entity.mob.mod.Y": "Y coordiante of leash knot.",
   "mcdoc.java.server.world.entity.mob.mod.Z": "Z coordiante of leash knot.",
   "mcdoc.java.server.world.entity.mob.phantom.AX": "Approximate circle x coordinate.",
   "mcdoc.java.server.world.entity.mob.phantom.AY": "Approximate circle y coordinate.",
   "mcdoc.java.server.world.entity.mob.phantom.AZ": "Approximate circle z coordinate.",
   "mcdoc.java.server.world.entity.mob.piglin.IsImmuneToZombification": "Whether it will not transform to a zombified piglin when it is in the Overworld.",
   "mcdoc.java.server.world.entity.mob.piglin.TimeInOverworld": "Ticks it has been in the overworld.",
   "mcdoc.java.server.world.entity.mob.piglin.map_key": "Whether it is being angered universally.",
   "mcdoc.java.server.world.entity.mob.piglin.IsBaby": "Whether it is a baby.",
   "mcdoc.java.server.world.entity.mob.piglin.CannotHunt": "Whether it does not hunt hoglins.",
   "mcdoc.java.server.world.entity.mob.player.DataVersion": "Version of the player NBT structure",
   "mcdoc.java.server.world.entity.mob.player.LastDeathLocation": "Location of the player's last death.",
   "mcdoc.java.server.world.entity.mob.player.playerGameType": "Game mode that the player is in.",
   "mcdoc.java.server.world.entity.mob.player.previousPlayerGameType": "Previous game mode that the player was in.",
   "mcdoc.java.server.world.entity.mob.player.Score": "Score to display upon death.",
   "mcdoc.java.server.world.entity.mob.player.SelectedItemSlot": "Hotbar slot the player has selected.",
   "mcdoc.java.server.world.entity.mob.player.SelectedItem": "Item in the hotbar slot the player has selected.",
   "mcdoc.java.server.world.entity.mob.player.SpawnDimension": "Dimension of the player's respawn point.",
   "mcdoc.java.server.world.entity.mob.player.SpawnX": "X coordinate of the player's spawn point.",
   "mcdoc.java.server.world.entity.mob.player.SpawnY": "Y coordinate of the player's spawn point.",
   "mcdoc.java.server.world.entity.mob.player.SpawnZ": "Z coordinate of the player's spawn point.",
   "mcdoc.java.server.world.entity.mob.player.SpawnForced": "Whether the player must spawn at the spawn point.",
   "mcdoc.java.server.world.entity.mob.player.SleepTimer": "Ticks the player has been in bed.",
   "mcdoc.java.server.world.entity.mob.player.foodLevel": "Level of the hunger bar.",
   "mcdoc.java.server.world.entity.mob.player.foodExhaustionLevel": "Rate at which the `foodSaturationLevel` depletes.",
   "mcdoc.java.server.world.entity.mob.player.foodSaturationLevel": "Rate at which the hunger bar depletes.",
   "mcdoc.java.server.world.entity.mob.player.foodTickTimer": "Ticks until the player heals or takes starvation damage.",
   "mcdoc.java.server.world.entity.mob.player.XpLevel": "Number of experience levels the player has.",
   "mcdoc.java.server.world.entity.mob.player.XpP": "Percentage the experience bar is filled up.",
   "mcdoc.java.server.world.entity.mob.player.XpTotal": "Total experience the player has.",
   "mcdoc.java.server.world.entity.mob.player.XpSeed": "Seed for enchantments.",
   "mcdoc.java.server.world.entity.mob.player.EnderItems": "The player's enderchest inventory.",
   "mcdoc.java.server.world.entity.mob.player.abilities": "Abilities of the player.",
   "mcdoc.java.server.world.entity.mob.player.enteredNetherPosition": "Position that the player entered the nether at.",
   "mcdoc.java.server.world.entity.mob.player.RootVehicle": "Entity that the player is riding.",
   "mcdoc.java.server.world.entity.mob.player.ShoulderEntityLeft": "Entity that is on the player's left shoulder.",
   "mcdoc.java.server.world.entity.mob.player.ShoulderEntityRight": "Entity that is on the player's right shoulder.",
   "mcdoc.java.server.world.entity.mob.player.seenCredits": "Whether the player has gone to the overworld after defeating the Ender Dragon.",
   "mcdoc.java.server.world.entity.mob.player.recipeBook": "Recipes that the player has.",
   "mcdoc.java.server.world.entity.mob.player.warden_spawn_tracker": "Tracking the warden spawning process for this player.",
   "mcdoc.java.server.world.entity.mob.player.walkSpeed": "Speed that the player walks at.",
   "mcdoc.java.server.world.entity.mob.player.flySpeed": "Speed that the player flies at.",
   "mcdoc.java.server.world.entity.mob.player.mayfly": "Whether the player can fly.",
   "mcdoc.java.server.world.entity.mob.player.flying": "Whether the player is flying.",
   "mcdoc.java.server.world.entity.mob.player.invulnerable": "Whether the player can only take damage from the void.",
   "mcdoc.java.server.world.entity.mob.player.mayBuild": "Whether the player may build.",
   "mcdoc.java.server.world.entity.mob.player.instabuild": "Whether the player destroys blocks instantly.",
   "mcdoc.java.server.world.entity.mob.player.AttachMost": "Upper bits of the ridden entity's UUID.",
   "mcdoc.java.server.world.entity.mob.player.AttachLeast": "Lower bits of the ridden entity's UUID.",
   "mcdoc.java.server.world.entity.mob.player.Attach": "Ridden entity's UUID.",
   "mcdoc.java.server.world.entity.mob.player.Entity": "The ridden entity.",
   "mcdoc.java.server.world.entity.mob.player.recipes": "Recipes the player has acquired.",
   "mcdoc.java.server.world.entity.mob.player.toBeDisplayed": "Recipes that should pulse in the crafting book.",
   "mcdoc.java.server.world.entity.mob.player.isFilteringCraftable": "Whether the player has filtered crafting on in the crafting table.",
   "mcdoc.java.server.world.entity.mob.player.isGuiOpen": "Whether the player has the crafting book open in the crafting table.",
   "mcdoc.java.server.world.entity.mob.player.isFurnaceFilteringCraftable": "Whether the player has filtered crafting on in the furnace.",
   "mcdoc.java.server.world.entity.mob.player.isFurnaceGuiOpen": "Whether the player has the crafting book open in the furnace.",
   "mcdoc.java.server.world.entity.mob.player.cooldown_ticks": "Ticks before the `warning_level` can be increased again.\nDecreases by 1 every tick. It is set to 200 game ticks (10 seconds) every time the warning level is increased.",
   "mcdoc.java.server.world.entity.mob.player.ticks_since_last_warning": "Ticks since the player was warned for warden spawning.\nIncreases by 1 every tick. After 12000 game ticks (10 minutes) it will be set back to 0,\nand the `warning_level` will be decreased by 1.",
   "mcdoc.java.server.world.entity.mob.player.warning_level": "The warden will spawn at level 3.",
   "mcdoc.java.server.world.entity.mob.raider.Patrolling": "Whether the raider is patrolling.",
   "mcdoc.java.server.world.entity.mob.raider.PatrolLeader": "Whether the raider is leading the patrol.",
   "mcdoc.java.server.world.entity.mob.raider.PatrolTarget": "Where the raider is heading towards.",
   "mcdoc.java.server.world.entity.mob.raider.patrol_target": "Where the raider is heading towards.",
   "mcdoc.java.server.world.entity.mob.raider.CanJoinRaid": "Whether the raider can join raids and count towards the progress bar.",
   "mcdoc.java.server.world.entity.mob.raider.RaidId": "Id of the raid that the raider is in.",
   "mcdoc.java.server.world.entity.mob.raider.Wave": "Wave that the raider is in.",
   "mcdoc.java.server.world.entity.mob.raider.AttackTick": "Ticks until it can attack.",
   "mcdoc.java.server.world.entity.mob.raider.RoarTick": "Ticks until it can roar.",
   "mcdoc.java.server.world.entity.mob.raider.StunTick": "Ticks it is stunned for.",
   "mcdoc.java.server.world.entity.mob.raider.SpellTicks": "Ticks until the raider can cast its spell.",
   "mcdoc.java.server.world.entity.mob.raider.Johnny": "Whether it should try to attack most other mobs.",
   "mcdoc.java.server.world.entity.mob.shulker.Peek": "Whether it is peeking.",
   "mcdoc.java.server.world.entity.mob.shulker.AttachFace": "Which face it is attached to.",
   "mcdoc.java.server.world.entity.mob.shulker.APX": "Approximate x coordinate of the shulker.",
   "mcdoc.java.server.world.entity.mob.shulker.APY": "Approximate y coordinate of the shulker.",
   "mcdoc.java.server.world.entity.mob.shulker.APZ": "Approximate z coordinate of the shulker.",
   "mcdoc.java.server.world.entity.mob.skeleton.StrayConversionTime": "Time until it converts to a stray.",
   "mcdoc.java.server.world.entity.mob.slime.wasOnGround": "Whether it is on the ground.",
   "mcdoc.java.server.world.entity.mob.snow_golem.Pumpkin": "Whether it has a pumpkin.",
   "mcdoc.java.server.world.entity.mob.tadpoll.Age": "Age of it in ticks. When greater than or equal to 24000, it grows into a frog.",
   "mcdoc.java.server.world.entity.mob.tadpoll.FromBucket": "If it was released from a bucket.",
   "mcdoc.java.server.world.entity.mob.vex.BoundX": "X coordinate of the center of its wander bounds.",
   "mcdoc.java.server.world.entity.mob.vex.BoundY": "Y coordinate of the center of its wander bounds.",
   "mcdoc.java.server.world.entity.mob.vex.BoundZ": "Z coordinate of the center of its wander bounds.",
   "mcdoc.java.server.world.entity.mob.vex.LifeTicks": "Ticks until it starts to die.",
   "mcdoc.java.server.world.entity.mob.warden.anger": "Level of anger that will decrease by 1 every second.",
   "mcdoc.java.server.world.entity.mob.warden.listener": "Vibration listener",
   "mcdoc.java.server.world.entity.mob.warden.suspects": "Suspects that have angered the warden.",
   "mcdoc.java.server.world.entity.mob.wither.Invul": "Ticks it is invulnerable for.",
   "mcdoc.java.server.world.entity.mob.zoglin.IsBaby": "Whether it is a baby.",
   "mcdoc.java.server.world.entity.mob.zombie.IsBaby": "Whether it is a baby.",
   "mcdoc.java.server.world.entity.mob.zombie.CanBreakDoors": "Whether it can break doors.",
   "mcdoc.java.server.world.entity.mob.zombie.DrownedConversionTime": "Ticks until it converts.",
   "mcdoc.java.server.world.entity.mob.zombie.InWaterTime": "Ticks it has been in the water.",
   "mcdoc.java.server.world.entity.mob.zombie.VillagerData": "Villager's skin data",
   "mcdoc.java.server.world.entity.mob.zombie.Gossips": "Villager's gossips",
   "mcdoc.java.server.world.entity.mob.zombie.Offers": "Villager's offers",
   "mcdoc.java.server.world.entity.mob.zombie.ConversionTime": "Ticks until the it is converted.",
   "mcdoc.java.server.world.entity.mob.zombie.ConversionPlayerLeast": "Lower bits of the player's uuid who triggered the conversion.",
   "mcdoc.java.server.world.entity.mob.zombie.ConversionPlayerMost": "Upper bits of the player's uuid who triggered the conversion.",
   "mcdoc.java.server.world.entity.mob.zombie.ConversionPlayer": "Player who triggered the conversion.",
   "mcdoc.java.server.world.entity.mob.zombified_piglin.IsBaby": "Whether it is a baby.",
   "mcdoc.java.server.world.entity.mob.zombified_piglin.Anger": "Ticks that it will be angry for.",
   "mcdoc.java.server.world.entity.mob.zombified_piglin.HurtBy": "Last player to hit a zombie pigman in this zombie pigman's detection range.",
   "mcdoc.java.server.world.entity.projectile.arrow.shake": "Shake it creates.",
   "mcdoc.java.server.world.entity.projectile.arrow.pickup": "How players can pick up it.",
   "mcdoc.java.server.world.entity.projectile.arrow.player": "Whether a player shot it.",
   "mcdoc.java.server.world.entity.projectile.arrow.life": "Ticks since it last moved.",
   "mcdoc.java.server.world.entity.projectile.arrow.damage": "Damage it should deal.",
   "mcdoc.java.server.world.entity.projectile.arrow.inGround": "Whether it is in the ground.",
   "mcdoc.java.server.world.entity.projectile.arrow.inBlockState": "Block it is in.",
   "mcdoc.java.server.world.entity.projectile.arrow.crit": "Whether it should do critical damage.",
   "mcdoc.java.server.world.entity.projectile.arrow.ShotFromCrossbow": "Whether it was shot from a crossbow.",
   "mcdoc.java.server.world.entity.projectile.arrow.PierceLevel": "Number of entities it can pass through.",
   "mcdoc.java.server.world.entity.projectile.arrow.SoundEvent": "Sound event to play when it hits something.",
   "mcdoc.java.server.world.entity.projectile.arrow.OwnerUUIDMost": "Upper bits of the owner's UUID.",
   "mcdoc.java.server.world.entity.projectile.arrow.OwnerUUIDLeast": "Lower bits of the owner's UUID.",
   "mcdoc.java.server.world.entity.projectile.arrow.Color": "Color of the arrow's potion bubble trail particles.\ncalculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.",
   "mcdoc.java.server.world.entity.projectile.arrow.CustomPotionEffects": "Effects to give to the hit entity.",
   "mcdoc.java.server.world.entity.projectile.arrow.custom_potion_effects": "Effects to give to the hit entity.",
   "mcdoc.java.server.world.entity.projectile.arrow.Potion": "Name of the default potion effect.",
   "mcdoc.java.server.world.entity.projectile.arrow.Duration": "Ticks the glowing effect lasts.",
   "mcdoc.java.server.world.entity.projectile.arrow.DealtDamage": "Whether it has already damaged an entity.",
   "mcdoc.java.server.world.entity.projectile.fireball.power": "Acceleration",
   "mcdoc.java.server.world.entity.projectile.fireball.life": "Ticks since it last moved.",
   "mcdoc.java.server.world.entity.projectile.fireball.Item": "Item it should render as.",
   "mcdoc.java.server.world.entity.projectile.fireball.ExplosionPower": "Explosion radius.",
   "mcdoc.java.server.world.entity.projectile.mod.HasBeenShot": "Whether it has been shot. This is set to true when it exists for\nat least one tick, and is used by the game to ensure it only triggers the projectile_shoot\ngame event once.",
   "mcdoc.java.server.world.entity.projectile.mod.LeftOwner": "Whether it has left its owner.",
   "mcdoc.java.server.world.entity.projectile.mod.OwnerUUIDMost": "Upper bits of the owner's UUID.",
   "mcdoc.java.server.world.entity.projectile.mod.OwnerUUIDLeast": "Lower bits of the owner's UUID.",
   "mcdoc.java.server.world.entity.projectile.shulker_bullet.Steps": "Steps it takes to reach the target",
   "mcdoc.java.server.world.entity.projectile.shulker_bullet.TXD": "X offset to move based on the target's location.",
   "mcdoc.java.server.world.entity.projectile.shulker_bullet.TYD": "Y offset to move based on the target's location.",
   "mcdoc.java.server.world.entity.projectile.shulker_bullet.TZD": "Z offset to move based on the target's location.",
   "mcdoc.java.server.world.entity.projectile.shulker_bullet.M": "The upper bits of the its UUID.",
   "mcdoc.java.server.world.entity.projectile.shulker_bullet.L": "The lower bits of the its UUID.",
   "mcdoc.java.server.world.entity.projectile.shulker_bullet.X": "X block coordinate of the it.",
   "mcdoc.java.server.world.entity.projectile.shulker_bullet.Y": "Y block coordinate of the it.",
   "mcdoc.java.server.world.entity.projectile.shulker_bullet.Z": "Z block coordinate of the it.",
   "mcdoc.java.server.world.entity.projectile.throwable.shake": "Shake it creates.",
   "mcdoc.java.server.world.entity.projectile.throwable.owner": "Entity that threw it.",
   "mcdoc.java.server.world.entity.projectile.throwable.inGround": "Whether it is in the ground.",
   "mcdoc.java.server.world.entity.projectile.throwable.M": "Upper bits of the owner's UUID.",
   "mcdoc.java.server.world.entity.projectile.throwable.L": "Lower bits of the owner's UUID.",
   "mcdoc.java.server.world.entity.projectile.throwable.Item": "Item representation of the projectile.",
   "mcdoc.java.server.world.entity.projectile.throwable.Potion": "Item representation of the potion.",
   "mcdoc.java.server.world.item.block.container.map_key": "Slots from 0 to 8.",
   "mcdoc.java.server.world.item.block.mod.dispatch": "An item that can be placed as a block",
   "mcdoc.java.server.world.item.block.mod.CanPlaceOn": "List of blockstates that this block item can be placed on.",
   "mcdoc.java.server.world.item.block.mod.BlockStateTag": "Blockstate that the placed block will have.",
   "mcdoc.java.server.world.entity.mob.breedable.axolotl.map_key": "Ticks until it can be tempted again.",
   "mcdoc.java.server.world.entity.mob.breedable.axolotl.Variant": "The variant of the axolotl.",
   "mcdoc.java.server.world.entity.mob.breedable.axolotl.FromBucket": "If this axolotl was released from a bucket.",
   "mcdoc.java.server.world.entity.mob.breedable.bee.FlowerPos": "Position of the flower the bee is circling",
   "mcdoc.java.server.world.entity.mob.breedable.bee.flower_pos": "Position of the flower the bee is circling",
   "mcdoc.java.server.world.entity.mob.breedable.bee.HasNectar": "Whether the bee has nectar.",
   "mcdoc.java.server.world.entity.mob.breedable.bee.HasStung": "Whether the bee has stung an entity.",
   "mcdoc.java.server.world.entity.mob.breedable.bee.TicksSincePollination": "Ticks since the bee has pollinated a crop.",
   "mcdoc.java.server.world.entity.mob.breedable.bee.CannotEnterHiveTicks": "Ticks until the bee can enter its hive.",
   "mcdoc.java.server.world.entity.mob.breedable.bee.CropsGrownSincePollination": "Crops grown since the bee has gathered nectar.",
   "mcdoc.java.server.world.entity.mob.breedable.bee.Anger": "Ticks the bee will be angry for.",
   "mcdoc.java.server.world.entity.mob.breedable.bee.HurtBy": "Player that has attacked the bee.",
   "mcdoc.java.server.world.entity.mob.breedable.chicken.IsChickenJockey": "Whether it is from a chicken jockey.\nIf true it will despawn and will drop more experience.",
   "mcdoc.java.server.world.entity.mob.breedable.chicken.EggLayTime": "Time until it lays another egg.",
   "mcdoc.java.server.world.entity.mob.breedable.fox.TrustedUUIDs": "List of trusted players.",
   "mcdoc.java.server.world.entity.mob.breedable.fox.Sleeping": "Whether it is sleeping.",
   "mcdoc.java.server.world.entity.mob.breedable.fox.Type": "The type of fox.",
   "mcdoc.java.server.world.entity.mob.breedable.fox.Sitting": "Whether it is sitting.",
   "mcdoc.java.server.world.entity.mob.breedable.fox.Crouching": "Whether it is crouching.",
   "mcdoc.java.server.world.entity.mob.breedable.fox.L": "Lower bits of the trusted player's UUID.",
   "mcdoc.java.server.world.entity.mob.breedable.fox.M": "Upper bits of the trusted player's UUID.",
   "mcdoc.java.server.world.entity.mob.breedable.goat.map_key": "Ticks until it can be tempted again.",
   "mcdoc.java.server.world.entity.mob.breedable.goat.HasLeftHorn": "Whether it has its left horn.",
   "mcdoc.java.server.world.entity.mob.breedable.goat.HasRightHorn": "Whether it has its right horn.",
   "mcdoc.java.server.world.entity.mob.breedable.goat.IsScreamingGoat": "Whether it is a screaming goat.",
   "mcdoc.java.server.world.entity.mob.breedable.hoglin.IsImmuneToZombification": "Whether it will not transform to a zoglin when it is in the Overword.",
   "mcdoc.java.server.world.entity.mob.breedable.hoglin.CannotBeHunted": "Whether it cannot be hunted by piglins",
   "mcdoc.java.server.world.entity.mob.breedable.hoglin.TimeInOverworld": "The number of ticks it has been in the overworld.",
   "mcdoc.java.server.world.entity.mob.breedable.horse.Bred": "Unknown use.\nRemains `0` even if it was bred.",
   "mcdoc.java.server.world.entity.mob.breedable.horse.EatingHaystack": "Whether it is eating a haystack.",
   "mcdoc.java.server.world.entity.mob.breedable.horse.Tame": "Whether it has been tamed.",
   "mcdoc.java.server.world.entity.mob.breedable.horse.Temper": "Higher values make it easier to tame. Increases with feeding.",
   "mcdoc.java.server.world.entity.mob.breedable.horse.OwnerUUID": "Player who tamed it.",
   "mcdoc.java.server.world.entity.mob.breedable.horse.Owner": "Player who tamed it.",
   "mcdoc.java.server.world.entity.mob.breedable.horse.ArmorItem": "Horse armor.",
   "mcdoc.java.server.world.entity.mob.breedable.horse.ChestedHorse": "Whether it has a chest.",
   "mcdoc.java.server.world.entity.mob.breedable.horse.Items": "Slots from 0 to 14.",
   "mcdoc.java.server.world.entity.mob.breedable.horse.SkeletonTrap": "Whether it was spawned by a trap.",
   "mcdoc.java.server.world.entity.mob.breedable.horse.SkeletonTrapTime": "Ticks it has existed.",
   "mcdoc.java.server.world.entity.mob.breedable.horse.map_key": "Ticks until it can be tempted again.",
   "mcdoc.java.server.world.entity.mob.breedable.horse.IsSitting": "Whether it is sitting.",
   "mcdoc.java.server.world.entity.mob.breedable.horse.LastPoseTick": "The tick when it started changing its pose.",
   "mcdoc.java.server.world.entity.mob.breedable.llama.Bred": "Unknown use.\nRemains `0` even if it was bred.",
   "mcdoc.java.server.world.entity.mob.breedable.llama.EatingHaystack": "Whether it is grazing.",
   "mcdoc.java.server.world.entity.mob.breedable.llama.Tame": "Whether it has been tamed.",
   "mcdoc.java.server.world.entity.mob.breedable.llama.Temper": "Higher values make it easier to tame.\nIncreases with feeding.",
   "mcdoc.java.server.world.entity.mob.breedable.llama.OwnerUUID": "Player who tamed it.",
   "mcdoc.java.server.world.entity.mob.breedable.llama.Owner": "Player who tamed the horse.",
   "mcdoc.java.server.world.entity.mob.breedable.llama.DecorItem": "Carpet decoration on its back.",
   "mcdoc.java.server.world.entity.mob.breedable.llama.ChestedHorse": "Whether it has a chest.",
   "mcdoc.java.server.world.entity.mob.breedable.llama.Items": "Slots from 0 to 14. Scales with `Strength`.",
   "mcdoc.java.server.world.entity.mob.breedable.llama.Strength": "Determines both the number of items it can carry and how likely it is for wolves to run away.",
   "mcdoc.java.server.world.entity.mob.breedable.llama.DespawnDelay": "When it will despawn.",
   "mcdoc.java.server.world.entity.mob.breedable.mod.InLove": "Ticks until it stops searching for a mate.",
   "mcdoc.java.server.world.entity.mob.breedable.mod.ForcedAge": "A value of age assigned to this mob when it grows up.\nIncremented when a baby mob is fed.",
   "mcdoc.java.server.world.entity.mob.breedable.mod.LoveCauseLeast": "Lower bits of the UUID of the player that caused this mob to breed.",
   "mcdoc.java.server.world.entity.mob.breedable.mod.LoveCauseMost": "Upper bits of the UUID of the player that caused this mob to breed.",
   "mcdoc.java.server.world.entity.mob.breedable.mod.LoveCause": "Player that caused this mob to breed.",
   "mcdoc.java.server.world.entity.mob.breedable.mooshroom.EffectId": "Effect that the mooshroom gives to suspicious stew.",
   "mcdoc.java.server.world.entity.mob.breedable.mooshroom.EffectDuration": "Duration of the suspicious stew effect.",
   "mcdoc.java.server.world.entity.mob.breedable.ocelot.Trusting": "Whether it trusts players.",
   "mcdoc.java.server.world.entity.mob.breedable.panda.MainGene": "Displayed gene.\nIf this gene is recessive and 'HiddenGene' is not the same, the panda will display the 'normal' gene.",
   "mcdoc.java.server.world.entity.mob.breedable.panda.HiddenGene": "Hidden gene.",
   "mcdoc.java.server.world.entity.mob.breedable.panda.Normal": "(dominant)",
   "mcdoc.java.server.world.entity.mob.breedable.panda.Lazy": "(dominant)",
   "mcdoc.java.server.world.entity.mob.breedable.panda.Worried": "(dominant)",
   "mcdoc.java.server.world.entity.mob.breedable.panda.Playful": "(dominant)",
   "mcdoc.java.server.world.entity.mob.breedable.panda.Brown": "(recessive)",
   "mcdoc.java.server.world.entity.mob.breedable.panda.Weak": "(recessive)",
   "mcdoc.java.server.world.entity.mob.breedable.panda.Aggressive": "(dominant)",
   "mcdoc.java.server.world.entity.mob.breedable.rabbit.MoreCarrotTicks": "Ticks down once a carrot crop is eaten",
   "mcdoc.java.server.world.entity.mob.breedable.saddled.Saddle": "Whether there is a saddle on it.",
   "mcdoc.java.server.world.entity.mob.breedable.sheep.Sheared": "Whether it has been shorn.",
   "mcdoc.java.server.world.entity.mob.breedable.sniffer.map_key": "Coordinates in the world that it has already explored.",
   "mcdoc.java.server.world.entity.mob.breedable.tamable.Sitting": "Whether the mob is sitting.",
   "mcdoc.java.server.world.entity.mob.breedable.tamable.CollarColor": "Collar color, present for wild wolfs.",
   "mcdoc.java.server.world.entity.mob.breedable.tamable.Angry": "Whether it is angry.",
   "mcdoc.java.server.world.entity.mob.breedable.turtle.HasEgg": "Whether it has an egg.",
   "mcdoc.java.server.world.entity.mob.breedable.turtle.TravelPosX": "X coordinate of its travel target.",
   "mcdoc.java.server.world.entity.mob.breedable.turtle.TravelPosY": "Y coordinate of its travel target.",
   "mcdoc.java.server.world.entity.mob.breedable.turtle.TravelPosZ": "Z coordinate of its travel target.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.Inventory": "Slots from 0 to 7.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.Offers": "Trade offers it has.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.map_key": "Location of a potential job site.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.Gossips": "Gossips it has heard.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.LastRestock": "Tick of the last time it has restocked.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.LastGossipDecay": "Tick of the last time its gossips have decreased in strength.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.RestocksToday": "Times it has restocked in the past ten minutes.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.Xp": "XP it has, increases with trading.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.level": "Used for trading and badge rendering.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.TargetMost": "Upper bits of the gossip target's UUID.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.TargetLeast": "Lower bits of the gossip target's UUID.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.Recipes": "Trades it has to offer.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.rewardExp": "Whether it should reward experience for using this trade.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.maxUses": "Maximum number of uses for this trade before it has to restock.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.uses": "Times this trade has been used since it last restocked.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.buy": "First item it buys.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.buyB": "Second item it buys.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.sell": "Item it sells.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.xp": "XP it gains from the trade.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.priceMultiplier": "Multiplier on the demand price adjuster.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.specialPrice": "Modifier added to the original price of the first cost item.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.demand": "Price adjuster of the first cost item based on demand.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.DespawnDelay": "Ticks until it despawns.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.WanderTarget": "Where it is heading to.",
   "mcdoc.java.server.world.entity.mob.breedable.villager.wander_target": "Where it is heading to."
}