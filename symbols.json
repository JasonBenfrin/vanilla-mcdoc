{
	"mcdoc": {
		"::java::assets::atlas::Atlas": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "sources",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::assets::atlas::SpriteSource"
						}
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.19.3"
						}
					}
				}
			]
		},
		"::java::assets::atlas::Directory": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "source",
					"type": {
						"kind": "string"
					}
				},
				{
					"kind": "pair",
					"key": "prefix",
					"type": {
						"kind": "string"
					}
				}
			]
		},
		"::java::assets::atlas::Filter": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "pattern",
					"type": {
						"kind": "reference",
						"path": "::java::assets::atlas::FilterPattern"
					}
				}
			]
		},
		"::java::assets::atlas::FilterPattern": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "namespace",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "regex_pattern"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "path",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "regex_pattern"
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::assets::atlas::PalettedPermutations": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "textures",
					"type": {
						"kind": "list",
						"item": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "texture"
										}
									}
								}
							]
						}
					}
				},
				{
					"kind": "pair",
					"key": "palette_key",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "texture"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "permutations",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": {
									"kind": "string",
									"attributes": [
										{
											"name": "permutation",
											"value": {
												"kind": "tree",
												"values": {
													"definition": {
														"kind": "literal",
														"value": {
															"kind": "boolean",
															"value": true
														}
													}
												}
											}
										}
									]
								},
								"type": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "texture"
												}
											}
										}
									]
								}
							}
						]
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.19.4"
						}
					}
				}
			]
		},
		"::java::assets::atlas::PermutationsMap": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string",
						"attributes": [
							{
								"name": "permutation",
								"value": {
									"kind": "tree",
									"values": {
										"definition": {
											"kind": "literal",
											"value": {
												"kind": "boolean",
												"value": true
											}
										}
									}
								}
							}
						]
					},
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "texture"
									}
								}
							}
						]
					}
				}
			]
		},
		"::java::assets::atlas::Single": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "resource",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "texture"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "sprite",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "texture"
											}
										},
										"definition": {
											"kind": "literal",
											"value": {
												"kind": "boolean",
												"value": true
											}
										}
									}
								}
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::assets::atlas::SpriteSource": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "reference",
						"path": "::java::assets::atlas::SpriteSourceType"
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:sprite_source"
					}
				}
			]
		},
		"::java::assets::atlas::SpriteSourceType": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Single",
					"value": "single"
				},
				{
					"identifier": "Directory",
					"value": "directory"
				},
				{
					"identifier": "Filter",
					"value": "filter"
				},
				{
					"identifier": "Unstitch",
					"value": "unstitch"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19.4"
								}
							}
						}
					],
					"identifier": "PalettedPermutations",
					"value": "paletted_permutations"
				}
			]
		},
		"::java::assets::atlas::Unstitch": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "resource",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "texture"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "If set to the resource width, regions will use pixel coordinates.\n",
					"key": "divisor_x",
					"type": {
						"kind": "double"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "If set to the resource height, regions will use pixel coordinates.\n",
					"key": "divisor_y",
					"type": {
						"kind": "double"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "regions",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::assets::atlas::UnstitchRegion"
						}
					}
				}
			]
		},
		"::java::assets::atlas::UnstitchRegion": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "sprite",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "texture"
											}
										},
										"definition": {
											"kind": "literal",
											"value": {
												"kind": "boolean",
												"value": true
											}
										}
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "x",
					"type": {
						"kind": "double"
					}
				},
				{
					"kind": "pair",
					"key": "y",
					"type": {
						"kind": "double"
					}
				},
				{
					"kind": "pair",
					"key": "width",
					"type": {
						"kind": "double"
					}
				},
				{
					"kind": "pair",
					"key": "height",
					"type": {
						"kind": "double"
					}
				}
			]
		},
		"::java::assets::block_state_definition::BlockStateDefinition": {
			"kind": "union",
			"members": [
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "variants",
							"type": {
								"kind": "struct",
								"fields": [
									{
										"kind": "pair",
										"key": {
											"kind": "string"
										},
										"type": {
											"kind": "reference",
											"path": "::java::assets::block_state_definition::ModelVariant"
										}
									}
								]
							}
						}
					]
				},
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "multipart",
							"type": {
								"kind": "list",
								"item": {
									"kind": "struct",
									"fields": [
										{
											"kind": "pair",
											"desc": "One condition or an array where at least one condition must apply.\n",
											"key": "when",
											"type": {
												"kind": "reference",
												"path": "::java::assets::block_state_definition::MultiPartCondition"
											},
											"optional": true
										},
										{
											"kind": "pair",
											"key": "apply",
											"type": {
												"kind": "reference",
												"path": "::java::assets::block_state_definition::ModelVariant"
											}
										}
									]
								}
							}
						}
					]
				}
			]
		},
		"::java::assets::block_state_definition::BlockStateDefinitionMultipart": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "multipart",
					"type": {
						"kind": "list",
						"item": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"desc": "One condition or an array where at least one condition must apply.\n",
									"key": "when",
									"type": {
										"kind": "reference",
										"path": "::java::assets::block_state_definition::MultiPartCondition"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "apply",
									"type": {
										"kind": "reference",
										"path": "::java::assets::block_state_definition::ModelVariant"
									}
								}
							]
						}
					}
				}
			]
		},
		"::java::assets::block_state_definition::BlockStateDefinitionMultipartEntry": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "One condition or an array where at least one condition must apply.\n",
					"key": "when",
					"type": {
						"kind": "reference",
						"path": "::java::assets::block_state_definition::MultiPartCondition"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "apply",
					"type": {
						"kind": "reference",
						"path": "::java::assets::block_state_definition::ModelVariant"
					}
				}
			]
		},
		"::java::assets::block_state_definition::BlockStateDefinitionVariant": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "variants",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": {
									"kind": "string"
								},
								"type": {
									"kind": "reference",
									"path": "::java::assets::block_state_definition::ModelVariant"
								}
							}
						]
					}
				}
			]
		},
		"::java::assets::block_state_definition::BlockStateDefinitionVariantMap": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string"
					},
					"type": {
						"kind": "reference",
						"path": "::java::assets::block_state_definition::ModelVariant"
					}
				}
			]
		},
		"::java::assets::block_state_definition::ModelVariant": {
			"kind": "union",
			"members": [
				{
					"kind": "reference",
					"path": "::java::assets::block_state_definition::ModelVariantBase"
				},
				{
					"kind": "list",
					"item": {
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::assets::block_state_definition::ModelVariantBase"
								}
							},
							{
								"kind": "pair",
								"key": "weight",
								"type": {
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 1
									}
								},
								"optional": true
							}
						]
					}
				}
			]
		},
		"::java::assets::block_state_definition::ModelVariantBase": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "model",
					"type": {
						"kind": "reference",
						"path": "::java::assets::model::ModelRef"
					}
				},
				{
					"kind": "pair",
					"key": "x",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "literal",
								"value": {
									"kind": "int",
									"value": 0
								}
							},
							{
								"kind": "literal",
								"value": {
									"kind": "int",
									"value": 90
								}
							},
							{
								"kind": "literal",
								"value": {
									"kind": "int",
									"value": 180
								}
							},
							{
								"kind": "literal",
								"value": {
									"kind": "int",
									"value": 270
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "y",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "literal",
								"value": {
									"kind": "int",
									"value": 0
								}
							},
							{
								"kind": "literal",
								"value": {
									"kind": "int",
									"value": 90
								}
							},
							{
								"kind": "literal",
								"value": {
									"kind": "int",
									"value": 180
								}
							},
							{
								"kind": "literal",
								"value": {
									"kind": "int",
									"value": 270
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "If set to `true`, the textures are not rotated with the block.\n",
					"key": "uvlock",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::assets::block_state_definition::MultiPartAlternatives": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "OR",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::assets::block_state_definition::MultiPartCondition"
						}
					}
				}
			]
		},
		"::java::assets::block_state_definition::MultiPartAnd": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string"
					},
					"type": {
						"kind": "string"
					}
				}
			]
		},
		"::java::assets::block_state_definition::MultiPartCondition": {
			"kind": "union",
			"members": [
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "OR",
							"type": {
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::assets::block_state_definition::MultiPartCondition"
								}
							}
						}
					]
				},
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": {
								"kind": "string"
							},
							"type": {
								"kind": "string"
							}
						}
					]
				}
			]
		},
		"::java::assets::block_state_definition::WeightedModelVariant": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::assets::block_state_definition::ModelVariantBase"
					}
				},
				{
					"kind": "pair",
					"key": "weight",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1
						}
					},
					"optional": true
				}
			]
		},
		"::java::assets::credits::Credits": {
			"kind": "list",
			"item": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Company segment.\n",
						"key": "section",
						"type": {
							"kind": "string"
						}
					},
					{
						"kind": "pair",
						"key": "disciplines",
						"type": {
							"kind": "list",
							"item": {
								"kind": "struct",
								"fields": [
									{
										"kind": "pair",
										"key": "discipline",
										"type": {
											"kind": "union",
											"members": [
												{
													"kind": "string",
													"lengthRange": {
														"kind": 0,
														"min": 1
													}
												},
												{
													"kind": "string",
													"lengthRange": {
														"kind": 0,
														"min": 0,
														"max": 0
													}
												}
											]
										}
									},
									{
										"kind": "pair",
										"key": "titles",
										"type": {
											"kind": "list",
											"item": {
												"kind": "struct",
												"fields": [
													{
														"kind": "pair",
														"key": "title",
														"type": {
															"kind": "string"
														}
													},
													{
														"kind": "pair",
														"desc": "Employees with the title.\n",
														"key": "names",
														"type": {
															"kind": "list",
															"item": {
																"kind": "string"
															}
														}
													}
												]
											}
										}
									}
								]
							}
						}
					}
				]
			}
		},
		"::java::assets::credits::CreditsCompanySegment": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Company segment.\n",
					"key": "section",
					"type": {
						"kind": "string"
					}
				},
				{
					"kind": "pair",
					"key": "disciplines",
					"type": {
						"kind": "list",
						"item": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "discipline",
									"type": {
										"kind": "union",
										"members": [
											{
												"kind": "string",
												"lengthRange": {
													"kind": 0,
													"min": 1
												}
											},
											{
												"kind": "string",
												"lengthRange": {
													"kind": 0,
													"min": 0,
													"max": 0
												}
											}
										]
									}
								},
								{
									"kind": "pair",
									"key": "titles",
									"type": {
										"kind": "list",
										"item": {
											"kind": "struct",
											"fields": [
												{
													"kind": "pair",
													"key": "title",
													"type": {
														"kind": "string"
													}
												},
												{
													"kind": "pair",
													"desc": "Employees with the title.\n",
													"key": "names",
													"type": {
														"kind": "list",
														"item": {
															"kind": "string"
														}
													}
												}
											]
										}
									}
								}
							]
						}
					}
				}
			]
		},
		"::java::assets::credits::CreditsDiscipline": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "discipline",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"lengthRange": {
									"kind": 0,
									"min": 1
								}
							},
							{
								"kind": "string",
								"lengthRange": {
									"kind": 0,
									"min": 0,
									"max": 0
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "titles",
					"type": {
						"kind": "list",
						"item": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "title",
									"type": {
										"kind": "string"
									}
								},
								{
									"kind": "pair",
									"desc": "Employees with the title.\n",
									"key": "names",
									"type": {
										"kind": "list",
										"item": {
											"kind": "string"
										}
									}
								}
							]
						}
					}
				}
			]
		},
		"::java::assets::credits::CreditsJobTitle": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "title",
					"type": {
						"kind": "string"
					}
				},
				{
					"kind": "pair",
					"desc": "Employees with the title.\n",
					"key": "names",
					"type": {
						"kind": "list",
						"item": {
							"kind": "string"
						}
					}
				}
			]
		},
		"::java::assets::equipment::<anonymous 0>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Texture location for this layer, inside `entity/equipment/<layer>/`.\n",
					"key": "texture",
					"type": {
						"kind": "reference",
						"path": "::java::assets::equipment::T"
					}
				},
				{
					"kind": "pair",
					"desc": "Configures how this layer behaves when dyed (in the `#dyeable` item tag, and has the `dyed_color` component).\n",
					"key": "dyeable",
					"type": {
						"kind": "reference",
						"path": "::java::assets::equipment::Dyeable"
					},
					"optional": true
				}
			]
		},
		"::java::assets::equipment::<anonymous 1>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::assets::equipment::Layer"
						},
						"typeArgs": [
							{
								"kind": "reference",
								"path": "::java::assets::equipment::T"
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "Whether this layer texture should be overridden by the player's custom elytra texture.\n\nDefaults to `false`.\n",
					"key": "use_player_texture",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::assets::equipment::Dyeable": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "If specified, this layer will be tinted by the color contained in the `dyed_color` component.\n\nIf the item is not dyeable or not dyed, it will be tinted by this color.\n\nIf not specified and the item is not dyed, the layer will be hidden.\n",
					"key": "color_when_undyed",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::color::RGB"
					},
					"optional": true
				}
			]
		},
		"::java::assets::equipment::Equipment": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "List of layers for each model layer type.\n",
					"key": "layers",
					"type": {
						"kind": "reference",
						"path": "::java::assets::equipment::Layers"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.21.2"
						}
					}
				}
			]
		},
		"::java::assets::equipment::Layer": {
			"kind": "template",
			"child": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Texture location for this layer, inside `entity/equipment/<layer>/`.\n",
						"key": "texture",
						"type": {
							"kind": "reference",
							"path": "::java::assets::equipment::T"
						}
					},
					{
						"kind": "pair",
						"desc": "Configures how this layer behaves when dyed (in the `#dyeable` item tag, and has the `dyed_color` component).\n",
						"key": "dyeable",
						"type": {
							"kind": "reference",
							"path": "::java::assets::equipment::Dyeable"
						},
						"optional": true
					}
				]
			},
			"typeParams": [
				{
					"path": "::java::assets::equipment::T"
				}
			]
		},
		"::java::assets::equipment::Layers": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "humanoid",
					"type": {
						"kind": "list",
						"item": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::assets::equipment::Layer"
							},
							"typeArgs": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "texture"
														}
													},
													"path": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "entity/equipment/humanoid/"
														}
													}
												}
											}
										}
									]
								}
							]
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "humanoid_leggings",
					"type": {
						"kind": "list",
						"item": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::assets::equipment::Layer"
							},
							"typeArgs": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "texture"
														}
													},
													"path": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "entity/equipment/humanoid_leggings/"
														}
													}
												}
											}
										}
									]
								}
							]
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "wings",
					"type": {
						"kind": "list",
						"item": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::assets::equipment::WingsLayer"
							},
							"typeArgs": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "texture"
														}
													},
													"path": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "entity/equipment/wings/"
														}
													}
												}
											}
										}
									]
								}
							]
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "wolf_body",
					"type": {
						"kind": "list",
						"item": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::assets::equipment::Layer"
							},
							"typeArgs": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "texture"
														}
													},
													"path": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "entity/equipment/wolf_body/"
														}
													}
												}
											}
										}
									]
								}
							]
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "horse_body",
					"type": {
						"kind": "list",
						"item": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::assets::equipment::Layer"
							},
							"typeArgs": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "texture"
														}
													},
													"path": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "entity/equipment/horse_body/"
														}
													}
												}
											}
										}
									]
								}
							]
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "llama_body",
					"type": {
						"kind": "list",
						"item": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::assets::equipment::Layer"
							},
							"typeArgs": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "texture"
														}
													},
													"path": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "entity/equipment/llama_body/"
														}
													}
												}
											}
										}
									]
								}
							]
						}
					},
					"optional": true
				}
			]
		},
		"::java::assets::equipment::WingsLayer": {
			"kind": "template",
			"child": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::assets::equipment::Layer"
							},
							"typeArgs": [
								{
									"kind": "reference",
									"path": "::java::assets::equipment::T"
								}
							]
						}
					},
					{
						"kind": "pair",
						"desc": "Whether this layer texture should be overridden by the player's custom elytra texture.\n\nDefaults to `false`.\n",
						"key": "use_player_texture",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"typeParams": [
				{
					"path": "::java::assets::equipment::T"
				}
			]
		},
		"::java::assets::font::<anonymous 0>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "reference",
						"path": "::java::assets::font::FontOption"
					},
					"type": {
						"kind": "boolean"
					}
				}
			]
		},
		"::java::assets::font::<anonymous 1>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string",
						"lengthRange": {
							"kind": 0,
							"min": 1,
							"max": 1
						}
					},
					"type": {
						"kind": "float"
					}
				}
			]
		},
		"::java::assets::font::BitmapProvider": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "file",
					"type": {
						"kind": "string"
					}
				},
				{
					"kind": "pair",
					"key": "height",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "ascent",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"key": "chars",
					"type": {
						"kind": "list",
						"item": {
							"kind": "string",
							"lengthRange": {
								"kind": 0,
								"min": 1
							}
						},
						"lengthRange": {
							"kind": 0,
							"min": 1
						}
					}
				}
			]
		},
		"::java::assets::font::Font": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "providers",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::assets::font::GlyphProvider"
						}
					}
				}
			]
		},
		"::java::assets::font::FontOption": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Uniform",
					"value": "uniform"
				},
				{
					"identifier": "JapaneseVariants",
					"value": "jp"
				}
			]
		},
		"::java::assets::font::GlyphProvider": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "reference",
						"path": "::java::assets::font::GlyphProviderType"
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:glyph_provider"
					}
				},
				{
					"kind": "pair",
					"key": "filter",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": {
									"kind": "reference",
									"path": "::java::assets::font::FontOption"
								},
								"type": {
									"kind": "boolean"
								}
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::assets::font::GlyphProviderType": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Bitmap",
					"value": "bitmap"
				},
				{
					"identifier": "TrueType",
					"value": "ttf"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"identifier": "Space",
					"value": "space"
				},
				{
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20"
								}
							}
						}
					],
					"identifier": "LegacyUnicode",
					"value": "legacy_unicode"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20"
								}
							}
						}
					],
					"identifier": "Unihex",
					"value": "unihex"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20"
								}
							}
						}
					],
					"identifier": "Reference",
					"value": "reference"
				}
			]
		},
		"::java::assets::font::LegacyUnicodeProvider": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "sizes",
					"type": {
						"kind": "string"
					}
				},
				{
					"kind": "pair",
					"key": "template",
					"type": {
						"kind": "string"
					}
				}
			],
			"attributes": [
				{
					"name": "until",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20"
						}
					}
				}
			]
		},
		"::java::assets::font::ReferenceProvider": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "id",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "font"
									}
								}
							}
						]
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20"
						}
					}
				}
			]
		},
		"::java::assets::font::SpaceProvider": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "advances",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": {
									"kind": "string",
									"lengthRange": {
										"kind": 0,
										"min": 1,
										"max": 1
									}
								},
								"type": {
									"kind": "float"
								}
							}
						]
					}
				}
			]
		},
		"::java::assets::font::TtfProvider": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "file",
					"type": {
						"kind": "string"
					}
				},
				{
					"kind": "pair",
					"key": "size",
					"type": {
						"kind": "float"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "oversample",
					"type": {
						"kind": "float"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "shift",
					"type": {
						"kind": "tuple",
						"items": [
							{
								"kind": "float"
							},
							{
								"kind": "float"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "skip",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string"
							},
							{
								"kind": "list",
								"item": {
									"kind": "string"
								}
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::assets::font::UnihexOverrideRange": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Minimum in codepoint range (inclusive).\n",
					"key": "from",
					"type": {
						"kind": "string"
					}
				},
				{
					"kind": "pair",
					"desc": "Maximum in codepoint range (inclusive).\n",
					"key": "to",
					"type": {
						"kind": "string"
					}
				},
				{
					"kind": "pair",
					"desc": "Position of left-most column of the glyph.\n",
					"key": "left",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 255
						}
					}
				},
				{
					"kind": "pair",
					"desc": "Position of right-most column of the glyph.\n",
					"key": "right",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 255
						}
					}
				}
			]
		},
		"::java::assets::font::UnihexProvider": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "ZIP archive containing one or more *.hex files (files in archive with different extensions are ignored).\n",
					"key": "hex_file",
					"type": {
						"kind": "string"
					}
				},
				{
					"kind": "pair",
					"desc": "List of ranges to override the size of.\n",
					"key": "size_overrides",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::assets::font::UnihexOverrideRange"
						}
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20"
						}
					}
				}
			]
		},
		"::java::assets::gpu_warnlist::GpuWarnlist": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "renderer",
					"type": {
						"kind": "list",
						"item": {
							"kind": "string",
							"attributes": [
								{
									"name": "regex_pattern"
								}
							]
						}
					}
				},
				{
					"kind": "pair",
					"key": "version",
					"type": {
						"kind": "list",
						"item": {
							"kind": "string",
							"attributes": [
								{
									"name": "regex_pattern"
								}
							]
						}
					}
				},
				{
					"kind": "pair",
					"key": "vendor",
					"type": {
						"kind": "list",
						"item": {
							"kind": "string",
							"attributes": [
								{
									"name": "regex_pattern"
								}
							]
						}
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.16"
						}
					}
				}
			]
		},
		"::java::assets::item_definition::<anonymous 0>": {
			"kind": "struct",
			"fields": []
		},
		"::java::assets::item_definition::<anonymous 1>": {
			"kind": "struct",
			"fields": []
		},
		"::java::assets::item_definition::<anonymous 2>": {
			"kind": "struct",
			"fields": []
		},
		"::java::assets::item_definition::<anonymous 3>": {
			"kind": "struct",
			"fields": []
		},
		"::java::assets::item_definition::<anonymous 4>": {
			"kind": "struct",
			"fields": []
		},
		"::java::assets::item_definition::Banner": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "color",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::color::ColorString"
					}
				}
			]
		},
		"::java::assets::item_definition::Bed": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "texture",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "texture"
											}
										},
										"path": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "entity/bed/"
											}
										}
									}
								}
							}
						]
					}
				}
			]
		},
		"::java::assets::item_definition::BlockState": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "block_state_property",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "static",
								"value": "%fallback"
							}
						],
						"registry": "mcdoc:block_state_keys"
					}
				}
			]
		},
		"::java::assets::item_definition::Chest": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "texture",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "texture"
											}
										},
										"path": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "entity/chest/"
											}
										}
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "Defaults to `0`.\n",
					"key": "openness",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					},
					"optional": true
				}
			]
		},
		"::java::assets::item_definition::Compass": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "target",
					"type": {
						"kind": "reference",
						"path": "::java::assets::item_definition::CompassTarget"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether to oscillate for some time around target before settling. Defaults to true.\n",
					"key": "wobble",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::assets::item_definition::CompassTarget": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "None",
					"value": "none"
				},
				{
					"identifier": "Spawn",
					"value": "spawn"
				},
				{
					"identifier": "Lodestone",
					"value": "lodestone"
				},
				{
					"identifier": "Recovery",
					"value": "recovery"
				}
			]
		},
		"::java::assets::item_definition::Composite": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "models",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::assets::item_definition::ItemModel"
						}
					}
				}
			]
		},
		"::java::assets::item_definition::Condition": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "property",
					"type": {
						"kind": "reference",
						"path": "::java::assets::item_definition::ConditionalPropertyType",
						"attributes": [
							{
								"name": "id"
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"property"
								]
							}
						],
						"registry": "minecraft:conditional_item_property"
					}
				},
				{
					"kind": "pair",
					"key": "on_true",
					"type": {
						"kind": "reference",
						"path": "::java::assets::item_definition::ItemModel"
					}
				},
				{
					"kind": "pair",
					"key": "on_false",
					"type": {
						"kind": "reference",
						"path": "::java::assets::item_definition::ItemModel"
					}
				}
			]
		},
		"::java::assets::item_definition::ConditionalPropertyType": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Broken",
					"value": "broken"
				},
				{
					"identifier": "BundleHasSelectedItem",
					"value": "bundle/has_selected_item"
				},
				{
					"identifier": "Carried",
					"value": "carried"
				},
				{
					"identifier": "CustomModelData",
					"value": "custom_model_data"
				},
				{
					"identifier": "Damaged",
					"value": "damaged"
				},
				{
					"identifier": "ExtendedView",
					"value": "extended_view"
				},
				{
					"identifier": "FishingRod",
					"value": "fishing_rod/cast"
				},
				{
					"identifier": "HasComponent",
					"value": "has_component"
				},
				{
					"identifier": "KeybindDown",
					"value": "keybind_down"
				},
				{
					"identifier": "Selected",
					"value": "selected"
				},
				{
					"identifier": "UsingItem",
					"value": "using_item"
				},
				{
					"identifier": "ViewEntity",
					"value": "view_entity"
				}
			]
		},
		"::java::assets::item_definition::ConstantTint": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Constant tint color to apply.\n",
					"key": "value",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::color::RGB"
					}
				}
			]
		},
		"::java::assets::item_definition::Count": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "If false, returns count clamped to `0..max_stack_size`.\n\nIf true, returns count divided by the `max_stack_size` component, clamped to `0..1`.\n\nDefaults to true.\n",
					"key": "normalize",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::assets::item_definition::CustomModelDataFlags": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "The index of the `flags` list in the `custom_model_data` component. Defaults to 0.\n",
					"key": "index",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					},
					"optional": true
				}
			]
		},
		"::java::assets::item_definition::CustomModelDataFloats": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "The index of the `floats` list in the `custom_model_data` component. Defaults to 0.\n",
					"key": "index",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					},
					"optional": true
				}
			]
		},
		"::java::assets::item_definition::CustomModelDataStrings": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "The index of the `strings` list in the `custom_model_data` component. Defaults to 0.\n",
					"key": "index",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					},
					"optional": true
				}
			]
		},
		"::java::assets::item_definition::CustomModelDataTint": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "The index of the `colors` list in the `custom_model_data` component. Defaults to 0.\n",
					"key": "index",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Tint to apply when the `custom_model_data` component is not present, or when it doesn't have a color in the specified index.\n",
					"key": "default",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::color::RGB"
					}
				}
			]
		},
		"::java::assets::item_definition::Damage": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "If false, returns value of damage, clamped to `0..max_damage`.\n\nIf true, returns value of damage divided by the `max_damage` component, clamped to `0..1`.\n\nDefaults to true.\n",
					"key": "normalize",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::assets::item_definition::DyeTint": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Tint to apply when the `dyed_color` component is not present.\n",
					"key": "default",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "int",
								"attributes": [
									{
										"name": "canonical"
									},
									{
										"name": "color",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "composite_argb"
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "float"
								},
								"lengthRange": {
									"kind": 0,
									"min": 3,
									"max": 3
								},
								"attributes": [
									{
										"name": "color",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "dec_rgb"
											}
										}
									}
								]
							}
						]
					}
				}
			]
		},
		"::java::assets::item_definition::FireworkTint": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Tint to apply when the `firework_explosion` component is not present.\n",
					"key": "default",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "int",
								"attributes": [
									{
										"name": "canonical"
									},
									{
										"name": "color",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "composite_argb"
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "float"
								},
								"lengthRange": {
									"kind": 0,
									"min": 3,
									"max": 3
								},
								"attributes": [
									{
										"name": "color",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "dec_rgb"
											}
										}
									}
								]
							}
						]
					}
				}
			]
		},
		"::java::assets::item_definition::GrassTint": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "temperature",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				},
				{
					"kind": "pair",
					"key": "downfall",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				}
			]
		},
		"::java::assets::item_definition::HangingSign": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "wood_type",
					"type": {
						"kind": "reference",
						"path": "::java::assets::item_definition::WoodType"
					}
				},
				{
					"kind": "pair",
					"key": "texture",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "texture"
											}
										},
										"path": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "entity/signs/hanging/"
											}
										}
									}
								}
							}
						]
					}
				}
			]
		},
		"::java::assets::item_definition::HasComponent": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "component",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "data_component_type"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "Whether the default components should be handled as \"no component\". Defaults to false.\n",
					"key": "ignore_default",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::assets::item_definition::Head": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "kind",
					"type": {
						"kind": "reference",
						"path": "::java::assets::item_definition::HeadType"
					}
				},
				{
					"kind": "pair",
					"desc": "Texture to use instead of the texture from `kind`.\n\nIf present, will ignore the `profile` compnent.\n",
					"key": "texture",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "texture"
											}
										},
										"path": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "entity/"
											}
										}
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Controls the animation time for piglin and dragon heads. Defaults to `0`.\n",
					"key": "animation",
					"type": {
						"kind": "float"
					},
					"optional": true
				}
			]
		},
		"::java::assets::item_definition::HeadType": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Creeper",
					"value": "creeper"
				},
				{
					"identifier": "Dragon",
					"value": "dragon"
				},
				{
					"identifier": "Piglin",
					"value": "piglin"
				},
				{
					"identifier": "Player",
					"value": "player"
				},
				{
					"identifier": "Skeleton",
					"value": "skeleton"
				},
				{
					"identifier": "WitherSkeleton",
					"value": "wither_skeleton"
				},
				{
					"identifier": "Zombie",
					"value": "zombie"
				}
			]
		},
		"::java::assets::item_definition::ItemDefinition": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "model",
					"type": {
						"kind": "reference",
						"path": "::java::assets::item_definition::ItemModel"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether the down-and-up animation should be played in first-person view when the item stack is changed.\n\nDefaults to `true`.\n",
					"key": "hand_animation_on_swap",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.21.4"
						}
					}
				}
			]
		},
		"::java::assets::item_definition::ItemModel": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "reference",
						"path": "::java::assets::item_definition::ItemModeltype",
						"attributes": [
							{
								"name": "id"
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:item_model"
					}
				}
			]
		},
		"::java::assets::item_definition::ItemModeltype": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "BundleSelectedItem",
					"value": "bundle/selected_item"
				},
				{
					"identifier": "Composite",
					"value": "composite"
				},
				{
					"identifier": "Condition",
					"value": "condition"
				},
				{
					"identifier": "Empty",
					"value": "empty"
				},
				{
					"identifier": "Model",
					"value": "model"
				},
				{
					"identifier": "RangeDispatch",
					"value": "range_dispatch"
				},
				{
					"identifier": "Select",
					"value": "select"
				},
				{
					"identifier": "Special",
					"value": "special"
				}
			]
		},
		"::java::assets::item_definition::KeybindDown": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "The keybind ID to check for.\n",
					"key": "keybind",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::text::Keybind"
					}
				}
			]
		},
		"::java::assets::item_definition::LocalTime": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Format to use for time formatting.\n\nExamples: `yyyy-MM-dd`, `HH:mm:ss`.\n",
					"key": "pattern",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "time_pattern"
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "Defaults to the root locale.\n\nExamples: `en_US`, `cs_AU@numbers=thai;calendar=japanese`.\n",
					"key": "locale",
					"type": {
						"kind": "string"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Defaults to the timezone set on the client.\n\nExamples: `Europe/Stockholm`, `GMT+0:45`.\n",
					"key": "time_zone",
					"type": {
						"kind": "string"
					},
					"optional": true
				}
			]
		},
		"::java::assets::item_definition::MapColorTint": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Tint to apply when the `map_color` component is not present.\n",
					"key": "default",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::color::RGB"
					}
				}
			]
		},
		"::java::assets::item_definition::Model": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "model",
					"type": {
						"kind": "reference",
						"path": "::java::assets::model::ModelRef"
					}
				},
				{
					"kind": "pair",
					"key": "tints",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::assets::item_definition::ModelTint"
						}
					},
					"optional": true
				}
			]
		},
		"::java::assets::item_definition::ModelTint": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "reference",
						"path": "::java::assets::item_definition::TintSourceType",
						"attributes": [
							{
								"name": "id"
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:tint_source"
					}
				}
			]
		},
		"::java::assets::item_definition::NumericPropertyType": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "BundleFullness",
					"value": "bundle/fullness"
				},
				{
					"identifier": "Compass",
					"value": "compass"
				},
				{
					"identifier": "Cooldown",
					"value": "cooldown"
				},
				{
					"identifier": "Count",
					"value": "count"
				},
				{
					"identifier": "CrossbowPull",
					"value": "crossbow/pull"
				},
				{
					"identifier": "CustomModelData",
					"value": "custom_model_data"
				},
				{
					"identifier": "Damage",
					"value": "damage"
				},
				{
					"identifier": "Time",
					"value": "time"
				},
				{
					"identifier": "UseCycle",
					"value": "use_cycle"
				},
				{
					"identifier": "UseDuration",
					"value": "use_duration"
				}
			]
		},
		"::java::assets::item_definition::PotionTint": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Tint to apply when the `potion_contents` component is not present, or it has no effects and no `custom_color` is set.\n",
					"key": "default",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::color::RGB"
					}
				}
			]
		},
		"::java::assets::item_definition::RangeDispatch": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "property",
					"type": {
						"kind": "reference",
						"path": "::java::assets::item_definition::NumericPropertyType",
						"attributes": [
							{
								"name": "id"
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"property"
								]
							}
						],
						"registry": "minecraft:numeric_item_property"
					}
				},
				{
					"kind": "pair",
					"desc": "Factor to multiply the property value with. Defaults to 1.\n",
					"key": "scale",
					"type": {
						"kind": "float"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "List of ranges. Will select last entry with threshold less or equal to value.\n\nOrder does not matter, list will be sorted by threshold in ascending order.\n",
					"key": "entries",
					"type": {
						"kind": "list",
						"item": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "threshold",
									"type": {
										"kind": "float"
									}
								},
								{
									"kind": "pair",
									"key": "model",
									"type": {
										"kind": "reference",
										"path": "::java::assets::item_definition::ItemModel"
									}
								}
							]
						}
					}
				},
				{
					"kind": "pair",
					"desc": "Item model to render if no entries were less or equal to the value.\n",
					"key": "fallback",
					"type": {
						"kind": "reference",
						"path": "::java::assets::item_definition::ItemModel"
					},
					"optional": true
				}
			]
		},
		"::java::assets::item_definition::RangeDispatchEntry": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "threshold",
					"type": {
						"kind": "float"
					}
				},
				{
					"kind": "pair",
					"key": "model",
					"type": {
						"kind": "reference",
						"path": "::java::assets::item_definition::ItemModel"
					}
				}
			]
		},
		"::java::assets::item_definition::Select": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "property",
					"type": {
						"kind": "reference",
						"path": "::java::assets::item_definition::SelectPropertyType",
						"attributes": [
							{
								"name": "id"
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"property"
								]
							}
						],
						"registry": "minecraft:select_item_property"
					}
				},
				{
					"kind": "pair",
					"key": "cases",
					"type": {
						"kind": "list",
						"item": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "when",
									"type": {
										"kind": "union",
										"members": [
											{
												"kind": "string"
											},
											{
												"kind": "list",
												"item": {
													"kind": "string"
												}
											}
										]
									}
								},
								{
									"kind": "pair",
									"key": "model",
									"type": {
										"kind": "reference",
										"path": "::java::assets::item_definition::ItemModel"
									}
								}
							]
						}
					}
				},
				{
					"kind": "pair",
					"desc": "Item model to render if none of the cases matched the value.\n",
					"key": "fallback",
					"type": {
						"kind": "reference",
						"path": "::java::assets::item_definition::ItemModel"
					},
					"optional": true
				}
			]
		},
		"::java::assets::item_definition::SelectCase": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "when",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string"
							},
							{
								"kind": "list",
								"item": {
									"kind": "string"
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "model",
					"type": {
						"kind": "reference",
						"path": "::java::assets::item_definition::ItemModel"
					}
				}
			]
		},
		"::java::assets::item_definition::SelectPropertyType": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "BlockState",
					"value": "block_state"
				},
				{
					"identifier": "ChargeType",
					"value": "charge_type"
				},
				{
					"identifier": "ContextDimension",
					"value": "context_dimension"
				},
				{
					"identifier": "ContextEntityType",
					"value": "context_entity_type"
				},
				{
					"identifier": "CustomModelData",
					"value": "custom_model_data"
				},
				{
					"identifier": "DisplayContext",
					"value": "display_context"
				},
				{
					"identifier": "LocalTime",
					"value": "local_time"
				},
				{
					"identifier": "MainHand",
					"value": "main_hand"
				},
				{
					"identifier": "TrimMaterial",
					"value": "trim_material"
				}
			]
		},
		"::java::assets::item_definition::ShulkerBox": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "texture",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "texture"
											}
										},
										"path": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "entity/shulker/"
											}
										}
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "openness",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Defaults to `up`.\n",
					"key": "orientation",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::direction::Direction"
					},
					"optional": true
				}
			]
		},
		"::java::assets::item_definition::Special": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Renders a special hardcoded model.\n",
					"key": "model",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "type",
								"type": {
									"kind": "reference",
									"path": "::java::assets::item_definition::SpecialModelType",
									"attributes": [
										{
											"name": "id"
										}
									]
								}
							},
							{
								"kind": "spread",
								"type": {
									"kind": "dispatcher",
									"parallelIndices": [
										{
											"kind": "dynamic",
											"accessor": [
												"type"
											]
										}
									],
									"registry": "minecraft:special_item_model"
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "Base model, providing transformations, particle texture and GUI light.\n",
					"key": "base",
					"type": {
						"kind": "reference",
						"path": "::java::assets::model::ModelRef"
					}
				}
			]
		},
		"::java::assets::item_definition::SpecialModel": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "reference",
						"path": "::java::assets::item_definition::SpecialModelType",
						"attributes": [
							{
								"name": "id"
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:special_item_model"
					}
				}
			]
		},
		"::java::assets::item_definition::SpecialModelType": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Banner",
					"value": "banner"
				},
				{
					"identifier": "Bed",
					"value": "bed"
				},
				{
					"identifier": "Conduit",
					"value": "conduit"
				},
				{
					"identifier": "Chest",
					"value": "chest"
				},
				{
					"identifier": "DecoratedPot",
					"value": "decorated_pot"
				},
				{
					"identifier": "HangingSign",
					"value": "hanging_sign"
				},
				{
					"identifier": "Head",
					"value": "head"
				},
				{
					"identifier": "Shield",
					"value": "shield"
				},
				{
					"identifier": "ShulkerBox",
					"value": "shulker_box"
				},
				{
					"identifier": "StandingSign",
					"value": "standing_sign"
				},
				{
					"identifier": "Trident",
					"value": "trident"
				}
			]
		},
		"::java::assets::item_definition::StandingSign": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "wood_type",
					"type": {
						"kind": "reference",
						"path": "::java::assets::item_definition::WoodType"
					}
				},
				{
					"kind": "pair",
					"key": "texture",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "texture"
											}
										},
										"path": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "entity/signs/"
											}
										}
									}
								}
							}
						]
					}
				}
			]
		},
		"::java::assets::item_definition::TeamTint": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Tint to apply when there is no context entity, entity is not in a team or the team has no color.\n",
					"key": "default",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::color::RGB"
					}
				}
			]
		},
		"::java::assets::item_definition::Time": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "source",
					"type": {
						"kind": "reference",
						"path": "::java::assets::item_definition::TimeSource"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether to oscillate for some time around target before settling. Defaults to true.\n",
					"key": "wobble",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::assets::item_definition::TimeSource": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Daytime",
					"value": "daytime"
				},
				{
					"identifier": "MoonPhase",
					"value": "moon_phase"
				},
				{
					"identifier": "Random",
					"value": "random"
				}
			]
		},
		"::java::assets::item_definition::TintSourceType": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Constant",
					"value": "constant"
				},
				{
					"identifier": "CustomModelData",
					"value": "custom_model_data"
				},
				{
					"identifier": "Dye",
					"value": "dye"
				},
				{
					"identifier": "Firework",
					"value": "firework"
				},
				{
					"identifier": "Grass",
					"value": "grass"
				},
				{
					"identifier": "MapColor",
					"value": "map_color"
				},
				{
					"identifier": "Potion",
					"value": "potion"
				},
				{
					"identifier": "Team",
					"value": "team"
				}
			]
		},
		"::java::assets::item_definition::UseCycle": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "returns remaining item use ticks modulo `period`.\n\nDefaults to 1.\n",
					"key": "period",
					"type": {
						"kind": "float"
					},
					"optional": true
				}
			]
		},
		"::java::assets::item_definition::UseDuration": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "If true, returns remaining item use ticks.\n\nIf false, returns item use ticks so far.\n\nDefaults to false.\n",
					"key": "remaining",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::assets::item_definition::ViewEntity": {
			"kind": "struct",
			"fields": []
		},
		"::java::assets::item_definition::WoodType": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Oak",
					"value": "oak"
				},
				{
					"identifier": "Spruce",
					"value": "spruce"
				},
				{
					"identifier": "Birch",
					"value": "birch"
				},
				{
					"identifier": "Acacia",
					"value": "acacia"
				},
				{
					"identifier": "Cherry",
					"value": "cherry"
				},
				{
					"identifier": "Jungle",
					"value": "jungle"
				},
				{
					"identifier": "DarkOak",
					"value": "dark_oak"
				},
				{
					"identifier": "PaleOak",
					"value": "pale_oak"
				},
				{
					"identifier": "Mangrove",
					"value": "mangrove"
				},
				{
					"identifier": "Bamboo",
					"value": "bamboo"
				},
				{
					"identifier": "Crimson",
					"value": "crimson"
				},
				{
					"identifier": "Warped",
					"value": "warped"
				}
			]
		},
		"::java::assets::lang::Lang": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string",
						"attributes": [
							{
								"name": "translation_key",
								"value": {
									"kind": "tree",
									"values": {
										"definition": {
											"kind": "literal",
											"value": {
												"kind": "boolean",
												"value": true
											}
										}
									}
								}
							}
						]
					},
					"type": {
						"kind": "string"
					}
				}
			]
		},
		"::java::assets::model::Axis": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "X",
					"value": "x"
				},
				{
					"identifier": "Y",
					"value": "y"
				},
				{
					"identifier": "Z",
					"value": "z"
				}
			]
		},
		"::java::assets::model::ItemTransform": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "rotation",
					"type": {
						"kind": "list",
						"item": {
							"kind": "float"
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "translation",
					"type": {
						"kind": "list",
						"item": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": -80,
								"max": 80
							}
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "scale",
					"type": {
						"kind": "list",
						"item": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": -4,
								"max": 4
							}
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					},
					"optional": true
				}
			]
		},
		"::java::assets::model::ItemTransformType": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "FirstPersonRighthand",
					"value": "firstperson_righthand"
				},
				{
					"identifier": "FirstPersonLefthand",
					"value": "firstperson_lefthand"
				},
				{
					"identifier": "ThirdPersonRighthand",
					"value": "thirdperson_righthand"
				},
				{
					"identifier": "ThirdPersonLefthand",
					"value": "thirdperson_lefthand"
				},
				{
					"identifier": "Gui",
					"value": "gui"
				},
				{
					"identifier": "Head",
					"value": "head"
				},
				{
					"identifier": "Ground",
					"value": "ground"
				},
				{
					"identifier": "Fixed",
					"value": "fixed"
				}
			]
		},
		"::java::assets::model::Model": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "parent",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "model"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "ambientocclusion",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "gui_light",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "front"
								}
							},
							{
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "side"
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "textures",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": {
									"kind": "string",
									"attributes": [
										{
											"name": "model_texture",
											"value": {
												"kind": "tree",
												"values": {
													"definition": {
														"kind": "literal",
														"value": {
															"kind": "boolean",
															"value": true
														}
													}
												}
											}
										}
									]
								},
								"type": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "texture"
												}
											}
										}
									]
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "particle",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "texture"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "elements",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::assets::model::ModelElement"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "display",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": {
									"kind": "reference",
									"path": "::java::assets::model::ItemTransformType"
								},
								"type": {
									"kind": "struct",
									"fields": [
										{
											"kind": "pair",
											"key": "rotation",
											"type": {
												"kind": "list",
												"item": {
													"kind": "float"
												},
												"lengthRange": {
													"kind": 0,
													"min": 3,
													"max": 3
												}
											},
											"optional": true
										},
										{
											"kind": "pair",
											"key": "translation",
											"type": {
												"kind": "list",
												"item": {
													"kind": "float",
													"valueRange": {
														"kind": 0,
														"min": -80,
														"max": 80
													}
												},
												"lengthRange": {
													"kind": 0,
													"min": 3,
													"max": 3
												}
											},
											"optional": true
										},
										{
											"kind": "pair",
											"key": "scale",
											"type": {
												"kind": "list",
												"item": {
													"kind": "float",
													"valueRange": {
														"kind": 0,
														"min": -4,
														"max": 4
													}
												},
												"lengthRange": {
													"kind": 0,
													"min": 3,
													"max": 3
												}
											},
											"optional": true
										}
									]
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.4"
								}
							}
						}
					],
					"key": "overrides",
					"type": {
						"kind": "list",
						"item": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "predicate",
									"type": {
										"kind": "struct",
										"fields": [
											{
												"kind": "pair",
												"key": {
													"kind": "reference",
													"path": "::java::assets::model::Predicates"
												},
												"type": {
													"kind": "float"
												}
											}
										]
									}
								},
								{
									"kind": "pair",
									"key": "model",
									"type": {
										"kind": "reference",
										"path": "::java::assets::model::ModelRef"
									}
								}
							]
						}
					},
					"optional": true
				}
			]
		},
		"::java::assets::model::ModelDisplay": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "reference",
						"path": "::java::assets::model::ItemTransformType"
					},
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "rotation",
								"type": {
									"kind": "list",
									"item": {
										"kind": "float"
									},
									"lengthRange": {
										"kind": 0,
										"min": 3,
										"max": 3
									}
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "translation",
								"type": {
									"kind": "list",
									"item": {
										"kind": "float",
										"valueRange": {
											"kind": 0,
											"min": -80,
											"max": 80
										}
									},
									"lengthRange": {
										"kind": 0,
										"min": 3,
										"max": 3
									}
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "scale",
								"type": {
									"kind": "list",
									"item": {
										"kind": "float",
										"valueRange": {
											"kind": 0,
											"min": -4,
											"max": 4
										}
									},
									"lengthRange": {
										"kind": 0,
										"min": 3,
										"max": 3
									}
								},
								"optional": true
							}
						]
					}
				}
			]
		},
		"::java::assets::model::ModelElement": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "from",
					"type": {
						"kind": "list",
						"item": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": -16,
								"max": 32
							}
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					}
				},
				{
					"kind": "pair",
					"key": "to",
					"type": {
						"kind": "list",
						"item": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": -16,
								"max": 32
							}
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					}
				},
				{
					"kind": "pair",
					"key": "faces",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": {
									"kind": "reference",
									"path": "::java::server::util::direction::Direction"
								},
								"type": {
									"kind": "struct",
									"fields": [
										{
											"kind": "pair",
											"key": "texture",
											"type": {
												"kind": "string",
												"attributes": [
													{
														"name": "model_texture"
													}
												]
											}
										},
										{
											"kind": "pair",
											"key": "uv",
											"type": {
												"kind": "list",
												"item": {
													"kind": "float"
												},
												"lengthRange": {
													"kind": 0,
													"min": 4,
													"max": 4
												}
											},
											"optional": true
										},
										{
											"kind": "pair",
											"key": "cullface",
											"type": {
												"kind": "reference",
												"path": "::java::server::util::direction::Direction"
											},
											"optional": true
										},
										{
											"kind": "pair",
											"key": "rotation",
											"type": {
												"kind": "union",
												"members": [
													{
														"kind": "literal",
														"value": {
															"kind": "int",
															"value": 0
														}
													},
													{
														"kind": "literal",
														"value": {
															"kind": "int",
															"value": 90
														}
													},
													{
														"kind": "literal",
														"value": {
															"kind": "int",
															"value": 180
														}
													},
													{
														"kind": "literal",
														"value": {
															"kind": "int",
															"value": 270
														}
													}
												]
											},
											"optional": true
										},
										{
											"kind": "pair",
											"key": "tintindex",
											"type": {
												"kind": "int"
											},
											"optional": true
										}
									]
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "rotation",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "origin",
								"type": {
									"kind": "list",
									"item": {
										"kind": "float"
									},
									"lengthRange": {
										"kind": 0,
										"min": 3,
										"max": 3
									}
								}
							},
							{
								"kind": "pair",
								"key": "axis",
								"type": {
									"kind": "reference",
									"path": "::java::assets::model::Axis"
								}
							},
							{
								"kind": "pair",
								"key": "angle",
								"type": {
									"kind": "union",
									"members": [
										{
											"kind": "literal",
											"value": {
												"kind": "double",
												"value": -45
											}
										},
										{
											"kind": "literal",
											"value": {
												"kind": "double",
												"value": -22.5
											}
										},
										{
											"kind": "literal",
											"value": {
												"kind": "double",
												"value": 0
											}
										},
										{
											"kind": "literal",
											"value": {
												"kind": "double",
												"value": 22.5
											}
										},
										{
											"kind": "literal",
											"value": {
												"kind": "double",
												"value": 45
											}
										}
									]
								}
							},
							{
								"kind": "pair",
								"desc": "Defaults to `false`.\n",
								"key": "rescale",
								"type": {
									"kind": "boolean"
								},
								"optional": true
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "shade",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						}
					],
					"key": "light_emission",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 15
						}
					},
					"optional": true
				}
			]
		},
		"::java::assets::model::ModelElementFace": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "texture",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "model_texture"
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "uv",
					"type": {
						"kind": "list",
						"item": {
							"kind": "float"
						},
						"lengthRange": {
							"kind": 0,
							"min": 4,
							"max": 4
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "cullface",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::direction::Direction"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "rotation",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "literal",
								"value": {
									"kind": "int",
									"value": 0
								}
							},
							{
								"kind": "literal",
								"value": {
									"kind": "int",
									"value": 90
								}
							},
							{
								"kind": "literal",
								"value": {
									"kind": "int",
									"value": 180
								}
							},
							{
								"kind": "literal",
								"value": {
									"kind": "int",
									"value": 270
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "tintindex",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::assets::model::ModelElementFaceMap": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "reference",
						"path": "::java::server::util::direction::Direction"
					},
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "texture",
								"type": {
									"kind": "string",
									"attributes": [
										{
											"name": "model_texture"
										}
									]
								}
							},
							{
								"kind": "pair",
								"key": "uv",
								"type": {
									"kind": "list",
									"item": {
										"kind": "float"
									},
									"lengthRange": {
										"kind": 0,
										"min": 4,
										"max": 4
									}
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "cullface",
								"type": {
									"kind": "reference",
									"path": "::java::server::util::direction::Direction"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "rotation",
								"type": {
									"kind": "union",
									"members": [
										{
											"kind": "literal",
											"value": {
												"kind": "int",
												"value": 0
											}
										},
										{
											"kind": "literal",
											"value": {
												"kind": "int",
												"value": 90
											}
										},
										{
											"kind": "literal",
											"value": {
												"kind": "int",
												"value": 180
											}
										},
										{
											"kind": "literal",
											"value": {
												"kind": "int",
												"value": 270
											}
										}
									]
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "tintindex",
								"type": {
									"kind": "int"
								},
								"optional": true
							}
						]
					}
				}
			]
		},
		"::java::assets::model::ModelElementRotation": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "origin",
					"type": {
						"kind": "list",
						"item": {
							"kind": "float"
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					}
				},
				{
					"kind": "pair",
					"key": "axis",
					"type": {
						"kind": "reference",
						"path": "::java::assets::model::Axis"
					}
				},
				{
					"kind": "pair",
					"key": "angle",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "literal",
								"value": {
									"kind": "double",
									"value": -45
								}
							},
							{
								"kind": "literal",
								"value": {
									"kind": "double",
									"value": -22.5
								}
							},
							{
								"kind": "literal",
								"value": {
									"kind": "double",
									"value": 0
								}
							},
							{
								"kind": "literal",
								"value": {
									"kind": "double",
									"value": 22.5
								}
							},
							{
								"kind": "literal",
								"value": {
									"kind": "double",
									"value": 45
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "Defaults to `false`.\n",
					"key": "rescale",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::assets::model::ModelOverride": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "predicate",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": {
									"kind": "reference",
									"path": "::java::assets::model::Predicates"
								},
								"type": {
									"kind": "float"
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "model",
					"type": {
						"kind": "reference",
						"path": "::java::assets::model::ModelRef"
					}
				}
			]
		},
		"::java::assets::model::ModelOverridePredicates": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "reference",
						"path": "::java::assets::model::Predicates"
					},
					"type": {
						"kind": "float"
					}
				}
			]
		},
		"::java::assets::model::ModelRef": {
			"kind": "string",
			"attributes": [
				{
					"name": "id",
					"value": {
						"kind": "tree",
						"values": {
							"registry": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "model"
								}
							},
							"exclude": {
								"kind": "tree",
								"values": {
									"0": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "builtin/generated"
										}
									},
									"1": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "builtin/entity"
										}
									}
								}
							}
						}
					}
				}
			]
		},
		"::java::assets::model::ModelTextures": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string",
						"attributes": [
							{
								"name": "model_texture",
								"value": {
									"kind": "tree",
									"values": {
										"definition": {
											"kind": "literal",
											"value": {
												"kind": "boolean",
												"value": true
											}
										}
									}
								}
							}
						]
					},
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "texture"
									}
								}
							}
						]
					}
				}
			]
		},
		"::java::assets::model::Predicates": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Angle",
					"value": "angle"
				},
				{
					"identifier": "Blocking",
					"value": "blocking"
				},
				{
					"identifier": "Broken",
					"value": "broken"
				},
				{
					"identifier": "Cast",
					"value": "cast"
				},
				{
					"identifier": "Charged",
					"value": "charged"
				},
				{
					"identifier": "Cooldown",
					"value": "cooldown"
				},
				{
					"identifier": "CustomModelData",
					"value": "custom_model_data"
				},
				{
					"identifier": "Damage",
					"value": "damage"
				},
				{
					"identifier": "Damaged",
					"value": "damaged"
				},
				{
					"identifier": "Firework",
					"value": "firework"
				},
				{
					"identifier": "HoneyLevel",
					"value": "honey_level"
				},
				{
					"identifier": "Lefthanded",
					"value": "lefthanded"
				},
				{
					"identifier": "Level",
					"value": "level"
				},
				{
					"identifier": "Pull",
					"value": "pull"
				},
				{
					"identifier": "Pulling",
					"value": "pulling"
				},
				{
					"identifier": "Throwing",
					"value": "throwing"
				},
				{
					"identifier": "Time",
					"value": "time"
				},
				{
					"identifier": "Tooting",
					"value": "tooting"
				},
				{
					"identifier": "TrimType",
					"value": "trim_type"
				}
			]
		},
		"::java::assets::particle::Particle": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "textures",
					"type": {
						"kind": "list",
						"item": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "tree",
										"values": {
											"registry": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "texture"
												}
											},
											"path": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "particle/"
												}
											}
										}
									}
								}
							]
						}
					}
				}
			]
		},
		"::java::assets::regional_compliancies::Notification": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "delay",
					"type": {
						"kind": "long"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "period",
					"type": {
						"kind": "long"
					}
				},
				{
					"kind": "pair",
					"key": "title",
					"type": {
						"kind": "string"
					}
				},
				{
					"kind": "pair",
					"key": "message",
					"type": {
						"kind": "string"
					}
				}
			]
		},
		"::java::assets::regional_compliancies::RegionalCompliancies": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string"
					},
					"type": {
						"kind": "reference",
						"path": "::java::assets::regional_compliancies::Notification"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.18.2"
						}
					}
				}
			]
		},
		"::java::assets::shader::post::<anonymous 0>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "name",
					"type": {
						"kind": "string"
					}
				},
				{
					"kind": "pair",
					"key": "intarget",
					"type": {
						"kind": "string"
					}
				},
				{
					"kind": "pair",
					"key": "outtarget",
					"type": {
						"kind": "string"
					}
				},
				{
					"kind": "pair",
					"key": "auxtargets",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::assets::shader::post::AuxTarget"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "use_linear_filter",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "uniforms",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::assets::shader::post::Uniform"
						}
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "until",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.21.2"
						}
					}
				}
			]
		},
		"::java::assets::shader::post::<anonymous 1>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "program",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "shader"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "inputs",
					"type": {
						"kind": "list",
						"item": {
							"kind": "union",
							"members": [
								{
									"kind": "reference",
									"path": "::java::assets::shader::post::TargetInput"
								},
								{
									"kind": "reference",
									"path": "::java::assets::shader::post::TextureInput"
								}
							]
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "output",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "shader_target"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "uniforms",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::assets::shader::post::Uniform"
						}
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.21.2"
						}
					}
				}
			]
		},
		"::java::assets::shader::post::AuxTarget": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "name",
					"type": {
						"kind": "string"
					}
				},
				{
					"kind": "pair",
					"key": "id",
					"type": {
						"kind": "string"
					}
				},
				{
					"kind": "pair",
					"key": "width",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "height",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "bilinear",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::assets::shader::post::FixedSizedTarget": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "width",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"key": "height",
					"type": {
						"kind": "int"
					}
				}
			]
		},
		"::java::assets::shader::post::FullScreenTarget": {
			"kind": "struct",
			"fields": []
		},
		"::java::assets::shader::post::OldTarget": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "name",
					"type": {
						"kind": "string"
					}
				},
				{
					"kind": "pair",
					"key": "width",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "height",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::assets::shader::post::Pass": {
			"kind": "union",
			"members": [
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "name",
							"type": {
								"kind": "string"
							}
						},
						{
							"kind": "pair",
							"key": "intarget",
							"type": {
								"kind": "string"
							}
						},
						{
							"kind": "pair",
							"key": "outtarget",
							"type": {
								"kind": "string"
							}
						},
						{
							"kind": "pair",
							"key": "auxtargets",
							"type": {
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::assets::shader::post::AuxTarget"
								}
							},
							"optional": true
						},
						{
							"kind": "pair",
							"key": "use_linear_filter",
							"type": {
								"kind": "boolean"
							},
							"optional": true
						},
						{
							"kind": "pair",
							"key": "uniforms",
							"type": {
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::assets::shader::post::Uniform"
								}
							},
							"optional": true
						}
					],
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						}
					]
				},
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "program",
							"type": {
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "shader"
											}
										}
									}
								]
							}
						},
						{
							"kind": "pair",
							"key": "inputs",
							"type": {
								"kind": "list",
								"item": {
									"kind": "union",
									"members": [
										{
											"kind": "reference",
											"path": "::java::assets::shader::post::TargetInput"
										},
										{
											"kind": "reference",
											"path": "::java::assets::shader::post::TextureInput"
										}
									]
								}
							},
							"optional": true
						},
						{
							"kind": "pair",
							"key": "output",
							"type": {
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "shader_target"
											}
										}
									}
								]
							},
							"optional": true
						},
						{
							"kind": "pair",
							"key": "uniforms",
							"type": {
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::assets::shader::post::Uniform"
								}
							},
							"optional": true
						}
					],
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						}
					]
				}
			]
		},
		"::java::assets::shader::post::PostEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "targets",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "list",
								"item": {
									"kind": "union",
									"members": [
										{
											"kind": "string"
										},
										{
											"kind": "reference",
											"path": "::java::assets::shader::post::OldTarget"
										}
									]
								},
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.21.2"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::assets::shader::post::Targets",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.21.2"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "passes",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::assets::shader::post::Pass"
						}
					},
					"optional": true
				}
			]
		},
		"::java::assets::shader::post::TargetInput": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "target",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "shader_target"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "sampler_name",
					"type": {
						"kind": "string"
					}
				},
				{
					"kind": "pair",
					"key": "use_depth_buffer",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "bilinear",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::assets::shader::post::Targets": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "shader_target"
									}
								}
							}
						]
					},
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::assets::shader::post::FixedSizedTarget"
							},
							{
								"kind": "reference",
								"path": "::java::assets::shader::post::FullScreenTarget"
							}
						]
					}
				}
			]
		},
		"::java::assets::shader::post::TextureInput": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "location",
					"type": {
						"kind": "string"
					}
				},
				{
					"kind": "pair",
					"key": "sampler_name",
					"type": {
						"kind": "string"
					}
				},
				{
					"kind": "pair",
					"key": "width",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1
						}
					}
				},
				{
					"kind": "pair",
					"key": "height",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1
						}
					}
				},
				{
					"kind": "pair",
					"key": "bilinear",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::assets::shader::post::Uniform": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "name",
					"type": {
						"kind": "string"
					}
				},
				{
					"kind": "pair",
					"key": "values",
					"type": {
						"kind": "list",
						"item": {
							"kind": "float"
						},
						"lengthRange": {
							"kind": 0,
							"min": 0,
							"max": 4
						}
					}
				}
			]
		},
		"::java::assets::shader::program::BlendFactor": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Zero",
					"value": "0"
				},
				{
					"identifier": "Zero2",
					"value": "zero"
				},
				{
					"identifier": "One",
					"value": "1"
				},
				{
					"identifier": "One2",
					"value": "one"
				},
				{
					"identifier": "SrcColor",
					"value": "srccolor"
				},
				{
					"identifier": "OneSrcColor",
					"value": "1-srccolor"
				},
				{
					"identifier": "DstColor",
					"value": "dstcolor"
				},
				{
					"identifier": "OneDstColor",
					"value": "1-dstcolor"
				},
				{
					"identifier": "SrcAlpha",
					"value": "srcalpha"
				},
				{
					"identifier": "OneSrcAlpha",
					"value": "1-srcalpha"
				},
				{
					"identifier": "DstAlpha",
					"value": "dstalpha"
				},
				{
					"identifier": "OneDstAlpha",
					"value": "1-dstalpha"
				}
			]
		},
		"::java::assets::shader::program::BlendFunc": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Add",
					"value": "add"
				},
				{
					"identifier": "Subtract",
					"value": "subtract"
				},
				{
					"identifier": "ReverseSubtract",
					"value": "reversesubtract"
				},
				{
					"identifier": "ReverseSubtract2",
					"value": "reverse_subtract"
				},
				{
					"identifier": "Min",
					"value": "min"
				},
				{
					"identifier": "Max",
					"value": "max"
				}
			]
		},
		"::java::assets::shader::program::BlendMode": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "func",
					"type": {
						"kind": "reference",
						"path": "::java::assets::shader::program::BlendFunc"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "srcrgb",
					"type": {
						"kind": "reference",
						"path": "::java::assets::shader::program::BlendFactor"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "dstrgb",
					"type": {
						"kind": "reference",
						"path": "::java::assets::shader::program::BlendFactor"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "srcalpha",
					"type": {
						"kind": "reference",
						"path": "::java::assets::shader::program::BlendFactor"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "dstalpha",
					"type": {
						"kind": "reference",
						"path": "::java::assets::shader::program::BlendFactor"
					},
					"optional": true
				}
			]
		},
		"::java::assets::shader::program::Defines": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Values that will be injected as `#define <key> <value>` at the top of the file.\n",
					"key": "values",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": {
									"kind": "string"
								},
								"type": {
									"kind": "string"
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Flags that will be injected as `#define <key>` at the top of the file.\n",
					"key": "flags",
					"type": {
						"kind": "list",
						"item": {
							"kind": "string"
						}
					},
					"optional": true
				}
			]
		},
		"::java::assets::shader::program::DefinesValues": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string"
					},
					"type": {
						"kind": "string"
					}
				}
			]
		},
		"::java::assets::shader::program::Sampler": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "name",
					"type": {
						"kind": "string"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						}
					],
					"key": "file",
					"type": {
						"kind": "string"
					},
					"optional": true
				}
			]
		},
		"::java::assets::shader::program::ShaderProgram": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "vertex",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.21.2"
											}
										}
									}
								]
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.21.2"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "shader/vertex"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "fragment",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.21.2"
											}
										}
									}
								]
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.21.2"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "shader/fragment"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "samplers",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::assets::shader::program::Sampler"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						}
					],
					"key": "attributes",
					"type": {
						"kind": "list",
						"item": {
							"kind": "string"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "uniforms",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::assets::shader::program::Uniform"
						}
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						}
					],
					"desc": "Unused.\n",
					"key": "blend",
					"type": {
						"kind": "reference",
						"path": "::java::assets::shader::program::BlendMode"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						}
					],
					"key": "cull",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						}
					],
					"desc": "Defines GLSL directives to be injected into the shader source.\n",
					"key": "defines",
					"type": {
						"kind": "reference",
						"path": "::java::assets::shader::program::Defines"
					},
					"optional": true
				}
			]
		},
		"::java::assets::shader::program::Uniform": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "name",
					"type": {
						"kind": "string"
					}
				},
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "reference",
						"path": "::java::assets::shader::program::UniformType"
					}
				},
				{
					"kind": "pair",
					"key": "count",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"key": "values",
					"type": {
						"kind": "list",
						"item": {
							"kind": "float"
						}
					}
				}
			]
		},
		"::java::assets::shader::program::UniformType": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Int",
					"value": "int"
				},
				{
					"identifier": "Float",
					"value": "float"
				},
				{
					"identifier": "Matrix2x2",
					"value": "matrix2x2"
				},
				{
					"identifier": "Matrix3x3",
					"value": "matrix3x3"
				},
				{
					"identifier": "Matrix4x4",
					"value": "matrix4x4"
				}
			]
		},
		"::java::assets::sounds::Sound": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Changes how `name` is interpreted. Defaults to `sound`.\n",
					"key": "type",
					"type": {
						"kind": "reference",
						"path": "::java::assets::sounds::SoundType"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "name",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:sound_type"
					}
				},
				{
					"kind": "pair",
					"desc": "Defaults to 1.0.\n",
					"key": "volume",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Default is 1.0.\n",
					"key": "pitch",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Chance that this sound is selected to play. Defaults to 1.\n",
					"key": "weight",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the sound should be loaded when loading the pack instead of when the sound is played. Used by the underwater ambience. Defaults to false.\n",
					"key": "preload",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "If true it will be streamed from its file. Sounds longer than a few seconds should enable this to avoid lag. Defaults to false.\n\nWhen false many instances of the sound can be ran at the same time. When true only allows 4 instances (of that type) can be played.\n",
					"key": "stream",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Modify sound reduction rate based on distance. Defaults to 16.\n",
					"key": "attenuation_distance",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::assets::sounds::SoundEventRegistration": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "The sound files this sound event uses. One sound is randomly selected to play when the event is triggered. Defaults to assumed path.\n",
					"key": "sounds",
					"type": {
						"kind": "list",
						"item": {
							"kind": "union",
							"members": [
								{
									"kind": "string"
								},
								{
									"kind": "reference",
									"path": "::java::assets::sounds::Sound"
								}
							]
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "If true the sounds listed should replace the ones listed in the minecraft sounds.json for this sound event.\n\nFalse if the sounds listed should be added. If undefined. Defaults to false.\n",
					"key": "replace",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Translated as the subtitle when Show Subtitles is enabled. Section sign formatting codes are supported.\n",
					"key": "subtitle",
					"type": {
						"kind": "string"
					},
					"optional": true
				}
			]
		},
		"::java::assets::sounds::Sounds": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "weighed_sound_event"
									}
								}
							}
						]
					},
					"type": {
						"kind": "reference",
						"path": "::java::assets::sounds::SoundEventRegistration"
					}
				}
			]
		},
		"::java::assets::sounds::SoundType": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "File",
					"value": "file"
				},
				{
					"identifier": "SoundEvent",
					"value": "event"
				}
			]
		},
		"::java::assets::texture_meta::ColormapTextureMeta": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Causes the texture to blur when viewed from close up. Defaults to false.\n",
					"key": "blur",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Causes the texture to stretch instead of tiling in cases where it otherwise would, such as on the shadow. Defaults to false.\n",
					"key": "clamp",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Custom mipmap values for the texture.\n",
					"key": "mipmaps",
					"type": {
						"kind": "int_array"
					},
					"optional": true
				}
			]
		},
		"::java::assets::texture_meta::TextureAnimation": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "If true, additional frames will be generated between frames with a frame time greater than 1 between them. Defaults to false.\n",
					"key": "interpolate",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "The width of the tile, as a direct ratio rather than in pixels. Can be used by resource packs to have frames that are not perfect squares.\n",
					"key": "width",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "The height of the tile, as a direct ratio rather than in pixels. Can be used by resource packs to have frames that are not perfect squares.\n",
					"key": "height",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Sets the default time for each frame in increments of one game tick. Defaults to 1.\n",
					"key": "frametime",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Defaults to displaying all the frames from top to bottom.\n",
					"key": "frames",
					"type": {
						"kind": "list",
						"item": {
							"kind": "union",
							"members": [
								{
									"kind": "struct",
									"fields": [
										{
											"kind": "pair",
											"desc": "A number corresponding to position of a frame from the top, with the top frame being 0.\n",
											"key": "index",
											"type": {
												"kind": "int"
											}
										},
										{
											"kind": "pair",
											"desc": "The time in ticks to show this frame, overriding `frametime` above.\n",
											"key": "time",
											"type": {
												"kind": "int"
											}
										}
									]
								},
								{
									"kind": "int"
								}
							]
						}
					},
					"optional": true
				}
			]
		},
		"::java::assets::texture_meta::TextureAnimationFrame": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "A number corresponding to position of a frame from the top, with the top frame being 0.\n",
					"key": "index",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"desc": "The time in ticks to show this frame, overriding `frametime` above.\n",
					"key": "time",
					"type": {
						"kind": "int"
					}
				}
			]
		},
		"::java::assets::texture_meta::TextureMeta": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "animation",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"desc": "If true, additional frames will be generated between frames with a frame time greater than 1 between them. Defaults to false.\n",
								"key": "interpolate",
								"type": {
									"kind": "boolean"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"desc": "The width of the tile, as a direct ratio rather than in pixels. Can be used by resource packs to have frames that are not perfect squares.\n",
								"key": "width",
								"type": {
									"kind": "int"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"desc": "The height of the tile, as a direct ratio rather than in pixels. Can be used by resource packs to have frames that are not perfect squares.\n",
								"key": "height",
								"type": {
									"kind": "int"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"desc": "Sets the default time for each frame in increments of one game tick. Defaults to 1.\n",
								"key": "frametime",
								"type": {
									"kind": "int"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"desc": "Defaults to displaying all the frames from top to bottom.\n",
								"key": "frames",
								"type": {
									"kind": "list",
									"item": {
										"kind": "union",
										"members": [
											{
												"kind": "struct",
												"fields": [
													{
														"kind": "pair",
														"desc": "A number corresponding to position of a frame from the top, with the top frame being 0.\n",
														"key": "index",
														"type": {
															"kind": "int"
														}
													},
													{
														"kind": "pair",
														"desc": "The time in ticks to show this frame, overriding `frametime` above.\n",
														"key": "time",
														"type": {
															"kind": "int"
														}
													}
												]
											},
											{
												"kind": "int"
											}
										]
									}
								},
								"optional": true
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "Only available for villager textures.\n",
					"key": "villager",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"desc": "Determines whether the villager's 'profession' hat layer should allow the 'type' hat layer to render or not. If this mcmeta is undefined the default is used.\n",
								"key": "hat",
								"type": {
									"kind": "union",
									"members": [
										{
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "full"
											}
										},
										{
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "partial"
											}
										}
									]
								},
								"optional": true
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "Only available for colormaps.\n",
					"key": "texture",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"desc": "Causes the texture to blur when viewed from close up. Defaults to false.\n",
								"key": "blur",
								"type": {
									"kind": "boolean"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"desc": "Causes the texture to stretch instead of tiling in cases where it otherwise would, such as on the shadow. Defaults to false.\n",
								"key": "clamp",
								"type": {
									"kind": "boolean"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"desc": "Custom mipmap values for the texture.\n",
								"key": "mipmaps",
								"type": {
									"kind": "int_array"
								},
								"optional": true
							}
						]
					}
				}
			]
		},
		"::java::assets::texture_meta::VillagerTextureMeta": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Determines whether the villager's 'profession' hat layer should allow the 'type' hat layer to render or not. If this mcmeta is undefined the default is used.\n",
					"key": "hat",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "full"
								}
							},
							{
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "partial"
								}
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::Advancement": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "If present, advancement will be visible in the advancement tabs.\n",
					"key": "display",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::AdvancementDisplay"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "If this field is absent, this advancement is a root advancement.\n\nCircular references cause a loading failure.\n",
					"key": "parent",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "advancement"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "If `requirements` is not defined, all defined criteria will be required.\n",
					"key": "criteria",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": {
									"kind": "string",
									"attributes": [
										{
											"name": "criterion",
											"value": {
												"kind": "tree",
												"values": {
													"definition": {
														"kind": "literal",
														"value": {
															"kind": "boolean",
															"value": true
														}
													}
												}
											}
										}
									]
								},
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::AdvancementCriterion"
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "Contains all of the `criteria` keys.\n\nIf all criteria are required at once, this may be omitted.\n\nWith multiple criteria: this contains a list of lists with criteria (all criteria must be mentioned).\n\nIf all of the lists each have any criteria met, the advancement is complete (basically AND grouping of OR groups).\n",
					"key": "requirements",
					"type": {
						"kind": "list",
						"item": {
							"kind": "list",
							"item": {
								"kind": "string",
								"attributes": [
									{
										"name": "criterion"
									}
								]
							}
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Provided to the player when this advancement is obtained.\n",
					"key": "rewards",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::AdvancementRewards"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Defaults to `false`. The vanilla game client only reads this for advancements from the `minecraft` namespace.\n",
					"key": "sends_telemetry_event",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::AdvancementCriteriaMap": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string",
						"attributes": [
							{
								"name": "criterion",
								"value": {
									"kind": "tree",
									"values": {
										"definition": {
											"kind": "literal",
											"value": {
												"kind": "boolean",
												"value": true
											}
										}
									}
								}
							}
						]
					},
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::AdvancementCriterion"
					}
				}
			]
		},
		"::java::data::advancement::AdvancementCriterion": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Many triggers can occur multiple times, however, the reward will only be provided multiple times if the advancement is first revoked, which is often done within the function reward.\n",
					"key": "trigger",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::advancement::Trigger",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.3"
											}
										}
									},
									{
										"name": "id"
									}
								]
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.3"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "trigger_type"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"trigger"
								]
							}
						],
						"registry": "minecraft:trigger"
					}
				}
			]
		},
		"::java::data::advancement::AdvancementDisplay": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "icon",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::advancement::AdvancementIcon",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::server::world::item::ItemStack",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "title",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::text::Text"
					}
				},
				{
					"kind": "pair",
					"key": "description",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::text::Text"
					}
				},
				{
					"kind": "pair",
					"desc": "Used for the advancement tab (root advancement only).\n",
					"key": "background",
					"type": {
						"kind": "string"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Controls the advancement tile frame. Defaults to `task`.\n",
					"key": "frame",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::AdvancementFrame"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether to show the toast pop up after completing this advancement. Defaults to `true`.\n",
					"key": "show_toast",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether to announce in the chat when this advancement has been completed. Defaults to `true`.\n",
					"key": "announce_to_chat",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether or not to hide this advancement and all its children from the advancement screen,\n\nuntil this advancement have been completed.\n\nHas no effect on root advancements themselves, but still affects all their children.\n\nDefaults to `false`.\n",
					"key": "hidden",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::AdvancementFrame": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Task",
					"value": "task"
				},
				{
					"identifier": "Challenge",
					"value": "challenge"
				},
				{
					"identifier": "Goal",
					"value": "goal"
				}
			]
		},
		"::java::data::advancement::AdvancementIcon": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "item",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "item"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "nbt",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "nbt",
								"value": {
									"kind": "dispatcher",
									"parallelIndices": [
										{
											"kind": "dynamic",
											"accessor": [
												"item"
											]
										}
									],
									"registry": "minecraft:item"
								}
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::AdvancementRewards": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Function to run as the player (not at). Function group tags are not allowed.\n",
					"key": "function",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "function"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Loot tables to give.\n",
					"key": "loot",
					"type": {
						"kind": "list",
						"item": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "loot_table"
										}
									}
								}
							]
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Recipes to unlock.\n",
					"key": "recipes",
					"type": {
						"kind": "list",
						"item": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "recipe"
										}
									}
								}
							]
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "XP to add.\n",
					"key": "experience",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::predicate::<anonymous 0>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "contains",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::advancement::predicate::P"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "count",
					"type": {
						"kind": "list",
						"item": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "test",
									"type": {
										"kind": "reference",
										"path": "::java::data::advancement::predicate::P"
									}
								},
								{
									"kind": "pair",
									"key": "count",
									"type": {
										"kind": "concrete",
										"child": {
											"kind": "reference",
											"path": "::java::data::util::MinMaxBounds"
										},
										"typeArgs": [
											{
												"kind": "int"
											}
										]
									}
								}
							]
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "size",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "int"
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::predicate::AttributeModifiersPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "modifiers",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::advancement::predicate::CollectionPredicate"
						},
						"typeArgs": [
							{
								"kind": "reference",
								"path": "::java::data::advancement::predicate::AttributeModifiersPredicateEntry"
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::predicate::AttributeModifiersPredicateEntry": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "attribute",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "attribute"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "attribute"
												}
											}
										}
									]
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "id",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "attribute_modifier"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "amount",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "double"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "operation",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::attribute::AttributeOperation"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "slot",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::attribute::AttributeSlot"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::predicate::AxolotlPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "variant",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::AxolotlVariant"
					}
				}
			]
		},
		"::java::data::advancement::predicate::AxolotlVariant": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Lucy",
					"value": "lucy"
				},
				{
					"identifier": "Wild",
					"value": "wild"
				},
				{
					"identifier": "Gold",
					"value": "gold"
				},
				{
					"identifier": "Cyan",
					"value": "cyan"
				},
				{
					"identifier": "Blue",
					"value": "blue"
				}
			]
		},
		"::java::data::advancement::predicate::BlockPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"key": "block",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "block"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"key": "blocks",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "block"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "block"
												}
											}
										}
									]
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"key": "tag",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "block"
											}
										},
										"tags": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "implicit"
											}
										}
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "state",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"blocks"
								]
							}
						],
						"registry": "mcdoc:block_states"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "nbt",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "nbt",
								"value": {
									"kind": "dispatcher",
									"parallelIndices": [
										{
											"kind": "dynamic",
											"accessor": [
												"blocks"
											]
										}
									],
									"registry": "minecraft:block"
								}
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::predicate::BoatPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "variant",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::boat::BoatType"
					}
				}
			]
		},
		"::java::data::advancement::predicate::BundleContentsPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "items",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::advancement::predicate::CollectionPredicate"
						},
						"typeArgs": [
							{
								"kind": "reference",
								"path": "::java::data::advancement::predicate::ItemPredicate"
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::predicate::CatPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "variant",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "cat_variant"
											}
										}
									}
								]
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "cat_variant"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "cat_variant"
												}
											}
										}
									]
								},
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							}
						]
					}
				}
			]
		},
		"::java::data::advancement::predicate::CollectionCountPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "test",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::P"
					}
				},
				{
					"kind": "pair",
					"key": "count",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "int"
							}
						]
					}
				}
			]
		},
		"::java::data::advancement::predicate::CollectionPredicate": {
			"kind": "template",
			"child": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "contains",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::advancement::predicate::P"
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "count",
						"type": {
							"kind": "list",
							"item": {
								"kind": "struct",
								"fields": [
									{
										"kind": "pair",
										"key": "test",
										"type": {
											"kind": "reference",
											"path": "::java::data::advancement::predicate::P"
										}
									},
									{
										"kind": "pair",
										"key": "count",
										"type": {
											"kind": "concrete",
											"child": {
												"kind": "reference",
												"path": "::java::data::util::MinMaxBounds"
											},
											"typeArgs": [
												{
													"kind": "int"
												}
											]
										}
									}
								]
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "size",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::util::MinMaxBounds"
							},
							"typeArgs": [
								{
									"kind": "int"
								}
							]
						},
						"optional": true
					}
				]
			},
			"typeParams": [
				{
					"path": "::java::data::advancement::predicate::P"
				}
			]
		},
		"::java::data::advancement::predicate::ContainerPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "items",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::advancement::predicate::CollectionPredicate"
						},
						"typeArgs": [
							{
								"kind": "reference",
								"path": "::java::data::advancement::predicate::ItemPredicate"
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::predicate::DamagePredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Amount of incoming damage before damage reduction.\n",
					"key": "dealt",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "float"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Amount of incoming damage after damage reduction.\n",
					"key": "taken",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "float"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the damage was successfully blocked.\n",
					"key": "blocked",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Source of the damage (eg: a skeleton shooting an arrow or player igniting tnt).\n",
					"key": "source_entity",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::EntityPredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "The type of the damage source.\n",
					"key": "type",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::DamageSourcePredicate"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::predicate::DamageSourceFlags": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "is_explosion",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "is_fire",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "is_magic",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "is_projectile",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "is_lightning",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "bypasses_armor",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "bypasses_invulnerability",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "bypasses_magic",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::predicate::DamageSourcePredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19.4"
								}
							}
						}
					],
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "is_explosion",
								"type": {
									"kind": "boolean"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "is_fire",
								"type": {
									"kind": "boolean"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "is_magic",
								"type": {
									"kind": "boolean"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "is_projectile",
								"type": {
									"kind": "boolean"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "is_lightning",
								"type": {
									"kind": "boolean"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "bypasses_armor",
								"type": {
									"kind": "boolean"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "bypasses_invulnerability",
								"type": {
									"kind": "boolean"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "bypasses_magic",
								"type": {
									"kind": "boolean"
								},
								"optional": true
							}
						]
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19.4"
								}
							}
						}
					],
					"desc": "Damage type tags that the damage type is in.\n",
					"key": "tags",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::advancement::predicate::DamageTagPredicate"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Source of the damage (eg: a skeleton shooting an arrow or player igniting tnt).\n",
					"key": "source_entity",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::EntityPredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Direct entity responsible for the damage (eg: the arrow or tnt).\n",
					"key": "direct_entity",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::EntityPredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"desc": "Damage is direct when its direct and source entities are the same.\n",
					"key": "is_direct",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::predicate::DamageTagPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "The damage type tag to check.\n",
					"key": "id",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "damage_type"
											}
										},
										"tags": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "implicit"
											}
										}
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "Whether the damage is expected to have or not have the tag.\n",
					"key": "expected",
					"type": {
						"kind": "boolean"
					}
				}
			]
		},
		"::java::data::advancement::predicate::DistancePredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "x",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "float"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "y",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "float"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "z",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "float"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "absolute",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "float"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "horizontal",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "float"
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::predicate::EnchantmentPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"key": "enchantment",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "enchantment"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"key": "enchantments",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "enchantment"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "enchantment"
												}
											}
										}
									]
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "levels",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "int"
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::predicate::EntityEffects": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "mob_effect"
									}
								}
							}
						]
					},
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::MobEffectPredicate"
					}
				}
			]
		},
		"::java::data::advancement::predicate::EntityEquipment": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "reference",
						"path": "::java::server::util::inventory::EquipmentSlot"
					},
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::ItemPredicate"
					}
				}
			]
		},
		"::java::data::advancement::predicate::EntityFlagsPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "is_on_fire",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "is_sneaking",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "is_sprinting",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "is_swimming",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "is_baby",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"key": "is_on_ground",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"key": "is_flying",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::predicate::EntityInventorySlots": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string",
						"attributes": [
							{
								"name": "item_slots"
							}
						]
					},
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::ItemPredicate"
					}
				}
			]
		},
		"::java::data::advancement::predicate::EntityPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "entity_type"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "entity_type"
												}
											}
										}
									]
								},
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "type_specific",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::EntitySubPredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "team",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "team"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "nbt",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "nbt",
								"value": {
									"kind": "dispatcher",
									"parallelIndices": [
										{
											"kind": "dynamic",
											"accessor": [
												"type"
											]
										}
									],
									"registry": "minecraft:entity"
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "location",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::LocationPredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "distance",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::DistancePredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "flags",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::EntityFlagsPredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "equipment",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": {
									"kind": "reference",
									"path": "::java::server::util::inventory::EquipmentSlot"
								},
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::ItemPredicate"
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "player",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::PlayerPredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"key": "vehicle",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::EntityPredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"key": "passenger",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::EntityPredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"key": "stepping_on",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::LocationPredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "The entity that a mob's AI/aggro is targeting.\n",
					"key": "targeted_entity",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::EntityPredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						},
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "fishing_hook",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::FishingHookPredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						},
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "lightning_bolt",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::LightningBoltPredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "catType",
					"type": {
						"kind": "string"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "effects",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "mob_effect"
												}
											}
										}
									]
								},
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::MobEffectPredicate"
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"key": "slots",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": {
									"kind": "string",
									"attributes": [
										{
											"name": "item_slots"
										}
									]
								},
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::ItemPredicate"
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"key": "movement",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::MovementPredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"desc": "True every `n` ticks of an entity's lifetime.\n",
					"key": "periodic_tick",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"desc": "Whether the block at most 0.5 blocks below the entity is present which can affect its movement.\n",
					"key": "movement_affected_by",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::LocationPredicate"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::predicate::EntitySubPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::advancement::predicate::SpecificType",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									},
									{
										"name": "id"
									}
								]
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "entity_sub_predicate_type"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:entity_sub_predicate"
					}
				}
			]
		},
		"::java::data::advancement::predicate::FireworkExplosionPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "shape",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::firework::FireworkShape"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "has_twinkle",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "has_trail",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::predicate::FireworksPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "explosions",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::advancement::predicate::CollectionPredicate"
						},
						"typeArgs": [
							{
								"kind": "reference",
								"path": "::java::data::advancement::predicate::FireworkExplosionPredicate"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "flight_duration",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "int"
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::predicate::FishingHookPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "in_open_water",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::predicate::FluidPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"key": "fluid",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "fluid"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"key": "tag",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "fluid"
											}
										},
										"tags": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "implicit"
											}
										}
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"key": "fluids",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "fluid"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "fluid"
												}
											}
										}
									]
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "state",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": {
									"kind": "string"
								},
								"type": {
									"kind": "union",
									"members": [
										{
											"kind": "concrete",
											"child": {
												"kind": "reference",
												"path": "::java::data::util::MinMaxBounds"
											},
											"typeArgs": [
												{
													"kind": "int"
												}
											]
										},
										{
											"kind": "boolean"
										},
										{
											"kind": "string"
										}
									]
								}
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::predicate::FluidPredicateState": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string"
					},
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::data::util::MinMaxBounds"
								},
								"typeArgs": [
									{
										"kind": "int"
									}
								]
							},
							{
								"kind": "boolean"
							},
							{
								"kind": "string"
							}
						]
					}
				}
			]
		},
		"::java::data::advancement::predicate::FoxPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "variant",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::fox::FoxType"
					}
				}
			]
		},
		"::java::data::advancement::predicate::FrogPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "variant",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "frog_variant"
											}
										}
									}
								]
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "frog_variant"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "frog_variant"
												}
											}
										}
									]
								},
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							}
						]
					}
				}
			]
		},
		"::java::data::advancement::predicate::GameMode": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Survival",
					"value": "survival"
				},
				{
					"identifier": "Creative",
					"value": "creative"
				},
				{
					"identifier": "Adventure",
					"value": "adventure"
				},
				{
					"identifier": "Spectator",
					"value": "spectator"
				}
			]
		},
		"::java::data::advancement::predicate::HorsePredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "variant",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::HorseVariant"
					}
				}
			]
		},
		"::java::data::advancement::predicate::HorseVariant": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "White",
					"value": "white"
				},
				{
					"identifier": "Creamy",
					"value": "creamy"
				},
				{
					"identifier": "Chestnut",
					"value": "chestnut"
				},
				{
					"identifier": "Brown",
					"value": "brown"
				},
				{
					"identifier": "Black",
					"value": "black"
				},
				{
					"identifier": "Gray",
					"value": "gray"
				},
				{
					"identifier": "DarkBrown",
					"value": "dark_brown"
				}
			]
		},
		"::java::data::advancement::predicate::InputPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "forward",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "backward",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "left",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "right",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "jump",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "sneak",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "sprint",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::predicate::ItemDamagePredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "damage",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "int"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "durability",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "int"
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::predicate::ItemPredicate": {
			"kind": "union",
			"members": [
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"attributes": [
								{
									"name": "until",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "1.17"
										}
									}
								}
							],
							"key": "item",
							"type": {
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "item"
											}
										}
									}
								]
							},
							"optional": true
						},
						{
							"kind": "pair",
							"attributes": [
								{
									"name": "since",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "1.17"
										}
									}
								}
							],
							"key": "items",
							"type": {
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "item"
												}
											}
										}
									]
								}
							},
							"optional": true
						},
						{
							"kind": "pair",
							"key": "tag",
							"type": {
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "item"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "implicit"
													}
												}
											}
										}
									}
								]
							},
							"optional": true
						},
						{
							"kind": "pair",
							"key": "durability",
							"type": {
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::data::util::MinMaxBounds"
								},
								"typeArgs": [
									{
										"kind": "int"
									}
								]
							},
							"optional": true
						},
						{
							"kind": "pair",
							"key": "potion",
							"type": {
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "potion"
											}
										}
									}
								]
							},
							"optional": true
						},
						{
							"kind": "pair",
							"key": "enchantments",
							"type": {
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::EnchantmentPredicate"
								}
							},
							"optional": true
						},
						{
							"kind": "pair",
							"key": "stored_enchantments",
							"type": {
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::EnchantmentPredicate"
								}
							},
							"optional": true
						},
						{
							"kind": "pair",
							"key": "nbt",
							"type": {
								"kind": "string",
								"attributes": [
									{
										"name": "nbt",
										"value": {
											"kind": "dispatcher",
											"parallelIndices": [
												{
													"kind": "dynamic",
													"accessor": [
														"item"
													]
												}
											],
											"registry": "minecraft:item"
										}
									}
								]
							},
							"optional": true
						}
					],
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					]
				},
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "items",
							"type": {
								"kind": "union",
								"members": [
									{
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "tree",
													"values": {
														"registry": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "item"
															}
														},
														"tags": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "allowed"
															}
														}
													}
												}
											}
										]
									},
									{
										"kind": "list",
										"item": {
											"kind": "string",
											"attributes": [
												{
													"name": "id",
													"value": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "item"
														}
													}
												}
											]
										}
									}
								]
							},
							"optional": true
						},
						{
							"kind": "pair",
							"key": "count",
							"type": {
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::data::util::MinMaxBounds"
								},
								"typeArgs": [
									{
										"kind": "int"
									}
								]
							},
							"optional": true
						},
						{
							"kind": "pair",
							"key": "components",
							"type": {
								"kind": "reference",
								"path": "::java::server::world::item::DataComponentPredicate"
							},
							"optional": true
						},
						{
							"kind": "pair",
							"key": "predicates",
							"type": {
								"kind": "reference",
								"path": "::java::data::advancement::predicate::ItemSubPredicate"
							},
							"optional": true
						}
					],
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					]
				}
			]
		},
		"::java::data::advancement::predicate::ItemSubPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "item_sub_predicate_type"
									}
								}
							}
						]
					},
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									{
										"keyword": "key"
									}
								]
							}
						],
						"registry": "minecraft:item_sub_predicate"
					}
				}
			]
		},
		"::java::data::advancement::predicate::JukeboxPlayablePredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "song",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "jukebox_song"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "jukebox_song"
												}
											}
										}
									]
								}
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::predicate::LightningBoltPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "blocks_set_on_fire",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "int"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "entity_struck",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::EntityPredicate"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::predicate::LlamaPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "variant",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::LlamaVariant"
					}
				}
			]
		},
		"::java::data::advancement::predicate::LlamaVariant": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Creamy",
					"value": "creamy"
				},
				{
					"identifier": "White",
					"value": "white"
				},
				{
					"identifier": "Brown",
					"value": "brown"
				},
				{
					"identifier": "Gray",
					"value": "gray"
				}
			]
		},
		"::java::data::advancement::predicate::LocationPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "position",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "x",
								"type": {
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::util::MinMaxBounds"
									},
									"typeArgs": [
										{
											"kind": "float"
										}
									]
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "y",
								"type": {
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::util::MinMaxBounds"
									},
									"typeArgs": [
										{
											"kind": "float"
										}
									]
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "z",
								"type": {
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::util::MinMaxBounds"
									},
									"typeArgs": [
										{
											"kind": "float"
										}
									]
								},
								"optional": true
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"key": "biome",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.16"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "biome"
											}
										}
									}
								]
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.16"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "worldgen/biome"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"key": "biomes",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "worldgen/biome"
													}
												},
												"tags": {
													"kind": "reference",
													"path": "::java::data::advancement::predicate::allowed"
												}
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "worldgen/biome"
												}
											}
										}
									]
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "feature",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18.2"
											}
										}
									}
								]
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18.2"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "worldgen/configured_structure_feature"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						},
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"key": "structure",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "worldgen/structure"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"key": "structures",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "worldgen/structure"
													}
												},
												"tags": {
													"kind": "reference",
													"path": "::java::data::advancement::predicate::allowed"
												}
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "worldgen/structure"
												}
											}
										}
									]
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "dimension",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "dimension"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Calculated using: `max(sky-darkening, block)`.\n",
					"key": "light",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "light",
								"type": {
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::util::MinMaxBounds"
									},
									"typeArgs": [
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 15
											}
										}
									]
								},
								"optional": true
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "block",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::BlockPredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "fluid",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::FluidPredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Whether the block is above (5 blocks or less) a campfire or soul campfire.\n",
					"key": "smokey",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"desc": "Whether the location has the maximum possible level of sky light\n",
					"key": "can_see_sky",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::predicate::LocationPredicateLight": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "light",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 0,
									"max": 15
								}
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::predicate::LocationPredicatePosition": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "x",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "float"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "y",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "float"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "z",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "float"
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::predicate::MobEffectPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "amplifier",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "int"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "duration",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "int"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "ambient",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "visible",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::predicate::MooshroomPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "variant",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::mooshroom::MooshroomType"
					}
				}
			]
		},
		"::java::data::advancement::predicate::MovementPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "x",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "float"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "y",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "float"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "z",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "float"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "speed",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "float"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "horizontal_speed",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "float"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "vertical_speed",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "float"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "fall_distance",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "float"
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::predicate::PaintingPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "variant",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "painting_variant"
											}
										}
									}
								]
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "painting_variant"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "painting_variant"
												}
											}
										}
									]
								},
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							}
						]
					}
				}
			]
		},
		"::java::data::advancement::predicate::ParrotPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "variant",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::ParrotVariant"
					}
				}
			]
		},
		"::java::data::advancement::predicate::ParrotVariant": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "RedBlue",
					"value": "red_blue"
				},
				{
					"identifier": "Blue",
					"value": "blue"
				},
				{
					"identifier": "Green",
					"value": "green"
				},
				{
					"identifier": "YellowBlue",
					"value": "yellow_blue"
				},
				{
					"identifier": "Gray",
					"value": "gray"
				}
			]
		},
		"::java::data::advancement::predicate::PlayerAdvancementCriteria": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string"
					},
					"type": {
						"kind": "boolean"
					}
				}
			]
		},
		"::java::data::advancement::predicate::PlayerAdvancements": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "advancement"
									}
								}
							}
						]
					},
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "boolean"
							},
							{
								"kind": "struct",
								"fields": [
									{
										"kind": "pair",
										"key": {
											"kind": "string"
										},
										"type": {
											"kind": "boolean"
										}
									}
								]
							}
						]
					}
				}
			]
		},
		"::java::data::advancement::predicate::PlayerPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "advancements",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "advancement"
												}
											}
										}
									]
								},
								"type": {
									"kind": "union",
									"members": [
										{
											"kind": "boolean"
										},
										{
											"kind": "struct",
											"fields": [
												{
													"kind": "pair",
													"key": {
														"kind": "string"
													},
													"type": {
														"kind": "boolean"
													}
												}
											]
										}
									]
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "gamemode",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::advancement::predicate::GameMode",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.21"
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::GameMode"
								},
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.21"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Experience/XP level.\n",
					"key": "level",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "int"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "recipes",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "recipe"
												}
											}
										}
									]
								},
								"type": {
									"kind": "boolean"
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "stats",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::advancement::predicate::StatisticPredicate"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "looking_at",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::EntityPredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						}
					],
					"desc": "Checks the movement keys of the player.\n",
					"key": "input",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "forward",
								"type": {
									"kind": "boolean"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "backward",
								"type": {
									"kind": "boolean"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "left",
								"type": {
									"kind": "boolean"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "right",
								"type": {
									"kind": "boolean"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "jump",
								"type": {
									"kind": "boolean"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "sneak",
								"type": {
									"kind": "boolean"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "sprint",
								"type": {
									"kind": "boolean"
								},
								"optional": true
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::predicate::PlayerRecipes": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "recipe"
									}
								}
							}
						]
					},
					"type": {
						"kind": "boolean"
					}
				}
			]
		},
		"::java::data::advancement::predicate::PostComponentsItemPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "items",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "item"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "item"
												}
											}
										}
									]
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "count",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "int"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "components",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::DataComponentPredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "predicates",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::ItemSubPredicate"
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::data::advancement::predicate::PreComponentsItemPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"key": "item",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "item"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"key": "items",
					"type": {
						"kind": "list",
						"item": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "item"
										}
									}
								}
							]
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "tag",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "item"
											}
										},
										"tags": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "implicit"
											}
										}
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "durability",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "int"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "potion",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "potion"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "enchantments",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::advancement::predicate::EnchantmentPredicate"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "stored_enchantments",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::advancement::predicate::EnchantmentPredicate"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "nbt",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "nbt",
								"value": {
									"kind": "dispatcher",
									"parallelIndices": [
										{
											"kind": "dynamic",
											"accessor": [
												"item"
											]
										}
									],
									"registry": "minecraft:item"
								}
							}
						]
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "until",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::data::advancement::predicate::RabbitPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "variant",
					"type": {
						"kind": "string"
					}
				}
			]
		},
		"::java::data::advancement::predicate::RabbitVariant": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Brown",
					"value": "brown"
				},
				{
					"identifier": "White",
					"value": "white"
				},
				{
					"identifier": "Black",
					"value": "black"
				},
				{
					"identifier": "WhiteSplotched",
					"value": "white_splotched"
				},
				{
					"identifier": "Gold",
					"value": "gold"
				},
				{
					"identifier": "Salt",
					"value": "salt"
				},
				{
					"identifier": "Evil",
					"value": "evil"
				}
			]
		},
		"::java::data::advancement::predicate::RaiderPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "has_raid",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "is_captain",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::predicate::SalmonPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "variant",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::SalmonVariant"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::predicate::SalmonVariant": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Small",
					"value": "small"
				},
				{
					"identifier": "Medium",
					"value": "medium"
				},
				{
					"identifier": "Large",
					"value": "large"
				}
			]
		},
		"::java::data::advancement::predicate::SheepPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "sheared",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "color",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::color::ColorString"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::predicate::SlimePredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "size",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "int"
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::predicate::SpecificType": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Any",
					"value": "any"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19.3"
								}
							}
						}
					],
					"identifier": "Axolotl",
					"value": "axolotl"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19.3"
								}
							}
						}
					],
					"identifier": "Boat",
					"value": "boat"
				},
				{
					"identifier": "Cat",
					"value": "cat"
				},
				{
					"identifier": "FishingHook",
					"value": "fishing_hook"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19.3"
								}
							}
						}
					],
					"identifier": "Fox",
					"value": "fox"
				},
				{
					"identifier": "Frog",
					"value": "frog"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19.3"
								}
							}
						}
					],
					"identifier": "Horse",
					"value": "horse"
				},
				{
					"identifier": "Lightning",
					"value": "lightning"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19.3"
								}
							}
						}
					],
					"identifier": "Llama",
					"value": "llama"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19.3"
								}
							}
						}
					],
					"identifier": "Mooshroom",
					"value": "mooshroom"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19.3"
								}
							}
						}
					],
					"identifier": "Painting",
					"value": "painting"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19.3"
								}
							}
						}
					],
					"identifier": "Parrot",
					"value": "parrot"
				},
				{
					"identifier": "Player",
					"value": "player"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19.3"
								}
							}
						}
					],
					"identifier": "Rabbit",
					"value": "rabbit"
				},
				{
					"identifier": "Slime",
					"value": "slime"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19.3"
								}
							}
						}
					],
					"identifier": "TropicalFish",
					"value": "tropical_fish"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19.3"
								}
							}
						}
					],
					"identifier": "Villager",
					"value": "villager"
				}
			],
			"attributes": [
				{
					"name": "until",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::data::advancement::predicate::StatisticPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "stat_type"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "stat",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:statistic_type"
					}
				},
				{
					"kind": "pair",
					"key": "value",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "int"
							}
						]
					}
				}
			]
		},
		"::java::data::advancement::predicate::TrimPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "material",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "trim_material"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "trim_material"
												}
											}
										}
									]
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "pattern",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "trim_pattern"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "trim_pattern"
												}
											}
										}
									]
								}
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::predicate::TropicalFishPattern": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Kob",
					"value": "kob"
				},
				{
					"identifier": "Sunstreak",
					"value": "sunstreak"
				},
				{
					"identifier": "Snooper",
					"value": "snooper"
				},
				{
					"identifier": "Dasher",
					"value": "dasher"
				},
				{
					"identifier": "Brinely",
					"value": "brinely"
				},
				{
					"identifier": "Spotty",
					"value": "spotty"
				},
				{
					"identifier": "Flopper",
					"value": "flopper"
				},
				{
					"identifier": "Stripey",
					"value": "stripey"
				},
				{
					"identifier": "Glitter",
					"value": "glitter"
				},
				{
					"identifier": "Blockfish",
					"value": "blockfish"
				},
				{
					"identifier": "Betty",
					"value": "betty"
				},
				{
					"identifier": "Clayfish",
					"value": "clayfish"
				}
			]
		},
		"::java::data::advancement::predicate::TropicalFishPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "The pattern of the tropical fish.\n",
					"key": "variant",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::TropicalFishPattern"
					}
				}
			]
		},
		"::java::data::advancement::predicate::VillagerPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "variant",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "villager_type"
									}
								}
							}
						]
					}
				}
			]
		},
		"::java::data::advancement::predicate::WolfPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "variant",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "wolf_variant"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "wolf_variant"
												}
											}
										}
									]
								}
							}
						]
					}
				}
			]
		},
		"::java::data::advancement::predicate::WritableBookPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "pages",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::advancement::predicate::CollectionPredicate"
						},
						"typeArgs": [
							{
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::server::util::Filterable"
								},
								"typeArgs": [
									{
										"kind": "string"
									}
								]
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::predicate::WrittenBookPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "pages",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::advancement::predicate::CollectionPredicate"
						},
						"typeArgs": [
							{
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::server::util::Filterable"
								},
								"typeArgs": [
									{
										"kind": "reference",
										"path": "::java::server::util::text::Text"
									}
								]
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "author",
					"type": {
						"kind": "string"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "title",
					"type": {
						"kind": "string"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "generation",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "int"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "resolved",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::Trigger": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"identifier": "AllayDropItemOnBlock",
					"value": "allay_drop_item_on_block"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"identifier": "AvoidVibration",
					"value": "avoid_vibration"
				},
				{
					"identifier": "BeeNestDestroyed",
					"value": "bee_nest_destroyed"
				},
				{
					"identifier": "BredAnimals",
					"value": "bred_animals"
				},
				{
					"identifier": "BrewedPotion",
					"value": "brewed_potion"
				},
				{
					"identifier": "ChangedDimension",
					"value": "changed_dimension"
				},
				{
					"identifier": "ChanneledLightning",
					"value": "channeled_lightning"
				},
				{
					"identifier": "ConstructBeacon",
					"value": "construct_beacon"
				},
				{
					"identifier": "ConsumeItem",
					"value": "consume_item"
				},
				{
					"identifier": "CuredZombieVillager",
					"value": "cured_zombie_villager"
				},
				{
					"identifier": "EffectsChanged",
					"value": "effects_changed"
				},
				{
					"identifier": "EnchantedItem",
					"value": "enchanted_item"
				},
				{
					"identifier": "EnterBlock",
					"value": "enter_block"
				},
				{
					"identifier": "EntityHurtPlayer",
					"value": "entity_hurt_player"
				},
				{
					"identifier": "EntityKilledPlayer",
					"value": "entity_killed_player"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"identifier": "FallFromHeight",
					"value": "fall_from_height"
				},
				{
					"identifier": "FilledBucket",
					"value": "filled_bucket"
				},
				{
					"identifier": "FishingRodHooked",
					"value": "fishing_rod_hooked"
				},
				{
					"identifier": "HeroOfTheVillage",
					"value": "hero_of_the_village"
				},
				{
					"identifier": "Impossible",
					"value": "impossible"
				},
				{
					"identifier": "InventoryChanged",
					"value": "inventory_changed"
				},
				{
					"identifier": "ItemDurabilityChanged",
					"value": "item_durability_changed"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"identifier": "ItemUsedOnBlock",
					"value": "item_used_on_block"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"identifier": "KillMobNearSculkCatalyst",
					"value": "kill_mob_near_sculk_catalyst"
				},
				{
					"identifier": "KilledByCrossbow",
					"value": "killed_by_crossbow"
				},
				{
					"identifier": "Levitation",
					"value": "levitation"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"identifier": "LightningStrike",
					"value": "lightning_strike"
				},
				{
					"identifier": "Location",
					"value": "location"
				},
				{
					"identifier": "NetherTravel",
					"value": "nether_travel"
				},
				{
					"identifier": "PlacedBlock",
					"value": "placed_block"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"identifier": "PlayerGeneratesContainerLoot",
					"value": "player_generates_container_loot"
				},
				{
					"identifier": "PlayerHurtEntity",
					"value": "player_hurt_entity"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"identifier": "PlayerInteractedWithEntity",
					"value": "player_interacted_with_entity"
				},
				{
					"identifier": "PlayerKilledEntity",
					"value": "player_killed_entity"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20"
								}
							}
						}
					],
					"identifier": "RecipeCrafted",
					"value": "recipe_crafted"
				},
				{
					"identifier": "RecipeUnlocked",
					"value": "recipe_unlocked"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"identifier": "RideEntityInLava",
					"value": "ride_entity_in_lava"
				},
				{
					"identifier": "ShotCrossbow",
					"value": "shot_crossbow"
				},
				{
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"identifier": "SafelyHarvestHoney",
					"value": "safely_harvest_honey"
				},
				{
					"identifier": "SleptInBed",
					"value": "slept_in_bed"
				},
				{
					"identifier": "SlideDownBlock",
					"value": "slide_down_block"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"identifier": "StartedRiding",
					"value": "started_riding"
				},
				{
					"identifier": "SummonedEntity",
					"value": "summoned_entity"
				},
				{
					"identifier": "TameAnimal",
					"value": "tame_animal"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"identifier": "TargetHit",
					"value": "target_hit"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"identifier": "ThrownItemPickedUpByEntity",
					"value": "thrown_item_picked_up_by_entity"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"identifier": "ThrownItemPickedUpByPlayer",
					"value": "thrown_item_picked_up_by_player"
				},
				{
					"identifier": "Tick",
					"value": "tick"
				},
				{
					"identifier": "UsedEnderEye",
					"value": "used_ender_eye"
				},
				{
					"identifier": "UsedTotem",
					"value": "used_totem"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"identifier": "UsingItem",
					"value": "using_item"
				},
				{
					"identifier": "VillagerTrade",
					"value": "villager_trade"
				},
				{
					"identifier": "VoluntaryExile",
					"value": "voluntary_exile"
				}
			]
		},
		"::java::data::advancement::trigger::<anonymous 0>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "conditions",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::C"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::<anonymous 1>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "conditions",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::C"
					}
				}
			]
		},
		"::java::data::advancement::trigger::<anonymous 2>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "location",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::LocationPredicate"
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.16"
						}
					}
				}
			]
		},
		"::java::data::advancement::trigger::<anonymous 3>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "recipe_id",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "recipe"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "ingredients",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::advancement::predicate::ItemPredicate"
						},
						"lengthRange": {
							"kind": 0,
							"min": 1,
							"max": 9
						}
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::<anonymous 4>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "mob_effect"
									}
								}
							}
						]
					},
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::MobEffectPredicate"
					}
				}
			]
		},
		"::java::data::advancement::trigger::AllayDropItemOnBlock": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20"
								}
							}
						}
					],
					"key": "item",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::ItemPredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "location",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::advancement::predicate::LocationPredicate",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20"
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::data::loot::LootCondition"
								},
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::AnyBlockUse": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "location",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::loot::LootCondition"
						}
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::BeeNestDestroyed": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "block",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "block"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Number of bees that were inside the bee nest/beehive before it was broken.\n",
					"key": "num_bees_inside",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Item used to break the block.\n",
					"key": "item",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::ItemPredicate"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::BredAnimals": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "parent",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::CompositeEntity"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "partner",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::CompositeEntity"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "child",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::CompositeEntity"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::BrewedPotion": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "potion",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "potion"
									}
								}
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::ChangedDimension": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "from",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "dimension"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "to",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "dimension"
									}
								}
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::ChanneledLightning": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "victims",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::advancement::trigger::CompositeEntity"
						}
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::CompositeEntity": {
			"kind": "union",
			"members": [
				{
					"kind": "reference",
					"path": "::java::data::advancement::predicate::EntityPredicate"
				},
				{
					"kind": "list",
					"item": {
						"kind": "reference",
						"path": "::java::data::loot::LootCondition"
					},
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					]
				}
			]
		},
		"::java::data::advancement::trigger::Conditions": {
			"kind": "template",
			"child": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "conditions",
						"type": {
							"kind": "reference",
							"path": "::java::data::advancement::trigger::C"
						},
						"optional": true
					}
				]
			},
			"typeParams": [
				{
					"path": "::java::data::advancement::trigger::C"
				}
			]
		},
		"::java::data::advancement::trigger::ConstructBeacon": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Tier of the updated beacon base.\n",
					"key": "level",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "int"
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::ConsumeItem": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "item",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::ItemPredicate"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::CuredZombieVillager": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "villager",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::CompositeEntity"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "zombie",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::CompositeEntity"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::DefaultBlockUse": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"desc": "The location of the block.\n",
					"key": "location",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::loot::LootCondition"
						}
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::EffectsChanged": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "effects",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "mob_effect"
												}
											}
										}
									]
								},
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::MobEffectPredicate"
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "source",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::CompositeEntity"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::EnchantedItem": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "item",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::ItemPredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "levels",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "int"
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::EnterBlock": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "block",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "block"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "state",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"block"
								]
							}
						],
						"registry": "mcdoc:block_states"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::EntityHurtPlayer": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "damage",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::DamagePredicate"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::EntityKilledPlayer": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "entity",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::CompositeEntity"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "killing_blow",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::DamageSourcePredicate"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::FallAfterExplosion": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "start_position",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::LocationPredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "distance",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::DistancePredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "cause",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::CompositeEntity"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::FallFromHeight": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "start_position",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::LocationPredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "distance",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::DistancePredicate"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::FilledBucket": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "item",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::ItemPredicate"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::FishingRodHooked": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Entity that was pulled.\n",
					"key": "entity",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::CompositeEntity"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Item that was caught.\n",
					"key": "item",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::ItemPredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Fishing rod used.\n",
					"key": "rod",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::ItemPredicate"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::HoneyHarvestedBlock": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "block",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "block"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "tag",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "block"
											}
										},
										"tags": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "implicit"
											}
										}
									}
								}
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::InventoryChanged": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "slots",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"desc": "Amount of empty slots.\n",
								"key": "empty",
								"type": {
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::util::MinMaxBounds"
									},
									"typeArgs": [
										{
											"kind": "int"
										}
									]
								},
								"optional": true
							},
							{
								"kind": "pair",
								"desc": "Amount of occupied slots.\n",
								"key": "occupied",
								"type": {
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::util::MinMaxBounds"
									},
									"typeArgs": [
										{
											"kind": "int"
										}
									]
								},
								"optional": true
							},
							{
								"kind": "pair",
								"desc": "Amount of slots that are a full stack.\n",
								"key": "full",
								"type": {
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::util::MinMaxBounds"
									},
									"typeArgs": [
										{
											"kind": "int"
										}
									]
								},
								"optional": true
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "items",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::advancement::predicate::ItemPredicate"
						}
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::InventoryChangedSlots": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Amount of empty slots.\n",
					"key": "empty",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "int"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Amount of occupied slots.\n",
					"key": "occupied",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "int"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Amount of slots that are a full stack.\n",
					"key": "full",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "int"
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::ItemDurabilityChanged": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Change in durability (negative numbers are used to indicate a decrease in durability).\n",
					"key": "delta",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "int"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "The resulting durability.\n",
					"key": "durability",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "int"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "The item before its durability changed.\n",
					"key": "item",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::ItemPredicate"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::ItemUsedOnBlock": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20"
								}
							}
						}
					],
					"key": "item",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::ItemPredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "location",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::advancement::predicate::LocationPredicate",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20"
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::data::loot::LootCondition"
								},
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::KilledByArrow": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"desc": "How many different types of entities were killed.\n",
					"key": "unique_entity_types",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "int"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "The weapon item that was used to fire the arrow.\n",
					"key": "fired_from_weapon",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::ItemPredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "victims",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::advancement::trigger::CompositeEntity"
						}
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::KilledByCrossbow": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"desc": "How many different types of entities were killed.\n",
					"key": "unique_entity_types",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "int"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "victims",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::advancement::trigger::CompositeEntity"
						}
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::KillMobNearSculkCatalyst": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "entity",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::EntityPredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "killing_blow",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::DamageSourcePredicate"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::Levitation": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "distance",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::DistancePredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "duration",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "int"
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::LightningStrike": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "lightning",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::CompositeEntity"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "bystander",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::CompositeEntity"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::Location": {
			"kind": "union",
			"members": [
				{
					"kind": "reference",
					"path": "::java::data::advancement::predicate::LocationPredicate",
					"attributes": [
						{
							"name": "deprecated",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						},
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					]
				},
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "spread",
							"type": {
								"kind": "reference",
								"path": "::java::data::advancement::trigger::TriggerBase"
							}
						},
						{
							"kind": "pair",
							"attributes": [
								{
									"name": "until",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "1.19"
										}
									}
								}
							],
							"key": "location",
							"type": {
								"kind": "reference",
								"path": "::java::data::advancement::predicate::LocationPredicate"
							},
							"optional": true
						}
					],
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					]
				}
			]
		},
		"::java::data::advancement::trigger::NetherTravel": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"desc": "Where in the Overworld the player was when they travelled to the Nether.\n",
					"key": "start_position",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::LocationPredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "How far the player now is from the coordinate they started at in the Overworld before travelling.\n",
					"key": "distance",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::DistancePredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"desc": "Where in the Overworld the player was when they travelled to the Nether.\n",
					"key": "entered",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::LocationPredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"desc": "Where in the Nether the player was when they travelled back to the Overworld.\n",
					"key": "exited",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::LocationPredicate"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::PlacedBlock": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20"
								}
							}
						}
					],
					"key": "block",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "block"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20"
								}
							}
						}
					],
					"key": "state",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"block"
								]
							}
						],
						"registry": "mcdoc:block_states"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20"
								}
							}
						}
					],
					"desc": "Item that was used to place the block before the item was consumed.\n",
					"key": "item",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::ItemPredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Where the block was placed.\n",
					"key": "location",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::advancement::predicate::LocationPredicate",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20"
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::data::loot::LootCondition"
								},
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::PlayerGeneratesContainerLoot": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "loot_table",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "loot_table"
									}
								}
							}
						]
					}
				}
			]
		},
		"::java::data::advancement::trigger::PlayerHurtEntity": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "damage",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::DamagePredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "entity",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::CompositeEntity"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::PlayerInteractedWithEntity": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "item",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::ItemPredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "entity",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::CompositeEntity"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::PlayerKilledEntity": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "entity",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::CompositeEntity"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "killing_blow",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::DamageSourcePredicate"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::RecipeCrafted": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "recipe_id",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "recipe"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "ingredients",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::advancement::predicate::ItemPredicate"
						},
						"lengthRange": {
							"kind": 0,
							"min": 1,
							"max": 9
						}
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::RecipeUnlocked": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "recipe",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "recipe"
									}
								}
							}
						]
					}
				}
			]
		},
		"::java::data::advancement::trigger::RequiredConditions": {
			"kind": "template",
			"child": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "conditions",
						"type": {
							"kind": "reference",
							"path": "::java::data::advancement::trigger::C"
						}
					}
				]
			},
			"typeParams": [
				{
					"path": "::java::data::advancement::trigger::C"
				}
			]
		},
		"::java::data::advancement::trigger::RideEntityInLava": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "start_position",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::LocationPredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "distance",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::DistancePredicate"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::SafelyHarvestHoney": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "block",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "block",
								"type": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "block"
												}
											}
										}
									]
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "tag",
								"type": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "block"
														}
													},
													"tags": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "implicit"
														}
													}
												}
											}
										}
									]
								},
								"optional": true
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "item",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::ItemPredicate"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::ShotCrossbow": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Crossbow that was used.\n",
					"key": "item",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::ItemPredicate"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::SlideDownBlock": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "block",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "block"
									}
								}
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::SummonedEntity": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "entity",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::CompositeEntity"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::TameAnimal": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "entity",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::CompositeEntity"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::TargetHit": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "projectile",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::CompositeEntity"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "shooter",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::CompositeEntity"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "signal_strength",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "int"
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::ThrownItemPickedUpByEntity": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "item",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::ItemPredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "entity",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::CompositeEntity"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::ThrownItemPickedUpByPlayer": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "item",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::ItemPredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "entity",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::CompositeEntity"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::TriggerBase": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"key": "player",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::CompositeEntity"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::UsedEnderEye": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Horizontal distance between the player and the stronghold.\n",
					"key": "distance",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::MinMaxBounds"
						},
						"typeArgs": [
							{
								"kind": "float"
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::UsedTotem": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "item",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::ItemPredicate"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::UsingItem": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "item",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::ItemPredicate"
					},
					"optional": true
				}
			]
		},
		"::java::data::advancement::trigger::VillagerTrade": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				},
				{
					"kind": "pair",
					"key": "villager",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::trigger::CompositeEntity"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Item that was purchased. `count` tag checks the item count from one trade, not the total amount traded for.\n",
					"key": "item",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::ItemPredicate"
					},
					"optional": true
				}
			]
		},
		"::java::data::chat_type::<anonymous 0>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "style",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::text::TextStyle"
					}
				}
			]
		},
		"::java::data::chat_type::<anonymous 1>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "style",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::text::TextStyle"
					},
					"optional": true
				}
			]
		},
		"::java::data::chat_type::ChatDecoration": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "translation_key",
					"type": {
						"kind": "string"
					}
				},
				{
					"kind": "pair",
					"key": "parameters",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::chat_type::ChatDecorationParameter"
						}
					}
				},
				{
					"kind": "spread",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19.1"
								}
							}
						}
					],
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "style",
								"type": {
									"kind": "reference",
									"path": "::java::server::util::text::TextStyle"
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19.1"
								}
							}
						}
					],
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "style",
								"type": {
									"kind": "reference",
									"path": "::java::server::util::text::TextStyle"
								},
								"optional": true
							}
						]
					}
				}
			]
		},
		"::java::data::chat_type::ChatDecorationParameter": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Sender",
					"value": "sender"
				},
				{
					"identifier": "Content",
					"value": "content"
				},
				{
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19.1"
								}
							}
						}
					],
					"identifier": "TeamName",
					"value": "team_name"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19.1"
								}
							}
						}
					],
					"identifier": "Target",
					"value": "target"
				}
			]
		},
		"::java::data::chat_type::ChatType": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "chat",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::chat_type::TextDisplay",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.19.1"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::data::chat_type::ChatDecoration",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.19.1"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19.1"
								}
							}
						}
					],
					"key": "overlay",
					"type": {
						"kind": "reference",
						"path": "::java::data::chat_type::TextDisplay"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "narration",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::chat_type::Narration",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.19.1"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::data::chat_type::ChatDecoration",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.19.1"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::chat_type::Narration": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "decoration",
					"type": {
						"kind": "reference",
						"path": "::java::data::chat_type::ChatDecoration"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "priority",
					"type": {
						"kind": "reference",
						"path": "::java::data::chat_type::NarrationPriority"
					}
				}
			]
		},
		"::java::data::chat_type::NarrationPriority": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Chat",
					"value": "chat"
				},
				{
					"identifier": "System",
					"value": "system"
				}
			]
		},
		"::java::data::chat_type::TextDisplay": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "decoration",
					"type": {
						"kind": "reference",
						"path": "::java::data::chat_type::ChatDecoration"
					},
					"optional": true
				}
			]
		},
		"::java::data::damage_type::DamageEffects": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Hurt",
					"value": "hurt"
				},
				{
					"identifier": "Thorns",
					"value": "thorns"
				},
				{
					"identifier": "Drowning",
					"value": "drowning"
				},
				{
					"identifier": "Burning",
					"value": "burning"
				},
				{
					"identifier": "Poking",
					"value": "poking"
				},
				{
					"identifier": "Freezing",
					"value": "freezing"
				}
			]
		},
		"::java::data::damage_type::DamageScaling": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Never",
					"value": "never"
				},
				{
					"identifier": "Always",
					"value": "always"
				},
				{
					"identifier": "LivingNonPlayer",
					"value": "when_caused_by_living_non_player"
				}
			]
		},
		"::java::data::damage_type::DamageType": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "The message id used for deaths caused by this damage type.\n\nIs combined with the result of `death_message_type` to form a translation key.\n",
					"key": "message_id",
					"type": {
						"kind": "string"
					}
				},
				{
					"kind": "pair",
					"desc": "Amount of hunger exhaustion to cause.\n",
					"key": "exhaustion",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					}
				},
				{
					"kind": "pair",
					"desc": "Whether to scale damage with difficulty levels.\n",
					"key": "scaling",
					"type": {
						"kind": "reference",
						"path": "::java::data::damage_type::DamageScaling"
					}
				},
				{
					"kind": "pair",
					"desc": "Controls how damage manifests when inflicted on players. Defaults to `hurt`.\n",
					"key": "effects",
					"type": {
						"kind": "reference",
						"path": "::java::data::damage_type::DamageEffects"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": " Controls if special death message variants are used. Defaults to `default`.\n\n\n\n For more info see: https://minecraft.wiki/w/Damage_type#Death_messages\n",
					"key": "death_message_type",
					"type": {
						"kind": "reference",
						"path": "::java::data::damage_type::DeathMessageType"
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.19.4"
						}
					}
				}
			]
		},
		"::java::data::damage_type::DeathMessageType": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Default",
					"value": "default"
				},
				{
					"identifier": "FallVariants",
					"value": "fall_variants"
				},
				{
					"identifier": "IntentionalGameDesign",
					"value": "intentional_game_design"
				}
			]
		},
		"::java::data::enchantment::<anonymous 0>": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "None",
					"value": "none"
				},
				{
					"identifier": "Block",
					"value": "block"
				},
				{
					"identifier": "Mob",
					"value": "mob"
				},
				{
					"identifier": "TNT",
					"value": "tnt"
				},
				{
					"identifier": "Trigger",
					"value": "trigger"
				}
			]
		},
		"::java::data::enchantment::<anonymous 1>": {
			"kind": "struct",
			"fields": []
		},
		"::java::data::enchantment::<anonymous 2>": {
			"kind": "struct",
			"fields": []
		},
		"::java::data::enchantment::<anonymous 3>": {
			"kind": "struct",
			"fields": []
		},
		"::java::data::enchantment::AddEffectValue": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "value",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::LevelBasedValue"
					}
				}
			]
		},
		"::java::data::enchantment::AllOfEffectValue": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "effects",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::enchantment::ValueEffect"
						},
						"lengthRange": {
							"kind": 0,
							"min": 1
						}
					}
				}
			]
		},
		"::java::data::enchantment::AllOfEntityEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "effects",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::enchantment::EntityEffect"
						},
						"lengthRange": {
							"kind": 0,
							"min": 1
						}
					}
				}
			]
		},
		"::java::data::enchantment::AllOfLocationBasedEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "effects",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::enchantment::LocationBasedEffect"
						},
						"lengthRange": {
							"kind": 0,
							"min": 1
						}
					}
				}
			]
		},
		"::java::data::enchantment::AmmoUseEnchantmentEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Predicate context: Item Parameters.\n",
					"key": "requirements",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::loot::LootCondition"
							},
							{
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::data::loot::LootCondition"
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Amount of ammunition being used up.\n",
					"key": "effect",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::ValueEffect"
					}
				}
			]
		},
		"::java::data::enchantment::ApplyMobEffectEntityEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "If multiple mob effects are specified, a random effect is selected.\n",
					"key": "to_apply",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "mob_effect"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "mob_effect"
												}
											}
										}
									]
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "min_duration",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::LevelBasedValue"
					}
				},
				{
					"kind": "pair",
					"key": "max_duration",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::LevelBasedValue"
					}
				},
				{
					"kind": "pair",
					"key": "min_amplifier",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::LevelBasedValue"
					}
				},
				{
					"kind": "pair",
					"key": "max_amplifier",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::LevelBasedValue"
					}
				}
			]
		},
		"::java::data::enchantment::AttackTarget": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Attacker",
					"value": "attacker"
				},
				{
					"identifier": "DamagingEntity",
					"value": "damaging_entity"
				},
				{
					"identifier": "Victim",
					"value": "victim"
				}
			]
		},
		"::java::data::enchantment::AttributeEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "attribute",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "attribute"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": " Used when equipping and unequipping the item to identify which modifier to add or remove from the entity.\n\n\n\n Postfixed with the slot name when the enchanted item is equipped.\n",
					"key": "id",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "attribute_modifier"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "Change in the attribute.\n",
					"key": "amount",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::LevelBasedValue"
					}
				},
				{
					"kind": "pair",
					"desc": "The attribute operation to use.\n",
					"key": "operation",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::attribute::AttributeOperation"
					}
				}
			]
		},
		"::java::data::enchantment::BlockExperienceEnchantmentEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Predicate context: Item Parameters.\n",
					"key": "requirements",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::loot::LootCondition"
							},
							{
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::data::loot::LootCondition"
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Amount of experience awarded.\n",
					"key": "effect",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::ValueEffect"
					}
				}
			]
		},
		"::java::data::enchantment::ByCostEnchantmentProvider": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "enchantments",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::EnchantmentsType"
					}
				},
				{
					"kind": "pair",
					"desc": "Cost to use for the Enchanting process.\n",
					"key": "cost",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::IntProvider"
						},
						"typeArgs": [
							{
								"kind": "int"
							}
						]
					}
				}
			]
		},
		"::java::data::enchantment::ByCostWithDifficultyEnchantmentProvider": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "enchantments",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::EnchantmentsType"
					}
				},
				{
					"kind": "pair",
					"desc": "Positive integer representing the minimum possible cost\n",
					"key": "min_cost",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					}
				},
				{
					"kind": "pair",
					"desc": "Span of the cost randomization when the special factor is at its maximum.\n",
					"key": "max_cost_span",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					}
				}
			]
		},
		"::java::data::enchantment::ChangeItemDamageEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Damage to apply to the enchanted item. Negative values will repair the item.\n\nThe change is not applied to items held by players in creative mode.\n",
					"key": "amount",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::LevelBasedValue"
					}
				}
			]
		},
		"::java::data::enchantment::ClampedLevelValue": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "value",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::LevelBasedValue"
					}
				},
				{
					"kind": "pair",
					"key": "min",
					"type": {
						"kind": "float"
					}
				},
				{
					"kind": "pair",
					"key": "max",
					"type": {
						"kind": "float"
					}
				}
			]
		},
		"::java::data::enchantment::CrossbowChargeSoundsEnchantmentEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Start of charging.\n",
					"key": "start",
					"type": {
						"kind": "reference",
						"path": "::java::data::util::SoundEventRef"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Middle of charging.\n",
					"key": "mid",
					"type": {
						"kind": "reference",
						"path": "::java::data::util::SoundEventRef"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "End of charging.\n",
					"key": "end",
					"type": {
						"kind": "reference",
						"path": "::java::data::util::SoundEventRef"
					},
					"optional": true
				}
			]
		},
		"::java::data::enchantment::DamageEnchantmentEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Predicate context: Damage Parameters.\n",
					"key": "requirements",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::loot::LootCondition"
							},
							{
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::data::loot::LootCondition"
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Determines armor effectiveness; `0.0` for no effect, `1.0` for full effect.\n",
					"key": "effect",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::ValueEffect"
					}
				}
			]
		},
		"::java::data::enchantment::DamageEntityEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "damage_type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "damage_type"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "Amount of damage is randomized within the given min/max span.\n",
					"key": "min_damage",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::LevelBasedValue"
					}
				},
				{
					"kind": "pair",
					"key": "max_damage",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::LevelBasedValue"
					}
				}
			]
		},
		"::java::data::enchantment::DamageImmunityEnchantmentEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Predicate context: Damage Parameters.\n",
					"key": "requirements",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::loot::LootCondition"
							},
							{
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::data::loot::LootCondition"
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Dummy value; this is a boolean effect.\n",
					"key": "effect",
					"type": {
						"kind": "struct",
						"fields": []
					}
				}
			]
		},
		"::java::data::enchantment::DamageItemEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Damage to apply to the enchanted item.\n\nThe damage is not applied to items held by players in creative mode.\n",
					"key": "amount",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::LevelBasedValue"
					}
				}
			]
		},
		"::java::data::enchantment::DamageProtectionEnchantmentEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Predicate context: Damage Parameters.\n",
					"key": "requirements",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::loot::LootCondition"
							},
							{
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::data::loot::LootCondition"
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Amount of damage being absorbed; as \"fake armor\".\n",
					"key": "effect",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::ValueEffect"
					}
				}
			]
		},
		"::java::data::enchantment::Enchantment": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "description",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::text::Text"
					}
				},
				{
					"kind": "pair",
					"key": "exclusive_set",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "enchantment"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "enchantment"
												}
											}
										}
									]
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "supported_items",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "item"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "item"
												}
											}
										}
									]
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": " Item types for which this Enchantment shows up in Enchanting Tables and on traded equipment.\n\n\n\n Must be a subset of `supported_items`.\n",
					"key": "primary_items",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "item"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "item"
												}
											}
										}
									]
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "How commonly the Enchantment appears, compared to the total combined `weight` of all available Enchantments.\n",
					"key": "weight",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1,
							"max": 1024
						}
					}
				},
				{
					"kind": "pair",
					"desc": "Maximum level of the enchantment.\n",
					"key": "max_level",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1,
							"max": 255
						}
					}
				},
				{
					"kind": "pair",
					"desc": "Minimum experience cost.\n",
					"key": "min_cost",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::EnchantmentCost"
					}
				},
				{
					"kind": "pair",
					"desc": "Maximum experience cost.\n",
					"key": "max_cost",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::EnchantmentCost"
					}
				},
				{
					"kind": "pair",
					"desc": "Halved when an Enchantment is added to a book.\n\nThe effective fee is multiplied by the level of the Enchantment.\n",
					"key": "anvil_cost",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					}
				},
				{
					"kind": "pair",
					"key": "slots",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::util::attribute::AttributeSlot"
						}
					}
				},
				{
					"kind": "pair",
					"key": "effects",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "enchantment_effect_component_type"
												}
											}
										}
									]
								},
								"type": {
									"kind": "dispatcher",
									"parallelIndices": [
										{
											"kind": "dynamic",
											"accessor": [
												{
													"keyword": "key"
												}
											]
										}
									],
									"registry": "minecraft:effect_component"
								},
								"optional": true
							}
						]
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.21"
						}
					}
				}
			]
		},
		"::java::data::enchantment::EnchantmentCost": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Base cost at level 1.\n",
					"key": "base",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"desc": "Cost increase per level above 1.\n",
					"key": "per_level_above_first",
					"type": {
						"kind": "int"
					}
				}
			]
		},
		"::java::data::enchantment::EnchantmentEffects": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "enchantment_effect_component_type"
									}
								}
							}
						]
					},
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									{
										"keyword": "key"
									}
								]
							}
						],
						"registry": "minecraft:effect_component"
					},
					"optional": true
				}
			]
		},
		"::java::data::enchantment::EnchantmentProvider": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "enchantment_provider_type"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:enchantment_provider"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.21"
						}
					}
				}
			]
		},
		"::java::data::enchantment::EnchantmentsType": {
			"kind": "union",
			"members": [
				{
					"kind": "string",
					"attributes": [
						{
							"name": "id",
							"value": {
								"kind": "tree",
								"values": {
									"registry": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "enchantment"
										}
									},
									"tags": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "allowed"
										}
									}
								}
							}
						}
					]
				},
				{
					"kind": "list",
					"item": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "enchantment"
									}
								}
							}
						]
					},
					"lengthRange": {
						"kind": 0,
						"min": 1
					}
				}
			]
		},
		"::java::data::enchantment::EntityEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "enchantment_entity_effect_type"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:entity_effect"
					}
				}
			]
		},
		"::java::data::enchantment::EquipmentDropsEnchantmentEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Predicate context: Damage Parameters.\n",
					"key": "requirements",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::loot::LootCondition"
							},
							{
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::data::loot::LootCondition"
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Chance between `0.0` and `1.0` of an equipped piece dropping.\n",
					"key": "effect",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::ValueEffect"
					}
				},
				{
					"kind": "pair",
					"desc": "Which subject needs to be enchanted for the effect to apply.\n",
					"key": "enchanted",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "attacker"
								}
							},
							{
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "victim"
								}
							}
						]
					}
				}
			]
		},
		"::java::data::enchantment::ExplodeEntityEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Whether the explosion should be attributed to the user of the enchanted tool.\n",
					"key": "attribute_to_user",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "If omitted, no damage is dealt by the explosion.\n",
					"key": "damage_type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "damage_type"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "List of Blocks or hash-prefixed Block Tag specifying which blocks fully block the explosion.\n",
					"key": "immune_blocks",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "block"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "block"
												}
											}
										}
									]
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "If omitted, the default explosion knockback is applied.\n",
					"key": "knockback_multiplier",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::LevelBasedValue"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Relative coordinates to offset the explosion by. Defaults to `[0, 0, 0]`.\n",
					"key": "offset",
					"type": {
						"kind": "list",
						"item": {
							"kind": "double"
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "radius",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::LevelBasedValue"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether fire is placed within the explosion radius.\n",
					"key": "create_fire",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the explosion has special effects on blocks.\n",
					"key": "block_interaction",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "enum",
								"enumKind": "string",
								"values": [
									{
										"identifier": "None",
										"value": "none"
									},
									{
										"identifier": "Block",
										"value": "block"
									},
									{
										"identifier": "Mob",
										"value": "mob"
									},
									{
										"identifier": "TNT",
										"value": "tnt"
									},
									{
										"identifier": "Trigger",
										"value": "trigger"
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "small_particle",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::particle::Particle"
					}
				},
				{
					"kind": "pair",
					"key": "large_particle",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::particle::Particle"
					}
				},
				{
					"kind": "pair",
					"key": "sound",
					"type": {
						"kind": "reference",
						"path": "::java::data::util::SoundEventRef"
					}
				}
			]
		},
		"::java::data::enchantment::FishingLuckBonusEnchantmentEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": " Predicate context: Entity Parameters.\n\n\n\n `this` is the player fishing.\n",
					"key": "requirements",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::loot::LootCondition"
							},
							{
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::data::loot::LootCondition"
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Amount of luck being added.\n",
					"key": "effect",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::ValueEffect"
					}
				}
			]
		},
		"::java::data::enchantment::FishingTimeReductionEnchantmentEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": " Predicate context: Entity Parameters.\n\n\n\n `this` is the player fishing.\n",
					"key": "requirements",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::loot::LootCondition"
							},
							{
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::data::loot::LootCondition"
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Time reduction in seconds (higher values mean less time until a fish bites).\n",
					"key": "effect",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::ValueEffect"
					}
				}
			]
		},
		"::java::data::enchantment::FractionLevelValue": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "numerator",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::LevelBasedValue"
					}
				},
				{
					"kind": "pair",
					"key": "denominator",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::LevelBasedValue"
					}
				}
			]
		},
		"::java::data::enchantment::HitBlockEnchantmentEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": " Predicate context: Entity Parameters.\n\n\n\n `this` is the entity hitting the Block, unless during a projectile attack, then, `this` is the projectile.\n",
					"key": "requirements",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::loot::LootCondition"
							},
							{
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::data::loot::LootCondition"
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "On the entity hitting the Block\n",
					"key": "effect",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::EntityEffect"
					}
				}
			]
		},
		"::java::data::enchantment::IgniteEntityEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Seconds the fire should last.\n",
					"key": "duration",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::LevelBasedValue"
					}
				}
			]
		},
		"::java::data::enchantment::ItemDamageEnchantmentEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Predicate context: Item Parameters.\n",
					"key": "requirements",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::loot::LootCondition"
							},
							{
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::data::loot::LootCondition"
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Amount of damage being dealt to the item.\n",
					"key": "effect",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::ValueEffect"
					}
				}
			]
		},
		"::java::data::enchantment::KnockbackEnchantmentEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Predicate context: Damage Parameters.\n",
					"key": "requirements",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::loot::LootCondition"
							},
							{
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::data::loot::LootCondition"
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Amount of knockback being applied.\n",
					"key": "effect",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::ValueEffect"
					}
				}
			]
		},
		"::java::data::enchantment::LevelBasedValue": {
			"kind": "union",
			"members": [
				{
					"kind": "float"
				},
				{
					"kind": "reference",
					"path": "::java::data::enchantment::LevelBasedValueMap"
				}
			]
		},
		"::java::data::enchantment::LevelBasedValueMap": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "enchantment_level_based_value_type"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:level_based_value"
					}
				}
			]
		},
		"::java::data::enchantment::LinearLevelValue": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Base cost at level 1.\n",
					"key": "base",
					"type": {
						"kind": "float"
					}
				},
				{
					"kind": "pair",
					"desc": "Cost increase per level above 1.\n",
					"key": "per_level_above_first",
					"type": {
						"kind": "float"
					}
				}
			]
		},
		"::java::data::enchantment::LocationBasedEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "enchantment_location_based_effect_type"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:location_based_effect"
					}
				}
			]
		},
		"::java::data::enchantment::LocationChangedEnchantmentEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Predicate context: Location Parameters.\n",
					"key": "requirements",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::loot::LootCondition"
							},
							{
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::data::loot::LootCondition"
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "On the entity changing location.\n",
					"key": "effect",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::LocationBasedEffect"
					}
				}
			]
		},
		"::java::data::enchantment::LookupLevelValue": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Indexed by `level - 1` to apply, if present\n",
					"key": "values",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::enchantment::LevelBasedValue"
						},
						"lengthRange": {
							"kind": 0,
							"min": 1
						}
					}
				},
				{
					"kind": "pair",
					"desc": "Applied if the level is greater than the size of `values`.\n",
					"key": "fallback",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::LevelBasedValue"
					}
				}
			]
		},
		"::java::data::enchantment::MobExperienceEnchantmentEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": " Predicate context: Entity Parameters.\n\n\n\n `this` is the killed mob.\n",
					"key": "requirements",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::loot::LootCondition"
							},
							{
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::data::loot::LootCondition"
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Amount of experience awarded.\n",
					"key": "effect",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::ValueEffect"
					}
				}
			]
		},
		"::java::data::enchantment::MultiplyEffectValue": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Level-Based Value determining the factor to multiply in\n",
					"key": "factor",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::LevelBasedValue"
					}
				}
			]
		},
		"::java::data::enchantment::ParticlePosition": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "entity_position"
								}
							},
							{
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "in_bounding_box"
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "Defaults to 0.\n",
					"key": "offset",
					"type": {
						"kind": "float"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Defaults to 1.\n",
					"key": "scale",
					"type": {
						"kind": "float"
					},
					"optional": true
				}
			]
		},
		"::java::data::enchantment::ParticleVelocity": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Defaults to 0.\n",
					"key": "base",
					"type": {
						"kind": "float"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Scale factor applied to the given axis (`1` adds the velocity of the entity to the spawned particles). Defaults to 0.\n",
					"key": "movement_scale",
					"type": {
						"kind": "float"
					},
					"optional": true
				}
			]
		},
		"::java::data::enchantment::PlaySoundEntityEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "sound",
					"type": {
						"kind": "reference",
						"path": "::java::data::util::SoundEventRef"
					}
				},
				{
					"kind": "pair",
					"key": "volume",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::FloatProvider"
						},
						"typeArgs": [
							{
								"kind": "float",
								"valueRange": {
									"kind": 0,
									"min": 0.00001,
									"max": 10
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "pitch",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::FloatProvider"
						},
						"typeArgs": [
							{
								"kind": "float",
								"valueRange": {
									"kind": 0,
									"min": 0.00001,
									"max": 2
								}
							}
						]
					}
				}
			]
		},
		"::java::data::enchantment::PostAttackEnchantmentEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Predicate context: Damage Parameters.\n",
					"key": "requirements",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::loot::LootCondition"
							},
							{
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::data::loot::LootCondition"
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Examples:\n\n- A Fire Aspect Enchant would specify that when the attacker is enchanted, the ignite effect is applied, and the affected party is the victim.\n\n- Thorns would specify that when the victim is enchanted, the damage_entity effect is applied, and the affected party is the attacker.\n",
					"key": "effect",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::EntityEffect"
					}
				},
				{
					"kind": "pair",
					"key": "enchanted",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::AttackTarget"
					}
				},
				{
					"kind": "pair",
					"key": "affected",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::AttackTarget"
					}
				}
			]
		},
		"::java::data::enchantment::ProjectileCountEnchantmentEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": " Predicate context: Entity Parameters.\n\n\n\n `this` is the entity drawing the weapon.\n",
					"key": "requirements",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::loot::LootCondition"
							},
							{
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::data::loot::LootCondition"
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Amount of projectiles being loaded/drawn.\n",
					"key": "effect",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::ValueEffect"
					}
				}
			]
		},
		"::java::data::enchantment::ProjectilePiercingEnchantmentEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": " Predicate context: Item Parameters.\n\n\n\n Tool is the ammunition item.\n",
					"key": "requirements",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::loot::LootCondition"
							},
							{
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::data::loot::LootCondition"
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Amount of entities the projectile will pierce through before despawning.\n",
					"key": "effect",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::ValueEffect"
					}
				}
			]
		},
		"::java::data::enchantment::ProjectileSpawnedEnchantmentEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": " Predicate context: Entity Parameters.\n\n\n\n `this` is the newly spawned projectile.\n",
					"key": "requirements",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::loot::LootCondition"
							},
							{
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::data::loot::LootCondition"
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "On the newly spawned projectile.\n",
					"key": "effect",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::EntityEffect"
					}
				}
			]
		},
		"::java::data::enchantment::ProjectileSpreadEnchantmentEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": " Predicate context: Entity Parameters.\n\n\n\n `this` is the entity shooting the projectile.\n",
					"key": "requirements",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::loot::LootCondition"
							},
							{
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::data::loot::LootCondition"
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Maximum spread of projectiles measured in degrees from the aim line.\n",
					"key": "effect",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::ValueEffect"
					}
				}
			]
		},
		"::java::data::enchantment::ReduceBinomialEffectValue": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": " Chance that an input value is dropped by 1.\n\n\n\n The span is 0 to 1, with 0 being no chance to drop an input value and 1 dropping all input values.\n",
					"key": "chance",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::LevelBasedValue"
					}
				}
			]
		},
		"::java::data::enchantment::RepairWithXpEnchantmentEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Predicate context: Item Parameters.\n",
					"key": "requirements",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::loot::LootCondition"
							},
							{
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::data::loot::LootCondition"
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Amount of durability increase per experience point, `mending` uses 2x.\n",
					"key": "effect",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::ValueEffect"
					}
				}
			]
		},
		"::java::data::enchantment::ReplaceBlockEntityEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "block_state",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
					}
				},
				{
					"kind": "pair",
					"desc": "Relative coordinates to offset the placed block by. Defaults to `[0, 0, 0]`.\n",
					"key": "offset",
					"type": {
						"kind": "list",
						"item": {
							"kind": "int"
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "If omitted, all block types are replaced.\n",
					"key": "predicate",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_predicate::BlockPredicate"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Defaults to no game event dispatched.\n",
					"key": "trigger_game_event",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "game_event"
									}
								}
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::enchantment::ReplaceDiskEntityEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::ReplaceBlockEntityEffect"
					}
				},
				{
					"kind": "pair",
					"desc": "Relative coordinates to offset the center of the cylinder by. Defaults to `[0, 0, 0]`.\n",
					"key": "offset",
					"type": {
						"kind": "list",
						"item": {
							"kind": "int"
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "radius",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::LevelBasedValue"
					}
				},
				{
					"kind": "pair",
					"key": "height",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::LevelBasedValue"
					}
				}
			]
		},
		"::java::data::enchantment::RunFunctionEntityEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "function",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "function"
									}
								}
							}
						]
					}
				}
			]
		},
		"::java::data::enchantment::SetBlockPropertiesEntityEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "properties",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "static",
								"value": "block_state"
							}
						],
						"registry": "minecraft:data_component"
					}
				},
				{
					"kind": "pair",
					"desc": "Relative coordinates to offset the block by. Defaults to `[0, 0, 0]`.\n",
					"key": "offset",
					"type": {
						"kind": "list",
						"item": {
							"kind": "int"
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Defaults to no game event dispatched.\n",
					"key": "trigger_game_event",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "game_event"
									}
								}
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::enchantment::SetEffectValue": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "value",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::LevelBasedValue"
					}
				}
			]
		},
		"::java::data::enchantment::SingleProvider": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "enchantment",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "enchantment"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "level",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::IntProvider"
						},
						"typeArgs": [
							{
								"kind": "int"
							}
						]
					}
				}
			]
		},
		"::java::data::enchantment::SmashDamagePerBlockFallenEnchantmentEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Predicate context: Damage Parameters.\n",
					"key": "requirements",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::loot::LootCondition"
							},
							{
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::data::loot::LootCondition"
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Amount of damage dealt per block fallen.\n",
					"key": "effect",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::ValueEffect"
					}
				}
			]
		},
		"::java::data::enchantment::SpawnParticlesEntityEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "particle",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::particle::Particle"
					}
				},
				{
					"kind": "pair",
					"key": "horizontal_position",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::ParticlePosition"
					}
				},
				{
					"kind": "pair",
					"key": "vertical_position",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::ParticlePosition"
					}
				},
				{
					"kind": "pair",
					"key": "horizontal_velocity",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::ParticleVelocity"
					}
				},
				{
					"kind": "pair",
					"key": "vertical_velocity",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::ParticleVelocity"
					}
				},
				{
					"kind": "pair",
					"key": "speed",
					"type": {
						"kind": "float"
					},
					"optional": true
				}
			]
		},
		"::java::data::enchantment::SquaredLevelValue": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Added to the exponent; `0.0` for squared, `1.0` for cubed, `.5` for square root, `-4` for negpow(2), etc.\n",
					"key": "added",
					"type": {
						"kind": "float"
					}
				}
			]
		},
		"::java::data::enchantment::SummonEntityEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "If multiple entity types are specified, a random entity type is selected.\n",
					"key": "entity",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "entity_type"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "entity_type"
												}
											}
										}
									]
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "Whether the summoned entity should join the team of the owner of the Enchanted Item.\n",
					"key": "join_team",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::data::enchantment::TickEnchantmentEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": " Predicate context: Entity Parameters.\n\n\n\n `this` is the entity with the Enchanted Item.\n",
					"key": "requirements",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::loot::LootCondition"
							},
							{
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::data::loot::LootCondition"
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "On every tick. Performance recommendation: don't use with `run_function` unless necessary.\n",
					"key": "effect",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::EntityEffect"
					}
				}
			]
		},
		"::java::data::enchantment::TridentReturnAccelerationEnchantmentEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": " Predicate context: Entity Parameters.\n\n\n\n `this` is the trident entity.\n",
					"key": "requirements",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::loot::LootCondition"
							},
							{
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::data::loot::LootCondition"
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Amount of acceleration applied to the returning trident.\n",
					"key": "effect",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::ValueEffect"
					}
				}
			]
		},
		"::java::data::enchantment::ValueEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "enchantment_value_effect_type"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:value_effect"
					}
				}
			]
		},
		"::java::data::item_modifier::ItemModifier": {
			"kind": "union",
			"members": [
				{
					"kind": "reference",
					"path": "::java::data::loot::LootFunction"
				},
				{
					"kind": "list",
					"item": {
						"kind": "reference",
						"path": "::java::data::loot::LootFunction"
					}
				}
			]
		},
		"::java::data::loot::CompositePoolEntry": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "children",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::loot::LootPoolEntry"
						}
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::LootPoolEntryBase"
					}
				}
			]
		},
		"::java::data::loot::condition::<anonymous 0>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string",
						"attributes": [
							{
								"name": "objective"
							}
						]
					},
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::util::RandomValueBounds",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::data::util::IntRange",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					}
				}
			]
		},
		"::java::data::loot::condition::AllOf": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Passes when all of these conditions pass.\n",
					"key": "terms",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::loot::LootCondition"
						}
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20"
						}
					}
				}
			]
		},
		"::java::data::loot::condition::Alternative": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "terms",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::loot::LootCondition"
						}
					}
				}
			],
			"attributes": [
				{
					"name": "until",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20"
						}
					}
				}
			]
		},
		"::java::data::loot::condition::AnyOf": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Passes when any of these conditions pass.\n",
					"key": "terms",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::loot::LootCondition"
						}
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20"
						}
					}
				}
			]
		},
		"::java::data::loot::condition::BlockStateProperty": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "block",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "block"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "properties",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"block"
								]
							}
						],
						"registry": "mcdoc:block_states"
					},
					"optional": true
				}
			]
		},
		"::java::data::loot::condition::DamageSourceProperties": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "predicate",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::DamageSourcePredicate"
					}
				}
			]
		},
		"::java::data::loot::condition::EnchantmentActiveCheck": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "active",
					"type": {
						"kind": "boolean"
					}
				}
			]
		},
		"::java::data::loot::condition::EntityProperties": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "entity",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::EntityTarget"
					}
				},
				{
					"kind": "pair",
					"key": "predicate",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::EntityPredicate"
					}
				}
			]
		},
		"::java::data::loot::condition::EntityScores": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "entity",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::EntityTarget"
					}
				},
				{
					"kind": "pair",
					"key": "scores",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": {
									"kind": "string",
									"attributes": [
										{
											"name": "objective"
										}
									]
								},
								"type": {
									"kind": "union",
									"members": [
										{
											"kind": "reference",
											"path": "::java::data::util::RandomValueBounds",
											"attributes": [
												{
													"name": "until",
													"value": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "1.17"
														}
													}
												}
											]
										},
										{
											"kind": "reference",
											"path": "::java::data::util::IntRange",
											"attributes": [
												{
													"name": "since",
													"value": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "1.17"
														}
													}
												}
											]
										}
									]
								}
							}
						]
					}
				}
			]
		},
		"::java::data::loot::condition::Inverted": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "term",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::LootCondition"
					}
				}
			]
		},
		"::java::data::loot::condition::KilledByPlayer": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "inverse",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::data::loot::condition::LocationCheck": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "offsetX",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "offsetY",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "offsetZ",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "predicate",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::LocationPredicate"
					}
				}
			]
		},
		"::java::data::loot::condition::MatchTool": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "predicate",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::ItemPredicate"
					}
				}
			]
		},
		"::java::data::loot::condition::RandomChance": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "chance",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "float",
								"valueRange": {
									"kind": 0,
									"min": 0,
									"max": 1
								},
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.21"
											}
										}
									}
								]
							},
							{
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::data::util::NumberProvider"
								},
								"typeArgs": [
									{
										"kind": "float"
									}
								],
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.21"
											}
										}
									}
								]
							}
						]
					}
				}
			]
		},
		"::java::data::loot::condition::RandomChanceWithEnchantedBonus": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "unenchanted_chance",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				},
				{
					"kind": "pair",
					"key": "enchanted_chance",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::LevelBasedValue"
					}
				},
				{
					"kind": "pair",
					"key": "enchantment",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "enchantment"
									}
								}
							}
						]
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.21"
						}
					}
				}
			]
		},
		"::java::data::loot::condition::RandomChanceWithLooting": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "chance",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				},
				{
					"kind": "pair",
					"desc": "Looting adjustment to the base success rate. Formula is `chance + (looting_level * looting_multiplier)` .\n",
					"key": "looting_multiplier",
					"type": {
						"kind": "float"
					}
				}
			],
			"attributes": [
				{
					"name": "until",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.21"
						}
					}
				}
			]
		},
		"::java::data::loot::condition::Reference": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "A cyclic reference causes a parsing failure.\n",
					"key": "name",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "predicate"
									}
								}
							}
						]
					}
				}
			]
		},
		"::java::data::loot::condition::TableBonus": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "enchantment",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "enchantment"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "Probabilities for each enchantment level\n",
					"key": "chances",
					"type": {
						"kind": "list",
						"item": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					}
				}
			]
		},
		"::java::data::loot::condition::TimeCheck": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Check the current game tick.\n",
					"key": "value",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::util::RandomValueBounds",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::data::util::IntRange",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "Game tick supplied to `value` check gets modulo-divided by this.\n\nFor example, if set to 24000, `value` operates on a time period of days.\n",
					"key": "period",
					"type": {
						"kind": "long"
					},
					"optional": true
				}
			]
		},
		"::java::data::loot::condition::ValueCheck": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "value",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::NumberProvider"
						},
						"typeArgs": [
							{
								"kind": "int"
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "Passes when `value` is within this range.\n",
					"key": "range",
					"type": {
						"kind": "reference",
						"path": "::java::data::util::IntRange"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.17"
						}
					}
				}
			]
		},
		"::java::data::loot::condition::WeatherCheck": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "raining",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "thundering",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::data::loot::DynamicDrops": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Contents",
					"value": "contents"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20"
								}
							}
						}
					],
					"identifier": "Sherds",
					"value": "sherds"
				}
			]
		},
		"::java::data::loot::DynamicPoolEntry": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "name",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::DynamicDrops",
						"attributes": [
							{
								"name": "id"
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::SingletonPoolEntry"
					}
				}
			]
		},
		"::java::data::loot::EntityTarget": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "This",
					"value": "this"
				},
				{
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"identifier": "Killer",
					"value": "killer"
				},
				{
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"identifier": "DirectKiller",
					"value": "direct_killer"
				},
				{
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"identifier": "KillerPlayer",
					"value": "killer_player"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"identifier": "Attacker",
					"value": "attacker"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"identifier": "DirectAttacker",
					"value": "direct_attacker"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"identifier": "AttackingPlayer",
					"value": "attacking_player"
				}
			]
		},
		"::java::data::loot::function::<anonymous 0>": {
			"kind": "struct",
			"fields": []
		},
		"::java::data::loot::function::<anonymous 1>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "bonusMultiplier",
					"type": {
						"kind": "int"
					}
				}
			]
		},
		"::java::data::loot::function::<anonymous 10>": {
			"kind": "struct",
			"fields": []
		},
		"::java::data::loot::function::<anonymous 11>": {
			"kind": "struct",
			"fields": []
		},
		"::java::data::loot::function::<anonymous 2>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "extra",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"key": "probability",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				}
			]
		},
		"::java::data::loot::function::<anonymous 3>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			]
		},
		"::java::data::loot::function::<anonymous 4>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			]
		},
		"::java::data::loot::function::<anonymous 5>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "id",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "uuid"
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::loot::function::<anonymous 6>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "The unique identifier of this attribute modifier.\n",
					"key": "id",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "attribute_modifier"
									}
								}
							}
						]
					}
				}
			]
		},
		"::java::data::loot::function::<anonymous 7>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "enchantment"
									}
								}
							}
						]
					},
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::NumberProvider"
						},
						"typeArgs": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 0
								}
							}
						]
					}
				}
			]
		},
		"::java::data::loot::function::<anonymous 8>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "floats",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "values",
								"type": {
									"kind": "list",
									"item": {
										"kind": "reference",
										"path": "::java::data::util::NumberProvider"
									}
								}
							},
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::loot::function::ListOperation"
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "flags",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "values",
								"type": {
									"kind": "list",
									"item": {
										"kind": "boolean"
									}
								}
							},
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::loot::function::ListOperation"
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "strings",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "values",
								"type": {
									"kind": "list",
									"item": {
										"kind": "string"
									}
								}
							},
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::loot::function::ListOperation"
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "colors",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "values",
								"type": {
									"kind": "list",
									"item": {
										"kind": "union",
										"members": [
											{
												"kind": "reference",
												"path": "::java::data::util::NumberProvider"
											},
											{
												"kind": "reference",
												"path": "::java::server::util::color::RGB"
											}
										]
									}
								}
							},
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::loot::function::ListOperation"
								}
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::loot::function::<anonymous 9>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "reference",
						"path": "::java::data::loot::function::ToggleableDataComponent",
						"attributes": [
							{
								"name": "id"
							}
						]
					},
					"type": {
						"kind": "boolean"
					}
				}
			]
		},
		"::java::data::loot::function::ApplyBonus": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "enchantment",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "enchantment"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "formula",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "apply_bonus_formula"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"formula"
								]
							}
						],
						"registry": "minecraft:apply_bonus_formula"
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			]
		},
		"::java::data::loot::function::AttributeModifier": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Attribute type to modify.\n",
					"key": "attribute",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "attribute"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"key": "name",
					"type": {
						"kind": "string"
					}
				},
				{
					"kind": "spread",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "id",
								"type": {
									"kind": "string",
									"attributes": [
										{
											"name": "uuid"
										}
									]
								},
								"optional": true
							}
						]
					}
				},
				{
					"kind": "spread",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"desc": "The unique identifier of this attribute modifier.\n",
								"key": "id",
								"type": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "attribute_modifier"
												}
											}
										}
									]
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "amount",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::util::RandomValueBounds",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::data::util::NumberProvider",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "The operation used for this modifier.\n",
					"key": "operation",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "union",
								"members": [
									{
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "addition"
										}
									},
									{
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "multiply_base"
										}
									},
									{
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "multiply_total"
										}
									}
								],
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::server::util::attribute::AttributeOperation",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "If a list, one of the listed slots will be chosen randomly.\n",
					"key": "slot",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::server::util::attribute::AttributeSlot"
							},
							{
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::server::util::attribute::AttributeSlot"
								}
							}
						]
					}
				}
			]
		},
		"::java::data::loot::function::BannerPattern": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Base",
					"value": "base"
				},
				{
					"identifier": "SquareBottomLeft",
					"value": "square_bottom_left"
				},
				{
					"identifier": "SquareBottom",
					"value": "square_bottom_right"
				},
				{
					"identifier": "SquareTopLeft",
					"value": "square_top_left"
				},
				{
					"identifier": "SquareTopRight",
					"value": "square_top_right"
				},
				{
					"identifier": "StripeBottom",
					"value": "stripe_bottom"
				},
				{
					"identifier": "StripeTop",
					"value": "stripe_top"
				},
				{
					"identifier": "StripeLeft",
					"value": "stripe_left"
				},
				{
					"identifier": "StripeRight",
					"value": "stripe_right"
				},
				{
					"identifier": "StripeCenter",
					"value": "stripe_center"
				},
				{
					"identifier": "StripeMiddle",
					"value": "stripe_middle"
				},
				{
					"identifier": "StripeDownright",
					"value": "stripe_downright"
				},
				{
					"identifier": "StripeDownleft",
					"value": "stripe_downleft"
				},
				{
					"identifier": "SmallStripes",
					"value": "small_stripes"
				},
				{
					"identifier": "Cross",
					"value": "cross"
				},
				{
					"identifier": "StraightCross",
					"value": "straight_cross"
				},
				{
					"identifier": "TriangleBottom",
					"value": "triangle_bottom"
				},
				{
					"identifier": "TriangleTop",
					"value": "triangle_top"
				},
				{
					"identifier": "TrianglesBottom",
					"value": "triangles_bottom"
				},
				{
					"identifier": "TrianglesTop",
					"value": "triangles_top"
				},
				{
					"identifier": "DiagonalLeft",
					"value": "diagonal_left"
				},
				{
					"identifier": "DiagonalUpRight",
					"value": "diagonal_up_right"
				},
				{
					"identifier": "DiagonalUpLeft",
					"value": "diagonal_up_left"
				},
				{
					"identifier": "DiagonalRight",
					"value": "diagonal_right"
				},
				{
					"identifier": "Circle",
					"value": "circle"
				},
				{
					"identifier": "Rhombus",
					"value": "rhombus"
				},
				{
					"identifier": "HalfVertical",
					"value": "half_vertical"
				},
				{
					"identifier": "HalfHorizontal",
					"value": "half_horizontal"
				},
				{
					"identifier": "HalfVerticalRight",
					"value": "half_vertical_right"
				},
				{
					"identifier": "HalfHorizontalBottom",
					"value": "half_horizontal_bottom"
				},
				{
					"identifier": "Border",
					"value": "border"
				},
				{
					"identifier": "CurlyBorder",
					"value": "curly_border"
				},
				{
					"identifier": "Gradient",
					"value": "gradient"
				},
				{
					"identifier": "GradientUp",
					"value": "gradient_up"
				},
				{
					"identifier": "Bricks",
					"value": "bricks"
				},
				{
					"identifier": "Globe",
					"value": "globe"
				},
				{
					"identifier": "Creeper",
					"value": "creeper"
				},
				{
					"identifier": "Skull",
					"value": "skull"
				},
				{
					"identifier": "Flower",
					"value": "flower"
				},
				{
					"identifier": "Mojang",
					"value": "mojang"
				},
				{
					"identifier": "Piglin",
					"value": "piglin"
				}
			]
		},
		"::java::data::loot::function::BannerPatternLayer": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "pattern",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::loot::function::BannerPattern",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.4"
											}
										}
									}
								]
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.4"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "banner_pattern"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "color",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::color::ColorString"
					}
				}
			]
		},
		"::java::data::loot::function::BinomialWithBonusCountFormula": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "parameters",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "extra",
								"type": {
									"kind": "int"
								}
							},
							{
								"kind": "pair",
								"key": "probability",
								"type": {
									"kind": "float",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 1
									}
								}
							}
						]
					}
				}
			]
		},
		"::java::data::loot::function::Conditions": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "conditions",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::loot::LootCondition"
						}
					},
					"optional": true
				}
			]
		},
		"::java::data::loot::function::ContainerComponents": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Container",
					"value": "container"
				},
				{
					"identifier": "BundleContents",
					"value": "bundle_contents"
				},
				{
					"identifier": "ChargedProjectiles",
					"value": "charged_projectiles"
				}
			]
		},
		"::java::data::loot::function::CopyComponents": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "source",
					"type": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "block_entity"
						}
					}
				},
				{
					"kind": "pair",
					"desc": "If omitted, all components present are included\n",
					"key": "include",
					"type": {
						"kind": "list",
						"item": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "data_component_type"
										}
									}
								}
							]
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Defaults to none.\n",
					"key": "exclude",
					"type": {
						"kind": "list",
						"item": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "data_component_type"
										}
									}
								}
							]
						}
					},
					"optional": true
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::data::loot::function::CopyName": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "source",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::CopyNameSource"
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			]
		},
		"::java::data::loot::function::CopyNameSource": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "This",
					"value": "this"
				},
				{
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"identifier": "Killer",
					"value": "killer"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"identifier": "AttackingEntity",
					"value": "attacking_entity"
				},
				{
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"identifier": "KillerPlayer",
					"value": "killer_player"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"identifier": "LastDamagePlayer",
					"value": "last_damage_player"
				},
				{
					"identifier": "DirectKiller",
					"value": "direct_killer"
				},
				{
					"identifier": "BlockEntity",
					"value": "block_entity"
				}
			]
		},
		"::java::data::loot::function::CopyNbt": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "source",
					"type": {
						"kind": "reference",
						"path": "::java::data::util::NbtProvider"
					}
				},
				{
					"kind": "pair",
					"key": "ops",
					"type": {
						"kind": "list",
						"item": {
							"kind": "union",
							"members": [
								{
									"kind": "struct",
									"fields": [
										{
											"kind": "pair",
											"key": "source",
											"type": {
												"kind": "string",
												"attributes": [
													{
														"name": "nbt_path"
													}
												]
											}
										},
										{
											"kind": "pair",
											"key": "target",
											"type": {
												"kind": "union",
												"members": [
													{
														"kind": "string",
														"attributes": [
															{
																"name": "until",
																"value": {
																	"kind": "literal",
																	"value": {
																		"kind": "string",
																		"value": "1.20.5"
																	}
																}
															},
															{
																"name": "nbt_path",
																"value": {
																	"kind": "dispatcher",
																	"parallelIndices": [
																		{
																			"kind": "static",
																			"value": "%fallback"
																		}
																	],
																	"registry": "minecraft:item"
																}
															}
														]
													},
													{
														"kind": "string",
														"attributes": [
															{
																"name": "since",
																"value": {
																	"kind": "literal",
																	"value": {
																		"kind": "string",
																		"value": "1.20.5"
																	}
																}
															},
															{
																"name": "nbt_path",
																"value": {
																	"kind": "dispatcher",
																	"parallelIndices": [
																		{
																			"kind": "static",
																			"value": "%fallback"
																		}
																	],
																	"registry": "mcdoc:custom_data"
																}
															}
														]
													}
												]
											}
										},
										{
											"kind": "pair",
											"key": "op",
											"type": {
												"kind": "reference",
												"path": "::java::data::loot::function::CopyNbtStrategy"
											}
										}
									]
								}
							]
						}
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			]
		},
		"::java::data::loot::function::CopyNbtOperation": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "source",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "nbt_path"
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "target",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									},
									{
										"name": "nbt_path",
										"value": {
											"kind": "dispatcher",
											"parallelIndices": [
												{
													"kind": "static",
													"value": "%fallback"
												}
											],
											"registry": "minecraft:item"
										}
									}
								]
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									},
									{
										"name": "nbt_path",
										"value": {
											"kind": "dispatcher",
											"parallelIndices": [
												{
													"kind": "static",
													"value": "%fallback"
												}
											],
											"registry": "mcdoc:custom_data"
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "op",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::CopyNbtStrategy"
					}
				}
			]
		},
		"::java::data::loot::function::CopyNbtStrategy": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Replace",
					"value": "replace"
				},
				{
					"identifier": "Append",
					"value": "append"
				},
				{
					"identifier": "Merge",
					"value": "merge"
				}
			]
		},
		"::java::data::loot::function::CopyState": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "block",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "block"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "properties",
					"type": {
						"kind": "list",
						"item": {
							"kind": "dispatcher",
							"parallelIndices": [
								{
									"kind": "dynamic",
									"accessor": [
										{
											"keyword": "parent"
										},
										"block"
									]
								}
							],
							"registry": "mcdoc:block_state_keys"
						}
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			]
		},
		"::java::data::loot::function::CustomModelDataColors": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "values",
					"type": {
						"kind": "list",
						"item": {
							"kind": "union",
							"members": [
								{
									"kind": "reference",
									"path": "::java::data::util::NumberProvider"
								},
								{
									"kind": "reference",
									"path": "::java::server::util::color::RGB"
								}
							]
						}
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::ListOperation"
					}
				}
			]
		},
		"::java::data::loot::function::CustomModelDataFlags": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "values",
					"type": {
						"kind": "list",
						"item": {
							"kind": "boolean"
						}
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::ListOperation"
					}
				}
			]
		},
		"::java::data::loot::function::CustomModelDataFloats": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "values",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::util::NumberProvider"
						}
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::ListOperation"
					}
				}
			]
		},
		"::java::data::loot::function::CustomModelDataStrings": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "values",
					"type": {
						"kind": "list",
						"item": {
							"kind": "string"
						}
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::ListOperation"
					}
				}
			]
		},
		"::java::data::loot::function::EnchantedCountBase": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "If the number is fractional the result is rounded *after* the number was multiplied by the looting level.\n",
					"key": "count",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::data::util::MinMaxBounds"
								},
								"typeArgs": [
									{
										"kind": "float"
									}
								],
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::data::util::NumberProvider",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "Limits the count of the item to a range.\n",
					"key": "limit",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::data::loot::function::EnchantedCountIncrease": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::EnchantedCountBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Enchantment that increases yields.\n",
					"key": "enchantment",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "enchantment"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.21"
						}
					}
				}
			]
		},
		"::java::data::loot::function::EnchantRandomly": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"desc": "If omitted, all enchantments applicable to the item are possible\n",
					"key": "enchantments",
					"type": {
						"kind": "list",
						"item": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "enchantment"
										}
									}
								}
							]
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "The allowed enchantments. If omitted, all enchantments applicable to the item are possible.\n",
					"key": "options",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "enchantment"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "enchantment"
												}
											}
										}
									]
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": " Whether to only enchant with item-compatible enchantments. Defaults to `true`.\n\n\n\n Note: Books are considered compatible with all Enchantments.\n",
					"key": "only_compatible",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			]
		},
		"::java::data::loot::function::EnchantWithLevels": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "The levels to enchant this item with.\n",
					"key": "levels",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::util::RandomIntGenerator",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::data::util::NumberProvider",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"desc": "The allowed enchantments. If omitted, all enchantments applicable to the item are possible.\n",
					"key": "options",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "enchantment"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "enchantment"
												}
											}
										}
									]
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"desc": "Whether treasure enchantments are allowed on this item.\n",
					"key": "treasure",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			]
		},
		"::java::data::loot::function::ExplorationMap": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Generated structure to locate. Accepts any of the structure types used by the `/locate` command. Defaults to buried treasure.\n",
					"key": "destination",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.19"
											}
										}
									}
								]
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.19"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "worldgen/structure"
													}
												},
												"tags": {
													"kind": "reference",
													"path": "::java::data::loot::function::implicit"
												}
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "The icon used to mark the destination on the map. Accepts any of the map icon text IDs (case insensitive).\n\nIf `mansion` or `monument` is used, the color of the lines on the item texture changes to match the corresponding explorer map.\n",
					"key": "decoration",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::loot::function::MapDecoration",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "map_decoration_type"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Defaults to 2.\n",
					"key": "zoom",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "The size, in chunks, of the area to search for structures.\n\nThe area checked is square, not circular.\n\nRadius `0` causes only the current chunk to be searched, radius `1` causes the current chunk and eight adjacent chunks to be searched, and so on.\n\nDefaults to `50`.\n",
					"key": "search_radius",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether to not search in chunks that have already been generated. Defaults to `true`.\n",
					"key": "skip_existing_chunks",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			]
		},
		"::java::data::loot::function::FillPlayerHead": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "`this` to use the entity that died or the player that gained the advancement, opened the container, or broke the block.\n",
					"key": "entity",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::EntityTarget"
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			]
		},
		"::java::data::loot::function::Filtered": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Item predicate to select items to modify.\n",
					"key": "item_filter",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::ItemPredicate"
					}
				},
				{
					"kind": "pair",
					"desc": "Loot function to apply to the selected items.\n",
					"key": "modifier",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::loot::LootFunction"
							},
							{
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::data::loot::LootFunction"
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::data::loot::function::FireworkExplosions": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "values",
					"type": {
						"kind": "list",
						"item": {
							"kind": "dispatcher",
							"parallelIndices": [
								{
									"kind": "static",
									"value": "firework_explosion"
								}
							],
							"registry": "minecraft:data_component"
						}
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::ListOperation"
					}
				}
			]
		},
		"::java::data::loot::function::InsertListOperation": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "The offset in the list to insert into. Defaults to 0.\n",
					"key": "offset",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					},
					"optional": true
				}
			]
		},
		"::java::data::loot::function::LimitCount": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Limits the count of the item to a range.\n",
					"key": "limit",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::util::IntLimiter",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::data::util::IntRange",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			]
		},
		"::java::data::loot::function::ListOperation": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Determines how the existing list should be modified.\n",
					"key": "mode",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::ListOperationMode"
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"mode"
								]
							}
						],
						"registry": "minecraft:list_operation"
					}
				}
			]
		},
		"::java::data::loot::function::ListOperationMode": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Append",
					"value": "append"
				},
				{
					"identifier": "Insert",
					"value": "insert"
				},
				{
					"identifier": "ReplaceAll",
					"value": "replace_all"
				},
				{
					"identifier": "ReplaceSection",
					"value": "replace_section"
				}
			]
		},
		"::java::data::loot::function::LootingEnchant": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::EnchantedCountBase"
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			],
			"attributes": [
				{
					"name": "until",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.21"
						}
					}
				}
			]
		},
		"::java::data::loot::function::MapDecoration": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Mansion",
					"value": "mansion"
				},
				{
					"identifier": "Monument",
					"value": "monument"
				},
				{
					"identifier": "Player",
					"value": "player"
				},
				{
					"identifier": "Frame",
					"value": "frame"
				},
				{
					"identifier": "RedMarker",
					"value": "red_marker"
				},
				{
					"identifier": "BlueMarker",
					"value": "blue_marker"
				},
				{
					"identifier": "TargetX",
					"value": "target_x"
				},
				{
					"identifier": "TargetPoint",
					"value": "target_point"
				},
				{
					"identifier": "PlayerOffMap",
					"value": "player_off_map"
				},
				{
					"identifier": "PlayerOffLimits",
					"value": "player_off_limits"
				},
				{
					"identifier": "RedX",
					"value": "red_x"
				},
				{
					"identifier": "BannerWhite",
					"value": "banner_white"
				},
				{
					"identifier": "BannerOrange",
					"value": "banner_orange"
				},
				{
					"identifier": "BannerMagenta",
					"value": "banner_magenta"
				},
				{
					"identifier": "BannerLight_blue",
					"value": "banner_light_blue"
				},
				{
					"identifier": "BannerYellow",
					"value": "banner_yellow"
				},
				{
					"identifier": "BannerLime",
					"value": "banner_lime"
				},
				{
					"identifier": "BannerPink",
					"value": "banner_pink"
				},
				{
					"identifier": "BannerGray",
					"value": "banner_gray"
				},
				{
					"identifier": "BannerLight_gray",
					"value": "banner_light_gray"
				},
				{
					"identifier": "BannerCyan",
					"value": "banner_cyan"
				},
				{
					"identifier": "BannerPurple",
					"value": "banner_purple"
				},
				{
					"identifier": "BannerBlue",
					"value": "banner_blue"
				},
				{
					"identifier": "BannerBrown",
					"value": "banner_brown"
				},
				{
					"identifier": "BannerGreen",
					"value": "banner_green"
				},
				{
					"identifier": "BannerRed",
					"value": "banner_red"
				},
				{
					"identifier": "BannerBlack",
					"value": "banner_black"
				}
			]
		},
		"::java::data::loot::function::ModifyContents": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Describes target component's items to modify.\n",
					"key": "component",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::ContainerComponents",
						"attributes": [
							{
								"name": "id"
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "Applied to every item inside container.\n",
					"key": "modifier",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::loot::LootFunction"
							},
							{
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::data::loot::LootFunction"
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			]
		},
		"::java::data::loot::function::Reference": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Item modifier to reference.\n",
					"key": "name",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "item_modifier"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20"
						}
					}
				}
			]
		},
		"::java::data::loot::function::ReplaceSectionListOperation": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "The offset of the section to replace. Defaults to 0.\n",
					"key": "offset",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "The size of the section to replace. Defaults to size of the new list.\n",
					"key": "size",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					},
					"optional": true
				}
			]
		},
		"::java::data::loot::function::Sequence": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "List of functions to apply to this item.\n",
					"key": "functions",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::loot::LootFunction"
						}
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.2"
						}
					}
				}
			]
		},
		"::java::data::loot::function::SetAttributes": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "List of attribute modifiers to apply to this item.\n",
					"key": "modifiers",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::loot::function::AttributeModifier"
						}
					}
				},
				{
					"kind": "pair",
					"desc": "Whether to replace existing attributes (otherwise append to existing). Defaults to `true`.\n",
					"key": "replace",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			]
		},
		"::java::data::loot::function::SetBannerPattern": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "List of banner pattern layers.\n",
					"key": "patterns",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::loot::function::BannerPatternLayer"
						}
					}
				},
				{
					"kind": "pair",
					"desc": "Whether to add to the banner pattern list.\n",
					"key": "append",
					"type": {
						"kind": "boolean"
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.17"
						}
					}
				}
			]
		},
		"::java::data::loot::function::SetBookCover": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "If omitted, the original title is kept (or an empty string is used if there was no component)\n",
					"key": "title",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::server::util::Filterable"
						},
						"typeArgs": [
							{
								"kind": "string",
								"lengthRange": {
									"kind": 0,
									"min": 0,
									"max": 32
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "If omitted, the original author is kept (or an empty string is used if there was no component)\n",
					"key": "author",
					"type": {
						"kind": "string"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "If omitted, the original generation is kept (or 0 is used if there was no component)\n",
					"key": "generation",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 3
						}
					},
					"optional": true
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::data::loot::function::SetComponents": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "components",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::server::world::item::DataComponentPatch"
						},
						"typeArgs": [
							{
								"kind": "union",
								"members": []
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::data::loot::function::SetContents": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						},
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "block_entity_type"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"desc": "Describes target component to be filled with items.\n",
					"key": "component",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::ContainerComponents",
						"attributes": [
							{
								"name": "id"
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "entries",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::loot::LootPoolEntry"
						}
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			]
		},
		"::java::data::loot::function::SetCount": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "count",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::util::RandomIntGenerator",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::data::util::NumberProvider",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"desc": "Whether to add to the existing count. Defaults to `false`.\n",
					"key": "add",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			]
		},
		"::java::data::loot::function::SetCustomData": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "tag",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::CustomData"
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::data::loot::function::SetCustomModelData": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.4"
								}
							}
						}
					],
					"desc": "Tag that describes the custom model an item will take.\n\nUsed by the `custom_model_data` model overrides predicate.\n\nHas certain restrictions due to float conversion.\n",
					"key": "value",
					"type": {
						"kind": "reference",
						"path": "::java::data::util::NumberProvider"
					}
				},
				{
					"kind": "spread",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.4"
								}
							}
						}
					],
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "floats",
								"type": {
									"kind": "struct",
									"fields": [
										{
											"kind": "pair",
											"key": "values",
											"type": {
												"kind": "list",
												"item": {
													"kind": "reference",
													"path": "::java::data::util::NumberProvider"
												}
											}
										},
										{
											"kind": "spread",
											"type": {
												"kind": "reference",
												"path": "::java::data::loot::function::ListOperation"
											}
										}
									]
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "flags",
								"type": {
									"kind": "struct",
									"fields": [
										{
											"kind": "pair",
											"key": "values",
											"type": {
												"kind": "list",
												"item": {
													"kind": "boolean"
												}
											}
										},
										{
											"kind": "spread",
											"type": {
												"kind": "reference",
												"path": "::java::data::loot::function::ListOperation"
											}
										}
									]
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "strings",
								"type": {
									"kind": "struct",
									"fields": [
										{
											"kind": "pair",
											"key": "values",
											"type": {
												"kind": "list",
												"item": {
													"kind": "string"
												}
											}
										},
										{
											"kind": "spread",
											"type": {
												"kind": "reference",
												"path": "::java::data::loot::function::ListOperation"
											}
										}
									]
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "colors",
								"type": {
									"kind": "struct",
									"fields": [
										{
											"kind": "pair",
											"key": "values",
											"type": {
												"kind": "list",
												"item": {
													"kind": "union",
													"members": [
														{
															"kind": "reference",
															"path": "::java::data::util::NumberProvider"
														},
														{
															"kind": "reference",
															"path": "::java::server::util::color::RGB"
														}
													]
												}
											}
										},
										{
											"kind": "spread",
											"type": {
												"kind": "reference",
												"path": "::java::data::loot::function::ListOperation"
											}
										}
									]
								},
								"optional": true
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::data::loot::function::SetDamage": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Decimal percentage. Can be negative when used in combination with `add`.\n",
					"key": "damage",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::util::RandomValueBounds",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::data::util::NumberProvider"
								},
								"typeArgs": [
									{
										"kind": "float",
										"valueRange": {
											"kind": 0,
											"min": -1,
											"max": 1
										}
									}
								],
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"desc": "Whether to add to the existing damage of the item. Defaults to `false`.\n",
					"key": "add",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			]
		},
		"::java::data::loot::function::SetEnchantments": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "A map of enchantments to levels. Setting an enchantment to `0` removes it from the item.\n",
					"key": "enchantments",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "enchantment"
												}
											}
										}
									]
								},
								"type": {
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::util::NumberProvider"
									},
									"typeArgs": [
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0
											}
										}
									]
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "Whether to add to the level of each enchantment. Defaults to `false`.\n",
					"key": "add",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.17"
						}
					}
				}
			]
		},
		"::java::data::loot::function::SetFireworkExplosion": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "If omitted, the original shape is kept (or `small_ball` is used if there was no component).\n",
					"key": "shape",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::firework::FireworkShape"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "If omitted, the original colors are kept (or `[]` is used if there was no component).\n\nCalculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.\n",
					"key": "colors",
					"type": {
						"kind": "int_array",
						"attributes": [
							{
								"name": "color",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "composite_rgb"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "If omitted, the original fade colors are kept (or `[]` is used if there was no component).\n\nCalculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.\n",
					"key": "fade_colors",
					"type": {
						"kind": "int_array",
						"attributes": [
							{
								"name": "color",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "composite_rgb"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "If omitted, the original `has_trail` value is kept (or `false` is used if there was no component).\n",
					"key": "trail",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "If omitted, the original `has_twinkle` value is kept (or `false` is used if there was no component).\n",
					"key": "twinkle",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::data::loot::function::SetFireworks": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "If omitted, the flight duration of the item is left untouched - or set to 0 if the component did not exist before.\n",
					"key": "flight_duration",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 255
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "explosions",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "values",
								"type": {
									"kind": "list",
									"item": {
										"kind": "dispatcher",
										"parallelIndices": [
											{
												"kind": "static",
												"value": "firework_explosion"
											}
										],
										"registry": "minecraft:data_component"
									}
								}
							},
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::loot::function::ListOperation"
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::data::loot::function::SetInstrument": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Sets the instrument tag for a goat horn.\n",
					"key": "options",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "instrument"
											}
										},
										"tags": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "required"
											}
										}
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.19"
						}
					}
				}
			]
		},
		"::java::data::loot::function::SetItem": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "item",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.21.2"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "item"
											}
										}
									}
								]
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.21.2"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "item"
													}
												},
												"exclude": {
													"kind": "tree",
													"values": {
														"0": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "air"
															}
														}
													}
												}
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			]
		},
		"::java::data::loot::function::SetLootTable": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"desc": "The block entity type of the container.\n",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "block_entity_type"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "The loot table to set to the container block item.\n",
					"key": "name",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "loot_table"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "The container seed to use. Defaults to a random seed.\n",
					"key": "seed",
					"type": {
						"kind": "long",
						"attributes": [
							{
								"name": "random"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			]
		},
		"::java::data::loot::function::SetLore": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "The entity used to resolve the text components.\n",
					"key": "entity",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::EntityTarget"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "lore",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::util::text::Text"
						}
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"desc": "Whether to replace the existing lore list. Defaults to true.\n",
					"key": "replace",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "spread",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::ListOperation"
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			]
		},
		"::java::data::loot::function::SetName": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Specifies the entity to act as the target `@s` in the JSON text component.\n",
					"key": "entity",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::EntityTarget"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "name",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::text::Text"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"desc": "Which name component to set. Defaults to `custom_name`.\n",
					"key": "target",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::SetNameTarget"
					},
					"optional": true
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			]
		},
		"::java::data::loot::function::SetNameTarget": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "ItemName",
					"value": "item_name"
				},
				{
					"identifier": "CustomName",
					"value": "custom_name"
				}
			]
		},
		"::java::data::loot::function::SetNbt": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "tag",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "nbt",
								"value": {
									"kind": "dispatcher",
									"parallelIndices": [
										{
											"kind": "static",
											"value": "%fallback"
										}
									],
									"registry": "minecraft:item"
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			],
			"attributes": [
				{
					"name": "until",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::data::loot::function::SetOminousBottleAmplifier": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "amplifier",
					"type": {
						"kind": "reference",
						"path": "::java::data::util::NumberProvider"
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::data::loot::function::SetPotion": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "The potion identifier.\n",
					"key": "id",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "potion"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.18"
						}
					}
				}
			]
		},
		"::java::data::loot::function::SetStewEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Sets the status effects for suspicious stew.\n",
					"key": "effects",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::loot::function::StewEffect"
						}
					},
					"optional": true
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			]
		},
		"::java::data::loot::function::SetWriteableBookPages": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Sets the pages of a book and quill.\n",
					"key": "pages",
					"type": {
						"kind": "list",
						"item": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::server::util::Filterable"
							},
							"typeArgs": [
								{
									"kind": "string"
								}
							]
						}
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::ListOperation"
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::data::loot::function::SetWrittenBookPages": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Sets the pages of a written book.\n",
					"key": "pages",
					"type": {
						"kind": "list",
						"item": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::server::util::Filterable"
							},
							"typeArgs": [
								{
									"kind": "reference",
									"path": "::java::server::util::text::Text"
								}
							]
						}
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::ListOperation"
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::data::loot::function::StewEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "The status effect of this stew effect.\n",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "mob_effect"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "The duration of this stew effect, in seconds.\n",
					"key": "duration",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::data::util::MinMaxBounds"
								},
								"typeArgs": [
									{
										"kind": "float"
									}
								],
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::data::util::NumberProvider",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					}
				}
			]
		},
		"::java::data::loot::function::ToggleableDataComponent": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "AttributeModifiers",
					"value": "attribute_modifiers"
				},
				{
					"identifier": "CanBreak",
					"value": "can_break"
				},
				{
					"identifier": "CanPlaceOn",
					"value": "can_place_on"
				},
				{
					"identifier": "DyedColor",
					"value": "dyed_color"
				},
				{
					"identifier": "Enchantments",
					"value": "enchantments"
				},
				{
					"identifier": "JukeboxPlayable",
					"value": "jukebox_playable"
				},
				{
					"identifier": "StoredEnchantments",
					"value": "stored_enchantments"
				},
				{
					"identifier": "Trim",
					"value": "trim"
				},
				{
					"identifier": "Unbreakable",
					"value": "unbreakable"
				}
			]
		},
		"::java::data::loot::function::ToggleTooltips": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Toggles which tooltips are shown.\n",
					"key": "toggles",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": {
									"kind": "reference",
									"path": "::java::data::loot::function::ToggleableDataComponent",
									"attributes": [
										{
											"name": "id"
										}
									]
								},
								"type": {
									"kind": "boolean"
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::Conditions"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::data::loot::function::UniformBonusFormula": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "parameters",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "bonusMultiplier",
								"type": {
									"kind": "int"
								}
							}
						]
					}
				}
			]
		},
		"::java::data::loot::ItemPoolEntry": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "name",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.21.2"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "item"
											}
										}
									}
								]
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.21.2"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "item"
													}
												},
												"exclude": {
													"kind": "tree",
													"values": {
														"0": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "air"
															}
														}
													}
												}
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::SingletonPoolEntry"
					}
				}
			]
		},
		"::java::data::loot::LootCondition": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "condition",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::loot::LootConditionType",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.16"
											}
										}
									},
									{
										"name": "id"
									}
								]
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.16"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "loot_condition_type"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"condition"
								]
							}
						],
						"registry": "minecraft:loot_condition"
					}
				}
			]
		},
		"::java::data::loot::LootConditionType": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "RandomChance",
					"value": "random_chance"
				}
			]
		},
		"::java::data::loot::LootContextType": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Empty",
					"value": "empty"
				},
				{
					"identifier": "Chest",
					"value": "chest"
				},
				{
					"identifier": "Command",
					"value": "command"
				},
				{
					"identifier": "Selector",
					"value": "selector"
				},
				{
					"identifier": "Fishing",
					"value": "fishing"
				},
				{
					"identifier": "Entity",
					"value": "entity"
				},
				{
					"identifier": "Gift",
					"value": "gift"
				},
				{
					"identifier": "Barter",
					"value": "barter"
				},
				{
					"identifier": "AdvancementReward",
					"value": "advancement_reward"
				},
				{
					"identifier": "AdvancementEntity",
					"value": "advancement_entity"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20"
								}
							}
						}
					],
					"identifier": "AdvancementLocation",
					"value": "advancement_location"
				},
				{
					"identifier": "Generic",
					"value": "generic"
				},
				{
					"identifier": "Block",
					"value": "block"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"identifier": "BlockUse",
					"value": "block_use"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"identifier": "Equipment",
					"value": "equipment"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19.4"
								}
							}
						}
					],
					"identifier": "Archaeology",
					"value": "archaeology"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"identifier": "Vault",
					"value": "vault"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"identifier": "Shearing",
					"value": "shearing"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"identifier": "EnchantedDamage",
					"value": "enchanted_damage"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"identifier": "EnchantedItem",
					"value": "enchanted_item"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"identifier": "EnchantedLocation",
					"value": "enchanted_location"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"identifier": "EnchantedEntity",
					"value": "enchanted_entity"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"identifier": "HitBlock",
					"value": "hit_block"
				}
			]
		},
		"::java::data::loot::LootFunction": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "function",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::loot::LootFunctionType",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.16"
											}
										}
									},
									{
										"name": "id"
									}
								]
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.16"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "loot_function_type"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"function"
								]
							}
						],
						"registry": "minecraft:loot_function"
					}
				}
			]
		},
		"::java::data::loot::LootFunctionType": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "EnchantWithLevels",
					"value": "enchant_with_levels"
				}
			]
		},
		"::java::data::loot::LootPool": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "rolls",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::util::RandomIntGenerator",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::data::util::NumberProvider",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "bonus_rolls",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::data::util::MinMaxBounds"
								},
								"typeArgs": [
									{
										"kind": "float"
									}
								],
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::data::util::NumberProvider",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "entries",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::loot::LootPoolEntry"
						}
					}
				},
				{
					"kind": "pair",
					"key": "functions",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::loot::LootFunction"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "conditions",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::loot::LootCondition"
						}
					},
					"optional": true
				}
			]
		},
		"::java::data::loot::LootPoolEntry": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "loot_pool_entry_type"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:loot_pool_entry"
					}
				}
			]
		},
		"::java::data::loot::LootPoolEntryBase": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "functions",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::loot::LootFunction"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "conditions",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::loot::LootCondition"
						}
					},
					"optional": true
				}
			]
		},
		"::java::data::loot::LootTable": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::LootContextType",
						"attributes": [
							{
								"name": "id"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "pools",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::loot::LootPool"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "functions",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::loot::LootFunction"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20"
								}
							}
						}
					],
					"key": "random_sequence",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "random_sequence"
											}
										},
										"definition": {
											"kind": "literal",
											"value": {
												"kind": "boolean",
												"value": true
											}
										}
									}
								}
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::loot::LootTablePoolEntry": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"key": "name",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "loot_table"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"key": "value",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "loot_table"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::data::loot::LootTable"
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::SingletonPoolEntry"
					}
				}
			]
		},
		"::java::data::loot::SingletonPoolEntry": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "weight",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "quality",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::LootPoolEntryBase"
					}
				}
			]
		},
		"::java::data::loot::TagPoolEntry": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "name",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "item"
											}
										},
										"tags": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "implicit"
											}
										}
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "If `true`, drops a random item from the tag. If `false`, drops all items in the tag.\n",
					"key": "expand",
					"type": {
						"kind": "boolean"
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::SingletonPoolEntry"
					}
				}
			]
		},
		"::java::data::predicate::Predicate": {
			"kind": "union",
			"members": [
				{
					"kind": "reference",
					"path": "::java::data::loot::LootCondition"
				},
				{
					"kind": "list",
					"item": {
						"kind": "reference",
						"path": "::java::data::loot::LootCondition"
					}
				}
			]
		},
		"::java::data::recipe::<anonymous 0>": {
			"kind": "struct",
			"fields": []
		},
		"::java::data::recipe::CookingBookCategory": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Food",
					"value": "food"
				},
				{
					"identifier": "Blocks",
					"value": "blocks"
				},
				{
					"identifier": "Misc",
					"value": "misc"
				}
			]
		},
		"::java::data::recipe::CraftingBookCategory": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Building",
					"value": "building"
				},
				{
					"identifier": "Redstone",
					"value": "redstone"
				},
				{
					"identifier": "Equipment",
					"value": "equipment"
				},
				{
					"identifier": "Misc",
					"value": "misc"
				}
			]
		},
		"::java::data::recipe::CraftingIngredients": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string",
						"attributes": [
							{
								"name": "crafting_ingredient"
							}
						]
					},
					"type": {
						"kind": "reference",
						"path": "::java::data::recipe::Ingredient"
					}
				}
			]
		},
		"::java::data::recipe::CraftingShaped": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Identifier to group multiple recipes in the recipe book.\n",
					"key": "group",
					"type": {
						"kind": "string"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Identifier for the category this goes in the recipe book.\n",
					"key": "category",
					"type": {
						"kind": "reference",
						"path": "::java::data::recipe::CraftingBookCategory"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "pattern",
					"type": {
						"kind": "list",
						"item": {
							"kind": "string",
							"lengthRange": {
								"kind": 0,
								"min": 1,
								"max": 3
							},
							"attributes": [
								{
									"name": "crafting_ingredient",
									"value": {
										"kind": "tree",
										"values": {
											"definition": {
												"kind": "literal",
												"value": {
													"kind": "boolean",
													"value": true
												}
											}
										}
									}
								}
							]
						},
						"lengthRange": {
							"kind": 0,
							"min": 1,
							"max": 3
						}
					}
				},
				{
					"kind": "pair",
					"key": "key",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": {
									"kind": "string",
									"attributes": [
										{
											"name": "crafting_ingredient"
										}
									]
								},
								"type": {
									"kind": "reference",
									"path": "::java::data::recipe::Ingredient"
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "result",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::recipe::ItemResult",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::server::world::item::ItemStack",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19.4"
								}
							}
						}
					],
					"desc": "Determines if a notification is shown when unlocking this recipe. Defaults to true.\n",
					"key": "show_notification",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::data::recipe::CraftingShapeless": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "group",
					"type": {
						"kind": "string"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Identifier for the category this goes in the recipe book.\n",
					"key": "category",
					"type": {
						"kind": "reference",
						"path": "::java::data::recipe::CraftingBookCategory"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "ingredients",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::recipe::Ingredient"
						},
						"lengthRange": {
							"kind": 0,
							"min": 1,
							"max": 9
						}
					}
				},
				{
					"kind": "pair",
					"key": "result",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::recipe::ItemResult",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::server::world::item::ItemStack",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							}
						]
					}
				}
			]
		},
		"::java::data::recipe::CraftingTransmute": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "group",
					"type": {
						"kind": "string"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Identifier for the category this goes in the recipe book.\n",
					"key": "category",
					"type": {
						"kind": "reference",
						"path": "::java::data::recipe::CraftingBookCategory"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "The ingredient that will transfer its data components to the result item.\n",
					"key": "input",
					"type": {
						"kind": "reference",
						"path": "::java::data::recipe::Ingredient"
					}
				},
				{
					"kind": "pair",
					"desc": "An additional ingredient.\n",
					"key": "material",
					"type": {
						"kind": "reference",
						"path": "::java::data::recipe::Ingredient"
					}
				},
				{
					"kind": "pair",
					"key": "result",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "item"
									}
								}
							}
						]
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.21.2"
						}
					}
				}
			]
		},
		"::java::data::recipe::Ingredient": {
			"kind": "union",
			"members": [
				{
					"kind": "reference",
					"path": "::java::data::recipe::IngredientValue",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						}
					]
				},
				{
					"kind": "list",
					"item": {
						"kind": "reference",
						"path": "::java::data::recipe::IngredientValue"
					},
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						}
					]
				},
				{
					"kind": "list",
					"item": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "item"
											}
										},
										"exclude": {
											"kind": "tree",
											"values": {
												"0": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "air"
													}
												}
											}
										}
									}
								}
							}
						]
					},
					"lengthRange": {
						"kind": 0,
						"min": 1
					},
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						}
					]
				},
				{
					"kind": "string",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						},
						{
							"name": "id",
							"value": {
								"kind": "tree",
								"values": {
									"registry": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "item"
										}
									},
									"tags": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "allowed"
										}
									},
									"exclude": {
										"kind": "tree",
										"values": {
											"0": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "air"
												}
											}
										}
									}
								}
							}
						}
					]
				}
			]
		},
		"::java::data::recipe::IngredientItem": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "item",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "item"
									}
								}
							}
						]
					}
				}
			]
		},
		"::java::data::recipe::IngredientTag": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "tag",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "item"
											}
										},
										"tags": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "implicit"
											}
										}
									}
								}
							}
						]
					}
				}
			]
		},
		"::java::data::recipe::IngredientValue": {
			"kind": "union",
			"members": [
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "item",
							"type": {
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "item"
											}
										}
									}
								]
							}
						}
					]
				},
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "tag",
							"type": {
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "item"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "implicit"
													}
												}
											}
										}
									}
								]
							}
						}
					]
				}
			],
			"attributes": [
				{
					"name": "until",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.21.2"
						}
					}
				}
			]
		},
		"::java::data::recipe::ItemResult": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "item",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "item"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "count",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "until",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::data::recipe::OptionalSmithingIngredients": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Ingredient specifying an item to be trimmed. (eg. `\"#minecraft:trimmable_armor\" }`)\n",
					"key": "base",
					"type": {
						"kind": "reference",
						"path": "::java::data::recipe::Ingredient"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Material that will be used. (eg. `\"#minecraft:trim_materials\"`)\n",
					"key": "addition",
					"type": {
						"kind": "reference",
						"path": "::java::data::recipe::Ingredient"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Template item that will be used for the pattern.\n",
					"key": "template",
					"type": {
						"kind": "reference",
						"path": "::java::data::recipe::Ingredient"
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.21.2"
						}
					}
				}
			]
		},
		"::java::data::recipe::Recipe": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "recipe_serializer"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:recipe_serializer"
					}
				}
			]
		},
		"::java::data::recipe::RequiredSmithingIngredients": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Ingredient specifying an item to be trimmed. (eg. `{ \"tag\": \"minecraft:trimmable_armor\" }`)\n",
					"key": "base",
					"type": {
						"kind": "reference",
						"path": "::java::data::recipe::Ingredient"
					}
				},
				{
					"kind": "pair",
					"desc": "Material that will be used. (eg. `{ \"tag\": \"minecraft:trim_materials\" }`)\n",
					"key": "addition",
					"type": {
						"kind": "reference",
						"path": "::java::data::recipe::Ingredient"
					}
				},
				{
					"kind": "pair",
					"desc": "Template item that will be used for the pattern.\n",
					"key": "template",
					"type": {
						"kind": "reference",
						"path": "::java::data::recipe::Ingredient"
					}
				}
			],
			"attributes": [
				{
					"name": "until",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.21.2"
						}
					}
				}
			]
		},
		"::java::data::recipe::Smelting": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "group",
					"type": {
						"kind": "string"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Identifier for the category this goes in the recipe book.\n",
					"key": "category",
					"type": {
						"kind": "reference",
						"path": "::java::data::recipe::CookingBookCategory"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "ingredient",
					"type": {
						"kind": "reference",
						"path": "::java::data::recipe::Ingredient"
					}
				},
				{
					"kind": "pair",
					"key": "result",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "item"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::server::world::item::SingleItem",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "experience",
					"type": {
						"kind": "float"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "cookingtime",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::data::recipe::Smithing": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "base",
					"type": {
						"kind": "reference",
						"path": "::java::data::recipe::IngredientValue"
					}
				},
				{
					"kind": "pair",
					"key": "addition",
					"type": {
						"kind": "reference",
						"path": "::java::data::recipe::IngredientValue"
					}
				},
				{
					"kind": "pair",
					"key": "result",
					"type": {
						"kind": "reference",
						"path": "::java::data::recipe::ItemResult"
					}
				}
			],
			"attributes": [
				{
					"name": "until",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20"
						}
					}
				}
			]
		},
		"::java::data::recipe::SmithingIngredients": {
			"kind": "union",
			"members": [
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"desc": "Ingredient specifying an item to be trimmed. (eg. `{ \"tag\": \"minecraft:trimmable_armor\" }`)\n",
							"key": "base",
							"type": {
								"kind": "reference",
								"path": "::java::data::recipe::Ingredient"
							}
						},
						{
							"kind": "pair",
							"desc": "Material that will be used. (eg. `{ \"tag\": \"minecraft:trim_materials\" }`)\n",
							"key": "addition",
							"type": {
								"kind": "reference",
								"path": "::java::data::recipe::Ingredient"
							}
						},
						{
							"kind": "pair",
							"desc": "Template item that will be used for the pattern.\n",
							"key": "template",
							"type": {
								"kind": "reference",
								"path": "::java::data::recipe::Ingredient"
							}
						}
					],
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						}
					]
				},
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"desc": "Ingredient specifying an item to be trimmed. (eg. `\"#minecraft:trimmable_armor\" }`)\n",
							"key": "base",
							"type": {
								"kind": "reference",
								"path": "::java::data::recipe::Ingredient"
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "Material that will be used. (eg. `\"#minecraft:trim_materials\"`)\n",
							"key": "addition",
							"type": {
								"kind": "reference",
								"path": "::java::data::recipe::Ingredient"
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "Template item that will be used for the pattern.\n",
							"key": "template",
							"type": {
								"kind": "reference",
								"path": "::java::data::recipe::Ingredient"
							},
							"optional": true
						}
					],
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						}
					]
				}
			]
		},
		"::java::data::recipe::SmithingResult": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "item",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "item"
									}
								}
							}
						]
					}
				}
			],
			"attributes": [
				{
					"name": "until",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::data::recipe::SmithingTransform": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::recipe::SmithingIngredients"
					}
				},
				{
					"kind": "pair",
					"desc": "Resulting transformed item.\n",
					"key": "result",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "struct",
								"fields": [
									{
										"kind": "pair",
										"key": "item",
										"type": {
											"kind": "string",
											"attributes": [
												{
													"name": "id",
													"value": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "item"
														}
													}
												}
											]
										}
									}
								],
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::server::world::item::ItemStack",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							}
						]
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.19.4"
						}
					}
				}
			]
		},
		"::java::data::recipe::Stonecutting": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "group",
					"type": {
						"kind": "string"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "ingredient",
					"type": {
						"kind": "reference",
						"path": "::java::data::recipe::Ingredient"
					}
				},
				{
					"kind": "pair",
					"key": "result",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "item"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::server::world::item::ItemStack",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"key": "count",
					"type": {
						"kind": "int"
					}
				}
			]
		},
		"::java::data::storage::UnknownStorage": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string"
					},
					"type": {
						"kind": "any"
					}
				}
			]
		},
		"::java::data::structure::BlockPalette": {
			"kind": "union",
			"members": [
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "palette",
							"type": {
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::server::util::block_state::BlockState"
								}
							}
						}
					]
				},
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"desc": "Sets of different block states used in the structure, a random palette gets selected based on coordinates.\n",
							"key": "palettes",
							"type": {
								"kind": "list",
								"item": {
									"kind": "list",
									"item": {
										"kind": "reference",
										"path": "::java::server::util::block_state::BlockState"
									}
								}
							}
						}
					]
				}
			]
		},
		"::java::data::structure::Palette": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "palette",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					}
				}
			]
		},
		"::java::data::structure::RandomizedPalette": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Sets of different block states used in the structure, a random palette gets selected based on coordinates.\n",
					"key": "palettes",
					"type": {
						"kind": "list",
						"item": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::util::block_state::BlockState"
							}
						}
					}
				}
			]
		},
		"::java::data::structure::StructureBlock": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "state",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					}
				},
				{
					"kind": "pair",
					"key": "pos",
					"type": {
						"kind": "list",
						"item": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0
							}
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					}
				},
				{
					"kind": "pair",
					"key": "nbt",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "static",
								"value": "%fallback"
							}
						],
						"registry": "minecraft:block"
					},
					"optional": true
				}
			]
		},
		"::java::data::structure::StructureEntity": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "pos",
					"type": {
						"kind": "list",
						"item": {
							"kind": "double",
							"valueRange": {
								"kind": 0,
								"min": 0
							}
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					}
				},
				{
					"kind": "pair",
					"key": "blockPos",
					"type": {
						"kind": "list",
						"item": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0
							}
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					}
				},
				{
					"kind": "pair",
					"key": "nbt",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::AnyEntity"
					}
				}
			]
		},
		"::java::data::structure::StructureNBT": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "[Data version](https://minecraft.fandom.com/wiki/Data_version).\n",
					"key": "DataVersion",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					}
				},
				{
					"kind": "pair",
					"key": "size",
					"type": {
						"kind": "list",
						"item": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0
							}
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "structure_blocks"
						}
					],
					"key": "blocks",
					"type": {
						"kind": "list",
						"item": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "state",
									"type": {
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0
										}
									}
								},
								{
									"kind": "pair",
									"key": "pos",
									"type": {
										"kind": "list",
										"item": {
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0
											}
										},
										"lengthRange": {
											"kind": 0,
											"min": 3,
											"max": 3
										}
									}
								},
								{
									"kind": "pair",
									"key": "nbt",
									"type": {
										"kind": "dispatcher",
										"parallelIndices": [
											{
												"kind": "static",
												"value": "%fallback"
											}
										],
										"registry": "minecraft:block"
									},
									"optional": true
								}
							]
						}
					}
				},
				{
					"kind": "pair",
					"key": "entities",
					"type": {
						"kind": "list",
						"item": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "pos",
									"type": {
										"kind": "list",
										"item": {
											"kind": "double",
											"valueRange": {
												"kind": 0,
												"min": 0
											}
										},
										"lengthRange": {
											"kind": 0,
											"min": 3,
											"max": 3
										}
									}
								},
								{
									"kind": "pair",
									"key": "blockPos",
									"type": {
										"kind": "list",
										"item": {
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0
											}
										},
										"lengthRange": {
											"kind": 0,
											"min": 3,
											"max": 3
										}
									}
								},
								{
									"kind": "pair",
									"key": "nbt",
									"type": {
										"kind": "reference",
										"path": "::java::server::world::entity::AnyEntity"
									}
								}
							]
						}
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::structure::BlockPalette"
					}
				}
			]
		},
		"::java::data::tag::<anonymous 0>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "replace",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "values",
					"type": {
						"kind": "list",
						"item": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::tag::TagEntry"
							},
							"typeArgs": [
								{
									"kind": "reference",
									"path": "::java::data::tag::E"
								}
							]
						}
					}
				}
			]
		},
		"::java::data::tag::ExplicitTagEntry": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "id",
					"type": {
						"kind": "reference",
						"path": "::java::data::tag::E"
					}
				},
				{
					"kind": "pair",
					"key": "required",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.16.2"
						}
					}
				}
			]
		},
		"::java::data::tag::Tag": {
			"kind": "template",
			"child": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "replace",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "values",
						"type": {
							"kind": "list",
							"item": {
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::data::tag::TagEntry"
								},
								"typeArgs": [
									{
										"kind": "reference",
										"path": "::java::data::tag::E"
									}
								]
							}
						}
					}
				]
			},
			"typeParams": [
				{
					"path": "::java::data::tag::E"
				}
			]
		},
		"::java::data::tag::TagEntry": {
			"kind": "template",
			"child": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::data::tag::E"
					},
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "id",
								"type": {
									"kind": "reference",
									"path": "::java::data::tag::E"
								}
							},
							{
								"kind": "pair",
								"key": "required",
								"type": {
									"kind": "boolean"
								},
								"optional": true
							}
						],
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16.2"
									}
								}
							}
						]
					}
				]
			},
			"typeParams": [
				{
					"path": "::java::data::tag::E"
				}
			]
		},
		"::java::data::trial_spawner::<anonymous 0>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "data",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "loot_table"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "weight",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1
						}
					}
				}
			]
		},
		"::java::data::trial_spawner::TrialSpawnerConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Maximum distance from the spawner that en entity can spawn\n",
					"key": "spawn_range",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1,
							"max": 128
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Total amount of entities that are spawned during one activation, when 1 player is nearby\n",
					"key": "total_mobs",
					"type": {
						"kind": "float"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Number added to `total_mobs` for each additional player\n",
					"key": "total_mobs_added_per_player",
					"type": {
						"kind": "float"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Number of entities that that can be present at once, when 1 player is nearby\n",
					"key": "simultaneous_mobs",
					"type": {
						"kind": "float"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Number added to `simultaneous_mobs` for each additional player\n",
					"key": "simultaneous_mobs_added_per_player",
					"type": {
						"kind": "float"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Ticks until the next spawn.\n",
					"key": "ticks_between_spawn",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Entities that can be placed.\n",
					"key": "spawn_potentials",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::block::spawner::SpawnPotential"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Loot tables to use when ejecting loot. Chooses one loot table based on weight and then uses it as often as there are players nearby.\n",
					"key": "loot_tables_to_eject",
					"type": {
						"kind": "list",
						"item": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "data",
									"type": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "loot_table"
													}
												}
											}
										]
									}
								},
								{
									"kind": "pair",
									"key": "weight",
									"type": {
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 1
										}
									}
								}
							]
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Loot table to use when summoning ominous item spawners. One roll seeded based on rough location to determine all items used during the battle.\n",
					"key": "items_to_drop_when_ominous",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "loot_table"
									}
								}
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::trim::ArmorMaterial": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Leather",
					"value": "leather"
				},
				{
					"identifier": "Chainmail",
					"value": "chainmail"
				},
				{
					"identifier": "Iron",
					"value": "iron"
				},
				{
					"identifier": "Gold",
					"value": "gold"
				},
				{
					"identifier": "Diamond",
					"value": "diamond"
				},
				{
					"identifier": "Netherite",
					"value": "netherite"
				},
				{
					"identifier": "Turtle",
					"value": "turtle"
				}
			]
		},
		"::java::data::trim::TrimMaterial": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "ID which will be used in the resource pack.\n",
					"key": "asset_name",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "texture"
											}
										},
										"path": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "trims/color_palettes/"
											}
										}
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "Text displayed in the item tooltip.\n",
					"key": "description",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::text::Text"
					}
				},
				{
					"kind": "pair",
					"desc": "Item used in the smithing table for this material.\n",
					"key": "ingredient",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.21.2"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "item"
											}
										}
									}
								]
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.21.2"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "item"
													}
												},
												"exclude": {
													"kind": "tree",
													"values": {
														"0": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "air"
															}
														}
													}
												}
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.4"
								}
							}
						}
					],
					"desc": "Model override predicate float.\n",
					"key": "item_model_index",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				},
				{
					"kind": "pair",
					"desc": "Armor materials that should have a different color palette.\n",
					"key": "override_armor_materials",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": {
									"kind": "reference",
									"path": "::java::data::trim::ArmorMaterial",
									"attributes": [
										{
											"name": "id"
										}
									]
								},
								"type": {
									"kind": "string"
								}
							}
						]
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.19.4"
						}
					}
				}
			]
		},
		"::java::data::trim::TrimMaterialOverrides": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "reference",
						"path": "::java::data::trim::ArmorMaterial",
						"attributes": [
							{
								"name": "id"
							}
						]
					},
					"type": {
						"kind": "string"
					}
				}
			]
		},
		"::java::data::trim::TrimPattern": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "ID of the pattern that will be used in the resource pack as an overlay on the armor.\n",
					"key": "asset_id",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "texture"
											}
										},
										"path": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "trims/models/armor/"
											}
										}
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "Text displayed in the item tooltip.\n",
					"key": "description",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::text::Text"
					}
				},
				{
					"kind": "pair",
					"desc": "The item used in the smithing table for this pattern.\n",
					"key": "template_item",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.21.2"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "item"
											}
										}
									}
								]
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.21.2"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "item"
													}
												},
												"exclude": {
													"kind": "tree",
													"values": {
														"0": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "air"
															}
														}
													}
												}
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.2"
								}
							}
						}
					],
					"desc": "Whether the pattern texture will be masked based on the underlying armor. Defaults to `false`.\n",
					"key": "decal",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.19.4"
						}
					}
				}
			]
		},
		"::java::data::util::<anonymous 0>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "min",
					"type": {
						"kind": "reference",
						"path": "::java::data::util::T"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "max",
					"type": {
						"kind": "reference",
						"path": "::java::data::util::T"
					},
					"optional": true
				}
			]
		},
		"::java::data::util::<anonymous 1>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "min",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::NumberProvider"
						},
						"typeArgs": [
							{
								"kind": "int"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "max",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::util::NumberProvider"
						},
						"typeArgs": [
							{
								"kind": "int"
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::util::<anonymous 2>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "min",
					"type": {
						"kind": "float"
					}
				},
				{
					"kind": "pair",
					"key": "max",
					"type": {
						"kind": "float"
					}
				}
			]
		},
		"::java::data::util::<anonymous 3>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "reference",
						"path": "::java::data::util::RandomIntGeneratorType"
					},
					"optional": true
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:random_int_generator"
					}
				}
			]
		},
		"::java::data::util::<anonymous 4>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "loot_number_provider_type"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:number_provider"
					}
				}
			]
		},
		"::java::data::util::<anonymous 5>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "loot_score_provider_type"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:score_provider"
					}
				}
			]
		},
		"::java::data::util::<anonymous 6>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "loot_nbt_provider_type"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:nbt_provider"
					}
				}
			]
		},
		"::java::data::util::BinomialIntGenerator": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "n",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					}
				},
				{
					"kind": "pair",
					"key": "p",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				}
			]
		},
		"::java::data::util::BinomialNumberProvider": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "n",
					"type": {
						"kind": "reference",
						"path": "::java::data::util::NumberProvider"
					}
				},
				{
					"kind": "pair",
					"key": "p",
					"type": {
						"kind": "reference",
						"path": "::java::data::util::NumberProvider"
					}
				}
			]
		},
		"::java::data::util::ConstantIntGenerator": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "value",
					"type": {
						"kind": "int"
					}
				}
			]
		},
		"::java::data::util::ConstantNumberProvider": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "value",
					"type": {
						"kind": "float"
					}
				}
			]
		},
		"::java::data::util::ContextNbtProvider": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "target",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::function::CopyNameSource"
					}
				}
			]
		},
		"::java::data::util::ContextScoreProvider": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "target",
					"type": {
						"kind": "reference",
						"path": "::java::data::loot::EntityTarget"
					}
				}
			]
		},
		"::java::data::util::EnchantmentLevelProvider": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "amount",
					"type": {
						"kind": "reference",
						"path": "::java::data::enchantment::LevelBasedValue"
					}
				}
			]
		},
		"::java::data::util::FixedScoreProvider": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "name",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "score_holder"
							}
						]
					}
				}
			]
		},
		"::java::data::util::IntLimiter": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "min",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "max",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::data::util::IntRange": {
			"kind": "union",
			"members": [
				{
					"kind": "int"
				},
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "min",
							"type": {
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::data::util::NumberProvider"
								},
								"typeArgs": [
									{
										"kind": "int"
									}
								]
							},
							"optional": true
						},
						{
							"kind": "pair",
							"key": "max",
							"type": {
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::data::util::NumberProvider"
								},
								"typeArgs": [
									{
										"kind": "int"
									}
								]
							},
							"optional": true
						}
					]
				}
			]
		},
		"::java::data::util::MinMaxBounds": {
			"kind": "template",
			"child": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::data::util::T"
					},
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "min",
								"type": {
									"kind": "reference",
									"path": "::java::data::util::T"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "max",
								"type": {
									"kind": "reference",
									"path": "::java::data::util::T"
								},
								"optional": true
							}
						]
					}
				]
			},
			"typeParams": [
				{
					"path": "::java::data::util::T"
				}
			]
		},
		"::java::data::util::NbtProvider": {
			"kind": "union",
			"members": [
				{
					"kind": "reference",
					"path": "::java::data::loot::function::CopyNameSource"
				},
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "type",
							"type": {
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "loot_nbt_provider_type"
											}
										}
									}
								]
							}
						},
						{
							"kind": "spread",
							"type": {
								"kind": "dispatcher",
								"parallelIndices": [
									{
										"kind": "dynamic",
										"accessor": [
											"type"
										]
									}
								],
								"registry": "minecraft:nbt_provider"
							}
						}
					]
				}
			]
		},
		"::java::data::util::NumberProvider": {
			"kind": "union",
			"members": [
				{
					"kind": "float"
				},
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "type",
							"type": {
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "loot_number_provider_type"
											}
										}
									}
								]
							},
							"optional": true
						},
						{
							"kind": "spread",
							"type": {
								"kind": "dispatcher",
								"parallelIndices": [
									{
										"kind": "dynamic",
										"accessor": [
											"type"
										]
									}
								],
								"registry": "minecraft:number_provider"
							}
						}
					]
				}
			]
		},
		"::java::data::util::RandomIntGenerator": {
			"kind": "union",
			"members": [
				{
					"kind": "int"
				},
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "type",
							"type": {
								"kind": "reference",
								"path": "::java::data::util::RandomIntGeneratorType"
							},
							"optional": true
						},
						{
							"kind": "spread",
							"type": {
								"kind": "dispatcher",
								"parallelIndices": [
									{
										"kind": "dynamic",
										"accessor": [
											"type"
										]
									}
								],
								"registry": "minecraft:random_int_generator"
							}
						}
					]
				}
			]
		},
		"::java::data::util::RandomIntGeneratorType": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Uniform",
					"value": "uniform"
				},
				{
					"identifier": "Binomial",
					"value": "binomial"
				},
				{
					"identifier": "Constant",
					"value": "constant"
				}
			]
		},
		"::java::data::util::RandomValueBounds": {
			"kind": "union",
			"members": [
				{
					"kind": "float"
				},
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "min",
							"type": {
								"kind": "float"
							}
						},
						{
							"kind": "pair",
							"key": "max",
							"type": {
								"kind": "float"
							}
						}
					]
				}
			]
		},
		"::java::data::util::ScoreNumberProvider": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "target",
					"type": {
						"kind": "reference",
						"path": "::java::data::util::ScoreProvider"
					}
				},
				{
					"kind": "pair",
					"key": "score",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "objective"
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "scale",
					"type": {
						"kind": "float"
					},
					"optional": true
				}
			]
		},
		"::java::data::util::ScoreProvider": {
			"kind": "union",
			"members": [
				{
					"kind": "reference",
					"path": "::java::data::loot::EntityTarget"
				},
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "type",
							"type": {
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "loot_score_provider_type"
											}
										}
									}
								]
							}
						},
						{
							"kind": "spread",
							"type": {
								"kind": "dispatcher",
								"parallelIndices": [
									{
										"kind": "dynamic",
										"accessor": [
											"type"
										]
									}
								],
								"registry": "minecraft:score_provider"
							}
						}
					]
				}
			]
		},
		"::java::data::util::SoundEventRef": {
			"kind": "union",
			"members": [
				{
					"kind": "string",
					"attributes": [
						{
							"name": "id",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "sound_event"
								}
							}
						}
					]
				},
				{
					"kind": "string",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19.3"
								}
							}
						},
						{
							"name": "id",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "weighed_sound_event"
								}
							}
						}
					]
				},
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "sound_id",
							"type": {
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "weighed_sound_event"
													}
												},
												"empty": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							}
						},
						{
							"kind": "pair",
							"desc": "Range in blocks. If the player is further than this range from the source of the sound, the sound will be inaudible. If omitted, the sound will have a variable range.\n",
							"key": "range",
							"type": {
								"kind": "float"
							},
							"optional": true
						}
					],
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19.3"
								}
							}
						}
					]
				}
			]
		},
		"::java::data::util::StorageNbtProvider": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "source",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "storage"
									}
								}
							}
						]
					}
				}
			]
		},
		"::java::data::util::StorageNumberProvider": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "storage",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "storage"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "path",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "nbt_path",
								"value": {
									"kind": "dispatcher",
									"parallelIndices": [
										{
											"kind": "dynamic",
											"accessor": [
												"source"
											]
										}
									],
									"registry": "minecraft:storage"
								}
							}
						]
					}
				}
			]
		},
		"::java::data::util::UniformIntGenerator": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "min",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "max",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::data::util::UniformNumberProvider": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "min",
					"type": {
						"kind": "reference",
						"path": "::java::data::util::NumberProvider"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "max",
					"type": {
						"kind": "reference",
						"path": "::java::data::util::NumberProvider"
					},
					"optional": true
				}
			]
		},
		"::java::data::util::WeightedSoundEvent": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "sound_id",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "weighed_sound_event"
											}
										},
										"empty": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "allowed"
											}
										}
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "Range in blocks. If the player is further than this range from the source of the sound, the sound will be inaudible. If omitted, the sound will have a variable range.\n",
					"key": "range",
					"type": {
						"kind": "float"
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.19.3"
						}
					}
				}
			]
		},
		"::java::data::variants::banner_pattern::BannerPattern": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Also resolves to `assets/<namespace>/textures/entity/shield/<name>.png`.\n",
					"key": "asset_id",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "texture"
											}
										},
										"path": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "entity/banner/"
											}
										}
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "Translation key prefix per dye color (e.g. `block.minecraft.banner.custom.pattern` resolves to `block.minecraft.banner.custom.pattern.<dye color>`).\n",
					"key": "translation_key",
					"type": {
						"kind": "string"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::data::variants::instrument::Instrument": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "sound_event",
					"type": {
						"kind": "reference",
						"path": "::java::data::util::SoundEventRef"
					}
				},
				{
					"kind": "pair",
					"desc": "Maximum range in blocks that the sound can be heard\n",
					"key": "range",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 2,
							"min": 0
						}
					}
				},
				{
					"kind": "pair",
					"desc": "Duration of use in seconds, used as item cooldown\n",
					"key": "use_duration",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 2,
							"min": 0
						}
					}
				},
				{
					"kind": "pair",
					"key": "description",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::text::Text"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.21.2"
						}
					}
				}
			]
		},
		"::java::data::variants::jukebox_song::JukeboxSong": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Displayed in the HUD actionbar & item tooltip.\n",
					"key": "description",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::text::Text"
					}
				},
				{
					"kind": "pair",
					"key": "comparator_output",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 15
						}
					}
				},
				{
					"kind": "pair",
					"key": "length_in_seconds",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 2,
							"min": 0
						}
					}
				},
				{
					"kind": "pair",
					"key": "sound_event",
					"type": {
						"kind": "reference",
						"path": "::java::data::util::SoundEventRef"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.21"
						}
					}
				}
			]
		},
		"::java::data::variants::painting::PaintingVariant": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "asset_id",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "texture"
											}
										},
										"path": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "painting/"
											}
										}
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "Dimension in blocks.\n",
					"key": "width",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1,
							"max": 16
						}
					}
				},
				{
					"kind": "pair",
					"desc": "Dimension in blocks.\n",
					"key": "height",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1,
							"max": 16
						}
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						}
					],
					"key": "title",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::text::Text"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						}
					],
					"key": "author",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::text::Text"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.21"
						}
					}
				}
			]
		},
		"::java::data::variants::wolf::WolfVariant": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "biomes",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "worldgen/biome"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "worldgen/biome"
												}
											}
										}
									]
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "wild_texture",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "texture"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "tame_texture",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "texture"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "angry_texture",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "texture"
									}
								}
							}
						]
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::data::worldgen::<anonymous 0>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "base",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::Base"
					}
				},
				{
					"kind": "pair",
					"key": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::Spread"
					}
				}
			]
		},
		"::java::data::worldgen::<anonymous 1>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "int_provider_type"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "dispatcher",
							"parallelIndices": [
								{
									"kind": "dynamic",
									"accessor": [
										"type"
									]
								}
							],
							"registry": "minecraft:int_provider"
						},
						"typeArgs": [
							{
								"kind": "reference",
								"path": "::java::data::worldgen::T"
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::<anonymous 10>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "distribution",
					"type": {
						"kind": "list",
						"item": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "weight",
									"type": {
										"kind": "int"
									}
								},
								{
									"kind": "pair",
									"key": "data",
									"type": {
										"kind": "concrete",
										"child": {
											"kind": "reference",
											"path": "::java::data::worldgen::IntProvider"
										},
										"typeArgs": [
											{
												"kind": "reference",
												"path": "::java::data::worldgen::T"
											}
										]
									}
								}
							]
						}
					}
				}
			]
		},
		"::java::data::worldgen::<anonymous 11>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "weight",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"key": "data",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::IntProvider"
						},
						"typeArgs": [
							{
								"kind": "reference",
								"path": "::java::data::worldgen::T"
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::<anonymous 12>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "float_provider_type"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"key": "value",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "dispatcher",
							"parallelIndices": [
								{
									"kind": "dynamic",
									"accessor": [
										"type"
									]
								}
							],
							"registry": "minecraft:float_provider"
						},
						"typeArgs": [
							{
								"kind": "reference",
								"path": "::java::data::worldgen::T"
							}
						]
					}
				},
				{
					"kind": "spread",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "dispatcher",
							"parallelIndices": [
								{
									"kind": "dynamic",
									"accessor": [
										"type"
									]
								}
							],
							"registry": "minecraft:float_provider"
						},
						"typeArgs": [
							{
								"kind": "reference",
								"path": "::java::data::worldgen::T"
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::<anonymous 13>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "value",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::T"
					}
				}
			]
		},
		"::java::data::worldgen::<anonymous 14>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "min_inclusive",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::T"
					}
				},
				{
					"kind": "pair",
					"key": "max_exclusive",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::T"
					}
				}
			]
		},
		"::java::data::worldgen::<anonymous 15>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "min",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::T"
					}
				},
				{
					"kind": "pair",
					"key": "max",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::T"
					}
				},
				{
					"kind": "pair",
					"key": "mean",
					"type": {
						"kind": "float"
					}
				},
				{
					"kind": "pair",
					"key": "deviation",
					"type": {
						"kind": "float"
					}
				}
			]
		},
		"::java::data::worldgen::<anonymous 16>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "min",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::T"
					}
				},
				{
					"kind": "pair",
					"key": "max",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::T"
					}
				},
				{
					"kind": "pair",
					"key": "plateau",
					"type": {
						"kind": "float"
					}
				}
			]
		},
		"::java::data::worldgen::<anonymous 17>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "absolute",
					"type": {
						"kind": "int"
					}
				}
			]
		},
		"::java::data::worldgen::<anonymous 18>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "above_bottom",
					"type": {
						"kind": "int"
					}
				}
			]
		},
		"::java::data::worldgen::<anonymous 19>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "below_top",
					"type": {
						"kind": "int"
					}
				}
			]
		},
		"::java::data::worldgen::<anonymous 2>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "value",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::T"
					}
				}
			]
		},
		"::java::data::worldgen::<anonymous 20>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "height_provider_type"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:height_provider"
					}
				}
			]
		},
		"::java::data::worldgen::<anonymous 3>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "value",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::ConstantIntProvider"
					}
				}
			],
			"attributes": [
				{
					"name": "until",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::data::worldgen::<anonymous 4>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "min_inclusive",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::T"
					}
				},
				{
					"kind": "pair",
					"key": "max_inclusive",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::T"
					}
				}
			]
		},
		"::java::data::worldgen::<anonymous 5>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "value",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::UniformIntProvider"
						},
						"typeArgs": [
							{
								"kind": "reference",
								"path": "::java::data::worldgen::T"
							}
						]
					}
				}
			],
			"attributes": [
				{
					"name": "until",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::data::worldgen::<anonymous 6>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "min_inclusive",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::T"
					}
				},
				{
					"kind": "pair",
					"key": "max_inclusive",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::T"
					}
				},
				{
					"kind": "pair",
					"key": "source",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::IntProvider"
						},
						"typeArgs": [
							{
								"kind": "int"
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::<anonymous 7>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "value",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::ClampedIntProvider"
						},
						"typeArgs": [
							{
								"kind": "reference",
								"path": "::java::data::worldgen::T"
							}
						]
					}
				}
			],
			"attributes": [
				{
					"name": "until",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::data::worldgen::<anonymous 8>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::UniformIntProvider"
						},
						"typeArgs": [
							{
								"kind": "reference",
								"path": "::java::data::worldgen::T"
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "mean",
					"type": {
						"kind": "float"
					}
				},
				{
					"kind": "pair",
					"key": "deviation",
					"type": {
						"kind": "float"
					}
				}
			]
		},
		"::java::data::worldgen::<anonymous 9>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "value",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::ClampedNormalIntProvider"
						},
						"typeArgs": [
							{
								"kind": "reference",
								"path": "::java::data::worldgen::T"
							}
						]
					}
				}
			],
			"attributes": [
				{
					"name": "until",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::data::worldgen::biome::<anonymous 0>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "reference",
						"path": "::java::data::worldgen::biome::MobCategory"
					},
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::worldgen::biome::SpawnerData"
						}
					}
				}
			]
		},
		"::java::data::worldgen::biome::<anonymous 1>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "entity_type"
									}
								}
							}
						]
					},
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::biome::MobSpawnCost"
					}
				}
			]
		},
		"::java::data::worldgen::biome::<anonymous 2>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "weight",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1
						}
					}
				},
				{
					"kind": "pair",
					"key": "data",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::biome::BiomeMusic"
					}
				}
			]
		},
		"::java::data::worldgen::biome::Biome": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "category",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::biome::BiomeCategory"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"desc": "Raises or lowers the terrain. Positive values are considered land and negative are oceans.\n",
					"key": "depth",
					"type": {
						"kind": "float"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"desc": "Vertically stretches the terrain. Lower values produce flatter terrain.\n",
					"key": "scale",
					"type": {
						"kind": "float"
					}
				},
				{
					"kind": "pair",
					"key": "temperature",
					"type": {
						"kind": "float"
					}
				},
				{
					"kind": "pair",
					"key": "downfall",
					"type": {
						"kind": "float"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19.4"
								}
							}
						}
					],
					"key": "precipitation",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::biome::Precipitation"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19.4"
								}
							}
						}
					],
					"key": "has_precipitation",
					"type": {
						"kind": "boolean"
					}
				},
				{
					"kind": "pair",
					"key": "temperature_modifier",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::biome::TemperatureModifier"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"desc": "If true, the world spawn will be preferred in this biome.\n",
					"key": "player_spawn_friendly",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "creature_spawn_probability",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "effects",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::biome::BiomeEffects"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"key": "surface_builder",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::surface_builder::ConfiguredSurfaceBuilderRef"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"key": "starts",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::worldgen::structure::StructureRef"
						}
					}
				},
				{
					"kind": "pair",
					"key": "spawners",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": {
									"kind": "reference",
									"path": "::java::data::worldgen::biome::MobCategory"
								},
								"type": {
									"kind": "list",
									"item": {
										"kind": "reference",
										"path": "::java::data::worldgen::biome::SpawnerData"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "spawn_costs",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "entity_type"
												}
											}
										}
									]
								},
								"type": {
									"kind": "reference",
									"path": "::java::data::worldgen::biome::MobSpawnCost"
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "carvers",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "struct",
								"fields": [
									{
										"kind": "pair",
										"key": {
											"kind": "reference",
											"path": "::java::data::worldgen::CarveStep"
										},
										"type": {
											"kind": "union",
											"members": [
												{
													"kind": "list",
													"item": {
														"kind": "reference",
														"path": "::java::data::worldgen::carver::CarverRef"
													}
												},
												{
													"kind": "string",
													"attributes": [
														{
															"name": "since",
															"value": {
																"kind": "literal",
																"value": {
																	"kind": "string",
																	"value": "1.18.2"
																}
															}
														},
														{
															"name": "id",
															"value": {
																"kind": "tree",
																"values": {
																	"registry": {
																		"kind": "literal",
																		"value": {
																			"kind": "string",
																			"value": "worldgen/configured_carver"
																		}
																	},
																	"tags": {
																		"kind": "reference",
																		"path": "::java::data::worldgen::biome::allowed"
																	}
																}
															}
														}
													]
												}
											]
										}
									}
								],
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.21.2"
											}
										}
									}
								]
							},
							{
								"kind": "union",
								"members": [
									{
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::data::worldgen::carver::CarverRef"
										}
									},
									{
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "tree",
													"values": {
														"registry": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "worldgen/configured_carver"
															}
														},
														"tags": {
															"kind": "reference",
															"path": "::java::data::worldgen::biome::allowed"
														}
													}
												}
											}
										]
									}
								],
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.21.2"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "features",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "list",
								"item": {
									"kind": "list",
									"item": {
										"kind": "reference",
										"path": "::java::data::worldgen::feature::ConfiguredFeatureRef"
									}
								},
								"lengthRange": {
									"kind": 0,
									"max": 10
								},
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18"
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "union",
									"members": [
										{
											"kind": "list",
											"item": {
												"kind": "reference",
												"path": "::java::data::worldgen::feature::placement::PlacedFeatureRef"
											}
										},
										{
											"kind": "string",
											"attributes": [
												{
													"name": "since",
													"value": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "1.18.2"
														}
													}
												},
												{
													"name": "id",
													"value": {
														"kind": "tree",
														"values": {
															"registry": {
																"kind": "literal",
																"value": {
																	"kind": "string",
																	"value": "worldgen/placed_feature"
																}
															},
															"tags": {
																"kind": "reference",
																"path": "::java::data::worldgen::biome::allowed"
															}
														}
													}
												}
											]
										}
									]
								},
								"lengthRange": {
									"kind": 0,
									"max": 11
								},
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18"
											}
										}
									}
								]
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::biome::BiomeCategory": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Beach",
					"value": "beach"
				},
				{
					"identifier": "Desert",
					"value": "desert"
				},
				{
					"identifier": "ExtremeHills",
					"value": "extreme_hills"
				},
				{
					"identifier": "Forest",
					"value": "forest"
				},
				{
					"identifier": "Icy",
					"value": "icy"
				},
				{
					"identifier": "Jungle",
					"value": "jungle"
				},
				{
					"identifier": "Mesa",
					"value": "mesa"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"identifier": "Mountain",
					"value": "mountain"
				},
				{
					"identifier": "Mushroom",
					"value": "mushroom"
				},
				{
					"identifier": "Nether",
					"value": "nether"
				},
				{
					"identifier": "None",
					"value": "none"
				},
				{
					"identifier": "Ocean",
					"value": "ocean"
				},
				{
					"identifier": "Plains",
					"value": "plains"
				},
				{
					"identifier": "River",
					"value": "river"
				},
				{
					"identifier": "Savanna",
					"value": "savanna"
				},
				{
					"identifier": "Swamp",
					"value": "swamp"
				},
				{
					"identifier": "Taiga",
					"value": "taiga"
				},
				{
					"identifier": "TheEnd",
					"value": "the_end"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"identifier": "Underground",
					"value": "underground"
				}
			]
		},
		"::java::data::worldgen::biome::BiomeEffects": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "sky_color",
					"type": {
						"kind": "int",
						"attributes": [
							{
								"name": "color",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "composite_rgb"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "fog_color",
					"type": {
						"kind": "int",
						"attributes": [
							{
								"name": "color",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "composite_rgb"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "water_color",
					"type": {
						"kind": "int",
						"attributes": [
							{
								"name": "color",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "composite_rgb"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "water_fog_color",
					"type": {
						"kind": "int",
						"attributes": [
							{
								"name": "color",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "composite_rgb"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "grass_color",
					"type": {
						"kind": "int",
						"attributes": [
							{
								"name": "color",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "composite_rgb"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "foliage_color",
					"type": {
						"kind": "int",
						"attributes": [
							{
								"name": "color",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "composite_rgb"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "grass_color_modifier",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::biome::GrassColorModifier"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "ambient_sound",
					"type": {
						"kind": "reference",
						"path": "::java::data::util::SoundEventRef"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "mood_sound",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "sound",
								"type": {
									"kind": "reference",
									"path": "::java::data::util::SoundEventRef"
								}
							},
							{
								"kind": "pair",
								"key": "tick_delay",
								"type": {
									"kind": "int"
								}
							},
							{
								"kind": "pair",
								"key": "block_search_extent",
								"type": {
									"kind": "int"
								}
							},
							{
								"kind": "pair",
								"key": "offset",
								"type": {
									"kind": "float"
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "additions_sound",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "sound",
								"type": {
									"kind": "reference",
									"path": "::java::data::util::SoundEventRef"
								}
							},
							{
								"kind": "pair",
								"key": "tick_chance",
								"type": {
									"kind": "float",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 1
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "music",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::worldgen::biome::BiomeMusic",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.21.4"
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "struct",
									"fields": [
										{
											"kind": "pair",
											"key": "weight",
											"type": {
												"kind": "int",
												"valueRange": {
													"kind": 0,
													"min": 1
												}
											}
										},
										{
											"kind": "pair",
											"key": "data",
											"type": {
												"kind": "reference",
												"path": "::java::data::worldgen::biome::BiomeMusic"
											}
										}
									]
								},
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.21.4"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "The volume of the music in this biome. Defaults to 1.\n\nThe game will smoothly transition between the current music volume and the new volume when entering the biome.\n",
					"key": "music_volume",
					"type": {
						"kind": "float"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "particle",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "options",
								"type": {
									"kind": "reference",
									"path": "::java::server::util::particle::Particle"
								}
							},
							{
								"kind": "pair",
								"key": "probability",
								"type": {
									"kind": "float",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 1
									}
								}
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::worldgen::biome::BiomeMusic": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "sound",
					"type": {
						"kind": "reference",
						"path": "::java::data::util::SoundEventRef"
					}
				},
				{
					"kind": "pair",
					"key": "min_delay",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					}
				},
				{
					"kind": "pair",
					"key": "max_delay",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					}
				},
				{
					"kind": "pair",
					"key": "replace_current_music",
					"type": {
						"kind": "boolean"
					}
				}
			]
		},
		"::java::data::worldgen::biome::BiomeParticle": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "options",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::particle::Particle"
					}
				},
				{
					"kind": "pair",
					"key": "probability",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				}
			]
		},
		"::java::data::worldgen::biome::BiomeSoundAdditions": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "sound",
					"type": {
						"kind": "reference",
						"path": "::java::data::util::SoundEventRef"
					}
				},
				{
					"kind": "pair",
					"key": "tick_chance",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				}
			]
		},
		"::java::data::worldgen::biome::CarversPerStep": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "reference",
						"path": "::java::data::worldgen::CarveStep"
					},
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::data::worldgen::carver::CarverRef"
								}
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18.2"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "worldgen/configured_carver"
													}
												},
												"tags": {
													"kind": "reference",
													"path": "::java::data::worldgen::biome::allowed"
												}
											}
										}
									}
								]
							}
						]
					}
				}
			],
			"attributes": [
				{
					"name": "until",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.21.2"
						}
					}
				}
			]
		},
		"::java::data::worldgen::biome::GrassColorModifier": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "None",
					"value": "none"
				},
				{
					"identifier": "DarkForest",
					"value": "dark_forest"
				},
				{
					"identifier": "Swamp",
					"value": "swamp"
				}
			]
		},
		"::java::data::worldgen::biome::MobCategory": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Monster",
					"value": "monster"
				},
				{
					"identifier": "Creature",
					"value": "creature"
				},
				{
					"identifier": "Ambient",
					"value": "ambient"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"identifier": "Axolotls",
					"value": "axolotls"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"identifier": "UndergroundWaterCreature",
					"value": "underground_water_creature"
				},
				{
					"identifier": "WaterCreature",
					"value": "water_creature"
				},
				{
					"identifier": "WaterAmbient",
					"value": "water_ambient"
				},
				{
					"identifier": "Misc",
					"value": "misc"
				}
			]
		},
		"::java::data::worldgen::biome::MobSpawnCost": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "energy_budget",
					"type": {
						"kind": "double"
					}
				},
				{
					"kind": "pair",
					"key": "charge",
					"type": {
						"kind": "double"
					}
				}
			]
		},
		"::java::data::worldgen::biome::MoodSound": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "sound",
					"type": {
						"kind": "reference",
						"path": "::java::data::util::SoundEventRef"
					}
				},
				{
					"kind": "pair",
					"key": "tick_delay",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"key": "block_search_extent",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"key": "offset",
					"type": {
						"kind": "float"
					}
				}
			]
		},
		"::java::data::worldgen::biome::Precipitation": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "None",
					"value": "none"
				},
				{
					"identifier": "Rain",
					"value": "rain"
				},
				{
					"identifier": "Snow",
					"value": "snow"
				}
			]
		},
		"::java::data::worldgen::biome::SpawnerData": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "entity_type"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "weight",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"key": "minCount",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"key": "maxCount",
					"type": {
						"kind": "int"
					}
				}
			]
		},
		"::java::data::worldgen::biome::TemperatureModifier": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "None",
					"value": "none"
				},
				{
					"identifier": "Frozen",
					"value": "frozen"
				}
			]
		},
		"::java::data::worldgen::BottomBiasHeightProvider": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::UniformHeightProvider"
					}
				},
				{
					"kind": "pair",
					"key": "inner",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1
						}
					},
					"optional": true
				}
			]
		},
		"::java::data::worldgen::carver::CanyonConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "vertical_rotation",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::FloatProvider"
						},
						"typeArgs": [
							{
								"kind": "float"
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "shape",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::carver::CanyonShape"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.17"
						}
					}
				}
			]
		},
		"::java::data::worldgen::carver::CanyonShape": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "distance_factor",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::FloatProvider"
						},
						"typeArgs": [
							{
								"kind": "float"
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "thickness",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::FloatProvider"
						},
						"typeArgs": [
							{
								"kind": "float"
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "width_smoothness",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					}
				},
				{
					"kind": "pair",
					"key": "horizontal_radius_factor",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::FloatProvider"
						},
						"typeArgs": [
							{
								"kind": "float"
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "vertical_radius_default_factor",
					"type": {
						"kind": "float"
					}
				},
				{
					"kind": "pair",
					"key": "vertical_radius_center_factor",
					"type": {
						"kind": "float"
					}
				}
			]
		},
		"::java::data::worldgen::carver::CarverConfigBase": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "probability",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "replaceable",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "block"
												}
											}
										}
									]
								}
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "block"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				},
				{
					"kind": "spread",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "y",
								"type": {
									"kind": "reference",
									"path": "::java::data::worldgen::HeightProvider"
								}
							},
							{
								"kind": "pair",
								"key": "yScale",
								"type": {
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::worldgen::FloatProvider"
									},
									"typeArgs": [
										{
											"kind": "float"
										}
									]
								}
							},
							{
								"kind": "pair",
								"key": "lava_level",
								"type": {
									"kind": "reference",
									"path": "::java::data::worldgen::VerticalAnchor"
								}
							},
							{
								"kind": "pair",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18"
											}
										}
									}
								],
								"key": "aquifers_enabled",
								"type": {
									"kind": "boolean"
								}
							},
							{
								"kind": "pair",
								"key": "debug_settings",
								"type": {
									"kind": "reference",
									"path": "::java::data::worldgen::carver::CarverDebugSettings"
								},
								"optional": true
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									{
										"keyword": "parent"
									},
									"type"
								]
							}
						],
						"registry": "minecraft:carver_config"
					}
				}
			]
		},
		"::java::data::worldgen::carver::CarverDebugSettings": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "debug_mode",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "air_state",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::block_state::BlockState"
					}
				},
				{
					"kind": "pair",
					"key": "water_state",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::block_state::BlockState"
					}
				},
				{
					"kind": "pair",
					"key": "lava_state",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::block_state::BlockState"
					}
				},
				{
					"kind": "pair",
					"key": "barrier_state",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::block_state::BlockState"
					}
				}
			]
		},
		"::java::data::worldgen::carver::CarverRef": {
			"kind": "union",
			"members": [
				{
					"kind": "string",
					"attributes": [
						{
							"name": "id",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "worldgen/configured_carver"
								}
							}
						}
					]
				},
				{
					"kind": "reference",
					"path": "::java::data::worldgen::carver::ConfiguredCarver"
				}
			]
		},
		"::java::data::worldgen::carver::CaveConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "horizontal_radius_multiplier",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::FloatProvider"
						},
						"typeArgs": [
							{
								"kind": "float"
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "vertical_radius_multiplier",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::FloatProvider"
						},
						"typeArgs": [
							{
								"kind": "float"
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "floor_level",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::FloatProvider"
						},
						"typeArgs": [
							{
								"kind": "float",
								"valueRange": {
									"kind": 0,
									"min": -1,
									"max": 1
								}
							}
						]
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.17"
						}
					}
				}
			]
		},
		"::java::data::worldgen::carver::ConfiguredCarver": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "worldgen/carver"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "config",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "probability",
								"type": {
									"kind": "float",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 1
									}
								}
							},
							{
								"kind": "pair",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.19"
											}
										}
									}
								],
								"key": "replaceable",
								"type": {
									"kind": "union",
									"members": [
										{
											"kind": "list",
											"item": {
												"kind": "string",
												"attributes": [
													{
														"name": "id",
														"value": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "block"
															}
														}
													}
												]
											}
										},
										{
											"kind": "string",
											"attributes": [
												{
													"name": "id",
													"value": {
														"kind": "tree",
														"values": {
															"registry": {
																"kind": "literal",
																"value": {
																	"kind": "string",
																	"value": "block"
																}
															},
															"tags": {
																"kind": "literal",
																"value": {
																	"kind": "string",
																	"value": "allowed"
																}
															}
														}
													}
												}
											]
										}
									]
								},
								"optional": true
							},
							{
								"kind": "spread",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								],
								"type": {
									"kind": "struct",
									"fields": [
										{
											"kind": "pair",
											"key": "y",
											"type": {
												"kind": "reference",
												"path": "::java::data::worldgen::HeightProvider"
											}
										},
										{
											"kind": "pair",
											"key": "yScale",
											"type": {
												"kind": "concrete",
												"child": {
													"kind": "reference",
													"path": "::java::data::worldgen::FloatProvider"
												},
												"typeArgs": [
													{
														"kind": "float"
													}
												]
											}
										},
										{
											"kind": "pair",
											"key": "lava_level",
											"type": {
												"kind": "reference",
												"path": "::java::data::worldgen::VerticalAnchor"
											}
										},
										{
											"kind": "pair",
											"attributes": [
												{
													"name": "until",
													"value": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "1.18"
														}
													}
												}
											],
											"key": "aquifers_enabled",
											"type": {
												"kind": "boolean"
											}
										},
										{
											"kind": "pair",
											"key": "debug_settings",
											"type": {
												"kind": "reference",
												"path": "::java::data::worldgen::carver::CarverDebugSettings"
											},
											"optional": true
										}
									]
								}
							},
							{
								"kind": "spread",
								"type": {
									"kind": "dispatcher",
									"parallelIndices": [
										{
											"kind": "dynamic",
											"accessor": [
												{
													"keyword": "parent"
												},
												"type"
											]
										}
									],
									"registry": "minecraft:carver_config"
								}
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::carver::ModernCarverConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "y",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::HeightProvider"
					}
				},
				{
					"kind": "pair",
					"key": "yScale",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::FloatProvider"
						},
						"typeArgs": [
							{
								"kind": "float"
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "lava_level",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::VerticalAnchor"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"key": "aquifers_enabled",
					"type": {
						"kind": "boolean"
					}
				},
				{
					"kind": "pair",
					"key": "debug_settings",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::carver::CarverDebugSettings"
					},
					"optional": true
				}
			]
		},
		"::java::data::worldgen::CarveStep": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Air",
					"value": "air"
				},
				{
					"identifier": "Liquid",
					"value": "liquid"
				}
			]
		},
		"::java::data::worldgen::CaveSurface": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Floor",
					"value": "floor"
				},
				{
					"identifier": "Ceiling",
					"value": "ceiling"
				}
			]
		},
		"::java::data::worldgen::ClampedIntProvider": {
			"kind": "template",
			"child": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "min_inclusive",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::T"
						}
					},
					{
						"kind": "pair",
						"key": "max_inclusive",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::T"
						}
					},
					{
						"kind": "pair",
						"key": "source",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::IntProvider"
							},
							"typeArgs": [
								{
									"kind": "int"
								}
							]
						}
					}
				]
			},
			"typeParams": [
				{
					"path": "::java::data::worldgen::T"
				}
			]
		},
		"::java::data::worldgen::ClampedNormalFloatProvider": {
			"kind": "template",
			"child": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "min",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::T"
						}
					},
					{
						"kind": "pair",
						"key": "max",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::T"
						}
					},
					{
						"kind": "pair",
						"key": "mean",
						"type": {
							"kind": "float"
						}
					},
					{
						"kind": "pair",
						"key": "deviation",
						"type": {
							"kind": "float"
						}
					}
				]
			},
			"typeParams": [
				{
					"path": "::java::data::worldgen::T"
				}
			]
		},
		"::java::data::worldgen::ClampedNormalIntProvider": {
			"kind": "template",
			"child": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::UniformIntProvider"
							},
							"typeArgs": [
								{
									"kind": "reference",
									"path": "::java::data::worldgen::T"
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "mean",
						"type": {
							"kind": "float"
						}
					},
					{
						"kind": "pair",
						"key": "deviation",
						"type": {
							"kind": "float"
						}
					}
				]
			},
			"typeParams": [
				{
					"path": "::java::data::worldgen::T"
				}
			]
		},
		"::java::data::worldgen::ConstantFloatProvider": {
			"kind": "template",
			"child": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "value",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::T"
						}
					}
				]
			},
			"typeParams": [
				{
					"path": "::java::data::worldgen::T"
				}
			]
		},
		"::java::data::worldgen::ConstantHeightProvider": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "value",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::VerticalAnchor"
					}
				}
			]
		},
		"::java::data::worldgen::ConstantIntProvider": {
			"kind": "template",
			"child": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "value",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::T"
						}
					}
				]
			},
			"typeParams": [
				{
					"path": "::java::data::worldgen::T"
				}
			]
		},
		"::java::data::worldgen::DecorationStep": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "RawGeneration",
					"value": "raw_generation"
				},
				{
					"identifier": "Lakes",
					"value": "lakes"
				},
				{
					"identifier": "LocalModifications",
					"value": "local_modifications"
				},
				{
					"identifier": "UndergroundStructures",
					"value": "underground_structures"
				},
				{
					"identifier": "SurfaceStructures",
					"value": "surface_structures"
				},
				{
					"identifier": "Strongholds",
					"value": "strongholds"
				},
				{
					"identifier": "UndergroundOres",
					"value": "underground_ores"
				},
				{
					"identifier": "UndergroundDecoration",
					"value": "underground_decoration"
				},
				{
					"identifier": "FluidSprings",
					"value": "fluid_springs"
				},
				{
					"identifier": "VegetalDecoration",
					"value": "vegetal_decoration"
				},
				{
					"identifier": "TopLayerModification",
					"value": "top_layer_modification"
				}
			]
		},
		"::java::data::worldgen::density_function::<anonymous 0>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "worldgen/density_function_type"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:density_function"
					}
				}
			]
		},
		"::java::data::worldgen::density_function::<anonymous 1>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "coordinate",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::worldgen::density_function::TerrainCoordinate",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.19"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::data::worldgen::density_function::DensityFunctionRef",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.19"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "points",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::SplinePoint"
						}
					}
				}
			]
		},
		"::java::data::worldgen::density_function::Clamp": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "input",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::DensityFunction"
					}
				},
				{
					"kind": "pair",
					"key": "min",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::NoiseRange"
					}
				},
				{
					"kind": "pair",
					"key": "max",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::NoiseRange"
					}
				}
			]
		},
		"::java::data::worldgen::density_function::Constant": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "argument",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::NoiseRange"
					}
				}
			]
		},
		"::java::data::worldgen::density_function::CubicSpline": {
			"kind": "union",
			"members": [
				{
					"kind": "float"
				},
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "coordinate",
							"type": {
								"kind": "union",
								"members": [
									{
										"kind": "reference",
										"path": "::java::data::worldgen::density_function::TerrainCoordinate",
										"attributes": [
											{
												"name": "until",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "1.19"
													}
												}
											}
										]
									},
									{
										"kind": "reference",
										"path": "::java::data::worldgen::density_function::DensityFunctionRef",
										"attributes": [
											{
												"name": "since",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "1.19"
													}
												}
											}
										]
									}
								]
							}
						},
						{
							"kind": "pair",
							"key": "points",
							"type": {
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::data::worldgen::density_function::SplinePoint"
								}
							}
						}
					]
				}
			]
		},
		"::java::data::worldgen::density_function::DensityFunction": {
			"kind": "union",
			"members": [
				{
					"kind": "reference",
					"path": "::java::data::worldgen::density_function::NoiseRange"
				},
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "type",
							"type": {
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "worldgen/density_function_type"
											}
										}
									}
								]
							}
						},
						{
							"kind": "spread",
							"type": {
								"kind": "dispatcher",
								"parallelIndices": [
									{
										"kind": "dynamic",
										"accessor": [
											"type"
										]
									}
								],
								"registry": "minecraft:density_function"
							}
						}
					]
				}
			]
		},
		"::java::data::worldgen::density_function::DensityFunctionRef": {
			"kind": "union",
			"members": [
				{
					"kind": "string",
					"attributes": [
						{
							"name": "id",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "worldgen/density_function"
								}
							}
						}
					]
				},
				{
					"kind": "reference",
					"path": "::java::data::worldgen::density_function::DensityFunction"
				}
			]
		},
		"::java::data::worldgen::density_function::Noise": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "noise",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "worldgen/noise"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "xz_scale",
					"type": {
						"kind": "float"
					}
				},
				{
					"kind": "pair",
					"key": "y_scale",
					"type": {
						"kind": "float"
					}
				}
			]
		},
		"::java::data::worldgen::density_function::NoiseRange": {
			"kind": "float",
			"valueRange": {
				"kind": 0,
				"min": -1000000,
				"max": 1000000
			}
		},
		"::java::data::worldgen::density_function::OldBlendedNoise": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "xz_scale",
					"type": {
						"kind": "float"
					}
				},
				{
					"kind": "pair",
					"key": "y_scale",
					"type": {
						"kind": "float"
					}
				},
				{
					"kind": "pair",
					"key": "xz_factor",
					"type": {
						"kind": "float"
					}
				},
				{
					"kind": "pair",
					"key": "y_factor",
					"type": {
						"kind": "float"
					}
				},
				{
					"kind": "pair",
					"key": "smear_scale_multiplier",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 1,
							"max": 8
						}
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.19"
						}
					}
				}
			]
		},
		"::java::data::worldgen::density_function::OneArgument": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "argument",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::DensityFunctionRef"
					}
				}
			]
		},
		"::java::data::worldgen::density_function::RangeChoice": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "input",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::DensityFunctionRef"
					}
				},
				{
					"kind": "pair",
					"key": "min_inclusive",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::NoiseRange"
					}
				},
				{
					"kind": "pair",
					"key": "max_exclusive",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::NoiseRange"
					}
				},
				{
					"kind": "pair",
					"key": "when_in_range",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::DensityFunctionRef"
					}
				},
				{
					"kind": "pair",
					"key": "when_out_of_range",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::DensityFunctionRef"
					}
				}
			]
		},
		"::java::data::worldgen::density_function::RarityType": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Type1",
					"value": "type_1"
				},
				{
					"identifier": "Type2",
					"value": "type_2"
				}
			]
		},
		"::java::data::worldgen::density_function::Shift": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "argument",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "worldgen/noise"
									}
								}
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::density_function::ShiftedNoise": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::Noise"
					}
				},
				{
					"kind": "pair",
					"key": "shift_x",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::DensityFunctionRef"
					}
				},
				{
					"kind": "pair",
					"key": "shift_y",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::DensityFunctionRef"
					}
				},
				{
					"kind": "pair",
					"key": "shift_z",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::DensityFunctionRef"
					}
				}
			]
		},
		"::java::data::worldgen::density_function::Spline": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "spline",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::CubicSpline"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "min_value",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::NoiseRange"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "max_value",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::NoiseRange"
					}
				}
			]
		},
		"::java::data::worldgen::density_function::SplinePoint": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "location",
					"type": {
						"kind": "float"
					}
				},
				{
					"kind": "pair",
					"key": "derivative",
					"type": {
						"kind": "float"
					}
				},
				{
					"kind": "pair",
					"key": "value",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::CubicSpline"
					}
				}
			]
		},
		"::java::data::worldgen::density_function::SplineType": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Offset",
					"value": "offset"
				},
				{
					"identifier": "Factor",
					"value": "factor"
				},
				{
					"identifier": "Jaggedness",
					"value": "jaggedness"
				}
			]
		},
		"::java::data::worldgen::density_function::TerrainCoordinate": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Continents",
					"value": "continents"
				},
				{
					"identifier": "Erosion",
					"value": "erosion"
				},
				{
					"identifier": "Weirdness",
					"value": "weirdness"
				},
				{
					"identifier": "Ridges",
					"value": "ridges"
				}
			]
		},
		"::java::data::worldgen::density_function::TerrainShaperSpline": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "spline",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::SplineType"
					}
				},
				{
					"kind": "pair",
					"key": "min_value",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::NoiseRange"
					}
				},
				{
					"kind": "pair",
					"key": "max_value",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::NoiseRange"
					}
				},
				{
					"kind": "pair",
					"key": "continentalness",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::DensityFunctionRef"
					}
				},
				{
					"kind": "pair",
					"key": "erosion",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::DensityFunctionRef"
					}
				},
				{
					"kind": "pair",
					"key": "weirdness",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::DensityFunctionRef"
					}
				}
			],
			"attributes": [
				{
					"name": "until",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.19"
						}
					}
				}
			]
		},
		"::java::data::worldgen::density_function::TwoArguments": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "argument1",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::DensityFunctionRef"
					}
				},
				{
					"kind": "pair",
					"key": "argument2",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::DensityFunctionRef"
					}
				}
			]
		},
		"::java::data::worldgen::density_function::WeirdScaledSampler": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "rarity_value_mapper",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::RarityType"
					}
				},
				{
					"kind": "pair",
					"key": "noise",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "worldgen/noise"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "input",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::DensityFunctionRef"
					}
				}
			]
		},
		"::java::data::worldgen::density_function::YClampedGradient": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "from_y",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": -4064,
							"max": 4062
						}
					}
				},
				{
					"kind": "pair",
					"key": "to_y",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": -4064,
							"max": 4062
						}
					}
				},
				{
					"kind": "pair",
					"key": "from_value",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::NoiseRange"
					}
				},
				{
					"kind": "pair",
					"key": "to_value",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::NoiseRange"
					}
				}
			]
		},
		"::java::data::worldgen::dimension::<anonymous 0>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "name",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "reference",
											"path": "::java::data::worldgen::dimension::dimension_type"
										},
										"definition": {
											"kind": "literal",
											"value": {
												"kind": "boolean",
												"value": true
											}
										}
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::dimension::DimensionType"
					}
				}
			],
			"attributes": [
				{
					"name": "until",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.19"
						}
					}
				}
			]
		},
		"::java::data::worldgen::dimension::biome_source::<anonymous 0>": {
			"kind": "struct",
			"fields": []
		},
		"::java::data::worldgen::dimension::biome_source::BiomeNoiseEntry": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "biome",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "worldgen/biome"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "parameters",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::dimension::biome_source::ClimateParameters"
					}
				}
			]
		},
		"::java::data::worldgen::dimension::biome_source::BiomeSource": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "worldgen/biome_source"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:biome_source"
					}
				}
			]
		},
		"::java::data::worldgen::dimension::biome_source::Checkerboard": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "scale",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 62
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "biomes",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "worldgen/biome"
												}
											}
										}
									]
								}
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18.2"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "worldgen/biome"
													}
												},
												"tags": {
													"kind": "reference",
													"path": "::java::data::worldgen::dimension::biome_source::allowed"
												}
											}
										}
									}
								]
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::dimension::biome_source::ClimateParameter": {
			"kind": "union",
			"members": [
				{
					"kind": "float",
					"valueRange": {
						"kind": 0,
						"min": -2,
						"max": 2
					}
				},
				{
					"kind": "list",
					"item": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": -2,
							"max": 2
						}
					},
					"lengthRange": {
						"kind": 0,
						"min": 2,
						"max": 2
					},
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					]
				}
			]
		},
		"::java::data::worldgen::dimension::biome_source::ClimateParameters": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "temperature",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::dimension::biome_source::ClimateParameter"
					}
				},
				{
					"kind": "pair",
					"key": "humidity",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::dimension::biome_source::ClimateParameter"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"key": "altitude",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": -2,
							"max": 2
						}
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"key": "continentalness",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::dimension::biome_source::ClimateParameter"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"key": "erosion",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::dimension::biome_source::ClimateParameter"
					}
				},
				{
					"kind": "pair",
					"key": "weirdness",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::dimension::biome_source::ClimateParameter"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"key": "depth",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::dimension::biome_source::ClimateParameter"
					}
				},
				{
					"kind": "pair",
					"key": "offset",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				}
			]
		},
		"::java::data::worldgen::dimension::biome_source::DirectMultiNoise": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16.2"
								}
							}
						},
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"key": "temperature_noise",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::dimension::biome_source::NoiseParameters"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16.2"
								}
							}
						},
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"key": "humidity_noise",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::dimension::biome_source::NoiseParameters"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16.2"
								}
							}
						},
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"key": "altitude_noise",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::dimension::biome_source::NoiseParameters"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16.2"
								}
							}
						},
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"key": "weirdness_noise",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::dimension::biome_source::NoiseParameters"
					}
				},
				{
					"kind": "pair",
					"key": "biomes",
					"type": {
						"kind": "list",
						"item": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "biome",
									"type": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "worldgen/biome"
													}
												}
											}
										]
									}
								},
								{
									"kind": "pair",
									"key": "parameters",
									"type": {
										"kind": "reference",
										"path": "::java::data::worldgen::dimension::biome_source::ClimateParameters"
									}
								}
							]
						}
					}
				}
			]
		},
		"::java::data::worldgen::dimension::biome_source::Fixed": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "biome",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "worldgen/biome"
									}
								}
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::dimension::biome_source::MultiNoise": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::dimension::biome_source::MultiNoiseBase"
					}
				},
				{
					"kind": "pair",
					"key": "preset",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::worldgen::dimension::biome_source::MultiNoisePreset",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::data::worldgen::dimension::biome_source::MultiNoisePreset",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18"
											}
										}
									},
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.19.4"
											}
										}
									},
									{
										"name": "id"
									}
								]
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.19.4"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "worldgen/multi_noise_biome_source_parameter_list"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"preset"
								]
							}
						],
						"registry": "minecraft:multi_noise_biome_source"
					}
				}
			]
		},
		"::java::data::worldgen::dimension::biome_source::MultiNoiseBase": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"key": "seed",
					"type": {
						"kind": "long",
						"attributes": [
							{
								"name": "random"
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::dimension::biome_source::MultiNoiseBiomeSourceParameterList": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "preset",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::dimension::biome_source::MultiNoisePreset",
						"attributes": [
							{
								"name": "id"
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::dimension::biome_source::MultiNoisePreset": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Nether",
					"value": "nether"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"identifier": "Overworld",
					"value": "overworld"
				}
			]
		},
		"::java::data::worldgen::dimension::biome_source::NoiseParameters": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "firstOctave",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"key": "amplitudes",
					"type": {
						"kind": "list",
						"item": {
							"kind": "double"
						}
					}
				}
			]
		},
		"::java::data::worldgen::dimension::biome_source::TheEnd": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "seed",
					"type": {
						"kind": "long",
						"attributes": [
							{
								"name": "random"
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::dimension::biome_source::VanillaLayered": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "seed",
					"type": {
						"kind": "long",
						"attributes": [
							{
								"name": "random"
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "large_biomes",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "legacy_biome_init_layer",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "until",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.18"
						}
					}
				}
			]
		},
		"::java::data::worldgen::dimension::chunk_generator::ChunkGenerator": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "worldgen/chunk_generator"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:chunk_generator"
					}
				}
			]
		},
		"::java::data::worldgen::dimension::chunk_generator::Flat": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "settings",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::dimension::chunk_generator::FlatGeneratorSettings"
					}
				}
			]
		},
		"::java::data::worldgen::dimension::chunk_generator::FlatGeneratorLayer": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "height",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 4096
						}
					}
				},
				{
					"kind": "pair",
					"key": "block",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "block"
									}
								}
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::dimension::chunk_generator::FlatGeneratorSettings": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "biome",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "worldgen/biome"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "lakes",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "features",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "layers",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::worldgen::dimension::chunk_generator::FlatGeneratorLayer"
						}
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18.2"
								}
							}
						}
					],
					"key": "structures",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::noise_settings::StructureSettings"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18.2"
								}
							}
						}
					],
					"key": "structure_overrides",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "worldgen/structure_set"
														}
													}
												}
											}
										}
									]
								}
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "worldgen/structure_set"
													}
												},
												"tags": {
													"kind": "reference",
													"path": "::java::data::worldgen::dimension::chunk_generator::allowed"
												}
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::worldgen::dimension::chunk_generator::Noise": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "seed",
					"type": {
						"kind": "long",
						"attributes": [
							{
								"name": "random"
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "settings",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::noise_settings::NoiseGeneratorSettingsRef"
					}
				},
				{
					"kind": "pair",
					"key": "biome_source",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::dimension::biome_source::BiomeSource"
					}
				}
			]
		},
		"::java::data::worldgen::dimension::Dimension": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::dimension::DimensionTypeRef"
					}
				},
				{
					"kind": "pair",
					"key": "generator",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::dimension::chunk_generator::ChunkGenerator"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.16"
						}
					}
				}
			]
		},
		"::java::data::worldgen::dimension::DimensionType": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "If true, water will evaporate and sponges will dry.\n",
					"key": "ultrawarm",
					"type": {
						"kind": "boolean"
					}
				},
				{
					"kind": "pair",
					"desc": "If true, portals will spawn zombified piglins. If false, compasses and clocks spin randomly.\n",
					"key": "natural",
					"type": {
						"kind": "boolean"
					}
				},
				{
					"kind": "pair",
					"desc": "If false, piglins will shake and convert to zombified piglins.\n",
					"key": "piglin_safe",
					"type": {
						"kind": "boolean"
					}
				},
				{
					"kind": "pair",
					"desc": "If true, players can charge and use respawn anchors to set their spawn. If false, respawn anchors will blow up when used.\n",
					"key": "respawn_anchor_works",
					"type": {
						"kind": "boolean"
					}
				},
				{
					"kind": "pair",
					"desc": "If true, players can use beds to set their spawn and advance time. If false, beds will blow up when used.\n",
					"key": "bed_works",
					"type": {
						"kind": "boolean"
					}
				},
				{
					"kind": "pair",
					"desc": "If true, players with the Bad Omen effect can cause a raid.\n",
					"key": "has_raids",
					"type": {
						"kind": "boolean"
					}
				},
				{
					"kind": "pair",
					"desc": "Affects the weather, lighting engine and respawning rules.\n",
					"key": "has_skylight",
					"type": {
						"kind": "boolean"
					}
				},
				{
					"kind": "pair",
					"desc": "Affects the weather, map items and respawning rules.\n",
					"key": "has_ceiling",
					"type": {
						"kind": "boolean"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16.2"
								}
							}
						}
					],
					"key": "shrunk",
					"type": {
						"kind": "boolean"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16.2"
								}
							}
						}
					],
					"key": "coordinate_scale",
					"type": {
						"kind": "double",
						"valueRange": {
							"kind": 0,
							"min": 0.00001,
							"max": 30000000
						}
					}
				},
				{
					"kind": "pair",
					"key": "ambient_light",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				},
				{
					"kind": "pair",
					"desc": "Setting this value will keep the sun in a fixed position.\n",
					"key": "fixed_time",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Portals can't spawn and chorus fruit can't teleport players above this height.\n",
					"key": "logical_height",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 0,
									"max": 256
								},
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 0,
									"max": 4064
								},
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16.2"
								}
							}
						}
					],
					"desc": "Sky effects.\n",
					"key": "effects",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::dimension::DimensionTypeEffects",
						"attributes": [
							{
								"name": "id"
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "Block tag defining what blocks keep fire infinitely burning.\n",
					"key": "infiniburn",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18.2"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "block"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "implicit"
													}
												}
											}
										}
									}
								]
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18.2"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "block"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "required"
													}
												}
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"desc": "The minimum height in which blocks can exist.\n",
					"key": "min_y",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": -2032,
							"max": 2031
						}
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"desc": "The total height in which blocks can exist. Max Y = Min Y + Height.\n",
					"key": "height",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 16,
							"max": 4064
						}
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "monster_spawn_light_level",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::IntProvider"
						},
						"typeArgs": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 0,
									"max": 15
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "monster_spawn_block_light_limit",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 15
						}
					}
				}
			]
		},
		"::java::data::worldgen::dimension::DimensionTypeEffects": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Overworld",
					"value": "overworld"
				},
				{
					"identifier": "TheNether",
					"value": "the_nether"
				},
				{
					"identifier": "TheEnd",
					"value": "the_end"
				}
			]
		},
		"::java::data::worldgen::dimension::DimensionTypeRef": {
			"kind": "union",
			"members": [
				{
					"kind": "string",
					"attributes": [
						{
							"name": "id",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "dimension_type"
								}
							}
						}
					]
				},
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "name",
							"type": {
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "reference",
													"path": "::java::data::worldgen::dimension::dimension_type"
												},
												"definition": {
													"kind": "literal",
													"value": {
														"kind": "boolean",
														"value": true
													}
												}
											}
										}
									}
								]
							}
						},
						{
							"kind": "spread",
							"type": {
								"kind": "reference",
								"path": "::java::data::worldgen::dimension::DimensionType"
							}
						}
					],
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					]
				}
			]
		},
		"::java::data::worldgen::feature::<anonymous 0>": {
			"kind": "struct",
			"fields": []
		},
		"::java::data::worldgen::feature::block_predicate::BlockPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "block_predicate_type"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:block_predicate"
					}
				}
			]
		},
		"::java::data::worldgen::feature::block_predicate::CombiningPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "predicates",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_predicate::BlockPredicate"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::block_predicate::HasSturdyFacePredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_predicate::PredicateOffset"
					}
				},
				{
					"kind": "pair",
					"key": "direction",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::direction::Direction"
					}
				}
			]
		},
		"::java::data::worldgen::feature::block_predicate::InsideWorldBoundsPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_predicate::PredicateOffset"
					}
				}
			]
		},
		"::java::data::worldgen::feature::block_predicate::MatchingBlocksPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_predicate::PredicateOffset"
					}
				},
				{
					"kind": "pair",
					"key": "blocks",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "block"
												}
											}
										}
									]
								}
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18.2"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "block"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::feature::block_predicate::MatchingBlockTagPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_predicate::PredicateOffset"
					}
				},
				{
					"kind": "pair",
					"key": "tag",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "block"
											}
										},
										"tags": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "implicit"
											}
										}
									}
								}
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::feature::block_predicate::MatchingFluidsPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_predicate::PredicateOffset"
					}
				},
				{
					"kind": "pair",
					"key": "fluids",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "fluid"
												}
											}
										}
									]
								}
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18.2"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "fluid"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::feature::block_predicate::NotPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "predicate",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_predicate::BlockPredicate"
					}
				}
			]
		},
		"::java::data::worldgen::feature::block_predicate::PredicateOffset": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "The block offset to check.\n",
					"key": "offset",
					"type": {
						"kind": "list",
						"item": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": -16,
								"max": 16
							}
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					},
					"optional": true
				}
			]
		},
		"::java::data::worldgen::feature::block_predicate::UnobstructedPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "offset",
					"type": {
						"kind": "list",
						"item": {
							"kind": "int"
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.21"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::block_predicate::WouldSurvivePredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_predicate::PredicateOffset"
					}
				},
				{
					"kind": "pair",
					"key": "state",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::block_state::BlockState"
					}
				}
			]
		},
		"::java::data::worldgen::feature::block_state_provider::BaseNoiseProvider": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "seed",
					"type": {
						"kind": "int",
						"attributes": [
							{
								"name": "random"
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "noise",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::dimension::biome_source::NoiseParameters"
					}
				},
				{
					"kind": "pair",
					"key": "scale",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::block_state_provider::BlockStateProvider": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "worldgen/block_state_provider_type"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:block_state_provider"
					}
				}
			]
		},
		"::java::data::worldgen::feature::block_state_provider::DualNoiseProvider": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_state_provider::BaseNoiseProvider"
					}
				},
				{
					"kind": "pair",
					"key": "variety",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::server::util::range::InclusiveRange"
						},
						"typeArgs": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 1,
									"max": 64
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "slow_noise",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::dimension::biome_source::NoiseParameters"
					}
				},
				{
					"kind": "pair",
					"key": "slow_scale",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					}
				},
				{
					"kind": "pair",
					"key": "states",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.18"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::block_state_provider::NoiseProvider": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_state_provider::BaseNoiseProvider"
					}
				},
				{
					"kind": "pair",
					"key": "states",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.18"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::block_state_provider::NoiseThresholdProvider": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_state_provider::BaseNoiseProvider"
					}
				},
				{
					"kind": "pair",
					"key": "threshold",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": -1,
							"max": 1
						}
					}
				},
				{
					"kind": "pair",
					"key": "high_chance",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				},
				{
					"kind": "pair",
					"key": "default_state",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::block_state::BlockState"
					}
				},
				{
					"kind": "pair",
					"key": "low_states",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					}
				},
				{
					"kind": "pair",
					"key": "high_states",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.18"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::block_state_provider::RandomizedIntStateProvider": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "property",
					"type": {
						"kind": "string"
					}
				},
				{
					"kind": "pair",
					"key": "values",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::IntProvider"
						},
						"typeArgs": [
							{
								"kind": "int"
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "source",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.17"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::block_state_provider::SimpleStateProvider": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "state",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::block_state::BlockState"
					}
				}
			]
		},
		"::java::data::worldgen::feature::block_state_provider::WeightedBlockStateProvider": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "entries",
					"type": {
						"kind": "list",
						"item": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "weight",
									"type": {
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 1
										}
									}
								},
								{
									"kind": "pair",
									"key": "data",
									"type": {
										"kind": "reference",
										"path": "::java::server::util::block_state::BlockState"
									}
								}
							]
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::block_state_provider::WeightedEntry": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "weight",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1
						}
					}
				},
				{
					"kind": "pair",
					"key": "data",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::block_state::BlockState"
					}
				}
			]
		},
		"::java::data::worldgen::feature::BlockColumnConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "direction",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::direction::Direction"
					}
				},
				{
					"kind": "pair",
					"key": "allowed_placement",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_predicate::BlockPredicate"
					}
				},
				{
					"kind": "pair",
					"key": "prioritize_tip",
					"type": {
						"kind": "boolean"
					}
				},
				{
					"kind": "pair",
					"key": "layers",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::BlockColumnLayer"
						}
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.18"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::BlockColumnLayer": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "height",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::IntProvider"
						},
						"typeArgs": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 0
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "provider",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
					}
				}
			]
		},
		"::java::data::worldgen::feature::BlockPileConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "state_provider",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
					}
				}
			]
		},
		"::java::data::worldgen::feature::BlockPlacer": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "worldgen/block_placer_type"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:block_placer"
					}
				}
			]
		},
		"::java::data::worldgen::feature::BlockStateRuleProviderEntry": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "if_true",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_predicate::BlockPredicate"
					}
				},
				{
					"kind": "pair",
					"key": "then",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
					}
				}
			]
		},
		"::java::data::worldgen::feature::ColumnPlacer": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"key": "min_size",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"key": "extra_size",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"key": "size",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::IntProvider"
						},
						"typeArgs": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 0
								}
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::feature::ColumnsConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "reach",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::data::worldgen::UniformInt"
								},
								"typeArgs": [
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 2
										}
									},
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 1
										}
									}
								],
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::data::worldgen::IntProvider"
								},
								"typeArgs": [
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 3
										}
									}
								],
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "height",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::data::worldgen::UniformInt"
								},
								"typeArgs": [
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 1,
											"max": 5
										}
									},
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 5
										}
									}
								],
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::data::worldgen::IntProvider"
								},
								"typeArgs": [
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 1,
											"max": 10
										}
									}
								],
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::feature::ConfiguredFeature": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "worldgen/feature"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "config",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:feature_config"
					}
				}
			]
		},
		"::java::data::worldgen::feature::ConfiguredFeatureRef": {
			"kind": "union",
			"members": [
				{
					"kind": "string",
					"attributes": [
						{
							"name": "id",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "worldgen/configured_feature"
								}
							}
						}
					]
				},
				{
					"kind": "reference",
					"path": "::java::data::worldgen::feature::ConfiguredFeature"
				}
			]
		},
		"::java::data::worldgen::feature::DecoratedConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "decorator",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::decorator::ConfiguredDecorator"
					}
				},
				{
					"kind": "pair",
					"key": "feature",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::FeatureRef"
					}
				}
			],
			"attributes": [
				{
					"name": "until",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.18"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::decorator::<anonymous 0>": {
			"kind": "struct",
			"fields": []
		},
		"::java::data::worldgen::feature::decorator::CarvingMaskConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "step",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::CarveStep"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"key": "probability",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::decorator::CaveSurface": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "surface",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "floor"
								}
							},
							{
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "ceiling"
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "floor_to_ceiling_search_range",
					"type": {
						"kind": "int"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.17"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::decorator::ChanceConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "chance",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::decorator::ConfiguredDecorator": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "worldgen/decorator"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "config",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:decorator_config"
					}
				}
			]
		},
		"::java::data::worldgen::feature::decorator::CountConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "count",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::data::worldgen::UniformInt"
								},
								"typeArgs": [
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": -10,
											"max": 128
										}
									},
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 128
										}
									}
								],
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::data::worldgen::IntProvider"
								},
								"typeArgs": [
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 256
										}
									}
								],
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::feature::decorator::CountExtraConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "count",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "int",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 0
								},
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "extra_count",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "int",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 0
								},
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "extra_chance",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::decorator::CountNoiseBiasedConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "noise_to_count_ratio",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"key": "noise_factor",
					"type": {
						"kind": "float"
					}
				},
				{
					"kind": "pair",
					"key": "noise_offset",
					"type": {
						"kind": "float"
					},
					"optional": true
				}
			]
		},
		"::java::data::worldgen::feature::decorator::CountNoiseConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "noise_level",
					"type": {
						"kind": "float"
					}
				},
				{
					"kind": "pair",
					"key": "below_noise",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"key": "above_noise",
					"type": {
						"kind": "int"
					}
				}
			]
		},
		"::java::data::worldgen::feature::decorator::DecoratedConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "outer",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::decorator::ConfiguredDecorator"
					}
				},
				{
					"kind": "pair",
					"key": "inner",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::decorator::ConfiguredDecorator"
					}
				}
			]
		},
		"::java::data::worldgen::feature::decorator::DepthAverageConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "baseline",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"key": "spread",
					"type": {
						"kind": "int"
					}
				}
			],
			"attributes": [
				{
					"name": "until",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.17"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::decorator::HeightmapConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "heightmap",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::HeightmapType"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.17"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::decorator::OldRangeConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "maximum",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"key": "bottom_offset",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"key": "top_offset",
					"type": {
						"kind": "int"
					}
				}
			]
		},
		"::java::data::worldgen::feature::decorator::RangeConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "height",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::HeightProvider"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.17"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::decorator::WaterDepthThresholdConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "max_water_depth",
					"type": {
						"kind": "int"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.17"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::DeltaConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "contents",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::block_state::BlockState"
					}
				},
				{
					"kind": "pair",
					"key": "rim",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::block_state::BlockState"
					}
				},
				{
					"kind": "pair",
					"key": "size",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::data::worldgen::UniformInt"
								},
								"typeArgs": [
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 8
										}
									},
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 8
										}
									}
								],
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::data::worldgen::IntProvider"
								},
								"typeArgs": [
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 16
										}
									}
								],
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "rim_size",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::data::worldgen::UniformInt"
								},
								"typeArgs": [
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 8
										}
									},
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 8
										}
									}
								],
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::data::worldgen::IntProvider"
								},
								"typeArgs": [
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 16
										}
									}
								],
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::feature::DiskConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "state",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::block_state::BlockState"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "state_provider",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::RuleBasedBlockStateProvider"
					}
				},
				{
					"kind": "pair",
					"key": "radius",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::data::worldgen::UniformInt"
								},
								"typeArgs": [
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 4
										}
									},
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 4
										}
									}
								],
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::data::worldgen::IntProvider"
								},
								"typeArgs": [
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 8
										}
									}
								],
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "half_height",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 4
						}
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "targets",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "target",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_predicate::BlockPredicate"
					}
				}
			]
		},
		"::java::data::worldgen::feature::DripstoneClusterConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "floor_to_ceiling_search_range",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1,
							"max": 512
						}
					}
				},
				{
					"kind": "pair",
					"key": "height",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::IntProvider"
						},
						"typeArgs": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 0,
									"max": 128
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "radius",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::IntProvider"
						},
						"typeArgs": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 0,
									"max": 128
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "Max height difference between the stalagmite and stalactite.\n",
					"key": "max_stalagmite_stalactite_height_diff",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 64
						}
					}
				},
				{
					"kind": "pair",
					"key": "height_deviation",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1,
							"max": 64
						}
					}
				},
				{
					"kind": "pair",
					"key": "dripstone_block_layer_thickness",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::IntProvider"
						},
						"typeArgs": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 0,
									"max": 128
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "density",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::FloatProvider"
						},
						"typeArgs": [
							{
								"kind": "float",
								"valueRange": {
									"kind": 0,
									"min": 0,
									"max": 2
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "wetness",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::FloatProvider"
						},
						"typeArgs": [
							{
								"kind": "float",
								"valueRange": {
									"kind": 0,
									"min": 0,
									"max": 2
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "chance_of_dripstone_column_at_max_distance_from_center",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				},
				{
					"kind": "pair",
					"key": "max_distance_from_edge_affecting_chance_of_dripstone_column",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1,
							"max": 64
						}
					}
				},
				{
					"kind": "pair",
					"key": "max_distance_from_center_affecting_height_bias",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1,
							"max": 64
						}
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.17"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::EmeraldOreConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "state",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::block_state::BlockState"
					}
				},
				{
					"kind": "pair",
					"key": "target",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::block_state::BlockState"
					}
				}
			]
		},
		"::java::data::worldgen::feature::EndGatewayConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "exact",
					"type": {
						"kind": "boolean"
					}
				},
				{
					"kind": "pair",
					"key": "exit",
					"type": {
						"kind": "list",
						"item": {
							"kind": "int"
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					},
					"optional": true
				}
			]
		},
		"::java::data::worldgen::feature::EndSpike": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "centerX",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"key": "centerZ",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"key": "radius",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"key": "height",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"key": "guarded",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::data::worldgen::feature::EndSpikeConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "spikes",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::EndSpike"
						}
					}
				},
				{
					"kind": "pair",
					"key": "crystal_invulnerable",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "crystal_beam_target",
					"type": {
						"kind": "list",
						"item": {
							"kind": "int"
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					},
					"optional": true
				}
			]
		},
		"::java::data::worldgen::feature::FeatureRef": {
			"kind": "union",
			"members": [
				{
					"kind": "reference",
					"path": "::java::data::worldgen::feature::ConfiguredFeatureRef",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					]
				},
				{
					"kind": "reference",
					"path": "::java::data::worldgen::feature::placement::PlacedFeatureRef",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					]
				}
			]
		},
		"::java::data::worldgen::feature::FillLayerConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "state",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::block_state::BlockState"
					}
				},
				{
					"kind": "pair",
					"key": "height",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 255
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::ForestRockConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "state",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::block_state::BlockState"
					}
				}
			]
		},
		"::java::data::worldgen::feature::FossilConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "If more corners are exposed to air, feature placement is cancelled.\n",
					"key": "max_empty_corners_allowed",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 7
						}
					}
				},
				{
					"kind": "pair",
					"key": "fossil_structures",
					"type": {
						"kind": "list",
						"item": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "structure"
										}
									}
								}
							]
						}
					}
				},
				{
					"kind": "pair",
					"key": "overlay_structures",
					"type": {
						"kind": "list",
						"item": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "structure"
										}
									}
								}
							]
						}
					}
				},
				{
					"kind": "pair",
					"key": "fossil_processors",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::processor_list::ProcessorListRef"
					}
				},
				{
					"kind": "pair",
					"key": "overlay_processors",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::processor_list::ProcessorListRef"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.17"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::GeodeBlockSettings": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "filling_provider",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
					}
				},
				{
					"kind": "pair",
					"key": "inner_layer_provider",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
					}
				},
				{
					"kind": "pair",
					"key": "alternate_inner_layer_provider",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
					}
				},
				{
					"kind": "pair",
					"key": "middle_layer_provider",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
					}
				},
				{
					"kind": "pair",
					"key": "outer_layer_provider",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
					}
				},
				{
					"kind": "pair",
					"key": "inner_placements",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						},
						"lengthRange": {
							"kind": 0,
							"min": 1
						}
					}
				},
				{
					"kind": "pair",
					"desc": "Blocks that will not be replaced by the geode.\n",
					"key": "cannot_replace",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18.2"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "block"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "implicit"
													}
												}
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "block"
												}
											}
										}
									]
								},
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18.2"
											}
										}
									}
								]
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18.2"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "block"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "When encountering an invalid block, feature placement is cancelled.\n",
					"key": "invalid_blocks",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18.2"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "block"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "implicit"
													}
												}
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "block"
												}
											}
										}
									]
								},
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18.2"
											}
										}
									}
								]
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18.2"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "block"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::feature::GeodeConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "blocks",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::GeodeBlockSettings"
					}
				},
				{
					"kind": "pair",
					"key": "layers",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::GeodeLayerSettings"
					}
				},
				{
					"kind": "pair",
					"key": "crack",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::GeodeCrackSettings"
					}
				},
				{
					"kind": "pair",
					"key": "noise_multiplier",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "use_potential_placements_chance",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "use_alternate_layer0_chance",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "placements_require_layer0_alternate",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "outer_wall_distance",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::IntProvider"
						},
						"typeArgs": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 1,
									"max": 20
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "distribution_points",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::IntProvider"
						},
						"typeArgs": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 1,
									"max": 20
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "point_offset",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::IntProvider"
						},
						"typeArgs": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 1,
									"max": 10
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "min_gen_offset",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "max_gen_offset",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "invalid_blocks_threshold",
					"type": {
						"kind": "int"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.17"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::GeodeCrackSettings": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "generate_crack_chance",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "base_crack_size",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 5
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "crack_point_offset",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 10
						}
					},
					"optional": true
				}
			]
		},
		"::java::data::worldgen::feature::GeodeLayerSettings": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "filling",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0.01,
							"max": 50
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "inner_layer",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0.01,
							"max": 50
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "middle_layer",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0.01,
							"max": 50
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "outer_layer",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0.01,
							"max": 50
						}
					},
					"optional": true
				}
			]
		},
		"::java::data::worldgen::feature::GrowingPlantConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "direction",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::direction::Direction"
					}
				},
				{
					"kind": "pair",
					"key": "allow_water",
					"type": {
						"kind": "boolean"
					}
				},
				{
					"kind": "pair",
					"key": "height_distribution",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::GrowingPlantHeight"
						}
					}
				},
				{
					"kind": "pair",
					"key": "body_provider",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
					}
				},
				{
					"kind": "pair",
					"key": "head_provider",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.17"
						}
					}
				},
				{
					"name": "until",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.18"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::GrowingPlantHeight": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "weight",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"key": "data",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::IntProvider"
						},
						"typeArgs": [
							{
								"kind": "int"
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::feature::HugeFungusConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "hat_state",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::block_state::BlockState"
					}
				},
				{
					"kind": "pair",
					"key": "decor_state",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::block_state::BlockState"
					}
				},
				{
					"kind": "pair",
					"key": "stem_state",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::block_state::BlockState"
					}
				},
				{
					"kind": "pair",
					"key": "valid_base_block",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::block_state::BlockState"
					}
				},
				{
					"kind": "pair",
					"key": "planted",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20"
								}
							}
						}
					],
					"key": "replaceable_blocks",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_predicate::BlockPredicate"
					}
				}
			]
		},
		"::java::data::worldgen::feature::HugeMushroomConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "cap_provider",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
					}
				},
				{
					"kind": "pair",
					"key": "stem_provider",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
					}
				},
				{
					"kind": "pair",
					"key": "foliage_radius",
					"type": {
						"kind": "int"
					}
				}
			]
		},
		"::java::data::worldgen::feature::IcebergConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "state",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::block_state::BlockState"
					}
				}
			]
		},
		"::java::data::worldgen::feature::LakeConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"key": "state",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::block_state::BlockState"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"key": "fluid",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"key": "barrier",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
					}
				}
			]
		},
		"::java::data::worldgen::feature::LargeDripstoneConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "floor_to_ceiling_search_range",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1,
							"max": 512
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "column_radius",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::IntProvider"
						},
						"typeArgs": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 0,
									"max": 60
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "height_scale",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::FloatProvider"
						},
						"typeArgs": [
							{
								"kind": "float",
								"valueRange": {
									"kind": 0,
									"min": 0,
									"max": 20
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "max_column_radius_to_cave_height_ratio",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				},
				{
					"kind": "pair",
					"key": "stalactite_bluntness",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::FloatProvider"
						},
						"typeArgs": [
							{
								"kind": "float",
								"valueRange": {
									"kind": 0,
									"min": 0.1,
									"max": 10
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "stalagmite_bluntness",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::FloatProvider"
						},
						"typeArgs": [
							{
								"kind": "float",
								"valueRange": {
									"kind": 0,
									"min": 0.1,
									"max": 10
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "wind_speed",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::FloatProvider"
						},
						"typeArgs": [
							{
								"kind": "float",
								"valueRange": {
									"kind": 0,
									"min": 0,
									"max": 2
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "min_radius_for_wind",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 100
						}
					}
				},
				{
					"kind": "pair",
					"key": "min_bluntness_for_wind",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.17"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::ModernNetherVegetationConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "spread_width",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1
						}
					}
				},
				{
					"kind": "pair",
					"key": "spread_height",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::ModernPatchConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Defaults to 7.\n",
					"key": "xz_spread",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Defaults to 3.\n",
					"key": "y_spread",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "feature",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::FeatureRef"
					}
				}
			]
		},
		"::java::data::worldgen::feature::MultifaceBlock": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "GlowLichen",
					"value": "glow_lichen"
				},
				{
					"identifier": "SculkVein",
					"value": "sculk_vein"
				}
			]
		},
		"::java::data::worldgen::feature::MultifaceGrowthConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "block",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::MultifaceBlock",
						"attributes": [
							{
								"name": "id"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "search_range",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1,
							"max": 64
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "chance_of_spreading",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "can_place_on_floor",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "can_place_on_ceiling",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "can_place_on_wall",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "can_be_placed_on",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::server::util::block_state::BlockState"
								},
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18"
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "block"
												}
											}
										}
									]
								},
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18"
											}
										}
									}
								]
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18.2"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "block"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.17"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::NetherForestVegetationConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "state_provider",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
					}
				},
				{
					"kind": "spread",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "spread_width",
								"type": {
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 1
									}
								}
							},
							{
								"kind": "pair",
								"key": "spread_height",
								"type": {
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 1
									}
								}
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::feature::NetherrackReplaceBlobsConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "state",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::block_state::BlockState"
					}
				},
				{
					"kind": "pair",
					"key": "target",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::block_state::BlockState"
					}
				},
				{
					"kind": "pair",
					"key": "radius",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::data::worldgen::UniformInt"
								},
								"typeArgs": [
									{
										"kind": "int"
									},
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0
										}
									}
								],
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::data::worldgen::IntProvider"
								},
								"typeArgs": [
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 12
										}
									}
								],
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::feature::OldPatchConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "can_replace",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "project",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "need_water",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "xspread",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "int",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 0
								},
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "yspread",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "int",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 0
								},
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "zspread",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "int",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 0
								},
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "state_provider",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
					}
				},
				{
					"kind": "pair",
					"key": "block_placer",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::BlockPlacer"
					}
				},
				{
					"kind": "pair",
					"key": "whitelist",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					}
				},
				{
					"kind": "pair",
					"key": "blacklist",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::OldSimpleBlockConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "place_on",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					}
				},
				{
					"kind": "pair",
					"key": "place_in",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					}
				},
				{
					"kind": "pair",
					"key": "place_under",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::OptionalSimpleBlockConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "place_on",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "place_in",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "place_under",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					},
					"optional": true
				}
			]
		},
		"::java::data::worldgen::feature::OreConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::TargetBlock"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"key": "targets",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::TargetBlock"
						}
					}
				},
				{
					"kind": "pair",
					"key": "size",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 64
						}
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"desc": "Chance that feature placement will be discarded if the ore is exposed to air blocks.\n",
					"key": "discard_chance_on_air_exposure",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::placement::BlockPredicateFilter": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "predicate",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_predicate::BlockPredicate"
					}
				}
			]
		},
		"::java::data::worldgen::feature::placement::CarvingMaskModifier": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "step",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::CarveStep"
					}
				}
			],
			"attributes": [
				{
					"name": "until",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.21.2"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::placement::CountModifier": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "count",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::IntProvider"
						},
						"typeArgs": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 0,
									"max": 256
								}
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::feature::placement::EnvironmentScanModifier": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "direction_of_search",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::placement::SearchDirection"
					}
				},
				{
					"kind": "pair",
					"key": "max_steps",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1,
							"max": 32
						}
					}
				},
				{
					"kind": "pair",
					"key": "target_condition",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_predicate::BlockPredicate"
					}
				},
				{
					"kind": "pair",
					"key": "allowed_search_condition",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_predicate::BlockPredicate"
					},
					"optional": true
				}
			]
		},
		"::java::data::worldgen::feature::placement::FixedPlacementModifier": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Fixed list of block positions to place the feature at.\n",
					"key": "positions",
					"type": {
						"kind": "list",
						"item": {
							"kind": "list",
							"item": {
								"kind": "int"
							},
							"lengthRange": {
								"kind": 0,
								"min": 3,
								"max": 3
							}
						}
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.21"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::placement::HeightmapModifier": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "heightmap",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::HeightmapType"
					}
				}
			]
		},
		"::java::data::worldgen::feature::placement::HeightRangeModifier": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "height",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::HeightProvider"
					}
				}
			]
		},
		"::java::data::worldgen::feature::placement::NoiseBasedCountModifier": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "noise_to_count_ratio",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"key": "noise_factor",
					"type": {
						"kind": "float"
					}
				},
				{
					"kind": "pair",
					"key": "noise_offset",
					"type": {
						"kind": "float"
					},
					"optional": true
				}
			]
		},
		"::java::data::worldgen::feature::placement::NoiseThresholdCountModifier": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "noise_level",
					"type": {
						"kind": "float"
					}
				},
				{
					"kind": "pair",
					"key": "below_noise",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"key": "above_noise",
					"type": {
						"kind": "int"
					}
				}
			]
		},
		"::java::data::worldgen::feature::placement::PlacedFeature": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "feature",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::ConfiguredFeatureRef"
					}
				},
				{
					"kind": "pair",
					"key": "placement",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::placement::PlacementModifier"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::placement::PlacedFeatureRef": {
			"kind": "union",
			"members": [
				{
					"kind": "string",
					"attributes": [
						{
							"name": "id",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "worldgen/placed_feature"
								}
							}
						}
					]
				},
				{
					"kind": "reference",
					"path": "::java::data::worldgen::feature::placement::PlacedFeature"
				}
			]
		},
		"::java::data::worldgen::feature::placement::PlacementModifier": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "worldgen/placement_modifier_type"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:placement_modifier"
					}
				}
			]
		},
		"::java::data::worldgen::feature::placement::RandomOffsetModifier": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "xz_spread",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::IntProvider"
						},
						"typeArgs": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": -16,
									"max": 16
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "y_spread",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::IntProvider"
						},
						"typeArgs": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": -16,
									"max": 16
								}
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::feature::placement::RarityFilter": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "chance",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::placement::SearchDirection": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Up",
					"value": "up"
				},
				{
					"identifier": "Down",
					"value": "down"
				}
			]
		},
		"::java::data::worldgen::feature::placement::SurfaceRelativeThresholdFilter": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "heightmap",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::HeightmapType"
					}
				},
				{
					"kind": "pair",
					"key": "min_inclusive",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "max_inclusive",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::data::worldgen::feature::placement::SurfaceWaterDepthFilter": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "max_water_depth",
					"type": {
						"kind": "int"
					}
				}
			]
		},
		"::java::data::worldgen::feature::PointedDripstoneConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "chance_of_taller_dripstone",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "chance_of_directional_spread",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "chance_of_spread_radius2",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "chance_of_spread_radius3",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					},
					"optional": true
				}
			]
		},
		"::java::data::worldgen::feature::ProbabilityConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "probability",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::RandomBooleanSelector": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "feature_false",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::FeatureRef"
					}
				},
				{
					"kind": "pair",
					"key": "feature_true",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::FeatureRef"
					}
				}
			]
		},
		"::java::data::worldgen::feature::RandomFeatureEntry": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "chance",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				},
				{
					"kind": "pair",
					"key": "feature",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::FeatureRef"
					}
				}
			]
		},
		"::java::data::worldgen::feature::RandomPatchConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "How many attempts will be made to find a placement. Defaults to 128.\n",
					"key": "tries",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "int",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 1
								},
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				},
				{
					"kind": "spread",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "can_replace",
								"type": {
									"kind": "boolean"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "project",
								"type": {
									"kind": "boolean"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "need_water",
								"type": {
									"kind": "boolean"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "xspread",
								"type": {
									"kind": "union",
									"members": [
										{
											"kind": "int",
											"attributes": [
												{
													"name": "until",
													"value": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "1.17"
														}
													}
												}
											]
										},
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0
											},
											"attributes": [
												{
													"name": "since",
													"value": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "1.17"
														}
													}
												}
											]
										}
									]
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "yspread",
								"type": {
									"kind": "union",
									"members": [
										{
											"kind": "int",
											"attributes": [
												{
													"name": "until",
													"value": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "1.17"
														}
													}
												}
											]
										},
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0
											},
											"attributes": [
												{
													"name": "since",
													"value": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "1.17"
														}
													}
												}
											]
										}
									]
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "zspread",
								"type": {
									"kind": "union",
									"members": [
										{
											"kind": "int",
											"attributes": [
												{
													"name": "until",
													"value": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "1.17"
														}
													}
												}
											]
										},
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0
											},
											"attributes": [
												{
													"name": "since",
													"value": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "1.17"
														}
													}
												}
											]
										}
									]
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "state_provider",
								"type": {
									"kind": "reference",
									"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
								}
							},
							{
								"kind": "pair",
								"key": "block_placer",
								"type": {
									"kind": "reference",
									"path": "::java::data::worldgen::feature::BlockPlacer"
								}
							},
							{
								"kind": "pair",
								"key": "whitelist",
								"type": {
									"kind": "list",
									"item": {
										"kind": "reference",
										"path": "::java::server::util::block_state::BlockState"
									}
								}
							},
							{
								"kind": "pair",
								"key": "blacklist",
								"type": {
									"kind": "list",
									"item": {
										"kind": "reference",
										"path": "::java::server::util::block_state::BlockState"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"desc": "Defaults to 7.\n",
								"key": "xz_spread",
								"type": {
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 0
									}
								},
								"optional": true
							},
							{
								"kind": "pair",
								"desc": "Defaults to 3.\n",
								"key": "y_spread",
								"type": {
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 0
									}
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "feature",
								"type": {
									"kind": "reference",
									"path": "::java::data::worldgen::feature::FeatureRef"
								}
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::feature::RandomSelector": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "features",
					"type": {
						"kind": "list",
						"item": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "chance",
									"type": {
										"kind": "float",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 1
										}
									}
								},
								{
									"kind": "pair",
									"key": "feature",
									"type": {
										"kind": "reference",
										"path": "::java::data::worldgen::feature::FeatureRef"
									}
								}
							]
						}
					}
				},
				{
					"kind": "pair",
					"key": "default",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::FeatureRef"
					}
				}
			]
		},
		"::java::data::worldgen::feature::ReplaceSingleBlockConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "targets",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::TargetBlock"
						}
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.17"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::RootSystemConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "required_vertical_space_for_tree",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1,
							"max": 64
						}
					}
				},
				{
					"kind": "pair",
					"key": "root_radius",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1,
							"max": 64
						}
					}
				},
				{
					"kind": "pair",
					"key": "root_placement_attempts",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1,
							"max": 256
						}
					}
				},
				{
					"kind": "pair",
					"key": "root_column_max_height",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1,
							"max": 4096
						}
					}
				},
				{
					"kind": "pair",
					"key": "hanging_root_radius",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1,
							"max": 64
						}
					}
				},
				{
					"kind": "pair",
					"key": "hanging_roots_vertical_span",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 16
						}
					}
				},
				{
					"kind": "pair",
					"key": "hanging_root_placement_attempts",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 256
						}
					}
				},
				{
					"kind": "pair",
					"key": "allowed_vertical_water_for_tree",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1,
							"max": 64
						}
					}
				},
				{
					"kind": "pair",
					"key": "root_replaceable",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18.2"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "block"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "implicit"
													}
												}
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "block"
												}
											}
										}
									]
								},
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18.2"
											}
										}
									}
								]
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18.2"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "block"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "root_state_provider",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
					}
				},
				{
					"kind": "pair",
					"key": "hanging_root_state_provider",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"key": "allowed_tree_position",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_predicate::BlockPredicate"
					}
				},
				{
					"kind": "pair",
					"key": "feature",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::FeatureRef"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.17"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::RuleBasedBlockStateProvider": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "fallback",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
					}
				},
				{
					"kind": "pair",
					"key": "rules",
					"type": {
						"kind": "list",
						"item": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "if_true",
									"type": {
										"kind": "reference",
										"path": "::java::data::worldgen::feature::block_predicate::BlockPredicate"
									}
								},
								{
									"kind": "pair",
									"key": "then",
									"type": {
										"kind": "reference",
										"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
									}
								}
							]
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::SculkPatchConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "charge_count",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1,
							"max": 32
						}
					}
				},
				{
					"kind": "pair",
					"key": "amount_per_charge",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1,
							"max": 500
						}
					}
				},
				{
					"kind": "pair",
					"key": "spread_attempts",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1,
							"max": 64
						}
					}
				},
				{
					"kind": "pair",
					"key": "growth_rounds",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 8
						}
					}
				},
				{
					"kind": "pair",
					"key": "spread_rounds",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 8
						}
					}
				},
				{
					"kind": "pair",
					"key": "extra_rare_growths",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::IntProvider"
						},
						"typeArgs": [
							{
								"kind": "int"
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "catalyst_chance",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.19"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::SeaPickleConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "count",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::data::worldgen::UniformInt"
								},
								"typeArgs": [
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": -10,
											"max": 128
										}
									},
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 128
										}
									}
								],
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::data::worldgen::IntProvider"
								},
								"typeArgs": [
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 256
										}
									}
								],
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::feature::SimpleBlockConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "to_place",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::server::util::block_state::BlockState",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.4"
								}
							}
						}
					],
					"desc": "Whether to schedule a block update. Defaults to `false`.\n",
					"key": "schedule_tick",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "spread",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "place_on",
								"type": {
									"kind": "list",
									"item": {
										"kind": "reference",
										"path": "::java::server::util::block_state::BlockState"
									}
								}
							},
							{
								"kind": "pair",
								"key": "place_in",
								"type": {
									"kind": "list",
									"item": {
										"kind": "reference",
										"path": "::java::server::util::block_state::BlockState"
									}
								}
							},
							{
								"kind": "pair",
								"key": "place_under",
								"type": {
									"kind": "list",
									"item": {
										"kind": "reference",
										"path": "::java::server::util::block_state::BlockState"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						},
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "place_on",
								"type": {
									"kind": "list",
									"item": {
										"kind": "reference",
										"path": "::java::server::util::block_state::BlockState"
									}
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "place_in",
								"type": {
									"kind": "list",
									"item": {
										"kind": "reference",
										"path": "::java::server::util::block_state::BlockState"
									}
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "place_under",
								"type": {
									"kind": "list",
									"item": {
										"kind": "reference",
										"path": "::java::server::util::block_state::BlockState"
									}
								},
								"optional": true
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::feature::SimpleRandomSelectorConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "features",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::data::worldgen::feature::FeatureRef"
								}
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18.2"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "worldgen/placed_feature"
													}
												},
												"tags": {
													"kind": "reference",
													"path": "::java::data::worldgen::feature::allowed"
												}
											}
										}
									}
								]
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::feature::SmallDripstoneConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "max_placements",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 100
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "empty_space_search_radius",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 20
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "max_offset_from_origin",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 20
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "chance_of_taller_dripstone",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.17"
						}
					}
				},
				{
					"name": "until",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.18"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::SpringConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "state",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::fluid_state::FluidState"
					}
				},
				{
					"kind": "pair",
					"key": "rock_count",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"key": "hole_count",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"key": "requires_block_below",
					"type": {
						"kind": "boolean"
					}
				},
				{
					"kind": "pair",
					"key": "valid_blocks",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "block"
												}
											}
										}
									]
								}
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18.2"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "block"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::feature::TargetBlock": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "target",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::processor_list::RuleTest"
					}
				},
				{
					"kind": "pair",
					"key": "state",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::block_state::BlockState"
					}
				}
			]
		},
		"::java::data::worldgen::feature::tree::<anonymous 0>": {
			"kind": "struct",
			"fields": []
		},
		"::java::data::worldgen::feature::tree::AboveRootPlacement": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "above_root_provider",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
					}
				},
				{
					"kind": "pair",
					"key": "above_root_placement_chance",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::tree::AlterGroundTreeDecorator": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "provider",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
					}
				}
			]
		},
		"::java::data::worldgen::feature::tree::AttachedToLeavesTreeDecorator": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "probability",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				},
				{
					"kind": "pair",
					"key": "exclusion_radius_xz",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 16
						}
					}
				},
				{
					"kind": "pair",
					"key": "exclusion_radius_y",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 16
						}
					}
				},
				{
					"kind": "pair",
					"key": "required_empty_blocks",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1,
							"max": 16
						}
					}
				},
				{
					"kind": "pair",
					"key": "block_provider",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
					}
				},
				{
					"kind": "pair",
					"key": "directions",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::util::direction::Direction"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::tree::BeehiveTreeDecorator": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "probability",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::tree::BendingTrunkPlacer": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "bend_length",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::IntProvider"
						},
						"typeArgs": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 1,
									"max": 64
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "min_height_for_leaves",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1
						}
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.17"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::tree::CherryFoliagePlacer": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "height",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::IntProvider"
						},
						"typeArgs": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 4,
									"max": 16
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "wide_bottom_layer_hole_chance",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				},
				{
					"kind": "pair",
					"key": "corner_hole_chance",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				},
				{
					"kind": "pair",
					"key": "hanging_leaves_chance",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				},
				{
					"kind": "pair",
					"key": "hanging_leaves_extension_chance",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.19.4"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::tree::CherryTrunkPlacer": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "branch_count",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::IntProvider"
						},
						"typeArgs": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 1,
									"max": 3
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "branch_horizontal_length",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::IntProvider"
						},
						"typeArgs": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 2,
									"max": 16
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "branch_start_offset_from_top",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::UniformIntProvider"
						},
						"typeArgs": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": -16,
									"max": 0
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "branch_end_offset_from_top",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::IntProvider"
						},
						"typeArgs": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": -16,
									"max": 16
								}
							}
						]
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.19.4"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::tree::CocoaTreeDecorator": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "probability",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::tree::CreakingHeartTreeDecorator": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "probability",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.21.2"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::tree::FeatureSize": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "worldgen/feature_size_type"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:feature_size"
					}
				}
			]
		},
		"::java::data::worldgen::feature::tree::FoliagePlacer": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "worldgen/foliage_placer_type"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "radius",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::data::worldgen::UniformInt"
								},
								"typeArgs": [
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 8
										}
									},
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 8
										}
									}
								],
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::data::worldgen::IntProvider"
								},
								"typeArgs": [
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 16
										}
									}
								],
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "offset",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::data::worldgen::UniformInt"
								},
								"typeArgs": [
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 8
										}
									},
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 8
										}
									}
								],
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::data::worldgen::IntProvider"
								},
								"typeArgs": [
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 16
										}
									}
								],
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:foliage_placer"
					}
				}
			]
		},
		"::java::data::worldgen::feature::tree::HeightFoliagePlacer": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "height",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 16
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::tree::LeaveVineTreeDecorator": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "probability",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::tree::MangroveRootPlacement": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "max_root_width",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1,
							"max": 12
						}
					}
				},
				{
					"kind": "pair",
					"key": "max_root_length",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1,
							"max": 64
						}
					}
				},
				{
					"kind": "pair",
					"key": "random_skew_chance",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				},
				{
					"kind": "pair",
					"key": "can_grow_through",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "block"
												}
											}
										}
									]
								}
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "block"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "muddy_roots_in",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "block"
												}
											}
										}
									]
								}
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "block"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "muddy_roots_provider",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
					}
				}
			]
		},
		"::java::data::worldgen::feature::tree::MangroveRootPlacer": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "mangrove_root_placement",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::tree::MangroveRootPlacement"
					}
				}
			]
		},
		"::java::data::worldgen::feature::tree::MegaPineFoliagePlacer": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "crown_height",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::data::worldgen::UniformInt"
								},
								"typeArgs": [
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 16
										}
									},
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 8
										}
									}
								],
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::data::worldgen::IntProvider"
								},
								"typeArgs": [
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 24
										}
									}
								],
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::feature::tree::PaleMossTreeDecorator": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "leaves_probability",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				},
				{
					"kind": "pair",
					"key": "trunk_probability",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				},
				{
					"kind": "pair",
					"key": "ground_probability",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.21.2"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::tree::PineFoliagePlacer": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "height",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::data::worldgen::UniformInt"
								},
								"typeArgs": [
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 16
										}
									},
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 8
										}
									}
								],
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::data::worldgen::IntProvider"
								},
								"typeArgs": [
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 24
										}
									}
								],
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::feature::tree::RandomSpreadFoliagePlacer": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "foliage_height",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::IntProvider"
						},
						"typeArgs": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 1,
									"max": 512
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "leaf_placement_attempts",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 256
						}
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.17"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::tree::RootPlacer": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "worldgen/root_placer_type"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "root_provider",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
					}
				},
				{
					"kind": "pair",
					"key": "trunk_offset_y",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::IntProvider"
						},
						"typeArgs": [
							{
								"kind": "int"
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "above_root_placement",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::tree::AboveRootPlacement"
					},
					"optional": true
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:root_placer"
					}
				}
			]
		},
		"::java::data::worldgen::feature::tree::SprucePineFoliagePlacer": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "trunk_height",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::data::worldgen::UniformInt"
								},
								"typeArgs": [
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 16
										}
									},
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 8
										}
									}
								],
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::data::worldgen::IntProvider"
								},
								"typeArgs": [
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 24
										}
									}
								],
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::feature::tree::ThreeLayersFeatureSize": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "min_clipped_height",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 80
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "limit",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 80
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "upper_limit",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 80
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "lower_size",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 16
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "middle_size",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 16
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "upper_size",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 16
						}
					},
					"optional": true
				}
			]
		},
		"::java::data::worldgen::feature::tree::TreeConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"key": "max_water_depth",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "ignore_vines",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"key": "heightmap",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::HeightmapType"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"key": "force_dirt",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "minimum_size",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::tree::FeatureSize"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"key": "dirt_provider",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						},
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"key": "sapling_provider",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
					}
				},
				{
					"kind": "pair",
					"key": "trunk_provider",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"key": "leaves_provider",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"key": "foliage_provider",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "root_placer",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::tree::RootPlacer"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "trunk_placer",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::tree::TrunkPlacer"
					}
				},
				{
					"kind": "pair",
					"key": "foliage_placer",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::tree::FoliagePlacer"
					}
				},
				{
					"kind": "pair",
					"key": "decorators",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::tree::TreeDecorator"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::tree::TreeDecorator": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "worldgen/tree_decorator_type"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:tree_decorator"
					}
				}
			]
		},
		"::java::data::worldgen::feature::tree::TrunkPlacer": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "worldgen/trunk_placer_type"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "base_height",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 32
						}
					}
				},
				{
					"kind": "pair",
					"key": "height_rand_a",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 24
						}
					}
				},
				{
					"kind": "pair",
					"key": "height_rand_b",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 24
						}
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:trunk_placer"
					}
				}
			]
		},
		"::java::data::worldgen::feature::tree::TwoLayersFeatureSize": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "min_clipped_height",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 80
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "limit",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 81
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "lower_size",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 16
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "upper_size",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 16
						}
					},
					"optional": true
				}
			]
		},
		"::java::data::worldgen::feature::tree::UpwardsBranchingTrunkPlacer": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "extra_branch_steps",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::IntProvider"
						},
						"typeArgs": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 1
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "extra_branch_length",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::IntProvider"
						},
						"typeArgs": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 0
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "place_branch_per_log_probability",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				},
				{
					"kind": "pair",
					"key": "can_grow_through",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "block"
												}
											}
										}
									]
								}
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "block"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							}
						]
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.19"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::TwistingVinesConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "spread_width",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1
						}
					}
				},
				{
					"kind": "pair",
					"key": "spread_height",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1
						}
					}
				},
				{
					"kind": "pair",
					"key": "max_height",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1
						}
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.18"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::UnderwaterMagmaConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "floor_search_range",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 512
						}
					}
				},
				{
					"kind": "pair",
					"key": "placement_radius_around_floor",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 64
						}
					}
				},
				{
					"kind": "pair",
					"key": "placement_probability_per_valid_position",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.17"
						}
					}
				}
			]
		},
		"::java::data::worldgen::feature::VegetationPatchConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "surface",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::CaveSurface"
					}
				},
				{
					"kind": "pair",
					"key": "depth",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::IntProvider"
						},
						"typeArgs": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 1,
									"max": 128
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "vertical_range",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1,
							"max": 256
						}
					}
				},
				{
					"kind": "pair",
					"key": "extra_bottom_block_chance",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				},
				{
					"kind": "pair",
					"key": "extra_edge_column_chance",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				},
				{
					"kind": "pair",
					"key": "vegetation_chance",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				},
				{
					"kind": "pair",
					"key": "xz_radius",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::IntProvider"
						},
						"typeArgs": [
							{
								"kind": "int"
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "replaceable",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18.2"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "block"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "implicit"
													}
												}
											}
										}
									}
								]
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18.2"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "block"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "required"
													}
												}
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "ground_state",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
					}
				},
				{
					"kind": "pair",
					"key": "vegetation_feature",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::feature::FeatureRef"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.17"
						}
					}
				}
			]
		},
		"::java::data::worldgen::FloatProvider": {
			"kind": "template",
			"child": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::data::worldgen::T"
					},
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "type",
								"type": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "float_provider_type"
												}
											}
										}
									]
								}
							},
							{
								"kind": "pair",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								],
								"key": "value",
								"type": {
									"kind": "concrete",
									"child": {
										"kind": "dispatcher",
										"parallelIndices": [
											{
												"kind": "dynamic",
												"accessor": [
													"type"
												]
											}
										],
										"registry": "minecraft:float_provider"
									},
									"typeArgs": [
										{
											"kind": "reference",
											"path": "::java::data::worldgen::T"
										}
									]
								}
							},
							{
								"kind": "spread",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								],
								"type": {
									"kind": "concrete",
									"child": {
										"kind": "dispatcher",
										"parallelIndices": [
											{
												"kind": "dynamic",
												"accessor": [
													"type"
												]
											}
										],
										"registry": "minecraft:float_provider"
									},
									"typeArgs": [
										{
											"kind": "reference",
											"path": "::java::data::worldgen::T"
										}
									]
								}
							}
						]
					}
				]
			},
			"typeParams": [
				{
					"path": "::java::data::worldgen::T"
				}
			]
		},
		"::java::data::worldgen::HeightmapType": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "MotionBlocking",
					"value": "MOTION_BLOCKING"
				},
				{
					"identifier": "MotionBlockingNoLeaves",
					"value": "MOTION_BLOCKING_NO_LEAVES"
				},
				{
					"identifier": "OceanFloor",
					"value": "OCEAN_FLOOR"
				},
				{
					"identifier": "OceanFloorWorldgen",
					"value": "OCEAN_FLOOR_WG"
				},
				{
					"identifier": "WorldSurface",
					"value": "WORLD_SURFACE"
				},
				{
					"identifier": "WorldSurfaceWorldgen",
					"value": "WORLD_SURFACE_WG"
				}
			]
		},
		"::java::data::worldgen::HeightProvider": {
			"kind": "union",
			"members": [
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "type",
							"type": {
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "height_provider_type"
											}
										}
									}
								]
							}
						},
						{
							"kind": "spread",
							"type": {
								"kind": "dispatcher",
								"parallelIndices": [
									{
										"kind": "dynamic",
										"accessor": [
											"type"
										]
									}
								],
								"registry": "minecraft:height_provider"
							}
						}
					]
				},
				{
					"kind": "reference",
					"path": "::java::data::worldgen::VerticalAnchor"
				}
			]
		},
		"::java::data::worldgen::IntProvider": {
			"kind": "template",
			"child": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::data::worldgen::T"
					},
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "type",
								"type": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "int_provider_type"
												}
											}
										}
									]
								}
							},
							{
								"kind": "spread",
								"type": {
									"kind": "concrete",
									"child": {
										"kind": "dispatcher",
										"parallelIndices": [
											{
												"kind": "dynamic",
												"accessor": [
													"type"
												]
											}
										],
										"registry": "minecraft:int_provider"
									},
									"typeArgs": [
										{
											"kind": "reference",
											"path": "::java::data::worldgen::T"
										}
									]
								}
							}
						]
					}
				]
			},
			"typeParams": [
				{
					"path": "::java::data::worldgen::T"
				}
			]
		},
		"::java::data::worldgen::noise_settings::<anonymous 0>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "name",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "worldgen/noise_settings"
											}
										},
										"definition": {
											"kind": "literal",
											"value": {
												"kind": "boolean",
												"value": true
											}
										}
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::noise_settings::NoiseGeneratorSettings"
					}
				}
			]
		},
		"::java::data::worldgen::noise_settings::<anonymous 1>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "worldgen/structure_feature"
									}
								}
							}
						]
					},
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::structure_set::RandomSpreadPlacement"
					}
				}
			]
		},
		"::java::data::worldgen::noise_settings::ModernNoiseGeneratorSettings": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18.2"
								}
							}
						}
					],
					"key": "noise_caves_enabled",
					"type": {
						"kind": "boolean"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18.2"
								}
							}
						}
					],
					"key": "noodle_caves_enabled",
					"type": {
						"kind": "boolean"
					}
				},
				{
					"kind": "pair",
					"key": "aquifers_enabled",
					"type": {
						"kind": "boolean"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"key": "deepslate_enabled",
					"type": {
						"kind": "boolean"
					}
				},
				{
					"kind": "pair",
					"key": "ore_veins_enabled",
					"type": {
						"kind": "boolean"
					}
				}
			]
		},
		"::java::data::worldgen::noise_settings::NoiseGeneratorSettings": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "default_block",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::block_state::BlockState"
					}
				},
				{
					"kind": "pair",
					"key": "default_fluid",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::block_state::BlockState"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"desc": "Relative position of the bedrock roof starting at the world height. Higher numbers move the roof down.\n",
					"key": "bedrock_roof_position",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": -20,
									"max": 276
								},
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "int",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"key": "bedrock_floor_position",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": -20,
									"max": 276
								},
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "int",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "sea_level",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 0,
									"max": 255
								},
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "int",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						},
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"key": "min_surface_level",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"desc": "If true, mobs will not spawn during generation.\n",
					"key": "disable_mob_generation",
					"type": {
						"kind": "boolean"
					}
				},
				{
					"kind": "spread",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18.2"
											}
										}
									}
								],
								"key": "noise_caves_enabled",
								"type": {
									"kind": "boolean"
								}
							},
							{
								"kind": "pair",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18.2"
											}
										}
									}
								],
								"key": "noodle_caves_enabled",
								"type": {
									"kind": "boolean"
								}
							},
							{
								"kind": "pair",
								"key": "aquifers_enabled",
								"type": {
									"kind": "boolean"
								}
							},
							{
								"kind": "pair",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18"
											}
										}
									}
								],
								"key": "deepslate_enabled",
								"type": {
									"kind": "boolean"
								}
							},
							{
								"kind": "pair",
								"key": "ore_veins_enabled",
								"type": {
									"kind": "boolean"
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"key": "legacy_random_source",
					"type": {
						"kind": "boolean"
					}
				},
				{
					"kind": "pair",
					"key": "noise",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::noise_settings::NoiseSettings"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18.2"
								}
							}
						}
					],
					"key": "noise_router",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::noise_settings::NoiseRouter"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "spawn_target",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::worldgen::dimension::biome_source::ClimateParameters"
						}
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"key": "surface_rule",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::surface_rule::SurfaceRule"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18.2"
								}
							}
						}
					],
					"key": "structures",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::noise_settings::StructureSettings"
					}
				}
			]
		},
		"::java::data::worldgen::noise_settings::NoiseGeneratorSettingsRef": {
			"kind": "union",
			"members": [
				{
					"kind": "string",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16.2"
								}
							}
						},
						{
							"name": "id",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "worldgen/noise_settings"
								}
							}
						}
					]
				},
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "name",
							"type": {
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "worldgen/noise_settings"
													}
												},
												"definition": {
													"kind": "literal",
													"value": {
														"kind": "boolean",
														"value": true
													}
												}
											}
										}
									}
								]
							}
						},
						{
							"kind": "spread",
							"type": {
								"kind": "reference",
								"path": "::java::data::worldgen::noise_settings::NoiseGeneratorSettings"
							}
						}
					]
				}
			]
		},
		"::java::data::worldgen::noise_settings::NoiseRouter": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "barrier",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::DensityFunctionRef"
					}
				},
				{
					"kind": "pair",
					"key": "fluid_level_floodedness",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::DensityFunctionRef"
					}
				},
				{
					"kind": "pair",
					"key": "fluid_level_spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::DensityFunctionRef"
					}
				},
				{
					"kind": "pair",
					"key": "lava",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::DensityFunctionRef"
					}
				},
				{
					"kind": "pair",
					"key": "vein_toggle",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::DensityFunctionRef"
					}
				},
				{
					"kind": "pair",
					"key": "vein_ridged",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::DensityFunctionRef"
					}
				},
				{
					"kind": "pair",
					"key": "vein_gap",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::DensityFunctionRef"
					}
				},
				{
					"kind": "pair",
					"key": "temperature",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::DensityFunctionRef"
					}
				},
				{
					"kind": "pair",
					"key": "vegetation",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::DensityFunctionRef"
					}
				},
				{
					"kind": "pair",
					"key": "continents",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::DensityFunctionRef"
					}
				},
				{
					"kind": "pair",
					"key": "erosion",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::DensityFunctionRef"
					}
				},
				{
					"kind": "pair",
					"key": "depth",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::DensityFunctionRef"
					}
				},
				{
					"kind": "pair",
					"key": "ridges",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::DensityFunctionRef"
					}
				},
				{
					"kind": "pair",
					"key": "initial_density_without_jaggedness",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::DensityFunctionRef"
					}
				},
				{
					"kind": "pair",
					"key": "final_density",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::DensityFunctionRef"
					}
				}
			]
		},
		"::java::data::worldgen::noise_settings::NoiseSamplingSettings": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "xz_scale",
					"type": {
						"kind": "double",
						"valueRange": {
							"kind": 0,
							"min": 0.001,
							"max": 1000
						}
					}
				},
				{
					"kind": "pair",
					"key": "y_scale",
					"type": {
						"kind": "double",
						"valueRange": {
							"kind": 0,
							"min": 0.001,
							"max": 1000
						}
					}
				},
				{
					"kind": "pair",
					"key": "xz_factor",
					"type": {
						"kind": "double",
						"valueRange": {
							"kind": 0,
							"min": 0.001,
							"max": 1000
						}
					}
				},
				{
					"kind": "pair",
					"key": "y_factor",
					"type": {
						"kind": "double",
						"valueRange": {
							"kind": 0,
							"min": 0.001,
							"max": 1000
						}
					}
				}
			]
		},
		"::java::data::worldgen::noise_settings::NoiseSettings": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"desc": "Minimum height where blocks start generating.\n",
					"key": "min_y",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": -2048,
							"max": 2047
						}
					}
				},
				{
					"kind": "pair",
					"desc": "The total height where blocks can generate. Max Y = Min Y + Height.\n",
					"key": "height",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 0,
									"max": 256
								},
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 0,
									"max": 4096
								},
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "size_horizontal",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1,
							"max": 4
						}
					}
				},
				{
					"kind": "pair",
					"key": "size_vertical",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1,
							"max": 4
						}
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"key": "density_factor",
					"type": {
						"kind": "double"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"key": "density_offset",
					"type": {
						"kind": "double"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "sampling",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::noise_settings::NoiseSamplingSettings"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"desc": "Adds or removes terrain at the top of the world. Does nothing when size is 0.\n",
					"key": "top_slide",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::noise_settings::NoiseSlideSettings"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"desc": "Adds or removes terrain at the bottom of the world. Does nothing when size is 0.\n",
					"key": "bottom_slide",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::noise_settings::NoiseSlideSettings"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						},
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "terrain_shaper",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::noise_settings::TerrainShaper"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"key": "simplex_surface_noise",
					"type": {
						"kind": "boolean"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"key": "random_density_offset",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18.2"
								}
							}
						}
					],
					"desc": "If true, terrain will be shaped like islands similar to the end.\n",
					"key": "island_noise_override",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18.2"
								}
							}
						}
					],
					"key": "amplified",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						},
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18.2"
								}
							}
						}
					],
					"key": "large_biomes",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::data::worldgen::noise_settings::NoiseSlideSettings": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "The target density. Positive values add terrain and negative values remove terrain.\n",
					"key": "target",
					"type": {
						"kind": "float"
					}
				},
				{
					"kind": "pair",
					"desc": "Defines a range of 'Size * Size vertical * 4' blocks where the existing density and target are interpolated.\n",
					"key": "size",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 256
						}
					}
				},
				{
					"kind": "pair",
					"desc": "Defines an range of 'Offset * Size vertical * 4' blocks where the density is set to the target.\n",
					"key": "offset",
					"type": {
						"kind": "int"
					}
				}
			]
		},
		"::java::data::worldgen::noise_settings::StructureSettings": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "stronghold",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::structure_set::ConcentricRingsPlacement"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "structures",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "worldgen/structure_feature"
												}
											}
										}
									]
								},
								"type": {
									"kind": "reference",
									"path": "::java::data::worldgen::structure_set::RandomSpreadPlacement"
								}
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::noise_settings::TerrainShaper": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "offset",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::CubicSpline"
					}
				},
				{
					"kind": "pair",
					"key": "factor",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::CubicSpline"
					}
				},
				{
					"kind": "pair",
					"key": "jaggedness",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::density_function::CubicSpline"
					}
				}
			]
		},
		"::java::data::worldgen::processor_list::<anonymous 0>": {
			"kind": "struct",
			"fields": []
		},
		"::java::data::worldgen::processor_list::AppendLoot": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "loot_table",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "loot_table"
									}
								}
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::processor_list::AppendStatic": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "data",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									{
										"keyword": "parent"
									},
									"output_state",
									"Name"
								]
							}
						],
						"registry": "minecraft:block"
					}
				}
			]
		},
		"::java::data::worldgen::processor_list::Axis": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "X",
					"value": "x"
				},
				{
					"identifier": "Y",
					"value": "y"
				},
				{
					"identifier": "Z",
					"value": "z"
				}
			]
		},
		"::java::data::worldgen::processor_list::AxisAlignedLinearPos": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "axis",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::processor_list::Axis"
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::processor_list::LinearPos"
					}
				}
			]
		},
		"::java::data::worldgen::processor_list::BlockAge": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "mossiness",
					"type": {
						"kind": "float"
					}
				}
			]
		},
		"::java::data::worldgen::processor_list::BlockEntityModifier": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "rule_block_entity_modifier"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:rule_block_entity_modifier"
					}
				}
			]
		},
		"::java::data::worldgen::processor_list::BlockIgnore": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "blocks",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					}
				}
			]
		},
		"::java::data::worldgen::processor_list::BlockMatch": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "block",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "block"
									}
								}
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::processor_list::BlockRot": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "integrity",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				},
				{
					"kind": "pair",
					"key": "rottable_blocks",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "block"
												}
											}
										}
									]
								}
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "block"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::data::worldgen::processor_list::BlockStateMatch": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "block_state",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::block_state::BlockState"
					}
				}
			]
		},
		"::java::data::worldgen::processor_list::Capped": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "delegate",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::processor_list::Processor"
					}
				},
				{
					"kind": "pair",
					"key": "limit",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::data::worldgen::IntProvider"
						},
						"typeArgs": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 0
								}
							}
						]
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.19"
						}
					}
				}
			]
		},
		"::java::data::worldgen::processor_list::Gravity": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "heightmap",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::HeightmapType"
					}
				},
				{
					"kind": "pair",
					"key": "offset",
					"type": {
						"kind": "int"
					}
				}
			]
		},
		"::java::data::worldgen::processor_list::LinearPos": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "min_dist",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 255
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "max_dist",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 255
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "min_chance",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "max_chance",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					},
					"optional": true
				}
			]
		},
		"::java::data::worldgen::processor_list::PosRuleTest": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "predicate_type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "pos_rule_test"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"predicate_type"
								]
							}
						],
						"registry": "minecraft:pos_rule_test"
					}
				}
			]
		},
		"::java::data::worldgen::processor_list::Processor": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "processor_type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "worldgen/structure_processor"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"processor_type"
								]
							}
						],
						"registry": "minecraft:template_processor"
					}
				}
			]
		},
		"::java::data::worldgen::processor_list::ProcessorList": {
			"kind": "union",
			"members": [
				{
					"kind": "list",
					"item": {
						"kind": "reference",
						"path": "::java::data::worldgen::processor_list::Processor"
					}
				},
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "processors",
							"type": {
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::data::worldgen::processor_list::Processor"
								}
							}
						}
					]
				}
			]
		},
		"::java::data::worldgen::processor_list::ProcessorListObject": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "processors",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::worldgen::processor_list::Processor"
						}
					}
				}
			]
		},
		"::java::data::worldgen::processor_list::ProcessorListRef": {
			"kind": "union",
			"members": [
				{
					"kind": "string",
					"attributes": [
						{
							"name": "id",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "worldgen/processor_list"
								}
							}
						}
					]
				},
				{
					"kind": "reference",
					"path": "::java::data::worldgen::processor_list::ProcessorList"
				}
			]
		},
		"::java::data::worldgen::processor_list::ProcessorRule": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "position_predicate",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::processor_list::PosRuleTest"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "location_predicate",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::processor_list::RuleTest"
					}
				},
				{
					"kind": "pair",
					"key": "input_predicate",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::processor_list::RuleTest"
					}
				},
				{
					"kind": "pair",
					"key": "output_state",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::block_state::BlockState"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20"
								}
							}
						}
					],
					"key": "output_nbt",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"output_state",
									"Name"
								]
							}
						],
						"registry": "minecraft:block"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20"
								}
							}
						}
					],
					"key": "block_entity_modifier",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::processor_list::BlockEntityModifier"
					},
					"optional": true
				}
			]
		},
		"::java::data::worldgen::processor_list::ProtectedBlocks": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "value",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18.2"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "block"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "implicit"
													}
												}
											}
										}
									}
								]
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18.2"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "block"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "required"
													}
												}
											}
										}
									}
								]
							}
						]
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.17"
						}
					}
				}
			]
		},
		"::java::data::worldgen::processor_list::RandomBlockMatch": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "block",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "block"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "probability",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				}
			]
		},
		"::java::data::worldgen::processor_list::RandomBlockStateMatch": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "block_state",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::block_state::BlockState"
					}
				},
				{
					"kind": "pair",
					"key": "probability",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				}
			]
		},
		"::java::data::worldgen::processor_list::Rule": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "rules",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::worldgen::processor_list::ProcessorRule"
						}
					}
				}
			]
		},
		"::java::data::worldgen::processor_list::RuleTest": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "predicate_type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "rule_test"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"predicate_type"
								]
							}
						],
						"registry": "minecraft:rule_test"
					}
				}
			]
		},
		"::java::data::worldgen::processor_list::TagMatch": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "tag",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "block"
											}
										},
										"tags": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "implicit"
											}
										}
									}
								}
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::structure_set::ConcentricRingsPlacement": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "distance",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1023
						}
					}
				},
				{
					"kind": "pair",
					"key": "spread",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1023
						}
					}
				},
				{
					"kind": "pair",
					"key": "count",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1,
							"max": 4095
						}
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "preferred_biomes",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "worldgen/biome"
												}
											}
										}
									]
								}
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "worldgen/biome"
													}
												},
												"tags": {
													"kind": "reference",
													"path": "::java::data::worldgen::structure_set::allowed"
												}
											}
										}
									}
								]
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::structure_set::ExclusionZone": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "other_set",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::structure_set::StructureSetRef"
					}
				},
				{
					"kind": "pair",
					"key": "chunk_count",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1,
							"max": 16
						}
					}
				}
			]
		},
		"::java::data::worldgen::structure_set::FrequencyReductionMethod": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Default",
					"value": "default"
				},
				{
					"identifier": "LegacyType1",
					"value": "legacy_type_1"
				},
				{
					"identifier": "LegacyType2",
					"value": "legacy_type_2"
				},
				{
					"identifier": "LegacyType3",
					"value": "legacy_type_3"
				}
			]
		},
		"::java::data::worldgen::structure_set::RandomSpreadPlacement": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Average distance in chunks between two structures of this type.\n",
					"key": "spacing",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 4096
						}
					}
				},
				{
					"kind": "pair",
					"desc": "Minimum distance in chunks between two structures of this type.\n",
					"key": "separation",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 4096
						}
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "salt",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18.2"
								}
							}
						}
					],
					"key": "spread_type",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::structure_set::SpreadType"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18.2"
								}
							}
						},
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "locate_offset",
					"type": {
						"kind": "list",
						"item": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": -16,
								"max": 16
							}
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					},
					"optional": true
				}
			]
		},
		"::java::data::worldgen::structure_set::SpreadType": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Linear",
					"value": "linear"
				},
				{
					"identifier": "Triangular",
					"value": "triangular"
				}
			]
		},
		"::java::data::worldgen::structure_set::StructurePlacement": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "worldgen/structure_placement"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:structure_placement"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "salt",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "frequency_reduction_method",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::structure_set::FrequencyReductionMethod"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "frequency",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "exclusion_zone",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::structure_set::ExclusionZone"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "locate_offset",
					"type": {
						"kind": "list",
						"item": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": -16,
								"max": 16
							}
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					},
					"optional": true
				}
			]
		},
		"::java::data::worldgen::structure_set::StructureSet": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "structures",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::worldgen::structure_set::StructureSetElement"
						}
					}
				},
				{
					"kind": "pair",
					"key": "placement",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::structure_set::StructurePlacement"
					}
				}
			]
		},
		"::java::data::worldgen::structure_set::StructureSetElement": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "structure",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.19"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "worldgen/configured_structure_feature"
													}
												},
												"tags": {
													"kind": "reference",
													"path": "::java::data::worldgen::structure_set::allowed"
												}
											}
										}
									}
								]
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.19"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "worldgen/structure"
													}
												},
												"tags": {
													"kind": "reference",
													"path": "::java::data::worldgen::structure_set::allowed"
												}
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "weight",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1
						}
					}
				}
			]
		},
		"::java::data::worldgen::structure_set::StructureSetRef": {
			"kind": "union",
			"members": [
				{
					"kind": "string",
					"attributes": [
						{
							"name": "id",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "worldgen/structure_set"
								}
							}
						}
					]
				},
				{
					"kind": "reference",
					"path": "::java::data::worldgen::structure_set::StructureSet"
				}
			]
		},
		"::java::data::worldgen::structure::<anonymous 0>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.19"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "worldgen/structure_feature"
											}
										}
									}
								]
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.19"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "worldgen/structure_type"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18.2"
								}
							}
						}
					],
					"key": "biomes",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "worldgen/biome"
												}
											}
										}
									]
								}
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "worldgen/biome"
													}
												},
												"tags": {
													"kind": "reference",
													"path": "::java::data::worldgen::structure::allowed"
												}
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"desc": "The step when the structure generates.\n",
					"key": "step",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::DecorationStep"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18.2"
								}
							}
						},
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"desc": "Whether to add extra terrain below the structure.\n",
					"key": "adapt_noise",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "terrain_adaptation",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::structure::TerrainAdaptation"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18.2"
								}
							}
						}
					],
					"key": "spawn_overrides",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": {
									"kind": "reference",
									"path": "::java::data::worldgen::biome::MobCategory"
								},
								"type": {
									"kind": "reference",
									"path": "::java::data::worldgen::structure::SpawnOverride"
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "config",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:structure_config"
					}
				},
				{
					"kind": "spread",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:structure_config"
					}
				}
			]
		},
		"::java::data::worldgen::structure::<anonymous 1>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "reference",
						"path": "::java::data::worldgen::biome::MobCategory"
					},
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::structure::SpawnOverride"
					}
				}
			]
		},
		"::java::data::worldgen::structure::<anonymous 2>": {
			"kind": "struct",
			"fields": []
		},
		"::java::data::worldgen::structure::<anonymous 3>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "worldgen/pool_alias_binding"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:worldgen/pool_alias_binding"
					}
				}
			]
		},
		"::java::data::worldgen::structure::BiomeTemperature": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Cold",
					"value": "cold"
				},
				{
					"identifier": "Warm",
					"value": "warm"
				}
			]
		},
		"::java::data::worldgen::structure::BoundingBox": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Piece",
					"value": "piece"
				},
				{
					"identifier": "Full",
					"value": "full"
				}
			]
		},
		"::java::data::worldgen::structure::BuriedTreasure": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "probability",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				}
			]
		},
		"::java::data::worldgen::structure::DimensionPaddingConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "bottom",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "top",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					},
					"optional": true
				}
			]
		},
		"::java::data::worldgen::structure::DirectPoolAlias": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "alias",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id"
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "target",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "worldgen/template_pool"
									}
								}
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::structure::Jigsaw": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "start_pool",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "worldgen/template_pool"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "size",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 0,
									"max": 7
								},
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.3"
											}
										}
									}
								]
							},
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 1,
									"max": 20
								},
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.3"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "spread",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "start_height",
								"type": {
									"kind": "reference",
									"path": "::java::data::worldgen::HeightProvider"
								}
							},
							{
								"kind": "pair",
								"key": "start_jigsaw_name",
								"type": {
									"kind": "string",
									"attributes": [
										{
											"name": "id"
										}
									]
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "project_start_to_heightmap",
								"type": {
									"kind": "reference",
									"path": "::java::data::worldgen::HeightmapType"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "max_distance_from_center",
								"type": {
									"kind": "dispatcher",
									"parallelIndices": [
										{
											"kind": "dynamic",
											"accessor": [
												"terrain_adaptation"
											]
										}
									],
									"registry": "minecraft:jigsaw_max_distance_from_center"
								}
							},
							{
								"kind": "pair",
								"key": "use_expansion_hack",
								"type": {
									"kind": "boolean"
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.3"
								}
							}
						}
					],
					"key": "pool_aliases",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::worldgen::structure::PoolAlias"
						}
					},
					"optional": true
				},
				{
					"kind": "spread",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "dimension_padding",
								"type": {
									"kind": "union",
									"members": [
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0
											}
										},
										{
											"kind": "struct",
											"fields": [
												{
													"kind": "pair",
													"key": "bottom",
													"type": {
														"kind": "int",
														"valueRange": {
															"kind": 0,
															"min": 0
														}
													},
													"optional": true
												},
												{
													"kind": "pair",
													"key": "top",
													"type": {
														"kind": "int",
														"valueRange": {
															"kind": 0,
															"min": 0
														}
													},
													"optional": true
												}
											]
										}
									]
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "liquid_settings",
								"type": {
									"kind": "reference",
									"path": "::java::data::worldgen::structure::LiquidSettings"
								},
								"optional": true
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::structure::LiquidSettings": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "ApplyWaterlogging",
					"value": "apply_waterlogging"
				},
				{
					"identifier": "IgnoreWaterlogging",
					"value": "ignore_waterlogging"
				}
			]
		},
		"::java::data::worldgen::structure::Mineshaft": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "type",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::structure::MineshaftType"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "mineshaft_type",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::structure::MineshaftType"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "probability",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				}
			]
		},
		"::java::data::worldgen::structure::MineshaftType": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Normal",
					"value": "normal"
				},
				{
					"identifier": "Mesa",
					"value": "mesa"
				}
			]
		},
		"::java::data::worldgen::structure::NetherFossil": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "height",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::HeightProvider"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.17"
						}
					}
				}
			]
		},
		"::java::data::worldgen::structure::OceanRuin": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "biome_temp",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::structure::BiomeTemperature"
					}
				},
				{
					"kind": "pair",
					"key": "large_probability",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				},
				{
					"kind": "pair",
					"key": "cluster_probability",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				}
			]
		},
		"::java::data::worldgen::structure::PoolAlias": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "worldgen/pool_alias_binding"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:worldgen/pool_alias_binding"
					}
				}
			]
		},
		"::java::data::worldgen::structure::PoolAliasGroup": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "weight",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"key": "data",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::worldgen::structure::PoolAlias"
						}
					}
				}
			]
		},
		"::java::data::worldgen::structure::PoolAliasTarget": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "weight",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"key": "data",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "worldgen/template_pool"
									}
								}
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::structure::RandomGroupPoolAlias": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "groups",
					"type": {
						"kind": "list",
						"item": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "weight",
									"type": {
										"kind": "int"
									}
								},
								{
									"kind": "pair",
									"key": "data",
									"type": {
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::data::worldgen::structure::PoolAlias"
										}
									}
								}
							]
						}
					}
				}
			]
		},
		"::java::data::worldgen::structure::RandomPoolAlias": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "alias",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id"
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "targets",
					"type": {
						"kind": "list",
						"item": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "weight",
									"type": {
										"kind": "int"
									}
								},
								{
									"kind": "pair",
									"key": "data",
									"type": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "worldgen/template_pool"
													}
												}
											}
										]
									}
								}
							]
						}
					}
				}
			]
		},
		"::java::data::worldgen::structure::RuinedPortal": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "portal_type",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::structure::RuinedPortalType"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "setups",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::worldgen::structure::RuinedPortalSetup"
						}
					}
				}
			]
		},
		"::java::data::worldgen::structure::RuinedPortalPlacement": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "OnLandSurface",
					"value": "on_land_surface"
				},
				{
					"identifier": "PartlyBuried",
					"value": "partly_buried"
				},
				{
					"identifier": "OnOceanFloor",
					"value": "on_ocean_floor"
				},
				{
					"identifier": "InMountain",
					"value": "in_mountain"
				},
				{
					"identifier": "Underground",
					"value": "underground"
				},
				{
					"identifier": "InNether",
					"value": "in_nether"
				}
			]
		},
		"::java::data::worldgen::structure::RuinedPortalSetup": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "placement",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::structure::RuinedPortalPlacement"
					}
				},
				{
					"kind": "pair",
					"key": "air_pocket_probability",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				},
				{
					"kind": "pair",
					"key": "mossiness",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				},
				{
					"kind": "pair",
					"key": "overgrown",
					"type": {
						"kind": "boolean"
					}
				},
				{
					"kind": "pair",
					"key": "vines",
					"type": {
						"kind": "boolean"
					}
				},
				{
					"kind": "pair",
					"key": "can_be_cold",
					"type": {
						"kind": "boolean"
					}
				},
				{
					"kind": "pair",
					"key": "replace_with_blackstone",
					"type": {
						"kind": "boolean"
					}
				},
				{
					"kind": "pair",
					"key": "weight",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					}
				}
			]
		},
		"::java::data::worldgen::structure::RuinedPortalType": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Standard",
					"value": "standard"
				},
				{
					"identifier": "Desert",
					"value": "desert"
				},
				{
					"identifier": "Jungle",
					"value": "jungle"
				},
				{
					"identifier": "Mountain",
					"value": "mountain"
				},
				{
					"identifier": "Nether",
					"value": "nether"
				},
				{
					"identifier": "Ocean",
					"value": "ocean"
				},
				{
					"identifier": "Swamp",
					"value": "swamp"
				}
			]
		},
		"::java::data::worldgen::structure::Shipwreck": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "is_beached",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::data::worldgen::structure::SpawnOverride": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "bounding_box",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::structure::BoundingBox"
					}
				},
				{
					"kind": "pair",
					"key": "spawns",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::worldgen::biome::SpawnerData"
						}
					}
				}
			]
		},
		"::java::data::worldgen::structure::Structure": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.19"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "worldgen/structure_feature"
											}
										}
									}
								]
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.19"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "worldgen/structure_type"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18.2"
								}
							}
						}
					],
					"key": "biomes",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "worldgen/biome"
												}
											}
										}
									]
								}
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "worldgen/biome"
													}
												},
												"tags": {
													"kind": "reference",
													"path": "::java::data::worldgen::structure::allowed"
												}
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"desc": "The step when the structure generates.\n",
					"key": "step",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::DecorationStep"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18.2"
								}
							}
						},
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"desc": "Whether to add extra terrain below the structure.\n",
					"key": "adapt_noise",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "terrain_adaptation",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::structure::TerrainAdaptation"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18.2"
								}
							}
						}
					],
					"key": "spawn_overrides",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": {
									"kind": "reference",
									"path": "::java::data::worldgen::biome::MobCategory"
								},
								"type": {
									"kind": "reference",
									"path": "::java::data::worldgen::structure::SpawnOverride"
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "config",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:structure_config"
					}
				},
				{
					"kind": "spread",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:structure_config"
					}
				}
			]
		},
		"::java::data::worldgen::structure::StructureRef": {
			"kind": "union",
			"members": [
				{
					"kind": "string",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						},
						{
							"name": "id",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "worldgen/configured_structure_feature"
								}
							}
						}
					]
				},
				{
					"kind": "string",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						},
						{
							"name": "id",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "worldgen/structure"
								}
							}
						}
					]
				},
				{
					"kind": "reference",
					"path": "::java::data::worldgen::structure::Structure"
				}
			]
		},
		"::java::data::worldgen::structure::TerrainAdaptation": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "None",
					"value": "none"
				},
				{
					"identifier": "BeardThin",
					"value": "beard_thin"
				},
				{
					"identifier": "BeardBox",
					"value": "beard_box"
				},
				{
					"identifier": "Bury",
					"value": "bury"
				},
				{
					"identifier": "Encapsulate",
					"value": "encapsulate"
				}
			]
		},
		"::java::data::worldgen::structure::TrickyTrialsStructureConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "dimension_padding",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 0
								}
							},
							{
								"kind": "struct",
								"fields": [
									{
										"kind": "pair",
										"key": "bottom",
										"type": {
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0
											}
										},
										"optional": true
									},
									{
										"kind": "pair",
										"key": "top",
										"type": {
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0
											}
										},
										"optional": true
									}
								]
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "liquid_settings",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::structure::LiquidSettings"
					},
					"optional": true
				}
			]
		},
		"::java::data::worldgen::structure::WildUpdateStructureConfig": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "start_height",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::HeightProvider"
					}
				},
				{
					"kind": "pair",
					"key": "start_jigsaw_name",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "project_start_to_heightmap",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::HeightmapType"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "max_distance_from_center",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"terrain_adaptation"
								]
							}
						],
						"registry": "minecraft:jigsaw_max_distance_from_center"
					}
				},
				{
					"kind": "pair",
					"key": "use_expansion_hack",
					"type": {
						"kind": "boolean"
					}
				}
			]
		},
		"::java::data::worldgen::surface_builder::Config": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "top_material",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::block_state::BlockState"
					}
				},
				{
					"kind": "pair",
					"key": "under_material",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::block_state::BlockState"
					}
				},
				{
					"kind": "pair",
					"key": "underwater_material",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::block_state::BlockState"
					}
				}
			]
		},
		"::java::data::worldgen::surface_builder::ConfiguredSurfaceBuilder": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "worldgen/surface_builder"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "config",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "top_material",
								"type": {
									"kind": "reference",
									"path": "::java::server::util::block_state::BlockState"
								}
							},
							{
								"kind": "pair",
								"key": "under_material",
								"type": {
									"kind": "reference",
									"path": "::java::server::util::block_state::BlockState"
								}
							},
							{
								"kind": "pair",
								"key": "underwater_material",
								"type": {
									"kind": "reference",
									"path": "::java::server::util::block_state::BlockState"
								}
							}
						]
					}
				}
			],
			"attributes": [
				{
					"name": "until",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.18"
						}
					}
				}
			]
		},
		"::java::data::worldgen::surface_builder::ConfiguredSurfaceBuilderRef": {
			"kind": "union",
			"members": [
				{
					"kind": "string",
					"attributes": [
						{
							"name": "id",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "worldgen/configured_surface_builder"
								}
							}
						}
					]
				},
				{
					"kind": "reference",
					"path": "::java::data::worldgen::surface_builder::ConfiguredSurfaceBuilder"
				}
			]
		},
		"::java::data::worldgen::surface_rule::BiomeCondition": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "biome_is",
					"type": {
						"kind": "list",
						"item": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "worldgen/biome"
										}
									}
								}
							]
						}
					}
				}
			]
		},
		"::java::data::worldgen::surface_rule::BlockRule": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "result_state",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::block_state::BlockState"
					}
				}
			]
		},
		"::java::data::worldgen::surface_rule::ConditionRule": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "if_true",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::surface_rule::SurfaceCondition"
					}
				},
				{
					"kind": "pair",
					"key": "then_run",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::surface_rule::SurfaceRule"
					}
				}
			]
		},
		"::java::data::worldgen::surface_rule::NoiseThresholdCondition": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "noise",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "worldgen/noise"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "min_threshold",
					"type": {
						"kind": "float"
					}
				},
				{
					"kind": "pair",
					"key": "max_threshold",
					"type": {
						"kind": "float"
					}
				}
			]
		},
		"::java::data::worldgen::surface_rule::NotCondition": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "invert",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::surface_rule::SurfaceCondition"
					}
				}
			]
		},
		"::java::data::worldgen::surface_rule::SequenceRule": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "sequence",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::worldgen::surface_rule::SurfaceRule"
						}
					}
				}
			]
		},
		"::java::data::worldgen::surface_rule::StoneDepthCondition": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "offset",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"key": "surface_type",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::CaveSurface"
					}
				},
				{
					"kind": "pair",
					"key": "add_surface_depth",
					"type": {
						"kind": "boolean"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18.2"
								}
							}
						}
					],
					"key": "add_surface_secondary_depth",
					"type": {
						"kind": "boolean"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18.2"
								}
							}
						}
					],
					"key": "secondary_depth_range",
					"type": {
						"kind": "int"
					}
				}
			]
		},
		"::java::data::worldgen::surface_rule::SurfaceCondition": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "worldgen/material_condition"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:surface_condition"
					}
				}
			]
		},
		"::java::data::worldgen::surface_rule::SurfaceRule": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "worldgen/material_rule"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:surface_rule"
					}
				}
			]
		},
		"::java::data::worldgen::surface_rule::VerticalGradientCondition": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "random_name",
					"type": {
						"kind": "string"
					}
				},
				{
					"kind": "pair",
					"key": "true_at_and_below",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::VerticalAnchor"
					}
				},
				{
					"kind": "pair",
					"key": "false_at_and_above",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::VerticalAnchor"
					}
				}
			]
		},
		"::java::data::worldgen::surface_rule::WaterCondition": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "offset",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"key": "surface_depth_multiplier",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": -20,
							"max": 20
						}
					}
				},
				{
					"kind": "pair",
					"key": "add_stone_depth",
					"type": {
						"kind": "boolean"
					}
				}
			]
		},
		"::java::data::worldgen::surface_rule::YAboveCondition": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "anchor",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::VerticalAnchor"
					}
				},
				{
					"kind": "pair",
					"key": "surface_depth_multiplier",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": -20,
							"max": 20
						}
					}
				},
				{
					"kind": "pair",
					"key": "add_stone_depth",
					"type": {
						"kind": "boolean"
					}
				}
			]
		},
		"::java::data::worldgen::template_pool::<anonymous 0>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "name",
					"type": {
						"kind": "string"
					}
				}
			]
		},
		"::java::data::worldgen::template_pool::<anonymous 1>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "name",
					"type": {
						"kind": "string"
					},
					"optional": true
				}
			]
		},
		"::java::data::worldgen::template_pool::Element": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "element_type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "worldgen/structure_pool_element"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"element_type"
								]
							}
						],
						"registry": "minecraft:template_pool_element"
					}
				}
			]
		},
		"::java::data::worldgen::template_pool::ElementBase": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "projection",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::template_pool::Projection"
					}
				}
			]
		},
		"::java::data::worldgen::template_pool::FeatureElement": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::template_pool::ElementBase"
					}
				},
				{
					"kind": "pair",
					"key": "feature",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::worldgen::feature::ConfiguredFeatureRef",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::data::worldgen::feature::placement::PlacedFeatureRef",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18"
											}
										}
									}
								]
							}
						]
					}
				}
			]
		},
		"::java::data::worldgen::template_pool::ListElement": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::template_pool::ElementBase"
					}
				},
				{
					"kind": "pair",
					"key": "elements",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::worldgen::template_pool::Element"
						}
					}
				}
			]
		},
		"::java::data::worldgen::template_pool::Projection": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Rigid",
					"value": "rigid"
				},
				{
					"identifier": "TerrainMatching",
					"value": "terrain_matching"
				}
			]
		},
		"::java::data::worldgen::template_pool::SingleElement": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::template_pool::ElementBase"
					}
				},
				{
					"kind": "pair",
					"key": "location",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "structure"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "processors",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::processor_list::ProcessorListRef"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"key": "override_liquid_settings",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::structure::LiquidSettings"
					},
					"optional": true
				}
			]
		},
		"::java::data::worldgen::template_pool::TemplatePool": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19.3"
								}
							}
						}
					],
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "name",
								"type": {
									"kind": "string"
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19.3"
								}
							}
						}
					],
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "name",
								"type": {
									"kind": "string"
								},
								"optional": true
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "fallback",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "worldgen/template_pool"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "elements",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::worldgen::template_pool::WeightedElement"
						}
					}
				}
			]
		},
		"::java::data::worldgen::template_pool::WeightedElement": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "weight",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 1
								},
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 1,
									"max": 150
								},
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "element",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::template_pool::Element"
					}
				}
			]
		},
		"::java::data::worldgen::TrapezoidFloatProvider": {
			"kind": "template",
			"child": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "min",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::T"
						}
					},
					{
						"kind": "pair",
						"key": "max",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::T"
						}
					},
					{
						"kind": "pair",
						"key": "plateau",
						"type": {
							"kind": "float"
						}
					}
				]
			},
			"typeParams": [
				{
					"path": "::java::data::worldgen::T"
				}
			]
		},
		"::java::data::worldgen::TrapezoidHeightProvider": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::UniformHeightProvider"
					}
				},
				{
					"kind": "pair",
					"key": "plateau",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::data::worldgen::UniformFloatProvider": {
			"kind": "template",
			"child": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "min_inclusive",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::T"
						}
					},
					{
						"kind": "pair",
						"key": "max_exclusive",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::T"
						}
					}
				]
			},
			"typeParams": [
				{
					"path": "::java::data::worldgen::T"
				}
			]
		},
		"::java::data::worldgen::UniformHeightProvider": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "min_inclusive",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::VerticalAnchor"
					}
				},
				{
					"kind": "pair",
					"key": "max_inclusive",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::VerticalAnchor"
					}
				}
			]
		},
		"::java::data::worldgen::UniformInt": {
			"kind": "template",
			"child": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::data::worldgen::Base"
					},
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "base",
								"type": {
									"kind": "reference",
									"path": "::java::data::worldgen::Base"
								}
							},
							{
								"kind": "pair",
								"key": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::worldgen::Spread"
								}
							}
						]
					}
				]
			},
			"typeParams": [
				{
					"path": "::java::data::worldgen::Base"
				},
				{
					"path": "::java::data::worldgen::Spread"
				}
			]
		},
		"::java::data::worldgen::UniformIntProvider": {
			"kind": "template",
			"child": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "min_inclusive",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::T"
						}
					},
					{
						"kind": "pair",
						"key": "max_inclusive",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::T"
						}
					}
				]
			},
			"typeParams": [
				{
					"path": "::java::data::worldgen::T"
				}
			]
		},
		"::java::data::worldgen::VerticalAnchor": {
			"kind": "union",
			"members": [
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "absolute",
							"type": {
								"kind": "int"
							}
						}
					]
				},
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "above_bottom",
							"type": {
								"kind": "int"
							}
						}
					]
				},
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "below_top",
							"type": {
								"kind": "int"
							}
						}
					]
				}
			]
		},
		"::java::data::worldgen::WeightDistribution": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "weight",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"key": "data",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::HeightProvider"
					}
				}
			]
		},
		"::java::data::worldgen::WeightListHeightProvider": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "distribution",
					"type": {
						"kind": "list",
						"item": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "weight",
									"type": {
										"kind": "int"
									}
								},
								{
									"kind": "pair",
									"key": "data",
									"type": {
										"kind": "reference",
										"path": "::java::data::worldgen::HeightProvider"
									}
								}
							]
						}
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.18"
						}
					}
				}
			]
		},
		"::java::data::worldgen::WeightListIntProvider": {
			"kind": "template",
			"child": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "distribution",
						"type": {
							"kind": "list",
							"item": {
								"kind": "struct",
								"fields": [
									{
										"kind": "pair",
										"key": "weight",
										"type": {
											"kind": "int"
										}
									},
									{
										"kind": "pair",
										"key": "data",
										"type": {
											"kind": "concrete",
											"child": {
												"kind": "reference",
												"path": "::java::data::worldgen::IntProvider"
											},
											"typeArgs": [
												{
													"kind": "reference",
													"path": "::java::data::worldgen::T"
												}
											]
										}
									}
								]
							}
						}
					}
				]
			},
			"typeParams": [
				{
					"path": "::java::data::worldgen::T"
				}
			]
		},
		"::java::data::worldgen::world_preset::<anonymous 0>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "dimension"
											}
										},
										"definition": {
											"kind": "literal",
											"value": {
												"kind": "boolean",
												"value": true
											}
										}
									}
								}
							}
						]
					},
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::dimension::Dimension"
					}
				}
			]
		},
		"::java::data::worldgen::world_preset::FlatGeneratorPreset": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "display",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.21.2"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "item"
											}
										}
									}
								]
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.21.2"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "item"
													}
												},
												"exclude": {
													"kind": "tree",
													"values": {
														"0": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "air"
															}
														}
													}
												}
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "settings",
					"type": {
						"kind": "reference",
						"path": "::java::data::worldgen::dimension::chunk_generator::FlatGeneratorSettings"
					}
				}
			]
		},
		"::java::data::worldgen::world_preset::WorldPreset": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "dimensions",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "dimension"
														}
													},
													"definition": {
														"kind": "literal",
														"value": {
															"kind": "boolean",
															"value": true
														}
													}
												}
											}
										}
									]
								},
								"type": {
									"kind": "reference",
									"path": "::java::data::worldgen::dimension::Dimension"
								}
							}
						]
					}
				}
			]
		},
		"::java::pack::BlockPattern": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "namespace",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "regex_pattern"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "path",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "regex_pattern"
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::pack::FeatureFlag": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Vanilla",
					"value": "vanilla"
				},
				{
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20"
								}
							}
						}
					],
					"identifier": "Update120",
					"value": "update_1_20"
				},
				{
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						}
					],
					"identifier": "Bundle",
					"value": "bundle"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.2"
								}
							}
						}
					],
					"identifier": "TradeRebalance",
					"value": "trade_rebalance"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.3"
								}
							}
						},
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"identifier": "Update121",
					"value": "update_1_21"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						}
					],
					"identifier": "RedstoneExperiments",
					"value": "redstone_experiments"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						}
					],
					"identifier": "MinecartImprovements",
					"value": "minecart_improvements"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						},
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.4"
								}
							}
						}
					],
					"identifier": "WinterDrop",
					"value": "winter_drop"
				}
			]
		},
		"::java::pack::Pack": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "pack",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "description",
								"type": {
									"kind": "reference",
									"path": "::java::server::util::text::Text"
								}
							},
							{
								"kind": "pair",
								"key": "pack_format",
								"type": {
									"kind": "int",
									"attributes": [
										{
											"name": "pack_format"
										}
									]
								}
							},
							{
								"kind": "pair",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.2"
											}
										}
									}
								],
								"key": "supported_formats",
								"type": {
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::server::util::range::InclusiveRange"
									},
									"typeArgs": [
										{
											"kind": "int",
											"attributes": [
												{
													"name": "pack_format"
												}
											]
										}
									]
								},
								"optional": true
							}
						]
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "filter",
					"type": {
						"kind": "reference",
						"path": "::java::pack::PackFilter"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19.3"
								}
							}
						}
					],
					"key": "features",
					"type": {
						"kind": "reference",
						"path": "::java::pack::PackFeatures"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.2"
								}
							}
						}
					],
					"key": "overlays",
					"type": {
						"kind": "reference",
						"path": "::java::pack::PackOverlays"
					},
					"optional": true
				}
			]
		},
		"::java::pack::PackBase": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "description",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::text::Text"
					}
				},
				{
					"kind": "pair",
					"key": "pack_format",
					"type": {
						"kind": "int",
						"attributes": [
							{
								"name": "pack_format"
							}
						]
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.2"
								}
							}
						}
					],
					"key": "supported_formats",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::server::util::range::InclusiveRange"
						},
						"typeArgs": [
							{
								"kind": "int",
								"attributes": [
									{
										"name": "pack_format"
									}
								]
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::pack::PackFeatures": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "enabled",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::pack::FeatureFlag",
							"attributes": [
								{
									"name": "id"
								}
							]
						}
					}
				}
			]
		},
		"::java::pack::PackFilter": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "block",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::pack::BlockPattern"
						}
					}
				}
			]
		},
		"::java::pack::PackOverlay": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "directory",
					"type": {
						"kind": "string",
						"lengthRange": {
							"kind": 0,
							"min": 1
						}
					}
				},
				{
					"kind": "pair",
					"key": "formats",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::server::util::range::InclusiveRange"
						},
						"typeArgs": [
							{
								"kind": "int",
								"attributes": [
									{
										"name": "pack_format"
									}
								]
							}
						]
					}
				}
			]
		},
		"::java::pack::PackOverlays": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "entries",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::pack::PackOverlay"
						}
					}
				}
			]
		},
		"::java::server::util::attribute::AttributeName": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "MaxHealth",
					"value": "generic.maxHealth"
				},
				{
					"identifier": "FollowRange",
					"value": "generic.followRange"
				},
				{
					"identifier": "KnockbackResistance",
					"value": "generic.knockbackResistance"
				},
				{
					"identifier": "MovementSpeed",
					"value": "generic.movementSpeed"
				},
				{
					"identifier": "AttackDamage",
					"value": "generic.attackDamage"
				},
				{
					"identifier": "Armor",
					"value": "generic.armor"
				},
				{
					"identifier": "ArmorToughness",
					"value": "generic.armorToughness"
				},
				{
					"identifier": "AttackKnockback",
					"value": "generic.attackKnockback"
				},
				{
					"identifier": "AttackSpeed",
					"value": "generic.attackSpeed"
				},
				{
					"identifier": "Luck",
					"value": "generic.luck"
				},
				{
					"identifier": "HorseJumpStrength",
					"value": "horse.jumpStrength"
				},
				{
					"identifier": "FlyingSpeed",
					"value": "generic.flyingSpeed"
				},
				{
					"identifier": "ZombieSpawnReinforcements",
					"value": "zombie.spawnReinforcements"
				}
			]
		},
		"::java::server::util::attribute::AttributeOperation": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "AddValue",
					"value": "add_value"
				},
				{
					"identifier": "AddMultipliedBase",
					"value": "add_multiplied_base"
				},
				{
					"identifier": "AddMultipliedTotal",
					"value": "add_multiplied_total"
				}
			]
		},
		"::java::server::util::attribute::AttributeSlot": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Mainhand",
					"value": "mainhand"
				},
				{
					"identifier": "Offhand",
					"value": "offhand"
				},
				{
					"identifier": "Head",
					"value": "head"
				},
				{
					"identifier": "Chest",
					"value": "chest"
				},
				{
					"identifier": "Legs",
					"value": "legs"
				},
				{
					"identifier": "Feet",
					"value": "feet"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"identifier": "Hand",
					"value": "hand"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"identifier": "Armor",
					"value": "armor"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"identifier": "Any",
					"value": "any"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"identifier": "Body",
					"value": "body"
				}
			]
		},
		"::java::server::util::attribute::LegacyOperation": {
			"kind": "enum",
			"enumKind": "int",
			"values": [
				{
					"identifier": "Additive",
					"value": 0
				},
				{
					"identifier": "Multiplicative",
					"value": 1
				},
				{
					"identifier": "Percentage",
					"value": 2
				}
			]
		},
		"::java::server::util::banner_pattern::BannerPattern": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "BottomStripe",
					"value": "bs"
				},
				{
					"identifier": "TopStripe",
					"value": "ts"
				},
				{
					"identifier": "LeftStripe",
					"value": "ls"
				},
				{
					"identifier": "RightStripe",
					"value": "rs"
				},
				{
					"identifier": "CenterStripeVertical",
					"value": "cs"
				},
				{
					"identifier": "MiddleStripeHorizontal",
					"value": "ms"
				},
				{
					"identifier": "DownRightStripe",
					"value": "drs"
				},
				{
					"identifier": "DownLeftStripe",
					"value": "dls"
				},
				{
					"identifier": "SmallVerticalStripes",
					"value": "ss"
				},
				{
					"identifier": "DiagonalCross",
					"value": "cr"
				},
				{
					"identifier": "SquareCross",
					"value": "sc"
				},
				{
					"identifier": "LeftOfDiagonal",
					"value": "ld"
				},
				{
					"identifier": "RightOfUpsideDownDiagonal",
					"value": "rud"
				},
				{
					"identifier": "LeftOfUpsideDownDiagonal",
					"value": "lud"
				},
				{
					"identifier": "RightOfDiagonal",
					"value": "rd"
				},
				{
					"identifier": "VerticalHalfLeft",
					"value": "vh"
				},
				{
					"identifier": "VerticalHalfRight",
					"value": "vhr"
				},
				{
					"identifier": "HorizontalHalfTop",
					"value": "hh"
				},
				{
					"identifier": "HorizontalHalfBottom",
					"value": "hhb"
				},
				{
					"identifier": "BottomLeftCorner",
					"value": "bl"
				},
				{
					"identifier": "BottomRightCorner",
					"value": "br"
				},
				{
					"identifier": "TopLeftCorner",
					"value": "tl"
				},
				{
					"identifier": "TopRightCorner",
					"value": "tr"
				},
				{
					"identifier": "BottomTriangle",
					"value": "bt"
				},
				{
					"identifier": "TopTriangle",
					"value": "tt"
				},
				{
					"identifier": "BottomTriangleSawtooth",
					"value": "bts"
				},
				{
					"identifier": "TopTriangleSawtooth",
					"value": "tts"
				},
				{
					"identifier": "MiddleCircle",
					"value": "mc"
				},
				{
					"identifier": "MiddleRhombus",
					"value": "mr"
				},
				{
					"identifier": "Border",
					"value": "bo"
				},
				{
					"identifier": "CurlyBorder",
					"value": "cbo"
				},
				{
					"identifier": "Brick",
					"value": "bri"
				},
				{
					"identifier": "Gradient",
					"value": "gra"
				},
				{
					"identifier": "GradientUpsideDown",
					"value": "gru"
				},
				{
					"identifier": "Creeper",
					"value": "cre"
				},
				{
					"identifier": "Skull",
					"value": "sku"
				},
				{
					"identifier": "Flower",
					"value": "flo"
				},
				{
					"identifier": "Mojang",
					"value": "moj"
				},
				{
					"identifier": "Globe",
					"value": "glb"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"identifier": "Piglin",
					"value": "pig"
				}
			]
		},
		"::java::server::util::BannerPattern": {
			"kind": "reference",
			"path": "::java::server::util::banner_pattern::BannerPattern"
		},
		"::java::server::util::block_state::<anonymous 0>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string"
					},
					"type": {
						"kind": "string"
					}
				}
			]
		},
		"::java::server::util::block_state::BlockState": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "Name",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "block"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "Properties",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"Name"
								]
							}
						],
						"registry": "mcdoc:block_states"
					},
					"optional": true
				}
			]
		},
		"::java::server::util::BlockState": {
			"kind": "reference",
			"path": "::java::server::util::block_state::BlockState"
		},
		"::java::server::util::color::ColorByte": {
			"kind": "enum",
			"enumKind": "byte",
			"values": [
				{
					"identifier": "White",
					"value": 0
				},
				{
					"identifier": "Orange",
					"value": 1
				},
				{
					"identifier": "Magenta",
					"value": 2
				},
				{
					"identifier": "LightBlue",
					"value": 3
				},
				{
					"identifier": "Yellow",
					"value": 4
				},
				{
					"identifier": "Lime",
					"value": 5
				},
				{
					"identifier": "Pink",
					"value": 6
				},
				{
					"identifier": "Gray",
					"value": 7
				},
				{
					"identifier": "LightGray",
					"value": 8
				},
				{
					"identifier": "Cyan",
					"value": 9
				},
				{
					"identifier": "Purple",
					"value": 10
				},
				{
					"identifier": "Blue",
					"value": 11
				},
				{
					"identifier": "Brown",
					"value": 12
				},
				{
					"identifier": "Green",
					"value": 13
				},
				{
					"identifier": "Red",
					"value": 14
				},
				{
					"identifier": "Black",
					"value": 15
				}
			]
		},
		"::java::server::util::color::ColorInt": {
			"kind": "enum",
			"enumKind": "int",
			"values": [
				{
					"identifier": "White",
					"value": 0
				},
				{
					"identifier": "Orange",
					"value": 1
				},
				{
					"identifier": "Magenta",
					"value": 2
				},
				{
					"identifier": "LightBlue",
					"value": 3
				},
				{
					"identifier": "Yellow",
					"value": 4
				},
				{
					"identifier": "Lime",
					"value": 5
				},
				{
					"identifier": "Pink",
					"value": 6
				},
				{
					"identifier": "Gray",
					"value": 7
				},
				{
					"identifier": "LightGray",
					"value": 8
				},
				{
					"identifier": "Cyan",
					"value": 9
				},
				{
					"identifier": "Purple",
					"value": 10
				},
				{
					"identifier": "Blue",
					"value": 11
				},
				{
					"identifier": "Brown",
					"value": 12
				},
				{
					"identifier": "Green",
					"value": 13
				},
				{
					"identifier": "Red",
					"value": 14
				},
				{
					"identifier": "Black",
					"value": 15
				}
			]
		},
		"::java::server::util::color::ColorString": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "White",
					"value": "white"
				},
				{
					"identifier": "Orange",
					"value": "orange"
				},
				{
					"identifier": "Magenta",
					"value": "magenta"
				},
				{
					"identifier": "LightBlue",
					"value": "light_blue"
				},
				{
					"identifier": "Yellow",
					"value": "yellow"
				},
				{
					"identifier": "Lime",
					"value": "lime"
				},
				{
					"identifier": "Pink",
					"value": "pink"
				},
				{
					"identifier": "Gray",
					"value": "gray"
				},
				{
					"identifier": "LightGray",
					"value": "light_gray"
				},
				{
					"identifier": "Cyan",
					"value": "cyan"
				},
				{
					"identifier": "Purple",
					"value": "purple"
				},
				{
					"identifier": "Blue",
					"value": "blue"
				},
				{
					"identifier": "Brown",
					"value": "brown"
				},
				{
					"identifier": "Green",
					"value": "green"
				},
				{
					"identifier": "Red",
					"value": "red"
				},
				{
					"identifier": "Black",
					"value": "black"
				}
			]
		},
		"::java::server::util::color::RGB": {
			"kind": "union",
			"members": [
				{
					"kind": "int",
					"attributes": [
						{
							"name": "canonical"
						},
						{
							"name": "color",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "composite_rgb"
								}
							}
						}
					]
				},
				{
					"kind": "list",
					"item": {
						"kind": "float"
					},
					"lengthRange": {
						"kind": 0,
						"min": 3,
						"max": 3
					},
					"attributes": [
						{
							"name": "color",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "dec_rgb"
								}
							}
						}
					]
				}
			]
		},
		"::java::server::util::color::RGBA": {
			"kind": "union",
			"members": [
				{
					"kind": "int",
					"attributes": [
						{
							"name": "canonical"
						},
						{
							"name": "color",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "composite_argb"
								}
							}
						}
					]
				},
				{
					"kind": "list",
					"item": {
						"kind": "float"
					},
					"lengthRange": {
						"kind": 0,
						"min": 4,
						"max": 4
					},
					"attributes": [
						{
							"name": "color",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "dec_rgba"
								}
							}
						}
					]
				}
			]
		},
		"::java::server::util::ColorByte": {
			"kind": "reference",
			"path": "::java::server::util::color::ColorByte"
		},
		"::java::server::util::ColorInt": {
			"kind": "reference",
			"path": "::java::server::util::color::ColorInt"
		},
		"::java::server::util::ColorString": {
			"kind": "reference",
			"path": "::java::server::util::color::ColorString"
		},
		"::java::server::util::direction::Direction": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Down",
					"value": "down"
				},
				{
					"identifier": "Up",
					"value": "up"
				},
				{
					"identifier": "North",
					"value": "north"
				},
				{
					"identifier": "East",
					"value": "east"
				},
				{
					"identifier": "South",
					"value": "south"
				},
				{
					"identifier": "West",
					"value": "west"
				}
			]
		},
		"::java::server::util::direction::DirectionInt": {
			"kind": "enum",
			"enumKind": "int",
			"values": [
				{
					"identifier": "Down",
					"value": 0
				},
				{
					"identifier": "Up",
					"value": 1
				},
				{
					"identifier": "North",
					"value": 2
				},
				{
					"identifier": "South",
					"value": 3
				},
				{
					"identifier": "West",
					"value": 4
				},
				{
					"identifier": "East",
					"value": 5
				}
			]
		},
		"::java::server::util::effect::EffectByteId": {
			"kind": "enum",
			"enumKind": "byte",
			"values": [
				{
					"identifier": "Speed",
					"value": 1
				},
				{
					"identifier": "Slowness",
					"value": 2
				},
				{
					"identifier": "Haste",
					"value": 3
				},
				{
					"identifier": "MiningFatigue",
					"value": 4
				},
				{
					"identifier": "Strength",
					"value": 5
				},
				{
					"identifier": "InstantHealth",
					"value": 6
				},
				{
					"identifier": "InstantDamage",
					"value": 7
				},
				{
					"identifier": "JumpBoost",
					"value": 8
				},
				{
					"identifier": "Nausea",
					"value": 9
				},
				{
					"identifier": "Regeneration",
					"value": 10
				},
				{
					"identifier": "Resistance",
					"value": 11
				},
				{
					"identifier": "FireResistance",
					"value": 12
				},
				{
					"identifier": "WaterBreathing",
					"value": 13
				},
				{
					"identifier": "Invisibility",
					"value": 14
				},
				{
					"identifier": "Blindness",
					"value": 15
				},
				{
					"identifier": "NightVision",
					"value": 16
				},
				{
					"identifier": "Hunger",
					"value": 17
				},
				{
					"identifier": "Weakness",
					"value": 18
				},
				{
					"identifier": "Poison",
					"value": 19
				},
				{
					"identifier": "Wither",
					"value": 20
				},
				{
					"identifier": "HealthBoost",
					"value": 21
				},
				{
					"identifier": "Absorption",
					"value": 22
				},
				{
					"identifier": "Saturation",
					"value": 23
				},
				{
					"identifier": "Glowing",
					"value": 24
				},
				{
					"identifier": "Levitation",
					"value": 25
				},
				{
					"identifier": "Luck",
					"value": 26
				},
				{
					"identifier": "UnLuck",
					"value": 27
				},
				{
					"identifier": "SlowFalling",
					"value": 28
				},
				{
					"identifier": "ConduitPower",
					"value": 29
				},
				{
					"identifier": "DolphinsGrace",
					"value": 30
				},
				{
					"identifier": "BadOmen",
					"value": 31
				},
				{
					"identifier": "HeroOfTheVillage",
					"value": 32
				}
			]
		},
		"::java::server::util::effect::EffectId": {
			"kind": "union",
			"members": [
				{
					"kind": "reference",
					"path": "::java::server::util::effect::EffectByteId",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					]
				},
				{
					"kind": "reference",
					"path": "::java::server::util::effect::EffectIntId",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					]
				}
			]
		},
		"::java::server::util::effect::EffectIntId": {
			"kind": "enum",
			"enumKind": "int",
			"values": [
				{
					"identifier": "Speed",
					"value": 1
				},
				{
					"identifier": "Slowness",
					"value": 2
				},
				{
					"identifier": "Haste",
					"value": 3
				},
				{
					"identifier": "MiningFatigue",
					"value": 4
				},
				{
					"identifier": "Strength",
					"value": 5
				},
				{
					"identifier": "InstantHealth",
					"value": 6
				},
				{
					"identifier": "InstantDamage",
					"value": 7
				},
				{
					"identifier": "JumpBoost",
					"value": 8
				},
				{
					"identifier": "Nausea",
					"value": 9
				},
				{
					"identifier": "Regeneration",
					"value": 10
				},
				{
					"identifier": "Resistance",
					"value": 11
				},
				{
					"identifier": "FireResistance",
					"value": 12
				},
				{
					"identifier": "WaterBreathing",
					"value": 13
				},
				{
					"identifier": "Invisibility",
					"value": 14
				},
				{
					"identifier": "Blindness",
					"value": 15
				},
				{
					"identifier": "NightVision",
					"value": 16
				},
				{
					"identifier": "Hunger",
					"value": 17
				},
				{
					"identifier": "Weakness",
					"value": 18
				},
				{
					"identifier": "Poison",
					"value": 19
				},
				{
					"identifier": "Wither",
					"value": 20
				},
				{
					"identifier": "HealthBoost",
					"value": 21
				},
				{
					"identifier": "Absorption",
					"value": 22
				},
				{
					"identifier": "Saturation",
					"value": 23
				},
				{
					"identifier": "Glowing",
					"value": 24
				},
				{
					"identifier": "Levitation",
					"value": 25
				},
				{
					"identifier": "Luck",
					"value": 26
				},
				{
					"identifier": "UnLuck",
					"value": 27
				},
				{
					"identifier": "SlowFalling",
					"value": 28
				},
				{
					"identifier": "ConduitPower",
					"value": 29
				},
				{
					"identifier": "DolphinsGrace",
					"value": 30
				},
				{
					"identifier": "BadOmen",
					"value": 31
				},
				{
					"identifier": "HeroOfTheVillage",
					"value": 32
				},
				{
					"identifier": "Darkness",
					"value": 33
				}
			]
		},
		"::java::server::util::effect::MobEffectInstance": {
			"kind": "union",
			"members": [
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "Id",
							"type": {
								"kind": "reference",
								"path": "::java::server::util::effect::EffectId"
							},
							"optional": true
						},
						{
							"kind": "pair",
							"key": "Amplifier",
							"type": {
								"kind": "byte"
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "Duration of the effect in ticks. Infinite is represented by `-1`.\n",
							"key": "Duration",
							"type": {
								"kind": "union",
								"members": [
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 1
										}
									},
									{
										"kind": "literal",
										"value": {
											"kind": "int",
											"value": -1
										},
										"attributes": [
											{
												"name": "since",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "1.19.4"
													}
												}
											}
										]
									}
								]
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "Whether particles are semi-transparent. (like with a Beacon)\n",
							"key": "Ambient",
							"type": {
								"kind": "boolean"
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "Whether particles should be shown.\n",
							"key": "ShowParticles",
							"type": {
								"kind": "boolean"
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "Whether the effect icon should be shown.\n",
							"key": "ShowIcon",
							"type": {
								"kind": "boolean"
							},
							"optional": true
						},
						{
							"kind": "pair",
							"attributes": [
								{
									"name": "since",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "1.16"
										}
									}
								}
							],
							"desc": "A lower amplifier effect of the same type.\n",
							"key": "HiddenEffect",
							"type": {
								"kind": "reference",
								"path": "::java::server::util::effect::MobEffectInstance"
							},
							"optional": true
						}
					],
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.2"
								}
							}
						}
					]
				},
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "id",
							"type": {
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "mob_effect"
											}
										}
									}
								]
							}
						},
						{
							"kind": "pair",
							"desc": "Level I having value 0. Defaults to 0.\n",
							"key": "amplifier",
							"type": {
								"kind": "byte"
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "Duration of the effect in ticks. Infinite is represented by `-1`.\n",
							"key": "duration",
							"type": {
								"kind": "int"
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "Whether the effect appears as a HUD icon in addition to in the inventory GUI (same behavior as beacons when `true`). Defaults to `false`.\n",
							"key": "ambient",
							"type": {
								"kind": "boolean"
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "Defaults to `true`.\n",
							"key": "show_particles",
							"type": {
								"kind": "boolean"
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "Whether the effect appears in the inventory GUI. Defaults to `true`\n",
							"key": "show_icon",
							"type": {
								"kind": "boolean"
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "A lower amplifier effect of the same type.\n",
							"key": "hidden_effect",
							"type": {
								"kind": "reference",
								"path": "::java::server::util::effect::MobEffectInstance"
							},
							"optional": true
						}
					],
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.2"
								}
							}
						}
					]
				}
			]
		},
		"::java::server::util::effect::ModernMobEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "id",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "mob_effect"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "Level I having value 0. Defaults to 0.\n",
					"key": "amplifier",
					"type": {
						"kind": "byte"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Duration of the effect in ticks. Infinite is represented by `-1`.\n",
					"key": "duration",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the effect appears as a HUD icon in addition to in the inventory GUI (same behavior as beacons when `true`). Defaults to `false`.\n",
					"key": "ambient",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Defaults to `true`.\n",
					"key": "show_particles",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the effect appears in the inventory GUI. Defaults to `true`\n",
					"key": "show_icon",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "A lower amplifier effect of the same type.\n",
					"key": "hidden_effect",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::effect::MobEffectInstance"
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.2"
						}
					}
				}
			]
		},
		"::java::server::util::effect::OldMobEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "Id",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::effect::EffectId"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Amplifier",
					"type": {
						"kind": "byte"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Duration of the effect in ticks. Infinite is represented by `-1`.\n",
					"key": "Duration",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 1
								}
							},
							{
								"kind": "literal",
								"value": {
									"kind": "int",
									"value": -1
								},
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.19.4"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether particles are semi-transparent. (like with a Beacon)\n",
					"key": "Ambient",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether particles should be shown.\n",
					"key": "ShowParticles",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the effect icon should be shown.\n",
					"key": "ShowIcon",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "A lower amplifier effect of the same type.\n",
					"key": "HiddenEffect",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::effect::MobEffectInstance"
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "until",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.2"
						}
					}
				}
			]
		},
		"::java::server::util::EffectId": {
			"kind": "reference",
			"path": "::java::server::util::effect::EffectId"
		},
		"::java::server::util::Filterable": {
			"kind": "template",
			"child": {
				"kind": "union",
				"members": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "raw",
								"type": {
									"kind": "reference",
									"path": "::java::server::util::T"
								}
							},
							{
								"kind": "pair",
								"desc": "Shown only to players with chat filtering enabled.\n",
								"key": "filtered",
								"type": {
									"kind": "reference",
									"path": "::java::server::util::T"
								},
								"optional": true
							}
						]
					},
					{
						"kind": "reference",
						"path": "::java::server::util::T"
					}
				]
			},
			"typeParams": [
				{
					"path": "::java::server::util::T"
				}
			]
		},
		"::java::server::util::FilteredText": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "raw",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::T"
					}
				},
				{
					"kind": "pair",
					"desc": "Shown only to players with chat filtering enabled.\n",
					"key": "filtered",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::T"
					},
					"optional": true
				}
			]
		},
		"::java::server::util::firework::FireworkShape": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "SmallBall",
					"value": "small_ball"
				},
				{
					"identifier": "LargeBall",
					"value": "large_ball"
				},
				{
					"identifier": "Star",
					"value": "star"
				},
				{
					"identifier": "Creeper",
					"value": "creeper"
				},
				{
					"identifier": "Burst",
					"value": "burst"
				}
			]
		},
		"::java::server::util::fluid_state::<anonymous 0>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string"
					},
					"type": {
						"kind": "string"
					}
				}
			]
		},
		"::java::server::util::fluid_state::FluidState": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "Name",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "fluid"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "Properties",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"Name"
								]
							}
						],
						"registry": "mcdoc:fluid_states"
					},
					"optional": true
				}
			]
		},
		"::java::server::util::game_event::BlockPositionSource": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Block position\n",
					"key": "pos",
					"type": {
						"kind": "list",
						"item": {
							"kind": "int"
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					}
				}
			]
		},
		"::java::server::util::game_event::EntityPositionSource": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "uuid"
						}
					],
					"key": "source_entity",
					"type": {
						"kind": "list",
						"item": {
							"kind": "int"
						},
						"lengthRange": {
							"kind": 0,
							"min": 4,
							"max": 4
						}
					}
				},
				{
					"kind": "pair",
					"desc": "offset from the entity's feet to the source position\n",
					"key": "y_offset",
					"type": {
						"kind": "float"
					},
					"optional": true
				}
			]
		},
		"::java::server::util::game_event::PositionSource": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "position_source_type"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:position_source"
					}
				}
			]
		},
		"::java::server::util::game_event::ReceivingEvent": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "game_event",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "game_event"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "Distance in blocks to the source\n",
					"key": "distance",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					}
				},
				{
					"kind": "pair",
					"desc": "Origin of the event\n",
					"key": "pos",
					"type": {
						"kind": "list",
						"item": {
							"kind": "float"
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					}
				},
				{
					"kind": "pair",
					"desc": "UUID of the source entity of the event, if one exists\n",
					"key": "source",
					"type": {
						"kind": "list",
						"item": {
							"kind": "int"
						},
						"lengthRange": {
							"kind": 0,
							"min": 4,
							"max": 4
						},
						"attributes": [
							{
								"name": "uuid"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "UUID of the owner of the projectile, if one exists\n",
					"key": "projectile_owner",
					"type": {
						"kind": "list",
						"item": {
							"kind": "int"
						},
						"lengthRange": {
							"kind": 0,
							"min": 4,
							"max": 4
						},
						"attributes": [
							{
								"name": "uuid"
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::server::util::game_event::VibrationListener": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "source",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::game_event::PositionSource"
					}
				},
				{
					"kind": "pair",
					"desc": "Range in blocks where vibrations can be detected\n",
					"key": "range",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1
						}
					}
				},
				{
					"kind": "pair",
					"desc": "Event that is being received, if any\n",
					"key": "event",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::game_event::ReceivingEvent"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Distance in blocks to the event that is being received\n",
					"key": "event_distance",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Delay in ticks until the event reaches this listener\n",
					"key": "event_delay",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::util::global_pos::GlobalPos": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Coordinates of the location in [x, y, z]\n",
					"key": "pos",
					"type": {
						"kind": "int_array",
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					}
				},
				{
					"kind": "pair",
					"desc": "Dimension of the location\n",
					"key": "dimension",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "dimension"
									}
								}
							}
						]
					}
				}
			]
		},
		"::java::server::util::GlobalPos": {
			"kind": "reference",
			"path": "::java::server::util::global_pos::GlobalPos"
		},
		"::java::server::util::inventory::<anonymous 0>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemStack"
					}
				},
				{
					"kind": "pair",
					"desc": "Inventory slot the item is in\n",
					"key": "Slot",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::inventory::T"
					},
					"optional": true
				}
			]
		},
		"::java::server::util::inventory::EquipmentSlot": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Mainhand",
					"value": "mainhand"
				},
				{
					"identifier": "Offhand",
					"value": "offhand"
				},
				{
					"identifier": "Head",
					"value": "head"
				},
				{
					"identifier": "Chest",
					"value": "chest"
				},
				{
					"identifier": "Legs",
					"value": "legs"
				},
				{
					"identifier": "Feet",
					"value": "feet"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"identifier": "Body",
					"value": "body"
				}
			]
		},
		"::java::server::util::inventory::InventoryItem": {
			"kind": "reference",
			"path": "::java::server::world::item::ItemStack"
		},
		"::java::server::util::inventory::SlottedItem": {
			"kind": "template",
			"child": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemStack"
						}
					},
					{
						"kind": "pair",
						"desc": "Inventory slot the item is in\n",
						"key": "Slot",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::inventory::T"
						},
						"optional": true
					}
				]
			},
			"typeParams": [
				{
					"path": "::java::server::util::inventory::T"
				}
			]
		},
		"::java::server::util::memory::<anonymous 0>": {
			"kind": "struct",
			"fields": []
		},
		"::java::server::util::memory::<anonymous 1>": {
			"kind": "struct",
			"fields": []
		},
		"::java::server::util::memory::<anonymous 10>": {
			"kind": "struct",
			"fields": []
		},
		"::java::server::util::memory::<anonymous 11>": {
			"kind": "struct",
			"fields": []
		},
		"::java::server::util::memory::<anonymous 12>": {
			"kind": "struct",
			"fields": []
		},
		"::java::server::util::memory::<anonymous 13>": {
			"kind": "struct",
			"fields": []
		},
		"::java::server::util::memory::<anonymous 14>": {
			"kind": "struct",
			"fields": []
		},
		"::java::server::util::memory::<anonymous 15>": {
			"kind": "struct",
			"fields": []
		},
		"::java::server::util::memory::<anonymous 16>": {
			"kind": "struct",
			"fields": []
		},
		"::java::server::util::memory::<anonymous 17>": {
			"kind": "struct",
			"fields": []
		},
		"::java::server::util::memory::<anonymous 18>": {
			"kind": "struct",
			"fields": []
		},
		"::java::server::util::memory::<anonymous 19>": {
			"kind": "struct",
			"fields": []
		},
		"::java::server::util::memory::<anonymous 2>": {
			"kind": "struct",
			"fields": []
		},
		"::java::server::util::memory::<anonymous 20>": {
			"kind": "struct",
			"fields": []
		},
		"::java::server::util::memory::<anonymous 3>": {
			"kind": "struct",
			"fields": []
		},
		"::java::server::util::memory::<anonymous 4>": {
			"kind": "struct",
			"fields": []
		},
		"::java::server::util::memory::<anonymous 5>": {
			"kind": "struct",
			"fields": []
		},
		"::java::server::util::memory::<anonymous 6>": {
			"kind": "struct",
			"fields": []
		},
		"::java::server::util::memory::<anonymous 7>": {
			"kind": "struct",
			"fields": []
		},
		"::java::server::util::memory::<anonymous 8>": {
			"kind": "struct",
			"fields": []
		},
		"::java::server::util::memory::<anonymous 9>": {
			"kind": "struct",
			"fields": []
		},
		"::java::server::util::memory::AdmiringDisable": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether the piglin cannot admire an item.\n\nSet when converting, when attacked, or when admiring an item.\n",
					"key": "value",
					"type": {
						"kind": "boolean"
					}
				}
			]
		},
		"::java::server::util::memory::AdmiringItem": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether the piglin is currently admiring an item.\n",
					"key": "value",
					"type": {
						"kind": "boolean"
					}
				}
			]
		},
		"::java::server::util::memory::AngryAt": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "The target of the piglin or piglin brute.\n",
					"key": "value",
					"type": {
						"kind": "int_array",
						"lengthRange": {
							"kind": 0,
							"min": 4,
							"max": 4
						},
						"attributes": [
							{
								"name": "uuid"
							}
						]
					}
				}
			]
		},
		"::java::server::util::memory::BreezeJumpCooldown": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "If present, the breeze will not long jump or slide. Set after performing a long jump.\n",
					"key": "value",
					"type": {
						"kind": "struct",
						"fields": []
					}
				}
			]
		},
		"::java::server::util::memory::BreezeJumpInhaling": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "If present, the breeze will not long jump or shoot a wind charge when stuck.\n",
					"key": "value",
					"type": {
						"kind": "struct",
						"fields": []
					}
				}
			]
		},
		"::java::server::util::memory::BreezeJumpTarget": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "The block position that the breeze is jumping towards.\n",
					"key": "value",
					"type": {
						"kind": "int_array",
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					}
				}
			]
		},
		"::java::server::util::memory::BreezeLeavingWater": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "If present, the breeze is in water.\n",
					"key": "value",
					"type": {
						"kind": "struct",
						"fields": []
					}
				}
			]
		},
		"::java::server::util::memory::BreezeShoot": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "If present, the breeze is able to shoot a wind charge, and will not long jump or slide.\n",
					"key": "value",
					"type": {
						"kind": "struct",
						"fields": []
					}
				}
			]
		},
		"::java::server::util::memory::BreezeShootCharging": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "If present, the breeze will not shoot a wind charge. Set when starting to shoot.\n",
					"key": "value",
					"type": {
						"kind": "struct",
						"fields": []
					}
				}
			]
		},
		"::java::server::util::memory::BreezeShootCooldown": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "If present, the breeze will not shoot a wind charge. Set after shooting\n",
					"key": "value",
					"type": {
						"kind": "struct",
						"fields": []
					}
				}
			]
		},
		"::java::server::util::memory::BreezeShootRecover": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "If present, the breeze will not shoot a wind charge.\n",
					"key": "value",
					"type": {
						"kind": "struct",
						"fields": []
					}
				}
			]
		},
		"::java::server::util::memory::DangerDetectedRecently": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether the armadillo has detected danger recently.\n",
					"key": "value",
					"type": {
						"kind": "boolean"
					}
				}
			]
		},
		"::java::server::util::memory::DigCooldown": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "If present, the warden will not dig down.\n",
					"key": "value",
					"type": {
						"kind": "struct",
						"fields": []
					}
				}
			]
		},
		"::java::server::util::memory::ExpirableValue": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "If present, ticks before this memory is automatically removed.\n",
					"key": "ttl",
					"type": {
						"kind": "long"
					},
					"optional": true
				}
			]
		},
		"::java::server::util::memory::GazeCooldownTicks": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "Ticks before the armadillo or camel can randomly look around again.\n",
					"key": "value",
					"type": {
						"kind": "int"
					}
				}
			]
		},
		"::java::server::util::memory::GolemDetectedRecently": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether the villager has detected an iron golem recently.\n",
					"key": "value",
					"type": {
						"kind": "boolean"
					}
				}
			]
		},
		"::java::server::util::memory::HasHuntingCooldown": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether the axolotl is in a hunting cooldown.\n",
					"key": "value",
					"type": {
						"kind": "boolean"
					}
				}
			]
		},
		"::java::server::util::memory::Home": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "Position of the villager's home.\n",
					"key": "value",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::global_pos::GlobalPos"
					}
				}
			]
		},
		"::java::server::util::memory::HuntedRecently": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether the piglin just hunted recently.\n\nSet after hunting or spawning in a bastion remnant.\n",
					"key": "value",
					"type": {
						"kind": "boolean"
					}
				}
			]
		},
		"::java::server::util::memory::IsEmerging": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether the warden is currently emerging from the ground.\n",
					"key": "value",
					"type": {
						"kind": "struct",
						"fields": []
					}
				}
			]
		},
		"::java::server::util::memory::IsInWater": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether the frog is currently in water.\n",
					"key": "value",
					"type": {
						"kind": "struct",
						"fields": []
					}
				}
			]
		},
		"::java::server::util::memory::IsPanicking": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether the mob is currently panicking.\n",
					"key": "value",
					"type": {
						"kind": "boolean"
					}
				}
			]
		},
		"::java::server::util::memory::IsPregnant": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether the frog is pregnant.\n",
					"key": "value",
					"type": {
						"kind": "struct",
						"fields": []
					}
				}
			]
		},
		"::java::server::util::memory::IsSniffing": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether the warden or sniffer is currently sniffing.\n",
					"key": "value",
					"type": {
						"kind": "struct",
						"fields": []
					}
				}
			]
		},
		"::java::server::util::memory::IsTempted": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether the mob is currently tempted by a player.\n",
					"key": "value",
					"type": {
						"kind": "boolean"
					}
				}
			]
		},
		"::java::server::util::memory::ItemPickupCooldownTicks": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "Ticks before the allay goes to pick up an item again.\n",
					"key": "value",
					"type": {
						"kind": "int"
					}
				}
			]
		},
		"::java::server::util::memory::JobSite": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "Position of the villager's job site.\n",
					"key": "value",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::global_pos::GlobalPos"
					}
				}
			]
		},
		"::java::server::util::memory::LastSlept": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "The gametime tick that the villager last slept in a bed.\n",
					"key": "value",
					"type": {
						"kind": "long"
					}
				}
			]
		},
		"::java::server::util::memory::LastWoken": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "The gametime tick that the villager last woke up from a bed.\n",
					"key": "value",
					"type": {
						"kind": "long"
					}
				}
			]
		},
		"::java::server::util::memory::LastWorkedAtPoi": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "The gametime tick that the villager last worked at their job site.\n",
					"key": "value",
					"type": {
						"kind": "long"
					}
				}
			]
		},
		"::java::server::util::memory::LikedNoteblock": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "The position and dimension of the note block that the allay likes.\n",
					"key": "value",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::global_pos::GlobalPos"
					}
				}
			]
		},
		"::java::server::util::memory::LikedNoteblockCooldownTicks": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "Ticks before the allay stops putting items at the liked note block. \n",
					"key": "value",
					"type": {
						"kind": "int"
					}
				}
			]
		},
		"::java::server::util::memory::LikedPlayer": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "The UUID of the player entity that the allay likes.\n",
					"key": "value",
					"type": {
						"kind": "int_array",
						"lengthRange": {
							"kind": 0,
							"min": 4,
							"max": 4
						},
						"attributes": [
							{
								"name": "uuid"
							}
						]
					}
				}
			]
		},
		"::java::server::util::memory::LongJumpCoolingDown": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "Ticks before the goat can long jump again.\n",
					"key": "value",
					"type": {
						"kind": "int"
					}
				}
			]
		},
		"::java::server::util::memory::MeetingPoint": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "Position of the villager's meeting point.\n",
					"key": "value",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::global_pos::GlobalPos"
					}
				}
			]
		},
		"::java::server::util::memory::Memories": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "memory_module_type"
									}
								}
							}
						]
					},
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									{
										"keyword": "key"
									}
								]
							}
						],
						"registry": "minecraft:memory_module"
					}
				}
			]
		},
		"::java::server::util::memory::PlayDeadTicks": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "Ticks until the axolotl stops playing dead.\n",
					"key": "value",
					"type": {
						"kind": "int"
					}
				}
			]
		},
		"::java::server::util::memory::PotentialJobSite": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "Position of a potential job site of the villager.\n",
					"key": "value",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::global_pos::GlobalPos"
					}
				}
			]
		},
		"::java::server::util::memory::RamCooldownTicks": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "Ticks before the goat can ram again.\n",
					"key": "value",
					"type": {
						"kind": "int"
					}
				}
			]
		},
		"::java::server::util::memory::RecentProjectile": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether the warden has recently noticed a projectile vibration.\n",
					"key": "value",
					"type": {
						"kind": "struct",
						"fields": []
					}
				}
			]
		},
		"::java::server::util::memory::RoarSoundCooldown": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "If present, the warden doesn't roar.\n",
					"key": "value",
					"type": {
						"kind": "struct",
						"fields": []
					}
				}
			]
		},
		"::java::server::util::memory::RoarSoundDelay": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "If present, the warden doesn't roar.\n",
					"key": "value",
					"type": {
						"kind": "struct",
						"fields": []
					}
				}
			]
		},
		"::java::server::util::memory::SniffCooldown": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "If present, the warden or sniffer will not sniff.\n",
					"key": "value",
					"type": {
						"kind": "struct",
						"fields": []
					}
				}
			]
		},
		"::java::server::util::memory::SnifferExploredPositions": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "Last 20 block positions that the sniffer has dug up. The sniffer will not dig in these positions.\n",
					"key": "value",
					"type": {
						"kind": "list",
						"item": {
							"kind": "int_array",
							"lengthRange": {
								"kind": 0,
								"min": 3,
								"max": 3
							}
						},
						"lengthRange": {
							"kind": 0,
							"max": 20
						}
					}
				}
			]
		},
		"::java::server::util::memory::SonicBoomCooldown": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "If present, the warden will not use the sonic boom attack.\n",
					"key": "value",
					"type": {
						"kind": "struct",
						"fields": []
					}
				}
			]
		},
		"::java::server::util::memory::SonicBoomSoundCooldown": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "If present, the warden's sonic boom animation will not spawn particles and play sounds.\n",
					"key": "value",
					"type": {
						"kind": "struct",
						"fields": []
					}
				}
			]
		},
		"::java::server::util::memory::SonicBoomSoundDelay": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "If present, will delay the warden's sonic boom animation.\n",
					"key": "value",
					"type": {
						"kind": "struct",
						"fields": []
					}
				}
			]
		},
		"::java::server::util::memory::TemptationCooldownTicks": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "Ticks before the mob can be tempted again.\n",
					"key": "value",
					"type": {
						"kind": "int"
					}
				}
			]
		},
		"::java::server::util::memory::TouchCooldown": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "If present, the warden will not react to being pushed by another mob. Set to 20 when touched.\n",
					"key": "value",
					"type": {
						"kind": "struct",
						"fields": []
					}
				}
			]
		},
		"::java::server::util::memory::UniversalAnger": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether the piglin is being universally angered. Only used when the `universalAnger` gamerule is enabled.\n",
					"key": "value",
					"type": {
						"kind": "boolean"
					}
				}
			]
		},
		"::java::server::util::memory::VibrationCooldown": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::ExpirableValue"
					}
				},
				{
					"kind": "pair",
					"desc": "If present, the warden will not react to vibrations. Set to 40 when receiving a vibration.\n",
					"key": "value",
					"type": {
						"kind": "struct",
						"fields": []
					}
				}
			]
		},
		"::java::server::util::Particle": {
			"kind": "reference",
			"path": "::java::server::util::particle::Particle"
		},
		"::java::server::util::particle::<anonymous 0>": {
			"kind": "struct",
			"fields": []
		},
		"::java::server::util::particle::BlockParticle": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "block_state",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "block"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::server::util::block_state::BlockState"
							}
						]
					}
				}
			]
		},
		"::java::server::util::particle::DustColor": {
			"kind": "union",
			"members": [
				{
					"kind": "list",
					"item": {
						"kind": "float"
					},
					"lengthRange": {
						"kind": 0,
						"min": 3,
						"max": 3
					},
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						},
						{
							"name": "color",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "particle"
								}
							}
						}
					]
				},
				{
					"kind": "reference",
					"path": "::java::server::util::color::RGB",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						}
					]
				}
			]
		},
		"::java::server::util::particle::DustParticle": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "color",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::particle::DustColor"
					}
				},
				{
					"kind": "pair",
					"key": "scale",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0.01,
							"max": 4
						}
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::server::util::particle::DustTransition": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "from_color",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::particle::DustColor"
					}
				},
				{
					"kind": "pair",
					"key": "to_color",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::particle::DustColor"
					}
				},
				{
					"kind": "pair",
					"key": "scale",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0.01,
							"max": 4
						}
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::server::util::particle::EntityEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": " Translucent color interpreted from four floats.\n\n\n\n Cheat Sheet:\n\n - Floats between 0 and 1 are interpreted as a percentage of the original color.\n\n - Negative values & values above 1 simply loop the 0-255 range, since there isn't randomization there's no weirdness.\n\n\n\n Simplified internal behavior ([graph demo](https://www.desmos.com/calculator/drwzjaxgks)):\n\n ```js\n\n function integerToByte(integer) {\n\n \tif (integer >= 0) {\n\n \t\t// Integer is positive\n\n \t\tif (integer <= 255) {\n\n \t\t\t// Integer already fits in a color channel\n\n \t\t\treturn integer\n\n \t\t}\n\n \t\t// Integer doesn't fit in color channel; modulo it\n\n \t\treturn integer % 256\n\n \t}\n\n \t// Integer is negative\n\n \treturn Math.abs((Math.floor(integer / 256) * 256)) + integer\n\n }\n\n ```\n",
					"key": "color",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::color::RGBA"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::server::util::particle::ItemParticle": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "item",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "item"
													}
												},
												"exclude": {
													"kind": "tree",
													"values": {
														"0": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "air"
															}
														}
													}
												}
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::server::world::item::SingleItem"
							}
						]
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::server::util::particle::OldDustParticle": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "r",
					"type": {
						"kind": "float"
					}
				},
				{
					"kind": "pair",
					"key": "g",
					"type": {
						"kind": "float"
					}
				},
				{
					"kind": "pair",
					"key": "b",
					"type": {
						"kind": "float"
					}
				},
				{
					"kind": "pair",
					"key": "scale",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0.01,
							"max": 4
						}
					}
				}
			],
			"attributes": [
				{
					"name": "until",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::server::util::particle::OldDustTransition": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "fromColor",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::particle::DustColor"
					}
				},
				{
					"kind": "pair",
					"key": "toColor",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::particle::DustColor"
					}
				},
				{
					"kind": "pair",
					"key": "scale",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0.01,
							"max": 4
						}
					}
				}
			],
			"attributes": [
				{
					"name": "until",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::server::util::particle::OldEntityEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "r",
					"type": {
						"kind": "float"
					}
				},
				{
					"kind": "pair",
					"key": "g",
					"type": {
						"kind": "float"
					}
				},
				{
					"kind": "pair",
					"key": "b",
					"type": {
						"kind": "float"
					}
				},
				{
					"kind": "pair",
					"key": "a",
					"type": {
						"kind": "float"
					}
				}
			],
			"attributes": [
				{
					"name": "until",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::server::util::particle::OldParticleSettings": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "value",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::particle::S"
					}
				}
			],
			"attributes": [
				{
					"name": "until",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::server::util::particle::Particle": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "particle_type"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:particle"
					}
				}
			]
		},
		"::java::server::util::particle::ParticleSettings": {
			"kind": "template",
			"child": {
				"kind": "union",
				"members": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "value",
								"type": {
									"kind": "reference",
									"path": "::java::server::util::particle::S"
								}
							}
						],
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						]
					},
					{
						"kind": "reference",
						"path": "::java::server::util::particle::S",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						]
					}
				]
			},
			"typeParams": [
				{
					"path": "::java::server::util::particle::S"
				}
			]
		},
		"::java::server::util::particle::SafePositionSource": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "block"
						},
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "position_source_type"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "pos",
					"type": {
						"kind": "list",
						"item": {
							"kind": "int"
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					}
				}
			]
		},
		"::java::server::util::particle::SculkCharge": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Angle the particle texture is rotated to, measured in radians (π ~ 3.14 for 180° clockwise, negative for counter clockwise).\n",
					"key": "roll",
					"type": {
						"kind": "float"
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::server::util::particle::ShriekParticle": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Ticks until the particle renders.\n",
					"key": "delay",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::server::util::particle::TrailParticle": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "target",
					"type": {
						"kind": "list",
						"item": {
							"kind": "double"
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					}
				},
				{
					"kind": "pair",
					"key": "color",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::color::RGB"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.4"
								}
							}
						}
					],
					"key": "duration",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1
						}
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.21.2"
						}
					}
				}
			]
		},
		"::java::server::util::particle::VibrationParticle": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Ticks in which to interpolate the particle's initial position to the destination.\n",
					"key": "arrival_in_ticks",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"key": "destination",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::particle::SafePositionSource"
					}
				}
			]
		},
		"::java::server::util::range::ExplicitInclusiveRange": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "min_inclusive",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::range::T"
					}
				},
				{
					"kind": "pair",
					"key": "max_inclusive",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::range::T"
					}
				}
			]
		},
		"::java::server::util::range::InclusiveRange": {
			"kind": "template",
			"child": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::util::range::T"
					},
					{
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::util::range::T"
						},
						"lengthRange": {
							"kind": 0,
							"min": 2,
							"max": 2
						}
					},
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "min_inclusive",
								"type": {
									"kind": "reference",
									"path": "::java::server::util::range::T"
								}
							},
							{
								"kind": "pair",
								"key": "max_inclusive",
								"type": {
									"kind": "reference",
									"path": "::java::server::util::range::T"
								}
							}
						]
					}
				]
			},
			"typeParams": [
				{
					"path": "::java::server::util::range::T"
				}
			]
		},
		"::java::server::util::SlottedItem": {
			"kind": "template",
			"child": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::server::util::inventory::SlottedItem"
				},
				"typeArgs": [
					{
						"kind": "reference",
						"path": "::java::server::util::T"
					}
				]
			},
			"typeParams": [
				{
					"path": "::java::server::util::T"
				}
			]
		},
		"::java::server::util::text::BlockNbtText": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "block",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "vector",
								"value": {
									"kind": "tree",
									"values": {
										"dimension": {
											"kind": "literal",
											"value": {
												"kind": "int",
												"value": 3
											}
										},
										"integer": {
											"kind": "literal",
											"value": {
												"kind": "boolean",
												"value": true
											}
										}
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "nbt",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "nbt_path",
								"value": {
									"kind": "dispatcher",
									"parallelIndices": [
										{
											"kind": "static",
											"value": "%fallback"
										}
									],
									"registry": "minecraft:block"
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.3"
								}
							}
						}
					],
					"key": "source",
					"type": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "block"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.3"
								}
							}
						}
					],
					"key": "type",
					"type": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "nbt"
						}
					},
					"optional": true
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::text::TextNbtBase"
					}
				}
			]
		},
		"::java::server::util::text::ClickEvent": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "action",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::text::ClickEventAction"
					}
				},
				{
					"kind": "pair",
					"key": "value",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"action"
								]
							}
						],
						"registry": "minecraft:click_event"
					}
				}
			]
		},
		"::java::server::util::text::ClickEventAction": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "OpenUrl",
					"value": "open_url"
				},
				{
					"identifier": "RunCommand",
					"value": "run_command"
				},
				{
					"identifier": "SuggestCommand",
					"value": "suggest_command"
				},
				{
					"identifier": "ChangePage",
					"value": "change_page"
				},
				{
					"identifier": "CopyToClipBoard",
					"value": "copy_to_clipboard"
				}
			]
		},
		"::java::server::util::text::EntityHoverContent": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "name",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::text::Text"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "entity_type"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "id",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "uuid"
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::server::util::text::EntityNbtText": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "entity",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "entity",
								"value": {
									"kind": "tree",
									"values": {
										"amount": {
											"kind": "reference",
											"path": "::java::server::util::text::multiple"
										},
										"type": {
											"kind": "reference",
											"path": "::java::server::util::text::entities"
										}
									}
								}
							},
							{
								"name": "selector"
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "nbt",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "nbt_path",
								"value": {
									"kind": "dispatcher",
									"parallelIndices": [
										{
											"kind": "dynamic",
											"accessor": [
												"entity"
											]
										}
									],
									"registry": "minecraft:entity"
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.3"
								}
							}
						}
					],
					"key": "source",
					"type": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "entity"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.3"
								}
							}
						}
					],
					"key": "type",
					"type": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "nbt"
						}
					},
					"optional": true
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::text::TextNbtBase"
					}
				}
			]
		},
		"::java::server::util::text::HoverEvent": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "action",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::text::HoverEventAction"
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"action"
								]
							}
						],
						"registry": "minecraft:hover_event"
					}
				}
			]
		},
		"::java::server::util::text::HoverEventAction": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "ShowText",
					"value": "show_text"
				},
				{
					"identifier": "ShowItem",
					"value": "show_item"
				},
				{
					"identifier": "ShowEntity",
					"value": "show_entity"
				}
			]
		},
		"::java::server::util::text::ItemHoverContent": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "id",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "item"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "count",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"key": "tag",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "nbt",
								"value": {
									"kind": "dispatcher",
									"parallelIndices": [
										{
											"kind": "dynamic",
											"accessor": [
												"id"
											]
										}
									],
									"registry": "minecraft:item"
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"key": "components",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::server::world::item::DataComponentPatch"
						},
						"typeArgs": [
							{
								"kind": "dispatcher",
								"parallelIndices": [
									{
										"kind": "dynamic",
										"accessor": [
											"id"
										]
									}
								],
								"registry": "minecraft:item_component"
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::server::util::text::Keybind": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Advancements",
					"value": "key.advancements"
				},
				{
					"identifier": "Attack",
					"value": "key.attack"
				},
				{
					"identifier": "Back",
					"value": "key.back"
				},
				{
					"identifier": "Chat",
					"value": "key.chat"
				},
				{
					"identifier": "Command",
					"value": "key.command"
				},
				{
					"identifier": "Drop",
					"value": "key.drop"
				},
				{
					"identifier": "Forward",
					"value": "key.forward"
				},
				{
					"identifier": "Fullscreen",
					"value": "key.fullscreen"
				},
				{
					"identifier": "Hotbar1",
					"value": "key.hotbar.1"
				},
				{
					"identifier": "Hotbar2",
					"value": "key.hotbar.2"
				},
				{
					"identifier": "Hotbar3",
					"value": "key.hotbar.3"
				},
				{
					"identifier": "Hotbar4",
					"value": "key.hotbar.4"
				},
				{
					"identifier": "Hotbar5",
					"value": "key.hotbar.5"
				},
				{
					"identifier": "Hotbar6",
					"value": "key.hotbar.6"
				},
				{
					"identifier": "Hotbar7",
					"value": "key.hotbar.7"
				},
				{
					"identifier": "Hotbar8",
					"value": "key.hotbar.8"
				},
				{
					"identifier": "Hotbar9",
					"value": "key.hotbar.9"
				},
				{
					"identifier": "Inventory",
					"value": "key.inventory"
				},
				{
					"identifier": "Jump",
					"value": "key.jump"
				},
				{
					"identifier": "Left",
					"value": "key.left"
				},
				{
					"identifier": "LoadToolbarActivator",
					"value": "key.loadToolbarActivator"
				},
				{
					"identifier": "PickItem",
					"value": "key.pickItem"
				},
				{
					"identifier": "Playerlist",
					"value": "key.playerlist"
				},
				{
					"identifier": "Right",
					"value": "key.right"
				},
				{
					"identifier": "SaveToolbarActivator",
					"value": "key.saveToolbarActivator"
				},
				{
					"identifier": "Screenshot",
					"value": "key.screenshot"
				},
				{
					"identifier": "SmoothCamera",
					"value": "key.smoothCamera"
				},
				{
					"identifier": "Sneak",
					"value": "key.sneak"
				},
				{
					"identifier": "SpectatorOutlines",
					"value": "key.spectatorOutlines"
				},
				{
					"identifier": "Sprint",
					"value": "key.sprint"
				},
				{
					"identifier": "SwapOffhand",
					"value": "key.swapOffhand"
				},
				{
					"identifier": "TogglePerspective",
					"value": "key.togglePerspective"
				},
				{
					"identifier": "Use",
					"value": "key.use"
				}
			]
		},
		"::java::server::util::text::KeybindText": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "keybind",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::text::Keybind"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.3"
								}
							}
						}
					],
					"key": "type",
					"type": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "keybind"
						}
					},
					"optional": true
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::text::TextBase"
					}
				}
			]
		},
		"::java::server::util::text::NormalText": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "text",
					"type": {
						"kind": "string"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.3"
								}
							}
						}
					],
					"key": "type",
					"type": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "text"
						}
					},
					"optional": true
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::text::TextBase"
					}
				}
			]
		},
		"::java::server::util::text::OldEntityHover": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "name",
					"type": {
						"kind": "string"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "id",
					"type": {
						"kind": "string"
					},
					"optional": true
				}
			]
		},
		"::java::server::util::text::ScoreHolder": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "objective",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "objective"
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "name",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "score_holder"
							}
						]
					}
				}
			]
		},
		"::java::server::util::text::ScoreText": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "score",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "objective",
								"type": {
									"kind": "string",
									"attributes": [
										{
											"name": "objective"
										}
									]
								}
							},
							{
								"kind": "pair",
								"key": "name",
								"type": {
									"kind": "string",
									"attributes": [
										{
											"name": "score_holder"
										}
									]
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.3"
								}
							}
						}
					],
					"key": "type",
					"type": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "score"
						}
					},
					"optional": true
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::text::TextBase"
					}
				}
			]
		},
		"::java::server::util::text::SelectorText": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "selector",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "entity"
							},
							{
								"name": "selector"
							}
						]
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"key": "separator",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::text::Text"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.3"
								}
							}
						}
					],
					"key": "type",
					"type": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "selector"
						}
					},
					"optional": true
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::text::TextBase"
					}
				}
			]
		},
		"::java::server::util::text::ShowEntityHoverEvent": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "deprecated",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"key": "value",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "name",
								"type": {
									"kind": "string"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "type",
								"type": {
									"kind": "string"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "id",
								"type": {
									"kind": "string"
								},
								"optional": true
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"key": "contents",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "name",
								"type": {
									"kind": "reference",
									"path": "::java::server::util::text::Text"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "type",
								"type": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "entity_type"
												}
											}
										}
									]
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "id",
								"type": {
									"kind": "string",
									"attributes": [
										{
											"name": "uuid"
										}
									]
								},
								"optional": true
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::server::util::text::ShowItemHoverEvent": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "deprecated",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"key": "value",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "nbt",
								"value": {
									"kind": "reference",
									"path": "::java::server::world::item::ItemStack"
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"key": "contents",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "id",
								"type": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "item"
												}
											}
										}
									]
								}
							},
							{
								"kind": "pair",
								"key": "count",
								"type": {
									"kind": "int"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								],
								"key": "tag",
								"type": {
									"kind": "string",
									"attributes": [
										{
											"name": "nbt",
											"value": {
												"kind": "dispatcher",
												"parallelIndices": [
													{
														"kind": "dynamic",
														"accessor": [
															"id"
														]
													}
												],
												"registry": "minecraft:item"
											}
										}
									]
								},
								"optional": true
							},
							{
								"kind": "pair",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								],
								"key": "components",
								"type": {
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::server::world::item::DataComponentPatch"
									},
									"typeArgs": [
										{
											"kind": "dispatcher",
											"parallelIndices": [
												{
													"kind": "dynamic",
													"accessor": [
														"id"
													]
												}
											],
											"registry": "minecraft:item_component"
										}
									]
								},
								"optional": true
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::server::util::text::ShowTextHoverEvent": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "deprecated",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"key": "value",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::text::Text"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"key": "contents",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::text::Text"
					},
					"optional": true
				}
			]
		},
		"::java::server::util::text::StorageNbtText": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "storage",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "storage"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "nbt",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "nbt_path",
								"value": {
									"kind": "dispatcher",
									"parallelIndices": [
										{
											"kind": "dynamic",
											"accessor": [
												"storage"
											]
										}
									],
									"registry": "minecraft:storage"
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.3"
								}
							}
						}
					],
					"key": "source",
					"type": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "storage"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.3"
								}
							}
						}
					],
					"key": "type",
					"type": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "nbt"
						}
					},
					"optional": true
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::text::TextNbtBase"
					}
				}
			]
		},
		"::java::server::util::text::Text": {
			"kind": "union",
			"members": [
				{
					"kind": "string"
				},
				{
					"kind": "reference",
					"path": "::java::server::util::text::TextObject"
				},
				{
					"kind": "list",
					"item": {
						"kind": "reference",
						"path": "::java::server::util::text::Text"
					}
				}
			]
		},
		"::java::server::util::text::TextBase": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "extra",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::util::text::Text"
						}
					},
					"optional": true
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::text::TextStyle"
					}
				}
			]
		},
		"::java::server::util::text::TextColor": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Black",
					"value": "black"
				},
				{
					"identifier": "DarkBlue",
					"value": "dark_blue"
				},
				{
					"identifier": "DarkGreen",
					"value": "dark_green"
				},
				{
					"identifier": "DarkAqua",
					"value": "dark_aqua"
				},
				{
					"identifier": "DarkRed",
					"value": "dark_red"
				},
				{
					"identifier": "DarkPurple",
					"value": "dark_purple"
				},
				{
					"identifier": "Gold",
					"value": "gold"
				},
				{
					"identifier": "Gray",
					"value": "gray"
				},
				{
					"identifier": "DarkGray",
					"value": "dark_gray"
				},
				{
					"identifier": "Blue",
					"value": "blue"
				},
				{
					"identifier": "Green",
					"value": "green"
				},
				{
					"identifier": "Aqua",
					"value": "aqua"
				},
				{
					"identifier": "Red",
					"value": "red"
				},
				{
					"identifier": "LightPurple",
					"value": "light_purple"
				},
				{
					"identifier": "Yellow",
					"value": "yellow"
				},
				{
					"identifier": "White",
					"value": "white"
				}
			]
		},
		"::java::server::util::text::TextFormat": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Obfuscated",
					"value": "obfuscated"
				},
				{
					"identifier": "Bold",
					"value": "bold"
				},
				{
					"identifier": "Strikethrough",
					"value": "strikethrough"
				},
				{
					"identifier": "Underline",
					"value": "underline"
				},
				{
					"identifier": "Italic",
					"value": "italic"
				},
				{
					"identifier": "Reset",
					"value": "reset"
				}
			]
		},
		"::java::server::util::text::TextNbtBase": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "interpret",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"key": "separator",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::text::Text"
					},
					"optional": true
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::text::TextBase"
					}
				}
			]
		},
		"::java::server::util::text::TextObject": {
			"kind": "union",
			"members": [
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "text",
							"type": {
								"kind": "string"
							}
						},
						{
							"kind": "pair",
							"attributes": [
								{
									"name": "since",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "1.20.3"
										}
									}
								}
							],
							"key": "type",
							"type": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "text"
								}
							},
							"optional": true
						},
						{
							"kind": "spread",
							"type": {
								"kind": "reference",
								"path": "::java::server::util::text::TextBase"
							}
						}
					]
				},
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "translate",
							"type": {
								"kind": "string",
								"attributes": [
									{
										"name": "translation_key"
									}
								]
							}
						},
						{
							"kind": "pair",
							"key": "with",
							"type": {
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::server::util::text::Text"
								}
							},
							"optional": true
						},
						{
							"kind": "pair",
							"attributes": [
								{
									"name": "since",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "1.19.4"
										}
									}
								}
							],
							"key": "fallback",
							"type": {
								"kind": "reference",
								"path": "::java::server::util::text::Text"
							},
							"optional": true
						},
						{
							"kind": "pair",
							"attributes": [
								{
									"name": "since",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "1.20.3"
										}
									}
								}
							],
							"key": "type",
							"type": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "translatable"
								}
							},
							"optional": true
						},
						{
							"kind": "spread",
							"type": {
								"kind": "reference",
								"path": "::java::server::util::text::TextBase"
							}
						}
					]
				},
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "score",
							"type": {
								"kind": "struct",
								"fields": [
									{
										"kind": "pair",
										"key": "objective",
										"type": {
											"kind": "string",
											"attributes": [
												{
													"name": "objective"
												}
											]
										}
									},
									{
										"kind": "pair",
										"key": "name",
										"type": {
											"kind": "string",
											"attributes": [
												{
													"name": "score_holder"
												}
											]
										}
									}
								]
							}
						},
						{
							"kind": "pair",
							"attributes": [
								{
									"name": "since",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "1.20.3"
										}
									}
								}
							],
							"key": "type",
							"type": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "score"
								}
							},
							"optional": true
						},
						{
							"kind": "spread",
							"type": {
								"kind": "reference",
								"path": "::java::server::util::text::TextBase"
							}
						}
					]
				},
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "selector",
							"type": {
								"kind": "string",
								"attributes": [
									{
										"name": "entity"
									},
									{
										"name": "selector"
									}
								]
							}
						},
						{
							"kind": "pair",
							"attributes": [
								{
									"name": "since",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "1.17"
										}
									}
								}
							],
							"key": "separator",
							"type": {
								"kind": "reference",
								"path": "::java::server::util::text::Text"
							},
							"optional": true
						},
						{
							"kind": "pair",
							"attributes": [
								{
									"name": "since",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "1.20.3"
										}
									}
								}
							],
							"key": "type",
							"type": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "selector"
								}
							},
							"optional": true
						},
						{
							"kind": "spread",
							"type": {
								"kind": "reference",
								"path": "::java::server::util::text::TextBase"
							}
						}
					]
				},
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "keybind",
							"type": {
								"kind": "reference",
								"path": "::java::server::util::text::Keybind"
							}
						},
						{
							"kind": "pair",
							"attributes": [
								{
									"name": "since",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "1.20.3"
										}
									}
								}
							],
							"key": "type",
							"type": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "keybind"
								}
							},
							"optional": true
						},
						{
							"kind": "spread",
							"type": {
								"kind": "reference",
								"path": "::java::server::util::text::TextBase"
							}
						}
					]
				},
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "block",
							"type": {
								"kind": "string",
								"attributes": [
									{
										"name": "vector",
										"value": {
											"kind": "tree",
											"values": {
												"dimension": {
													"kind": "literal",
													"value": {
														"kind": "int",
														"value": 3
													}
												},
												"integer": {
													"kind": "literal",
													"value": {
														"kind": "boolean",
														"value": true
													}
												}
											}
										}
									}
								]
							}
						},
						{
							"kind": "pair",
							"key": "nbt",
							"type": {
								"kind": "string",
								"attributes": [
									{
										"name": "nbt_path",
										"value": {
											"kind": "dispatcher",
											"parallelIndices": [
												{
													"kind": "static",
													"value": "%fallback"
												}
											],
											"registry": "minecraft:block"
										}
									}
								]
							}
						},
						{
							"kind": "pair",
							"attributes": [
								{
									"name": "since",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "1.20.3"
										}
									}
								}
							],
							"key": "source",
							"type": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "block"
								}
							},
							"optional": true
						},
						{
							"kind": "pair",
							"attributes": [
								{
									"name": "since",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "1.20.3"
										}
									}
								}
							],
							"key": "type",
							"type": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "nbt"
								}
							},
							"optional": true
						},
						{
							"kind": "spread",
							"type": {
								"kind": "reference",
								"path": "::java::server::util::text::TextNbtBase"
							}
						}
					]
				},
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "entity",
							"type": {
								"kind": "string",
								"attributes": [
									{
										"name": "entity",
										"value": {
											"kind": "tree",
											"values": {
												"amount": {
													"kind": "reference",
													"path": "::java::server::util::text::multiple"
												},
												"type": {
													"kind": "reference",
													"path": "::java::server::util::text::entities"
												}
											}
										}
									},
									{
										"name": "selector"
									}
								]
							}
						},
						{
							"kind": "pair",
							"key": "nbt",
							"type": {
								"kind": "string",
								"attributes": [
									{
										"name": "nbt_path",
										"value": {
											"kind": "dispatcher",
											"parallelIndices": [
												{
													"kind": "dynamic",
													"accessor": [
														"entity"
													]
												}
											],
											"registry": "minecraft:entity"
										}
									}
								]
							}
						},
						{
							"kind": "pair",
							"attributes": [
								{
									"name": "since",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "1.20.3"
										}
									}
								}
							],
							"key": "source",
							"type": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "entity"
								}
							},
							"optional": true
						},
						{
							"kind": "pair",
							"attributes": [
								{
									"name": "since",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "1.20.3"
										}
									}
								}
							],
							"key": "type",
							"type": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "nbt"
								}
							},
							"optional": true
						},
						{
							"kind": "spread",
							"type": {
								"kind": "reference",
								"path": "::java::server::util::text::TextNbtBase"
							}
						}
					]
				},
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "storage",
							"type": {
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "storage"
											}
										}
									}
								]
							}
						},
						{
							"kind": "pair",
							"key": "nbt",
							"type": {
								"kind": "string",
								"attributes": [
									{
										"name": "nbt_path",
										"value": {
											"kind": "dispatcher",
											"parallelIndices": [
												{
													"kind": "dynamic",
													"accessor": [
														"storage"
													]
												}
											],
											"registry": "minecraft:storage"
										}
									}
								]
							}
						},
						{
							"kind": "pair",
							"attributes": [
								{
									"name": "since",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "1.20.3"
										}
									}
								}
							],
							"key": "source",
							"type": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "storage"
								}
							},
							"optional": true
						},
						{
							"kind": "pair",
							"attributes": [
								{
									"name": "since",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "1.20.3"
										}
									}
								}
							],
							"key": "type",
							"type": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "nbt"
								}
							},
							"optional": true
						},
						{
							"kind": "spread",
							"type": {
								"kind": "reference",
								"path": "::java::server::util::text::TextNbtBase"
							}
						}
					]
				}
			]
		},
		"::java::server::util::text::TextStyle": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "color",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.16"
											}
										}
									},
									{
										"name": "color",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "hex_rgb"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::server::util::text::TextColor",
								"attributes": [
									{
										"name": "color",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "named"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.4"
								}
							}
						}
					],
					"desc": "Overrides the shadow properties of the text.\n\nIf specified as 0, the shadow will never be displayed.\n",
					"key": "shadow_color",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::color::RGBA"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"key": "font",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "font"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "bold",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "italic",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "underlined",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "strikethrough",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "obfuscated",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "insertion",
					"type": {
						"kind": "string"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "clickEvent",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::text::ClickEvent"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "hoverEvent",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::text::HoverEvent"
					},
					"optional": true
				}
			]
		},
		"::java::server::util::text::TranslatedText": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "translate",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "translation_key"
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "with",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::util::text::Text"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19.4"
								}
							}
						}
					],
					"key": "fallback",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::text::Text"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.3"
								}
							}
						}
					],
					"key": "type",
					"type": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "translatable"
						}
					},
					"optional": true
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::text::TextBase"
					}
				}
			]
		},
		"::java::server::world::block::banner::Banner": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::BlockEntity"
					}
				},
				{
					"kind": "pair",
					"desc": "Shows up on map markers\n",
					"key": "CustomName",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "text_component"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"key": "Patterns",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::block::banner::LegacyPattern"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"key": "patterns",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::block::banner::Pattern"
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::banner::LegacyPattern": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "Color",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::ColorInt"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Pattern",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::BannerPattern"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::banner::Pattern": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "color",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::ColorString"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "pattern",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "banner_pattern"
									}
								}
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::beacon::Beacon": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::BlockEntity"
					}
				},
				{
					"kind": "pair",
					"key": "CustomName",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "text_component"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::Lockable"
					}
				},
				{
					"kind": "pair",
					"desc": "Number of levels from the pyramid.\n",
					"key": "Levels",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.2"
								}
							}
						}
					],
					"desc": "Potion effect.\n",
					"key": "Primary",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::server::world::block::beacon::NoneId"
							},
							{
								"kind": "reference",
								"path": "::java::server::util::EffectId"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.2"
								}
							}
						}
					],
					"desc": "Potion effect.\n",
					"key": "Secondary",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::server::world::block::beacon::NoneId"
							},
							{
								"kind": "reference",
								"path": "::java::server::util::EffectId"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.2"
								}
							}
						}
					],
					"key": "primary_effect",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "mob_effect"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.2"
								}
							}
						}
					],
					"key": "secondary_effect",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "mob_effect"
									}
								}
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::beacon::NoneId": {
			"kind": "union",
			"members": [
				{
					"kind": "literal",
					"value": {
						"kind": "int",
						"value": 0
					},
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					]
				},
				{
					"kind": "literal",
					"value": {
						"kind": "int",
						"value": -1
					},
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					]
				}
			]
		},
		"::java::server::world::block::beehive::Bee": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "min_ticks_in_hive",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"key": "ticks_in_hive",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"key": "entity_data",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::AnyEntity"
					}
				}
			]
		},
		"::java::server::world::block::beehive::Beehive": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::BlockEntity"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"key": "FlowerPos",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::beehive::FlowerPos"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"key": "flower_pos",
					"type": {
						"kind": "int_array",
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"key": "Bees",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::block::beehive::LegacyBee"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"key": "bees",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::block::beehive::Bee"
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::beehive::FlowerPos": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "X",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Y",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Z",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::beehive::LegacyBee": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "MinOccupationTicks",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "TicksInHive",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "EntityData",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::AnyEntity"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::BlockEntity": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "id",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "block_entity_type"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "x",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "y",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "z",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Unknown\n\n0 for regular block entities\n",
					"key": "keepPacked",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"key": "components",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::server::world::item::DataComponentPatch"
						},
						"typeArgs": [
							{
								"kind": "union",
								"members": []
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::brewing_stand::BrewingStand": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::BlockEntity"
					}
				},
				{
					"kind": "pair",
					"key": "CustomName",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "text_component"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::Lockable"
					}
				},
				{
					"kind": "pair",
					"desc": "* 0: left brewing slot\n\n* 1: middle brewing slot\n\n* 2: right brewing slot\n\n* 3: ingredient slot\n\n* 4: fuel slot\n",
					"key": "Items",
					"type": {
						"kind": "list",
						"item": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::server::util::inventory::SlottedItem"
							},
							"typeArgs": [
								{
									"kind": "byte",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 4
									}
								}
							]
						},
						"lengthRange": {
							"kind": 0,
							"min": 0,
							"max": 5
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Number of ticks until the brewing is complete.\n",
					"key": "BrewTime",
					"type": {
						"kind": "short"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Amount of fuel the brewing stand has left.\n",
					"key": "Fuel",
					"type": {
						"kind": "byte"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::brushable_block::BrushableBlock": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::BlockEntity"
					}
				},
				{
					"kind": "pair",
					"desc": "Loot table that will decide the brushed loot.\n",
					"key": "LootTable",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "loot_table"
											}
										},
										"empty": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "allowed"
											}
										}
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Seed of the loot table.\n",
					"key": "LootTableSeed",
					"type": {
						"kind": "long",
						"attributes": [
							{
								"name": "random"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Item that was rolled from the loot table, which is currently peeking out.\n",
					"key": "item",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemStack"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Direction of the block that was interacted with.\n\nWrite-only, is not saved by the game.\n",
					"key": "hit_direction",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::direction::DirectionInt"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::campfire::Campfire": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::BlockEntity"
					}
				},
				{
					"kind": "pair",
					"key": "Items",
					"type": {
						"kind": "list",
						"item": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::server::util::inventory::SlottedItem"
							},
							"typeArgs": [
								{
									"kind": "byte",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 3
									}
								}
							]
						},
						"lengthRange": {
							"kind": 0,
							"min": 0,
							"max": 4
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Ticks each item has been cooking.\n\nIndex is according to item slot.\n",
					"key": "CookingTimes",
					"type": {
						"kind": "int_array",
						"lengthRange": {
							"kind": 0,
							"min": 4,
							"max": 4
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Ticks each item still has to cook.\n\nIndex is according to item slot.\n",
					"key": "CookingTotalTimes",
					"type": {
						"kind": "int_array",
						"lengthRange": {
							"kind": 0,
							"min": 4,
							"max": 4
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::chiseled_bookshelf::ChiseledBookshelf": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::BlockEntity"
					}
				},
				{
					"kind": "pair",
					"desc": "Slots from 0 to 5.\n",
					"key": "Items",
					"type": {
						"kind": "list",
						"item": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::server::util::SlottedItem"
							},
							"typeArgs": [
								{
									"kind": "byte",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 5
									}
								}
							]
						},
						"lengthRange": {
							"kind": 0,
							"min": 0,
							"max": 6
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "last_interacted_slot",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 5
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::command_block::CommandBlock": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::BlockEntity"
					}
				},
				{
					"kind": "pair",
					"key": "CustomName",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "text_component"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Command",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "command",
								"value": {
									"kind": "tree",
									"values": {
										"slash": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "allowed"
											}
										},
										"empty": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "allowed"
											}
										},
										"max_length": {
											"kind": "literal",
											"value": {
												"kind": "int",
												"value": 32500
											}
										}
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Success count of the last command.\n",
					"key": "SuccessCount",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Output of the last command.\n",
					"key": "LastOutput",
					"type": {
						"kind": "string"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether to record command output.\n",
					"key": "TrackOutput",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether it is powered by redstone.\n",
					"key": "powered",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether it is automatically powered.\n",
					"key": "auto",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the previous command block was successful when the command block was executed.\n\nThis is always true for non-conditional command blocks.\n",
					"key": "conditionMet",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether to record the tick of the latest command execution.\n",
					"key": "UpdateLastExecution",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Tick of the latest command execution.\n",
					"key": "LastExecution",
					"type": {
						"kind": "long"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::comparator::Comparator": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::BlockEntity"
					}
				},
				{
					"kind": "pair",
					"desc": "Strength of the redstone output.\n",
					"key": "OutputSignal",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::conduit::Conduit": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::BlockEntity"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "The hostile mob that the conduit is currently attacking.\n",
					"key": "target_uuid",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::conduit::TargetUuid",
						"attributes": [
							{
								"name": "uuid"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "The hostile mob that the conduit is currently attacking.\n",
					"key": "Target",
					"type": {
						"kind": "int_array",
						"lengthRange": {
							"kind": 0,
							"min": 4,
							"max": 4
						},
						"attributes": [
							{
								"name": "uuid"
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::conduit::TargetUuid": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Upper bits of the target's UUID\n",
					"key": "M",
					"type": {
						"kind": "long"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Lower bits of the target's UUID\n",
					"key": "L",
					"type": {
						"kind": "long"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::container::Container27": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::container::ContainerBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Slots from 0 to 26.\n",
					"key": "Items",
					"type": {
						"kind": "list",
						"item": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::server::util::inventory::SlottedItem"
							},
							"typeArgs": [
								{
									"kind": "byte",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 26
									}
								}
							]
						},
						"lengthRange": {
							"kind": 0,
							"min": 0,
							"max": 27
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::container::Container9": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::container::ContainerBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Slots from 0 to 8.\n",
					"key": "Items",
					"type": {
						"kind": "list",
						"item": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::server::util::inventory::SlottedItem"
							},
							"typeArgs": [
								{
									"kind": "byte",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 8
									}
								}
							]
						},
						"lengthRange": {
							"kind": 0,
							"min": 0,
							"max": 9
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::container::ContainerBase": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::BlockEntity"
					}
				},
				{
					"kind": "pair",
					"key": "CustomName",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "text_component"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::Lockable"
					}
				},
				{
					"kind": "pair",
					"desc": "Loot table that will populate this container.\n",
					"key": "LootTable",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "loot_table"
											}
										},
										"empty": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "allowed"
											}
										}
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Seed of the loot table.\n",
					"key": "LootTableSeed",
					"type": {
						"kind": "long",
						"attributes": [
							{
								"name": "random"
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::container::Hopper": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::container::ContainerBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Slots from 0 to 4.\n",
					"key": "Items",
					"type": {
						"kind": "list",
						"item": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::server::util::inventory::SlottedItem"
							},
							"typeArgs": [
								{
									"kind": "byte",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 4
									}
								}
							]
						},
						"lengthRange": {
							"kind": 0,
							"min": 0,
							"max": 5
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Ticks until an item can be transferred.\n",
					"key": "TransferCooldown",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::crafter::Crafter": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::BlockEntity"
					}
				},
				{
					"kind": "pair",
					"key": "crafting_ticks_remaining",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "disabled_slots",
					"type": {
						"kind": "int_array",
						"lengthRange": {
							"kind": 0,
							"max": 9
						},
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 8
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "triggered",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "literal",
								"value": {
									"kind": "int",
									"value": 0
								}
							},
							{
								"kind": "literal",
								"value": {
									"kind": "int",
									"value": 1
								}
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::creaking_heart::CreakingHeart": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::BlockEntity"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.4"
								}
							}
						}
					],
					"desc": "The creaking mob that is linked to this heart.\n",
					"key": "creaking",
					"type": {
						"kind": "list",
						"item": {
							"kind": "int"
						},
						"lengthRange": {
							"kind": 0,
							"min": 4,
							"max": 4
						},
						"attributes": [
							{
								"name": "uuid"
							}
						]
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.21.2"
						}
					}
				}
			]
		},
		"::java::server::world::block::decorated_pot::DecoratedPot": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::BlockEntity"
					}
				},
				{
					"kind": "pair",
					"desc": "Item ID of what was used for each side of the pot.\n",
					"key": "sherds",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::block::decorated_pot::Sherd",
							"attributes": [
								{
									"name": "id"
								}
							]
						},
						"lengthRange": {
							"kind": 0,
							"min": 4,
							"max": 4
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.3"
								}
							}
						}
					],
					"desc": "Loot table that will populate this container.\n",
					"key": "LootTable",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "loot_table"
											}
										},
										"empty": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "allowed"
											}
										}
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.3"
								}
							}
						}
					],
					"desc": "Seed of the loot table.\n",
					"key": "LootTableSeed",
					"type": {
						"kind": "long",
						"attributes": [
							{
								"name": "random"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.3"
								}
							}
						}
					],
					"key": "item",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemStack"
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.19.4"
						}
					}
				}
			]
		},
		"::java::server::world::block::decorated_pot::Sherd": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Angler",
					"value": "angler_pottery_sherd"
				},
				{
					"identifier": "Archer",
					"value": "archer_pottery_sherd"
				},
				{
					"identifier": "ArmsUp",
					"value": "arms_up_pottery_sherd"
				},
				{
					"identifier": "Blade",
					"value": "blade_pottery_sherd"
				},
				{
					"identifier": "Brewer",
					"value": "brewer_pottery_sherd"
				},
				{
					"identifier": "Brick",
					"value": "brick"
				},
				{
					"identifier": "Burn",
					"value": "burn_pottery_sherd"
				},
				{
					"identifier": "Danger",
					"value": "danger_pottery_sherd"
				},
				{
					"identifier": "Explorer",
					"value": "explorer_pottery_sherd"
				},
				{
					"identifier": "Friend",
					"value": "friend_pottery_sherd"
				},
				{
					"identifier": "Heart",
					"value": "heart_pottery_sherd"
				},
				{
					"identifier": "Heartbreak",
					"value": "heartbreak_pottery_sherd"
				},
				{
					"identifier": "Howl",
					"value": "howl_pottery_sherd"
				},
				{
					"identifier": "Miner",
					"value": "miner_pottery_sherd"
				},
				{
					"identifier": "Mourner",
					"value": "mourner_pottery_sherd"
				},
				{
					"identifier": "Plenty",
					"value": "plenty_pottery_sherd"
				},
				{
					"identifier": "Prize",
					"value": "prize_pottery_sherd"
				},
				{
					"identifier": "Sheaf",
					"value": "sheaf_pottery_sherd"
				},
				{
					"identifier": "Shelter",
					"value": "shelter_pottery_sherd"
				},
				{
					"identifier": "Skull",
					"value": "skull_pottery_sherd"
				},
				{
					"identifier": "Snort",
					"value": "snort_pottery_sherd"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"identifier": "Flow",
					"value": "flow_pottery_sherd"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"identifier": "Guster",
					"value": "guster_pottery_sherd"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"identifier": "Scrape",
					"value": "scrape_pottery_sherd"
				}
			]
		},
		"::java::server::world::block::enchanting_table::EnchantingTable": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::BlockEntity"
					}
				},
				{
					"kind": "pair",
					"key": "CustomName",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "text_component"
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::end_gateway::EndGateway": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::BlockEntity"
					}
				},
				{
					"kind": "pair",
					"desc": "In game ticks.\n",
					"key": "Age",
					"type": {
						"kind": "long"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether to teleport to the exact location.\n",
					"key": "ExactTeleport",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"desc": "Coordinates of where to teleport entities to.\n",
					"key": "ExitPortal",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::end_gateway::ExitPortal"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"desc": "Coordinates of where to teleport entities to.\n",
					"key": "exit_portal",
					"type": {
						"kind": "int_array",
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::end_gateway::ExitPortal": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "X",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Y",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Z",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::furnace::<anonymous 0>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Ticks until the current fuel runs out.\n",
					"key": "BurnTime",
					"type": {
						"kind": "short"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Ticks the item has been smelting for.\n",
					"key": "CookTime",
					"type": {
						"kind": "short"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Total ticks the item will take to be smelted.\n",
					"key": "CookTimeTotal",
					"type": {
						"kind": "short"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::furnace::<anonymous 1>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Total ticks the item will take to be smelted.\n",
					"key": "cooking_total_time",
					"type": {
						"kind": "short"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Ticks the item has been smelting for.\n",
					"key": "cooking_time_spent",
					"type": {
						"kind": "short"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Ticks until the current fuel runs out.\n",
					"key": "lit_time_remaining",
					"type": {
						"kind": "short"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Total ticks the current fuel will burn.\n",
					"key": "lit_total_time",
					"type": {
						"kind": "short"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::furnace::Furnace": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::BlockEntity"
					}
				},
				{
					"kind": "pair",
					"key": "CustomName",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "text_component"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::Lockable"
					}
				},
				{
					"kind": "pair",
					"desc": "The items in this furnace, with slots:\n\n* 0: Item being smelted\n\n* 1: Fuel\n\n* 2: Output\n",
					"key": "Items",
					"type": {
						"kind": "list",
						"item": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::server::util::inventory::SlottedItem"
							},
							"typeArgs": [
								{
									"kind": "byte",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 2
									}
								}
							]
						},
						"lengthRange": {
							"kind": 0,
							"min": 0,
							"max": 3
						}
					},
					"optional": true
				},
				{
					"kind": "spread",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.4"
								}
							}
						}
					],
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"desc": "Ticks until the current fuel runs out.\n",
								"key": "BurnTime",
								"type": {
									"kind": "short"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"desc": "Ticks the item has been smelting for.\n",
								"key": "CookTime",
								"type": {
									"kind": "short"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"desc": "Total ticks the item will take to be smelted.\n",
								"key": "CookTimeTotal",
								"type": {
									"kind": "short"
								},
								"optional": true
							}
						]
					}
				},
				{
					"kind": "spread",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.4"
								}
							}
						}
					],
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"desc": "Total ticks the item will take to be smelted.\n",
								"key": "cooking_total_time",
								"type": {
									"kind": "short"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"desc": "Ticks the item has been smelting for.\n",
								"key": "cooking_time_spent",
								"type": {
									"kind": "short"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"desc": "Ticks until the current fuel runs out.\n",
								"key": "lit_time_remaining",
								"type": {
									"kind": "short"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"desc": "Total ticks the current fuel will burn.\n",
								"key": "lit_total_time",
								"type": {
									"kind": "short"
								},
								"optional": true
							}
						]
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Recipes that have been used since the last time a result item was removed from the GUI. Used to calculate the experience to give to the player.\n",
					"key": "RecipesUsed",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"desc": "How many times this recipe has been used.\n",
								"key": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "recipe"
												}
											}
										}
									]
								},
								"type": {
									"kind": "int"
								}
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::furnace::RecipesUsed": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "How many times this recipe has been used.\n",
					"key": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "recipe"
									}
								}
							}
						]
					},
					"type": {
						"kind": "int"
					}
				}
			]
		},
		"::java::server::world::block::head::PlayerHead": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::BlockEntity"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Owner of the skull.\n",
					"key": "Owner",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::head::SkullOwner"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						},
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"key": "SkullOwner",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::head::SkullOwner"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Name of the owner, if exists will be converted to SkullOwner.\n",
					"key": "ExtraType",
					"type": {
						"kind": "string"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19.3"
								}
							}
						}
					],
					"key": "note_block_sound",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "weighed_sound_event"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"key": "profile",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "static",
								"value": "profile"
							}
						],
						"registry": "minecraft:data_component"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::head::Properties": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "textures",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::block::head::Texture"
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::head::SkullOwner": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "uuid"
						}
					],
					"desc": "Optional.\n",
					"key": "Id",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.16"
											}
										}
									}
								]
							},
							{
								"kind": "int_array",
								"lengthRange": {
									"kind": 0,
									"min": 4,
									"max": 4
								},
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.16"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "If missing appears as a steve head.\n",
					"key": "Name",
					"type": {
						"kind": "string"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Properties",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::head::Properties"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::head::Texture": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "Signature",
					"type": {
						"kind": "string"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Base64 encoded JSON value of the texture index.\n",
					"key": "Value",
					"type": {
						"kind": "string"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::jigsaw::Jigsaw": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Structure pool this will connect to.\n",
					"key": "target_pool",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "worldgen/template_pool"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "How the resultant structure can be transformed.\n",
					"key": "joint",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::jigsaw::JointType"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Structure pool this will \"spawn\" in.\n",
					"key": "pool",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "worldgen/template_pool"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "ID this will \"spawn\" in.\n",
					"key": "name",
					"type": {
						"kind": "string"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "ID of the type of jigsaw this will be \"spawned\" from.\n",
					"key": "target",
					"type": {
						"kind": "string"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Final block state of the jigsaw.\n",
					"key": "final_state",
					"type": {
						"kind": "string"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "ID of the type of jigsaw this connects to.\n",
					"key": "attachment_type",
					"type": {
						"kind": "string"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::jigsaw::JointType": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Rollable",
					"value": "rollable"
				},
				{
					"identifier": "Aligned",
					"value": "aligned"
				}
			]
		},
		"::java::server::world::block::jukebox::Jukebox": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::BlockEntity"
					}
				},
				{
					"kind": "pair",
					"key": "RecordItem",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemStack"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "TickCount",
					"type": {
						"kind": "long"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "RecordStartTick",
					"type": {
						"kind": "long"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "IsPlaying",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::lectern::Lectern": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::BlockEntity"
					}
				},
				{
					"kind": "pair",
					"key": "Book",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemStack"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Current page the book is on.\n",
					"key": "Page",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::Lockable": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						}
					],
					"desc": "Name of the item that a player has to be holding to open this container.\n\nSource is flattened to plain text and has formatting removed before the check.\n",
					"key": "Lock",
					"type": {
						"kind": "string"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						}
					],
					"desc": "Item predicate testing the item that a player has to be holding to open this container.\n",
					"key": "lock",
					"type": {
						"kind": "reference",
						"path": "::java::data::advancement::predicate::ItemPredicate"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::moving_piston::Facing": {
			"kind": "enum",
			"enumKind": "int",
			"values": [
				{
					"identifier": "Down",
					"value": 0
				},
				{
					"identifier": "Up",
					"value": 1
				},
				{
					"identifier": "North",
					"value": 2
				},
				{
					"identifier": "South",
					"value": 3
				},
				{
					"identifier": "West",
					"value": 4
				},
				{
					"identifier": "East",
					"value": 5
				}
			]
		},
		"::java::server::world::block::moving_piston::MovingPiston": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::BlockEntity"
					}
				},
				{
					"kind": "pair",
					"desc": "Moving block represented by the moving piston.\n",
					"key": "blockState",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::block_state::BlockState"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "The direction it is moving.\n",
					"key": "facing",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::moving_piston::Facing"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "How far it has moved.\n",
					"key": "progress",
					"type": {
						"kind": "float"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "extending",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the moving piston is the piston head.\n",
					"key": "source",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::sculk_catalyst::ChargeCursor": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "pos",
					"type": {
						"kind": "list",
						"item": {
							"kind": "int"
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					}
				},
				{
					"kind": "pair",
					"key": "charge",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1000
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "decay_delay",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "update_delay",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "facings",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::util::direction::Direction"
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::sculk_catalyst::SculkCatalyst": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::BlockEntity"
					}
				},
				{
					"kind": "pair",
					"key": "cursors",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::block::sculk_catalyst::ChargeCursor"
						}
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.19"
						}
					}
				}
			]
		},
		"::java::server::world::block::sculk_sensor::SculkSensor": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "last_vibration_frequency",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1,
							"max": 15
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"desc": "Vibration listener\n",
					"key": "listener",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::game_event::VibrationListener"
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.17"
						}
					}
				}
			]
		},
		"::java::server::world::block::sculk_shrieker::SculkShrieker": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "warning_level",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "listener",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::game_event::VibrationListener"
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.19"
						}
					}
				}
			]
		},
		"::java::server::world::block::sign::OldSign": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::BlockEntity"
					}
				},
				{
					"kind": "pair",
					"desc": "Color the text has been dyed.\n",
					"key": "Color",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::color::ColorString"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"key": "GlowingText",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "First line of text.\n",
					"key": "Text1",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "text_component"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Second line of text.\n",
					"key": "Text2",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "text_component"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Third line of text.\n",
					"key": "Text3",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "text_component"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Fourth line of text.\n",
					"key": "Text4",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "text_component"
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::sign::Sign": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::BlockEntity"
					}
				},
				{
					"kind": "pair",
					"key": "back_text",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::sign::SignText"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "front_text",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::sign::SignText"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the sign can no longer be edited. If a sign is editable\n",
					"key": "is_waxed",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20"
						}
					}
				}
			]
		},
		"::java::server::world::block::sign::SignText": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "messages",
					"type": {
						"kind": "list",
						"item": {
							"kind": "string",
							"attributes": [
								{
									"name": "text_component"
								}
							]
						},
						"lengthRange": {
							"kind": 0,
							"min": 4,
							"max": 4
						}
					}
				},
				{
					"kind": "pair",
					"key": "filtered_messages",
					"type": {
						"kind": "list",
						"item": {
							"kind": "string",
							"attributes": [
								{
									"name": "text_component"
								}
							]
						},
						"lengthRange": {
							"kind": 0,
							"min": 4,
							"max": 4
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "color",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::color::ColorString"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "has_glowing_text",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::spawner::<anonymous 0>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "reference",
						"path": "::java::server::util::inventory::EquipmentSlot"
					},
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					}
				}
			]
		},
		"::java::server::world::block::spawner::CustomSpawnRules": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Range of block light level required for the entity to spawn.\n",
					"key": "block_light_limit",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::server::util::range::InclusiveRange"
						},
						"typeArgs": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 0,
									"max": 15
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Range of sky light level required for the entity to spawn.\n",
					"key": "sky_light_limit",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::server::util::range::InclusiveRange"
						},
						"typeArgs": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 0,
									"max": 15
								}
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::spawner::SpawnEquipment": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Generates the equipment.\n",
					"key": "loot_table",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "loot_table"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "Chance the mob will drop the equipment on death.\n",
					"key": "slot_drop_chances",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "float",
								"valueRange": {
									"kind": 0,
									"min": 0,
									"max": 1
								}
							},
							{
								"kind": "struct",
								"fields": [
									{
										"kind": "pair",
										"key": {
											"kind": "reference",
											"path": "::java::server::util::inventory::EquipmentSlot"
										},
										"type": {
											"kind": "float",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 1
											}
										}
									}
								]
							}
						]
					}
				}
			]
		},
		"::java::server::world::block::spawner::Spawner": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::BlockEntity"
					}
				},
				{
					"kind": "pair",
					"desc": "Entities that can be placed.\n",
					"key": "SpawnPotentials",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::block::spawner::SpawnPotential"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Data for the next mob to spawn.\n\nOverwritten by `SpawnPotentials`.\n",
					"key": "SpawnData",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::server::world::entity::AnyEntity",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::server::world::block::spawner::SpawnerEntry",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Number of entities that will be placed.\n",
					"key": "SpawnCount",
					"type": {
						"kind": "short"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Range that the spawned entities will be placed.\n",
					"key": "SpawnRange",
					"type": {
						"kind": "short"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Ticks until the next spawn.\n",
					"key": "Delay",
					"type": {
						"kind": "short"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Minimum random delay for the next spawn.\n",
					"key": "MinSpawnDelay",
					"type": {
						"kind": "short"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Maximum random delay for the next spawn.\n",
					"key": "MaxSpawnDelay",
					"type": {
						"kind": "short"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Maximum number of entities nearby.\n",
					"key": "MaxNearbyEntities",
					"type": {
						"kind": "short"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Radius in blocks that a player has to be within to spawn entities.\n",
					"key": "RequiredPlayerRange",
					"type": {
						"kind": "short"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::spawner::SpawnerEntry": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "entity",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::AnyEntity"
					}
				},
				{
					"kind": "pair",
					"key": "custom_spawn_rules",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::spawner::CustomSpawnRules"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"desc": "Rolled items from the specified loot table will be equipped to the mob that spawns.\n",
					"key": "equipment",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::spawner::SpawnEquipment"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::spawner::SpawnPotential": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"key": "Entity",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::server::world::entity::AnyEntity",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::server::world::block::spawner::SpawnerEntry",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"key": "data",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::spawner::SpawnerEntry"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"desc": "Weight for this entry to be chosen.\n",
					"key": "Weight",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 0
								},
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "byte",
								"valueRange": {
									"kind": 0,
									"min": 0
								},
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.18"
								}
							}
						}
					],
					"desc": "Weight for this entry to be chosen.\n",
					"key": "weight",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					}
				}
			]
		},
		"::java::server::world::block::spawner::TrialSpawner": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Spawning behavior when the player does not have the Bad Omen effect.\n",
					"key": "normal_config",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::trial_spawner::TrialSpawnerConfig"
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.21.2"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "trial_spawner"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Spawning behavior when the player has the Bad Omen effect.\n",
					"key": "ominous_config",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::data::trial_spawner::TrialSpawnerConfig"
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.21.2"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "trial_spawner"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Maximum distance for players to activate the trial spawner, or join a battle\n",
					"key": "required_player_range",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1,
							"max": 128
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Time in ticks for the cooldown period. Included the time spend dispensing the reward.\n",
					"key": "target_cooldown_length",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Players that are have been nearby during the current battle\n",
					"key": "registered_players",
					"type": {
						"kind": "list",
						"item": {
							"kind": "list",
							"item": {
								"kind": "int"
							},
							"lengthRange": {
								"kind": 0,
								"min": 4,
								"max": 4
							},
							"attributes": [
								{
									"name": "uuid"
								}
							]
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "All mobs that have been spawned by this trial spawner and are currently alive\n",
					"key": "current_mobs",
					"type": {
						"kind": "list",
						"item": {
							"kind": "list",
							"item": {
								"kind": "int"
							},
							"lengthRange": {
								"kind": 0,
								"min": 4,
								"max": 4
							},
							"attributes": [
								{
									"name": "uuid"
								}
							]
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Gametime in ticks when the cooldown ends\n",
					"key": "cooldown_ends_at",
					"type": {
						"kind": "long"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Gametime in ticks when the next spawning attempt happens\n",
					"key": "next_mob_spawns_at",
					"type": {
						"kind": "long"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "total_mobs_spawned",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "The next entity to spawn, also controlls the entity displayed in the trial spawner\n",
					"key": "spawn_data",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::spawner::SpawnerEntry"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "The loot table selected to be used to determine the reward\n",
					"key": "ejecting_loot_table",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "loot_table"
									}
								}
							}
						]
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::server::world::block::structure_block::Mirror": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "None",
					"value": "NONE"
				},
				{
					"identifier": "LeftRight",
					"value": "LEFT_RIGHT"
				},
				{
					"identifier": "FrontBack",
					"value": "FRONT_BACK"
				}
			]
		},
		"::java::server::world::block::structure_block::Mode": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Save",
					"value": "SAVE"
				},
				{
					"identifier": "Load",
					"value": "LOAD"
				},
				{
					"identifier": "Data",
					"value": "DATA"
				},
				{
					"identifier": "Corner",
					"value": "CORNER"
				}
			]
		},
		"::java::server::world::block::structure_block::Rotation": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "None",
					"value": "NONE"
				},
				{
					"identifier": "Clockwise90",
					"value": "CLOCKWISE_90"
				},
				{
					"identifier": "Clockwise180",
					"value": "CLOCKWISE_180"
				},
				{
					"identifier": "CounterClockwise90",
					"value": "COUNTERCLOCKWISE_90"
				}
			]
		},
		"::java::server::world::block::structure_block::StructureBlock": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::BlockEntity"
					}
				},
				{
					"kind": "pair",
					"key": "name",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "structure"
											}
										},
										"empty": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "allowed"
											}
										}
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Author of the structure.\n",
					"key": "author",
					"type": {
						"kind": "string"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Custom data for the structure. Stores the data id for \"DATA\" mode.\n",
					"key": "metadata",
					"type": {
						"kind": "string"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Relative offset.\n",
					"key": "posX",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Relative offset.\n",
					"key": "posY",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Relative offset.\n",
					"key": "posZ",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "sizeX",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "sizeY",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "sizeZ",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "rotation",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::structure_block::Rotation"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "mirror",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::structure_block::Mirror"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "mode",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::block::structure_block::Mode"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "ignoreEntities",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether to show the bounding box.\n",
					"key": "showboundingbox",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether it has been powered by redstone.\n",
					"key": "powered",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Chance for each block to stay.\n",
					"key": "integrity",
					"type": {
						"kind": "float"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Seed for the integrity random.\n",
					"key": "seed",
					"type": {
						"kind": "long",
						"attributes": [
							{
								"name": "random"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether to show invisible blocks inside the bounding box.\n",
					"key": "showair",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::vault::<anonymous 0>": {
			"kind": "struct",
			"fields": []
		},
		"::java::server::world::block::vault::Config": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Item required to open the vault.\r\n",
					"key": "key_item",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemStack"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Defaults to \"minecraft:chests/trial_chambers/reward\".\r\n",
					"key": "loot_table",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "loot_table"
									}
								}
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::vault::ServerData": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Ticks until the loot table is ran again to update the display item.\r\n",
					"key": "state_updating_resumes_at",
					"type": {
						"kind": "long"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "When a player is in this list they can no longer open the vault, but other players can.\r\n",
					"key": "rewarded_players",
					"type": {
						"kind": "list",
						"item": {
							"kind": "int_array",
							"lengthRange": {
								"kind": 0,
								"min": 4,
								"max": 4
							}
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Items that are being ejected from the vault when it is opened. As each item is ejected, it is removed from this list, before ejection, it is previewed as the `display_item`.\r\n",
					"key": "items_to_eject",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemStack"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Number of items that the loot table started off the opening with, does not change while items are ejected.\r\n",
					"key": "total_ejections_needed",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::vault::SharedData": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Item that is displayed to players when they are in range of the vault.\r\n",
					"key": "display_item",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemStack"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "connected_players",
					"type": {
						"kind": "list",
						"item": {
							"kind": "int_array",
							"lengthRange": {
								"kind": 0,
								"min": 4,
								"max": 4
							}
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::block::vault::Vault": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "server_data",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"desc": "Ticks until the loot table is ran again to update the display item.\r\n",
								"key": "state_updating_resumes_at",
								"type": {
									"kind": "long"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"desc": "When a player is in this list they can no longer open the vault, but other players can.\r\n",
								"key": "rewarded_players",
								"type": {
									"kind": "list",
									"item": {
										"kind": "int_array",
										"lengthRange": {
											"kind": 0,
											"min": 4,
											"max": 4
										}
									}
								},
								"optional": true
							},
							{
								"kind": "pair",
								"desc": "Items that are being ejected from the vault when it is opened. As each item is ejected, it is removed from this list, before ejection, it is previewed as the `display_item`.\r\n",
								"key": "items_to_eject",
								"type": {
									"kind": "list",
									"item": {
										"kind": "reference",
										"path": "::java::server::world::item::ItemStack"
									}
								},
								"optional": true
							},
							{
								"kind": "pair",
								"desc": "Number of items that the loot table started off the opening with, does not change while items are ejected.\r\n",
								"key": "total_ejections_needed",
								"type": {
									"kind": "int"
								},
								"optional": true
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "config",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"desc": "Item required to open the vault.\r\n",
								"key": "key_item",
								"type": {
									"kind": "reference",
									"path": "::java::server::world::item::ItemStack"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"desc": "Defaults to \"minecraft:chests/trial_chambers/reward\".\r\n",
								"key": "loot_table",
								"type": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "loot_table"
												}
											}
										}
									]
								},
								"optional": true
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "When a player is in range of the vault, the same display item will be shown to all players.\r\n\nThis is also used for the items that are being ejected from the vault.\r\n",
					"key": "shared_data",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "struct",
								"fields": []
							},
							{
								"kind": "struct",
								"fields": [
									{
										"kind": "pair",
										"desc": "Item that is displayed to players when they are in range of the vault.\r\n",
										"key": "display_item",
										"type": {
											"kind": "reference",
											"path": "::java::server::world::item::ItemStack"
										},
										"optional": true
									},
									{
										"kind": "pair",
										"key": "connected_players",
										"type": {
											"kind": "list",
											"item": {
												"kind": "int_array",
												"lengthRange": {
													"kind": 0,
													"min": 4,
													"max": 4
												}
											}
										},
										"optional": true
									}
								]
							}
						]
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::server::world::entity::AnyEntity": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "The ID of this entity. Not present on player entities.\n",
					"key": "id",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "entity_type"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"id"
								]
							}
						],
						"registry": "minecraft:entity"
					}
				}
			]
		},
		"::java::server::world::entity::area_effect_cloud::AreaEffectCloud": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::EntityBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Number of ticks it has existed.\n\nControls when it will despawn; when greater than `Duration + WaitTime`.\n",
					"key": "Age",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Color of the particles.\n\ncalculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive\n",
					"key": "Color",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Maximum number of ticks until it will disappear after `WaitTime` is done\n",
					"key": "Duration",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Number of ticks until the effects are reapplied.\n",
					"key": "ReapplicationDelay",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Number of ticks until it appears.\n",
					"key": "WaitTime",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Amount the duration changes when it is active.\n",
					"key": "DurationOnUse",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Upper bits of the owner's UUID.\n",
					"key": "OwnerUUIDMost",
					"type": {
						"kind": "long"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Lower bits of the owner's UUID.\n",
					"key": "OwnerUUIDLeast",
					"type": {
						"kind": "long"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "uuid"
						},
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"key": "Owner",
					"type": {
						"kind": "int_array",
						"lengthRange": {
							"kind": 0,
							"min": 4,
							"max": 4
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Radius of the particles & effect applications.\n",
					"key": "Radius",
					"type": {
						"kind": "float"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Change in the radius when it is used.\n",
					"key": "RadiusOnUse",
					"type": {
						"kind": "float"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Change in the radius per tick.\n",
					"key": "RadiusPerTick",
					"type": {
						"kind": "float"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Particle the area effect cloud displays.\n",
					"key": "Particle",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::server::util::particle::Particle",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"desc": "Default potion effect.\n",
					"key": "Potion",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "potion"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"desc": "Potion effects that get applied on use.\n",
					"key": "Effects",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::util::effect::MobEffectInstance"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"key": "potion_contents",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "static",
								"value": "potion_contents"
							}
						],
						"registry": "minecraft:data_component"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::boat::Boat": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::EntityBase"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						}
					],
					"desc": "Wood type of this boat\n",
					"key": "Type",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::boat::BoatType"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::boat::BoatType": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Oak",
					"value": "oak"
				},
				{
					"identifier": "Spruce",
					"value": "spruce"
				},
				{
					"identifier": "Birch",
					"value": "birch"
				},
				{
					"identifier": "Jungle",
					"value": "jungle"
				},
				{
					"identifier": "Acacia",
					"value": "acacia"
				},
				{
					"identifier": "DarkOak",
					"value": "dark_oak"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"identifier": "Mangrove",
					"value": "mangrove"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19.3"
								}
							}
						}
					],
					"identifier": "Bamboo",
					"value": "bamboo"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19.4"
								}
							}
						}
					],
					"identifier": "Cherry",
					"value": "cherry"
				}
			]
		},
		"::java::server::world::entity::boat::ChestBoat": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::boat::Boat"
					}
				},
				{
					"kind": "pair",
					"desc": "Loot table that will populate this chest boat.\n",
					"key": "LootTable",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "loot_table"
											}
										},
										"empty": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "allowed"
											}
										}
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Seed of the loot table.\n",
					"key": "LootTableSeed",
					"type": {
						"kind": "long",
						"attributes": [
							{
								"name": "random"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Slots from 0 to 26.\n",
					"key": "Items",
					"type": {
						"kind": "list",
						"item": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::server::util::inventory::SlottedItem"
							},
							"typeArgs": [
								{
									"kind": "byte",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 26
									}
								}
							]
						},
						"lengthRange": {
							"kind": 0,
							"min": 0,
							"max": 27
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::display::AxisAngle": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Local position of the axis in [x, y, z].\n",
					"key": "axis",
					"type": {
						"kind": "list",
						"item": {
							"kind": "float"
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					}
				},
				{
					"kind": "pair",
					"desc": "Angle to rotate around axis in radians.\n",
					"key": "angle",
					"type": {
						"kind": "float"
					}
				}
			]
		},
		"::java::server::world::entity::display::Billboard": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Fixed",
					"value": "fixed"
				},
				{
					"identifier": "Vertical",
					"value": "vertical"
				},
				{
					"identifier": "Horizontal",
					"value": "horizontal"
				},
				{
					"identifier": "Center",
					"value": "center"
				}
			]
		},
		"::java::server::world::entity::display::BlockDisplay": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::display::DisplayBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Block state to display.\n\nDoes display most block entities (eg. Chests, Beds, Furnaces, etc).\n\nDoes not display specially rendered block entities (eg. The bell in a bell block, an end gateway, the book on an enchantment table, a banner, a sign, etc).\n",
					"key": "block_state",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::block_state::BlockState"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::display::Brightness": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Value of skylight.\n",
					"key": "sky",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 15
						}
					}
				},
				{
					"kind": "pair",
					"desc": "Value of block light.\n",
					"key": "block",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 15
						}
					}
				}
			]
		},
		"::java::server::world::entity::display::DecomposedTransformation": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Translation in [x, y, z].\n",
					"key": "translation",
					"type": {
						"kind": "list",
						"item": {
							"kind": "float"
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					}
				},
				{
					"kind": "pair",
					"desc": "Using this rotation is enough for most transformations.\n",
					"key": "left_rotation",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::display::Rotation"
					}
				},
				{
					"kind": "pair",
					"desc": "For more complex transformations.\n",
					"key": "right_rotation",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::display::Rotation"
					}
				},
				{
					"kind": "pair",
					"desc": "Scale in [x, y, z].\n",
					"key": "scale",
					"type": {
						"kind": "list",
						"item": {
							"kind": "float"
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					}
				}
			],
			"attributes": [
				{
					"name": "canonical"
				}
			]
		},
		"::java::server::world::entity::display::DisplayBase": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::EntityBase"
					}
				},
				{
					"kind": "pair",
					"desc": " Transformation applied to model (after normal entity orientation). Defaults to identity. Interpolated.\n\n For an easy GUI, check out [Misode's tool](https://misode.github.io/transformation/).\n\n\n\n The value is stored in decomposed object form for interpolation & ease-of-use,\n\n Supports storing a non-canonical matrix form describing a row-major matrix, is automatically decomposed by the game with a performance cost.\n\n\n\n The matrix takes the following form:\n\n ```js\n\n [ \n\n \ts0, s1, s2, tx,\n\n \ts3, s4, s5, ty,\n\n \ts6, s7, s8, tz,\n\n \ti0, i1, i2, w\n\n ]\n\n ```\n\n Where:\n\n  - `i0`-`i2`: Ignored values, these can be anything, but the game will ignore the values.\n\n  - `w`: This value is used as a divisor of all other values (except `i0`-`i2`). i.e. all the other values get divided by `w` before doing any further calculations.\n\n  - `tx`, `ty`, `tz`: Translation value, this is used directly as the `transformation.translation` after dividing by `w`. i.e. `transformation:{translation:[tx/w, ty/w, tz/w]}`.\n\n  - `s0`-`s8`: After dividing each element by `w`, this top left 3x3 of the matrix is passed through the [Singular Value Decomposition](https://en.wikipedia.org/wiki/Singular_value_decomposition) algorithm to extract the `transformation.left_rotation`, `transformation.scale`, and `transformation.right_rotation`. The exact values of this decomposition are difficult to predict.\n",
					"key": "transformation",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "struct",
								"fields": [
									{
										"kind": "pair",
										"desc": "Translation in [x, y, z].\n",
										"key": "translation",
										"type": {
											"kind": "list",
											"item": {
												"kind": "float"
											},
											"lengthRange": {
												"kind": 0,
												"min": 3,
												"max": 3
											}
										}
									},
									{
										"kind": "pair",
										"desc": "Using this rotation is enough for most transformations.\n",
										"key": "left_rotation",
										"type": {
											"kind": "reference",
											"path": "::java::server::world::entity::display::Rotation"
										}
									},
									{
										"kind": "pair",
										"desc": "For more complex transformations.\n",
										"key": "right_rotation",
										"type": {
											"kind": "reference",
											"path": "::java::server::world::entity::display::Rotation"
										}
									},
									{
										"kind": "pair",
										"desc": "Scale in [x, y, z].\n",
										"key": "scale",
										"type": {
											"kind": "list",
											"item": {
												"kind": "float"
											},
											"lengthRange": {
												"kind": 0,
												"min": 3,
												"max": 3
											}
										}
									}
								],
								"attributes": [
									{
										"name": "canonical"
									}
								]
							},
							{
								"kind": "union",
								"members": [
									{
										"kind": "list",
										"item": {
											"kind": "float"
										},
										"lengthRange": {
											"kind": 0,
											"min": 16,
											"max": 16
										}
									}
								]
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Size of shadow. Defaults to 0 (no shadow). Interpolated.\n",
					"key": "shadow_radius",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Strength of the shadow. Controls the opacity of the shadow as a function of distance to block below. Defaults to 1. Interpolated.\n",
					"key": "shadow_strength",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Ticks after the next client tick to wait until starting the interpolation.\n\nInfo:\n\nAll interpolated properties are part of a single interpolation set.\n\nAny update to an interpolated property will cause all values of the interpolation set to be saved as \"current\".\n\n - Data command executions that do not change value of property (even if it's present in NBT) do not count as updates.\n\n - Updates are synchronized to clients at most once per tick, so multiple updates within command will still count as single update.\n\nPrevious current values are saved as \"previous\".\n\nIf interpolation is enabled, entity will transition between \"previous\" and \"current\" values over time.\n\n`interpolation_duration` must be set every time an interpolatable property is updated to cause interpolation.\n\nNegative values are allowed, will cause an instant jump to the subtracted duration value, then interpolation will continue as normal.\n",
					"key": "start_interpolation",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Ticks the interpolation should take to complete.\n",
					"key": "interpolation_duration",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.2"
								}
							}
						}
					],
					"desc": "How long in game ticks the entity takes to interpolate from it's starting location to it's destination when teleported. Defaults to 0 (no interpolation).\n",
					"key": "teleport_duration",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 59
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Controls if model should pivot to face player when rendered. Defaults to `fixed`.\n",
					"key": "billboard",
					"type": {
						"kind": "enum",
						"enumKind": "string",
						"values": [
							{
								"identifier": "Fixed",
								"value": "fixed"
							},
							{
								"identifier": "Vertical",
								"value": "vertical"
							},
							{
								"identifier": "Horizontal",
								"value": "horizontal"
							},
							{
								"identifier": "Center",
								"value": "center"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "When defined, overrides light values used for rendering. Omitted by default (which means rendering uses values from entity position).\n",
					"key": "brightness",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"desc": "Value of skylight.\n",
								"key": "sky",
								"type": {
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 15
									}
								}
							},
							{
								"kind": "pair",
								"desc": "Value of block light.\n",
								"key": "block",
								"type": {
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 15
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Maximum view range of this entity. Actual distance depends on client-side render distance and entity distance scaling. Default value 1.0 (roughly the same as fireball).\n",
					"key": "view_range",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Describe width of culling bounding box.\n\nBounding box spans vertically y to y+height and horizontally width/2 in all directions from entity position.\n\nIf field is set to 0, culling is disabled. Defaults to 0.\n",
					"key": "width",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Describe height of culling bounding box.\n\nBounding box spans vertically y to y+height and horizontally width/2 in all directions from entity position.\n\nIf field is set to 0, culling is disabled. Defaults to 0.\n",
					"key": "height",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Override glow border color. If field is set to 0, uses team color. Defaults to 0.\n\nCalculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.\n",
					"key": "glow_color_override",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "literal",
								"value": {
									"kind": "int",
									"value": 0
								}
							},
							{
								"kind": "int",
								"attributes": [
									{
										"name": "color",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "composite_rgb"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::display::ItemDisplay": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::display::DisplayBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Item stack to display.\n",
					"key": "item",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemStack"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Describes item model transform applied to item (as defined in `display` section in model JSON). Defaults to `fixed`.\n",
					"key": "item_display",
					"type": {
						"kind": "reference",
						"path": "::java::assets::model::ItemTransformType"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::display::Rotation": {
			"kind": "union",
			"members": [
				{
					"kind": "list",
					"item": {
						"kind": "float"
					},
					"lengthRange": {
						"kind": 0,
						"min": 4,
						"max": 4
					}
				},
				{
					"kind": "reference",
					"path": "::java::server::world::entity::display::AxisAngle"
				}
			]
		},
		"::java::server::world::entity::display::text::TextAlignment": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Center",
					"value": "center"
				},
				{
					"identifier": "Left",
					"value": "left"
				},
				{
					"identifier": "Right",
					"value": "right"
				}
			]
		},
		"::java::server::world::entity::display::text::TextDisplay": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::display::DisplayBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Text to display. Components are resolved with the executor set to the display entity and the position set to `0 0 0`.\n",
					"key": "text",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "text_component"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Line width in pixels used to split lines (note: new line can be also added with \\n characters). Defaults to 200.\n",
					"key": "line_width",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Opacity (alpha component) of rendered text. Defaults to 255. Interpolated.\n",
					"key": "text_opacity",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 255
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Color of background. Includes alpha channel. Defaults to 0x40000000. Interpolated.\n\nCalculated as `ALPHA << 24 | RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.\n",
					"key": "background",
					"type": {
						"kind": "int",
						"attributes": [
							{
								"name": "color",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "composite_argb"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "If true, overrides `background` & rendering uses default text background color (same as in chat). Defaults to false.\n",
					"key": "default_background",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Should text be displayed with shadow. Defaults to false.\n",
					"key": "shadow",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Should text be visible through blocks. Defaults to false.\n",
					"key": "see_through",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "How text should be aligned. Defaults to `center`.\n\nWill log an error when not specified, see [MC-261036](https://bugs.mojang.com/browse/MC-261036).\n",
					"key": "alignment",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::display::text::TextAlignment"
					}
				}
			]
		},
		"::java::server::world::entity::end_crystal::BeamTarget": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "X",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Y",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Z",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::end_crystal::EvokerFangs": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::EntityBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether to show the base of the end crystal.\n",
					"key": "ShowBottom",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"desc": "Coordinates that the beam is pointing to\n",
					"key": "BeamTarget",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::end_crystal::BeamTarget"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"desc": "Coordinates that the beam is pointing to\n",
					"key": "beam_target",
					"type": {
						"kind": "int_array",
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::EntityBase": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "Pos",
					"type": {
						"kind": "list",
						"item": {
							"kind": "double"
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Motion",
					"type": {
						"kind": "list",
						"item": {
							"kind": "double"
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Rotation in [y-rotation, x-rotation]\n",
					"key": "Rotation",
					"type": {
						"kind": "list",
						"item": {
							"kind": "float"
						},
						"lengthRange": {
							"kind": 0,
							"min": 2,
							"max": 2
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "How far the entity has fallen.\n",
					"key": "FallDistance",
					"type": {
						"kind": "float"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Ticks of fire left, or if negative, ticks until the entity starts to burn.\n",
					"key": "Fire",
					"type": {
						"kind": "short"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Ticks of air left.\n",
					"key": "Air",
					"type": {
						"kind": "short"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"desc": "Whether the entity has visual fire.\n",
					"key": "HasVisualFire",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the entity is on the ground.\n",
					"key": "OnGround",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the entity should be effected by gravity.\n",
					"key": "NoGravity",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the entity should take damage.\n",
					"key": "Invulnerable",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "How long until the entity can go through a nether portal.\n",
					"key": "PortalCooldown",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Upper bits of the entity's UUID.\n",
					"key": "UUIDMost",
					"type": {
						"kind": "long"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Lower bits of the entity's UUID.\n",
					"key": "UUIDLeast",
					"type": {
						"kind": "long"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "uuid"
						},
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"key": "UUID",
					"type": {
						"kind": "int_array",
						"lengthRange": {
							"kind": 0,
							"min": 4,
							"max": 4
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "CustomName",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "text_component"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the custom name should always be visible.\n",
					"key": "CustomNameVisible",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the entity should make any sound.\n",
					"key": "Silent",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Passengers on the entity.\n",
					"key": "Passengers",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the entity should glow.\n",
					"key": "Glowing",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Labelling tags on the entity.\n",
					"key": "Tags",
					"type": {
						"kind": "list",
						"item": {
							"kind": "string",
							"attributes": [
								{
									"name": "tag"
								}
							]
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"desc": "Ticks that this entity has been freezing. Although this tag is defined for all entities,\n\nit is actually only used by mobs that are not in the `freeze_immune_entity_types` entity type tag.\n\nThis increases by one every tick the entity is in powdered snow, and decreases by two when it's out of it.\n",
					"key": "TicksFrozen",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::evoker_fangs::EvokerFangs": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::EntityBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Ticks until the fangs pop out of the ground.\n",
					"key": "Warmup",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "uuid"
						}
					],
					"key": "Owner",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::server::world::entity::evoker_fangs::Owner",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.16"
											}
										}
									}
								]
							},
							{
								"kind": "int_array",
								"lengthRange": {
									"kind": 0,
									"min": 4,
									"max": 4
								},
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.16"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::evoker_fangs::Owner": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Upper bits of the owner's UUID.\n",
					"key": "OwnerUUIDMost",
					"type": {
						"kind": "long"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Lower bits of the owner's UUID.\n",
					"key": "OwnerUUIDLeast",
					"type": {
						"kind": "long"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::experience_orb::ExperienceOrb": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::EntityBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Ticks that it has existed.\n",
					"key": "Age",
					"type": {
						"kind": "short"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Health",
					"type": {
						"kind": "short"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Amount of experience it will give.\n",
					"key": "Value",
					"type": {
						"kind": "short"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"desc": "Remaining number of times that the orb can be picked up.\n\nWhen the orb is picked up, the value decreases by 1.\n\nWhen multiple orbs are merged, their values are added up to result orb.\n\nWhen the value reaches 0, the orb is depleted.\n",
					"key": "Count",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::eye_of_ender::EyeOfEnder": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::EntityBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Item to render as\n",
					"key": "Item",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemStack"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::falling_block::FallingBlock": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::EntityBase"
					}
				},
				{
					"kind": "pair",
					"desc": "NBT data for the placed block.\n",
					"key": "TileEntityData",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"BlockState",
									"Name"
								]
							}
						],
						"registry": "minecraft:block"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Block state for the placed block.\n",
					"key": "BlockState",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::BlockState"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Ticks it has existed.\n",
					"key": "Time",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether it should drop as a block when destroyed.\n",
					"key": "DropItem",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether this it should hurt entities.\n",
					"key": "HurtEntities",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Maximum damage it should deal.\n",
					"key": "FallHurtMax",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Damage multiplier.\n",
					"key": "FallHurtAmount",
					"type": {
						"kind": "float"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20"
								}
							}
						}
					],
					"desc": "Whether the block should be destroyed instead of placed after landing on a solid block.\n\nWhen `true`, the block is not dropped as an item, even if the DropItem tag is set to `true`.\n\nHowever, if the entity is deleted due to its Time value being too high, this tag is ignored and an item is dropped depending on the `DropItem` tag.\n\nDefaults to `1` for falling suspicious sand and suspicious gravel, and `0` for the other vanilla falling blocks and any summoned falling block.\n",
					"key": "CancelDrop",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::firework_rocket::FireWorkRocket": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::EntityBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Ticks it has existed.\n",
					"key": "Life",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Ticks it will exist.\n",
					"key": "LifeTime",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether it should move at an angle.\n",
					"key": "ShotAtAngle",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "FireworksItem",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemStack"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::interaction::Action": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "uuid"
						}
					],
					"key": "player",
					"type": {
						"kind": "int_array",
						"lengthRange": {
							"kind": 0,
							"min": 4,
							"max": 4
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Game tick of when the event occured.\n",
					"key": "timestamp",
					"type": {
						"kind": "long",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::interaction::Interaction": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::EntityBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Cube hitbox width centered on the entity. Negative values are effectively `| x |`.\n",
					"key": "width",
					"type": {
						"kind": "float"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Cube hitbox height stretching up from the entity position. Negative values stretch the hitbox down.\n",
					"key": "height",
					"type": {
						"kind": "float"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether an action should trigger a response. Defaults to false.\n\nResponse:\n\nAttack - When true, the default attack sound is played.\n\nInteraction - When true, the player's arm swings.\n",
					"key": "response",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Record of last attack (left click) event, can be updated every tick (no invulnerability frames).\n",
					"key": "attack",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::interaction::Action"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Record of last interaction (use; right click) event, can be updated every tick, if the player is holding the key it updates every 3 ticks.\n",
					"key": "interaction",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::interaction::Action"
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.19.4"
						}
					}
				}
			]
		},
		"::java::server::world::entity::item_frame::Facing": {
			"kind": "enum",
			"enumKind": "byte",
			"values": [
				{
					"identifier": "Down",
					"value": 0
				},
				{
					"identifier": "Up",
					"value": 1
				},
				{
					"identifier": "North",
					"value": 2
				},
				{
					"identifier": "South",
					"value": 3
				},
				{
					"identifier": "West",
					"value": 4
				},
				{
					"identifier": "East",
					"value": 5
				}
			]
		},
		"::java::server::world::entity::item_frame::ItemFrame": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::EntityBase"
					}
				},
				{
					"kind": "pair",
					"key": "TileX",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "TileY",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "TileZ",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Direction it is facing.\n",
					"key": "Facing",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::item_frame::Facing"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Item",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemStack"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Chance the item has to drop.\n",
					"key": "ItemDropChance",
					"type": {
						"kind": "float"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Rotation of the item.\n",
					"key": "ItemRotation",
					"type": {
						"kind": "byte",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 7
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Whether the item frame should be invisible.\n\nThe item inside the frame is not effected.\n",
					"key": "Invisible",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Whether the item frame should not be able to be broken and should disallow the item to be moved.\n",
					"key": "Fixed",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::item::Item": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::EntityBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Ticks it has existed.\n",
					"key": "Age",
					"type": {
						"kind": "short"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Health",
					"type": {
						"kind": "short"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Ticks until an entity can pick up this item.\n",
					"key": "PickupDelay",
					"type": {
						"kind": "short"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "uuid"
						}
					],
					"desc": "Only this entity can pick up the item.\n",
					"key": "Owner",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::server::world::entity::item::Uuid",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.16"
											}
										}
									}
								]
							},
							{
								"kind": "int_array",
								"lengthRange": {
									"kind": 0,
									"min": 4,
									"max": 4
								},
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.16"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "uuid"
						}
					],
					"desc": "Player who threw the item. Can be set and/or changed to any entity.\n",
					"key": "Thrower",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::server::world::entity::item::Uuid",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.16"
											}
										}
									}
								]
							},
							{
								"kind": "int_array",
								"lengthRange": {
									"kind": 0,
									"min": 4,
									"max": 4
								},
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.16"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Item",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemStack"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::item::Uuid": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Lower bits of the target player's UUID\n",
					"key": "L",
					"type": {
						"kind": "long"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Upper bits of the target player's UUID\n",
					"key": "M",
					"type": {
						"kind": "long"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::marker::<anonymous 0>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string",
						"attributes": [
							{
								"name": "dispatcher_key",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "mcdoc:marker_data"
									}
								}
							}
						]
					},
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									{
										"keyword": "key"
									}
								]
							}
						],
						"registry": "mcdoc:marker_data"
					}
				}
			]
		},
		"::java::server::world::entity::marker::Marker": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::EntityBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Any stored data\n",
					"key": "data",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": {
									"kind": "string",
									"attributes": [
										{
											"name": "dispatcher_key",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "mcdoc:marker_data"
												}
											}
										}
									]
								},
								"type": {
									"kind": "dispatcher",
									"parallelIndices": [
										{
											"kind": "dynamic",
											"accessor": [
												{
													"keyword": "key"
												}
											]
										}
									],
									"registry": "mcdoc:marker_data"
								}
							}
						]
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.17"
						}
					}
				}
			]
		},
		"::java::server::world::entity::minecart::ChestMinecart": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::minecart::Minecart"
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::minecart::ContainerMinecart"
					}
				},
				{
					"kind": "pair",
					"desc": "Slots from 0 to 26.\n",
					"key": "Items",
					"type": {
						"kind": "list",
						"item": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::server::util::SlottedItem"
							},
							"typeArgs": [
								{
									"kind": "byte",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 26
									}
								}
							]
						},
						"lengthRange": {
							"kind": 0,
							"min": 0,
							"max": 27
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::minecart::CommandBlockMinecart": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::minecart::Minecart"
					}
				},
				{
					"kind": "pair",
					"key": "Command",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "command",
								"value": {
									"kind": "tree",
									"values": {
										"slash": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "allowed"
											}
										},
										"empty": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "allowed"
											}
										},
										"max_length": {
											"kind": "literal",
											"value": {
												"kind": "int",
												"value": 32500
											}
										}
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Success count of the last command.\n",
					"key": "SuccessCount",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Output of the last command.\n",
					"key": "LastOutput",
					"type": {
						"kind": "string"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether to record command output.\n",
					"key": "TrackOutput",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::minecart::ContainerMinecart": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Loot table that will populate this minecart.\n",
					"key": "LootTable",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "loot_table"
											}
										},
										"empty": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "allowed"
											}
										}
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Seed of the loot table.\n",
					"key": "LootTableSeed",
					"type": {
						"kind": "long",
						"attributes": [
							{
								"name": "random"
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::minecart::FurnaceMinecart": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::minecart::Minecart"
					}
				},
				{
					"kind": "pair",
					"desc": "Acceleration in x axis.\n",
					"key": "PushX",
					"type": {
						"kind": "double"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Acceleration in z axis.\n",
					"key": "PushZ",
					"type": {
						"kind": "double"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Ticks until the fuel runs out.\n",
					"key": "Fuel",
					"type": {
						"kind": "short"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::minecart::HopperMinecart": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::minecart::Minecart"
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::minecart::ContainerMinecart"
					}
				},
				{
					"kind": "pair",
					"desc": "Slots from 0 to 4.\n",
					"key": "Items",
					"type": {
						"kind": "list",
						"item": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::server::util::SlottedItem"
							},
							"typeArgs": [
								{
									"kind": "byte",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 4
									}
								}
							]
						},
						"lengthRange": {
							"kind": 0,
							"min": 0,
							"max": 5
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Ticks until an item can be transferred.\n",
					"key": "TransferCooldown",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether it should pick up items.\n",
					"key": "Enabled",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::minecart::Minecart": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::EntityBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether to display a custom block.\n",
					"key": "CustomDisplayTile",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Custom block to display.\n\nOnly has effects when `CustomDisplayTile` is true.\n",
					"key": "DisplayState",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::BlockState"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Vertical offset of the custom block display.\n",
					"key": "DisplayOffset",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::minecart::SpawnerMinecart": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::minecart::Minecart"
					}
				},
				{
					"kind": "pair",
					"desc": "List of potential entities to place next.\n",
					"key": "SpawnPotentials",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::block::spawner::SpawnPotential"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Data for the next mob to place.\n\nWill be overwritten by `SpawnPotentials`.\n",
					"key": "SpawnData",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::server::world::entity::AnyEntity",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::server::world::block::spawner::SpawnerEntry",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Number of entities that will be placed.\n",
					"key": "SpawnCount",
					"type": {
						"kind": "short"
					}
				},
				{
					"kind": "pair",
					"desc": "Range that the spawned entities will be placed in.\n",
					"key": "SpawnRange",
					"type": {
						"kind": "short"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Ticks until the next spawn.\n",
					"key": "Delay",
					"type": {
						"kind": "short"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Minimum random delay for the next spawn.\n",
					"key": "MinSpawnDelay",
					"type": {
						"kind": "short"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Maximum random delay for the next spawn.\n",
					"key": "MaxSpawnDelay",
					"type": {
						"kind": "short"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Maximum number of entities nearby.\n",
					"key": "MaxNearbyEntities",
					"type": {
						"kind": "short"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Radius in blocks that a player has to be within to spawn entities.\n",
					"key": "RequiredPlayerRange",
					"type": {
						"kind": "short"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::minecart::TntMinecart": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::minecart::Minecart"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.4"
								}
							}
						}
					],
					"desc": "Ticks until it explodes.\n",
					"key": "TNTFuse",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.4"
								}
							}
						}
					],
					"desc": "Ticks until it explodes.\n",
					"key": "fuse",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						}
					],
					"key": "explosion_power",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 128
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.4"
								}
							}
						}
					],
					"desc": "Controls the amount of added damage depending on the speed of the minecart.\n",
					"key": "explosion_speed_factor",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 128
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::<anonymous 0>": {
			"kind": "struct",
			"fields": []
		},
		"::java::server::world::entity::mob::<anonymous 1>": {
			"kind": "struct",
			"fields": []
		},
		"::java::server::world::entity::mob::<anonymous 2>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "id",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "attribute_modifier"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "amount",
					"type": {
						"kind": "double"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "operation",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::attribute::AttributeOperation"
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.21"
						}
					}
				}
			]
		},
		"::java::server::world::entity::mob::<anonymous 3>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Has no real effect.\n",
					"key": "Name",
					"type": {
						"kind": "string"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Slot that the modifier is active in.\n",
					"key": "Slot",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::attribute::AttributeSlot"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Operation",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::attribute::LegacyOperation"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Change in the attribute.\n",
					"key": "Amount",
					"type": {
						"kind": "double"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Upper bits of the modifier's UUID.\n",
					"key": "UUIDMost",
					"type": {
						"kind": "long"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Lower bits of the modifier's UUID.\n",
					"key": "UUIDLeast",
					"type": {
						"kind": "long"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "uuid"
						},
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"key": "UUID",
					"type": {
						"kind": "int_array",
						"lengthRange": {
							"kind": 0,
							"min": 4,
							"max": 4
						}
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "until",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.21"
						}
					}
				}
			]
		},
		"::java::server::world::entity::mob::AgeableMob": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "The age of the mob in ticks. When negative, the mob is a baby. When 0 or above, the mob is an adult.\n\nIf this mob is breedable, when 0 or above, represents the number of ticks before it can breed again.\n",
					"key": "Age",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "A value of age assigned to this mob when it grows up.\n\nIncremented when a baby mob is fed.\n",
					"key": "ForcedAge",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::allay::Allay": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::MobBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether the allay can duplicate. This is set to false when the allay duplicates.\n",
					"key": "CanDuplicate",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Ticks until `CanDuplicate` is set to true. This is set to 6000 game ticks (5 minutes) when the allay duplicates.\n",
					"key": "DuplicationCooldown",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Items it has picked up. Note that the item given by the player is in\n\nthe allay's `HandItems[0]` tag, not here.\n",
					"key": "Inventory",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemStack"
						},
						"lengthRange": {
							"kind": 0,
							"min": 1,
							"max": 1
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Vibration game event listener.\n",
					"key": "listener",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::game_event::VibrationListener"
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.19"
						}
					}
				}
			]
		},
		"::java::server::world::entity::mob::armor_stand::<anonymous 0>": {
			"kind": "enum",
			"enumKind": "int",
			"values": [
				{
					"identifier": "HandAll",
					"value": 1
				},
				{
					"identifier": "BootsAll",
					"value": 2
				},
				{
					"identifier": "LeggingsAll",
					"value": 3
				},
				{
					"identifier": "ChestplateAll",
					"value": 4
				},
				{
					"identifier": "HelmetAll",
					"value": 5
				},
				{
					"identifier": "OffhandAll",
					"value": 6
				},
				{
					"identifier": "HandReplace",
					"value": 7
				},
				{
					"identifier": "BootsReplace",
					"value": 8
				},
				{
					"identifier": "LeggingsReplace",
					"value": 9
				},
				{
					"identifier": "ChestplateReplace",
					"value": 10
				},
				{
					"identifier": "HelmetReplace",
					"value": 11
				},
				{
					"identifier": "OffhandReplace",
					"value": 12
				},
				{
					"identifier": "HandPlace",
					"value": 13
				},
				{
					"identifier": "BootsPlace",
					"value": 14
				},
				{
					"identifier": "LeggingsPlace",
					"value": 15
				},
				{
					"identifier": "ChestplatePlace",
					"value": 16
				},
				{
					"identifier": "HelmetPlace",
					"value": 17
				},
				{
					"identifier": "OffhandPlace",
					"value": 18
				}
			]
		},
		"::java::server::world::entity::mob::armor_stand::ArmorStand": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::MobBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether it should be invisible.\n",
					"key": "Invisible",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether it has no hitbox.\n",
					"key": "Marker",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether it should have a no base plate.\n",
					"key": "NoBasePlate",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether it should show its arms.\n",
					"key": "ShowArms",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether it is small.\n",
					"key": "Small",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "bitfield",
							"value": {
								"kind": "tree",
								"values": {
									"0": {
										"kind": "enum",
										"enumKind": "int",
										"values": [
											{
												"identifier": "HandAll",
												"value": 1
											},
											{
												"identifier": "BootsAll",
												"value": 2
											},
											{
												"identifier": "LeggingsAll",
												"value": 3
											},
											{
												"identifier": "ChestplateAll",
												"value": 4
											},
											{
												"identifier": "HelmetAll",
												"value": 5
											},
											{
												"identifier": "OffhandAll",
												"value": 6
											},
											{
												"identifier": "HandReplace",
												"value": 7
											},
											{
												"identifier": "BootsReplace",
												"value": 8
											},
											{
												"identifier": "LeggingsReplace",
												"value": 9
											},
											{
												"identifier": "ChestplateReplace",
												"value": 10
											},
											{
												"identifier": "HelmetReplace",
												"value": 11
											},
											{
												"identifier": "OffhandReplace",
												"value": 12
											},
											{
												"identifier": "HandPlace",
												"value": 13
											},
											{
												"identifier": "BootsPlace",
												"value": 14
											},
											{
												"identifier": "LeggingsPlace",
												"value": 15
											},
											{
												"identifier": "ChestplatePlace",
												"value": 16
											},
											{
												"identifier": "HelmetPlace",
												"value": 17
											},
											{
												"identifier": "OffhandPlace",
												"value": 18
											}
										]
									}
								}
							}
						}
					],
					"desc": "A bitfield of the slots that cannot be used.\n",
					"key": "DisabledSlots",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Body part rotations.\n",
					"key": "Pose",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::armor_stand::Pose"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::armor_stand::Pose": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "Body",
					"type": {
						"kind": "list",
						"item": {
							"kind": "float"
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "LeftArm",
					"type": {
						"kind": "list",
						"item": {
							"kind": "float"
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "RightArm",
					"type": {
						"kind": "list",
						"item": {
							"kind": "float"
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "LeftLeg",
					"type": {
						"kind": "list",
						"item": {
							"kind": "float"
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "RightLeg",
					"type": {
						"kind": "list",
						"item": {
							"kind": "float"
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Head",
					"type": {
						"kind": "list",
						"item": {
							"kind": "float"
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::Attribute": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"key": "Name",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "union",
								"members": [
									{
										"kind": "reference",
										"path": "::java::server::util::attribute::AttributeName"
									},
									{
										"kind": "string"
									}
								],
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.16"
											}
										}
									}
								]
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.16"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "attribute"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"key": "Base",
					"type": {
						"kind": "double"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"desc": "Modifiers that act on it.\n",
					"key": "Modifiers",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::AttributeModifier"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"key": "id",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "attribute"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"key": "base",
					"type": {
						"kind": "double"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"key": "modifiers",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::AttributeModifier"
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::AttributeModifier": {
			"kind": "union",
			"members": [
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "id",
							"type": {
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "attribute_modifier"
											}
										}
									}
								]
							},
							"optional": true
						},
						{
							"kind": "pair",
							"key": "amount",
							"type": {
								"kind": "double"
							},
							"optional": true
						},
						{
							"kind": "pair",
							"key": "operation",
							"type": {
								"kind": "reference",
								"path": "::java::server::util::attribute::AttributeOperation"
							},
							"optional": true
						}
					],
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					]
				},
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"desc": "Has no real effect.\n",
							"key": "Name",
							"type": {
								"kind": "string"
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "Slot that the modifier is active in.\n",
							"key": "Slot",
							"type": {
								"kind": "reference",
								"path": "::java::server::util::attribute::AttributeSlot"
							},
							"optional": true
						},
						{
							"kind": "pair",
							"key": "Operation",
							"type": {
								"kind": "reference",
								"path": "::java::server::util::attribute::LegacyOperation"
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "Change in the attribute.\n",
							"key": "Amount",
							"type": {
								"kind": "double"
							},
							"optional": true
						},
						{
							"kind": "pair",
							"attributes": [
								{
									"name": "until",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "1.16"
										}
									}
								}
							],
							"desc": "Upper bits of the modifier's UUID.\n",
							"key": "UUIDMost",
							"type": {
								"kind": "long"
							},
							"optional": true
						},
						{
							"kind": "pair",
							"attributes": [
								{
									"name": "until",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "1.16"
										}
									}
								}
							],
							"desc": "Lower bits of the modifier's UUID.\n",
							"key": "UUIDLeast",
							"type": {
								"kind": "long"
							},
							"optional": true
						},
						{
							"kind": "pair",
							"attributes": [
								{
									"name": "uuid"
								},
								{
									"name": "since",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "1.16"
										}
									}
								}
							],
							"key": "UUID",
							"type": {
								"kind": "int_array",
								"lengthRange": {
									"kind": 0,
									"min": 4,
									"max": 4
								}
							},
							"optional": true
						}
					],
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					]
				}
			]
		},
		"::java::server::world::entity::mob::bat::Bat": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::MobBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether it is upside down.\n",
					"key": "BatFlags",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::BlockLeash": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "X coordiante of leash knot.\n",
					"key": "X",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Y coordiante of leash knot.\n",
					"key": "Y",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Z coordiante of leash knot.\n",
					"key": "Z",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::bogged::Bogged": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::MobBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether the mushrooms on this bogged have been sheared.\n",
					"key": "sheared",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::Brain": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "memories",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::memory::Memories"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::breedable::armadillo::Armadillo": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::Breedable"
					}
				},
				{
					"kind": "pair",
					"key": "state",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::armadillo::ArmadilloState"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "scute_time",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::server::world::entity::mob::breedable::armadillo::ArmadilloState": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Idle",
					"value": "idle"
				},
				{
					"identifier": "Rolling",
					"value": "rolling"
				},
				{
					"identifier": "Scared",
					"value": "scared"
				},
				{
					"identifier": "Unrolling",
					"value": "unrolling"
				}
			]
		},
		"::java::server::world::entity::mob::breedable::axolotl::Axolotl": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::Breedable"
					}
				},
				{
					"kind": "pair",
					"desc": "The variant of the axolotl.\n",
					"key": "Variant",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::axolotl::Variant"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "If this axolotl was released from a bucket.\n",
					"key": "FromBucket",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.17"
						}
					}
				}
			]
		},
		"::java::server::world::entity::mob::breedable::axolotl::Variant": {
			"kind": "enum",
			"enumKind": "int",
			"values": [
				{
					"identifier": "Lucy",
					"value": 0
				},
				{
					"identifier": "Wild",
					"value": 1
				},
				{
					"identifier": "Gold",
					"value": 2
				},
				{
					"identifier": "Cyan",
					"value": 3
				},
				{
					"identifier": "Blue",
					"value": 4
				}
			]
		},
		"::java::server::world::entity::mob::breedable::bee::Bee": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::Breedable"
					}
				},
				{
					"kind": "spread",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::NeutralMob"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"key": "HivePos",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::bee::HivePos"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"key": "hive_pos",
					"type": {
						"kind": "int_array",
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"desc": "Position of the flower the bee is circling\n",
					"key": "FlowerPos",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::bee::FlowerPos"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"desc": "Position of the flower the bee is circling\n",
					"key": "flower_pos",
					"type": {
						"kind": "int_array",
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the bee has nectar.\n",
					"key": "HasNectar",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the bee has stung an entity.\n",
					"key": "HasStung",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Ticks since the bee has pollinated a crop.\n",
					"key": "TicksSincePollination",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Ticks until the bee can enter its hive.\n",
					"key": "CannotEnterHiveTicks",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Crops grown since the bee has gathered nectar.\n",
					"key": "CropsGrownSincePollination",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Ticks the bee will be angry for.\n",
					"key": "Anger",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "uuid"
						}
					],
					"desc": "Player that has attacked the bee.\n",
					"key": "HurtBy",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.16"
											}
										}
									}
								]
							},
							{
								"kind": "int_array",
								"lengthRange": {
									"kind": 0,
									"min": 4,
									"max": 4
								},
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.16"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::breedable::bee::FlowerPos": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "X",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Y",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Z",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::breedable::bee::HivePos": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "X",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Y",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Z",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::breedable::Breedable": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::MobBase"
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::AgeableMob"
					}
				},
				{
					"kind": "pair",
					"desc": "Ticks until it stops searching for a mate.\n",
					"key": "InLove",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Lower bits of the UUID of the player that caused this mob to breed.\n",
					"key": "LoveCauseLeast",
					"type": {
						"kind": "long"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Upper bits of the UUID of the player that caused this mob to breed.\n",
					"key": "LoveCauseMost",
					"type": {
						"kind": "long"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						},
						{
							"name": "uuid"
						}
					],
					"desc": "Player that caused this mob to breed.\n",
					"key": "LoveCause",
					"type": {
						"kind": "int_array",
						"lengthRange": {
							"kind": 0,
							"min": 4,
							"max": 4
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::breedable::chicken::Chicken": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::Breedable"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether it is from a chicken jockey.\n\nIf true it will despawn and will drop more experience.\n",
					"key": "IsChickenJockey",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Time until it lays another egg.\n",
					"key": "EggLayTime",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::breedable::fox::Fox": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::Breedable"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "List of trusted players.\n",
					"key": "TrustedUUIDs",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::fox::TrustedUUID",
							"attributes": [
								{
									"name": "uuid"
								}
							]
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "List of trusted players.\n",
					"key": "Trusted",
					"type": {
						"kind": "list",
						"item": {
							"kind": "int_array",
							"lengthRange": {
								"kind": 0,
								"min": 4,
								"max": 4
							},
							"attributes": [
								{
									"name": "uuid"
								}
							]
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether it is sleeping.\n",
					"key": "Sleeping",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "The type of fox.\n",
					"key": "Type",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::fox::FoxType"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether it is sitting.\n",
					"key": "Sitting",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether it is crouching.\n",
					"key": "Crouching",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::breedable::fox::FoxType": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Red",
					"value": "red"
				},
				{
					"identifier": "Snow",
					"value": "snow"
				}
			]
		},
		"::java::server::world::entity::mob::breedable::fox::TrustedUUID": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Lower bits of the trusted player's UUID.\n",
					"key": "L",
					"type": {
						"kind": "long"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Upper bits of the trusted player's UUID.\n",
					"key": "M",
					"type": {
						"kind": "long"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::breedable::frog::Frog": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::Breedable"
					}
				},
				{
					"kind": "pair",
					"key": "variant",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "frog_variant"
									}
								}
							}
						]
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.19"
						}
					}
				}
			]
		},
		"::java::server::world::entity::mob::breedable::goat::Goat": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::Breedable"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"desc": "Whether it has its left horn.\n",
					"key": "HasLeftHorn",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"desc": "Whether it has its right horn.\n",
					"key": "HasRightHorn",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether it is a screaming goat.\n",
					"key": "IsScreamingGoat",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.17"
						}
					}
				}
			]
		},
		"::java::server::world::entity::mob::breedable::hoglin::Hoglin": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::Breedable"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether it will not transform to a zoglin when it is in the Overword.\n",
					"key": "IsImmuneToZombification",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether it cannot be hunted by piglins\n",
					"key": "CannotBeHunted",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "The number of ticks it has been in the overworld.\n",
					"key": "TimeInOverworld",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.16"
						}
					}
				}
			]
		},
		"::java::server::world::entity::mob::breedable::horse::Camel": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::horse::HorseBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether it is sitting.\n",
					"key": "IsSitting",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "The tick when it started changing its pose.\n",
					"key": "LastPoseTick",
					"type": {
						"kind": "long"
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.17"
						}
					}
				}
			]
		},
		"::java::server::world::entity::mob::breedable::horse::ChestedHorse": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::horse::HorseBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether it has a chest.\n",
					"key": "ChestedHorse",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Slots from 0 to 14.\n",
					"key": "Items",
					"type": {
						"kind": "list",
						"item": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::server::util::SlottedItem"
							},
							"typeArgs": [
								{
									"kind": "byte",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 14
									}
								}
							]
						},
						"lengthRange": {
							"kind": 0,
							"min": 0,
							"max": 15
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::breedable::horse::Horse": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::horse::HorseBase"
					}
				},
				{
					"kind": "pair",
					"key": "Variant",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::horse::HorseVariant"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::breedable::horse::HorseBase": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::Breedable"
					}
				},
				{
					"kind": "pair",
					"desc": "Unknown use.\n\nRemains `0` even if it was bred.\n",
					"key": "Bred",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether it is eating a haystack.\n",
					"key": "EatingHaystack",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether it has been tamed.\n",
					"key": "Tame",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Higher values make it easier to tame. Increases with feeding.\n",
					"key": "Temper",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 100
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Player who tamed it.\n",
					"key": "OwnerUUID",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "uuid"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						},
						{
							"name": "uuid"
						}
					],
					"desc": "Player who tamed it.\n",
					"key": "Owner",
					"type": {
						"kind": "int_array",
						"lengthRange": {
							"kind": 0,
							"min": 4,
							"max": 4
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "SaddleItem",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemStack"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::breedable::horse::HorseVariant": {
			"kind": "enum",
			"enumKind": "int",
			"values": [
				{
					"identifier": "White",
					"value": 0
				},
				{
					"identifier": "Creamy",
					"value": 1
				},
				{
					"identifier": "Chestnut",
					"value": 2
				},
				{
					"identifier": "Brown",
					"value": 3
				},
				{
					"identifier": "Black",
					"value": 4
				},
				{
					"identifier": "Gray",
					"value": 5
				},
				{
					"identifier": "DarkBrown",
					"value": 6
				}
			]
		},
		"::java::server::world::entity::mob::breedable::horse::SkeletonHorse": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::horse::HorseBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether it was spawned by a trap.\n",
					"key": "SkeletonTrap",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Ticks it has existed.\n",
					"key": "SkeletonTrapTime",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::breedable::llama::Llama": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::Breedable"
					}
				},
				{
					"kind": "pair",
					"desc": "Unknown use.\n\nRemains `0` even if it was bred.\n",
					"key": "Bred",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether it is grazing.\n",
					"key": "EatingHaystack",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether it has been tamed.\n",
					"key": "Tame",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Higher values make it easier to tame.\n\nIncreases with feeding.\n",
					"key": "Temper",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 100
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Player who tamed it.\n",
					"key": "OwnerUUID",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "uuid"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						},
						{
							"name": "uuid"
						}
					],
					"desc": "Player who tamed the horse.\n",
					"key": "Owner",
					"type": {
						"kind": "int_array",
						"lengthRange": {
							"kind": 0,
							"min": 4,
							"max": 4
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"desc": "Carpet decoration on its back.\n",
					"key": "DecorItem",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemStack"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether it has a chest.\n",
					"key": "ChestedHorse",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "List of slots, scales with `Strength`.\n",
					"key": "Items",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"Strength"
								]
							}
						],
						"registry": "minecraft:llama_strength"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Determines both the number of items it can carry and how likely it is for wolves to run away.\n",
					"key": "Strength",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1,
							"max": 5
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Variant",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::llama::LlamaVariant"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::breedable::llama::LlamaVariant": {
			"kind": "enum",
			"enumKind": "int",
			"values": [
				{
					"identifier": "Creamy",
					"value": 0
				},
				{
					"identifier": "White",
					"value": 1
				},
				{
					"identifier": "Brown",
					"value": 2
				},
				{
					"identifier": "Gray",
					"value": 3
				}
			]
		},
		"::java::server::world::entity::mob::breedable::llama::TraderLlama": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::llama::Llama"
					}
				},
				{
					"kind": "pair",
					"desc": "When it will despawn.\n",
					"key": "DespawnDelay",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::breedable::mooshroom::Mooshroom": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::Breedable"
					}
				},
				{
					"kind": "pair",
					"key": "Type",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::mooshroom::MooshroomType"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.2"
								}
							}
						}
					],
					"desc": "Effect that the mooshroom gives to suspicious stew.\n",
					"key": "EffectId",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::effect::EffectId"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.2"
								}
							}
						}
					],
					"desc": "Duration of the suspicious stew effect.\n",
					"key": "EffectDuration",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.2"
								}
							}
						}
					],
					"key": "stew_effects",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "static",
								"value": "suspicious_stew_effects"
							}
						],
						"registry": "minecraft:data_component"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::breedable::mooshroom::MooshroomType": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Red",
					"value": "red"
				},
				{
					"identifier": "Brown",
					"value": "brown"
				}
			]
		},
		"::java::server::world::entity::mob::breedable::ocelot::Ocelot": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::Breedable"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether it trusts players.\n",
					"key": "Trusting",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::breedable::panda::Gene": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Normal",
					"value": "normal"
				},
				{
					"identifier": "Lazy",
					"value": "lazy"
				},
				{
					"identifier": "Worried",
					"value": "worried"
				},
				{
					"identifier": "Playful",
					"value": "playful"
				},
				{
					"identifier": "Brown",
					"value": "brown"
				},
				{
					"identifier": "Weak",
					"value": "weak"
				},
				{
					"identifier": "Aggressive",
					"value": "aggressive"
				}
			]
		},
		"::java::server::world::entity::mob::breedable::panda::Panda": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::Breedable"
					}
				},
				{
					"kind": "pair",
					"desc": "Displayed gene.\n\nIf this gene is recessive and 'HiddenGene' is not the same, the panda will display the 'normal' gene.\n",
					"key": "MainGene",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::panda::Gene"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Hidden gene.\n",
					"key": "HiddenGene",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::panda::Gene"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::breedable::rabbit::Rabbit": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::Breedable"
					}
				},
				{
					"kind": "pair",
					"key": "RabbitType",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::rabbit::RabbitType"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Ticks down once a carrot crop is eaten\n",
					"key": "MoreCarrotTicks",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::breedable::rabbit::RabbitType": {
			"kind": "enum",
			"enumKind": "int",
			"values": [
				{
					"identifier": "Brown",
					"value": 0
				},
				{
					"identifier": "White",
					"value": 1
				},
				{
					"identifier": "Black",
					"value": 2
				},
				{
					"identifier": "BlackAndWhite",
					"value": 3
				},
				{
					"identifier": "Gold",
					"value": 4
				},
				{
					"identifier": "SaltAndPepper",
					"value": 5
				},
				{
					"identifier": "Killer",
					"value": 99
				}
			]
		},
		"::java::server::world::entity::mob::breedable::saddled::Saddled": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::Breedable"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether there is a saddle on it.\n",
					"key": "Saddle",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::breedable::sheep::Sheep": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::Breedable"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether it has been shorn.\n",
					"key": "Sheared",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Color",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::ColorByte"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::breedable::tamable::Cat": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::tamable::Tamable"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "CatType",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::tamable::CatType"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Collar color, present for stray cats.\n",
					"key": "CollarColor",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::ColorByte"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "variant",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "cat_variant"
									}
								}
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::breedable::tamable::CatType": {
			"kind": "enum",
			"enumKind": "int",
			"values": [
				{
					"identifier": "Invisible",
					"value": -1
				},
				{
					"identifier": "Tabby",
					"value": 0
				},
				{
					"identifier": "Tuxedo",
					"value": 1
				},
				{
					"identifier": "Red",
					"value": 2
				},
				{
					"identifier": "Siamese",
					"value": 3
				},
				{
					"identifier": "Shorthair",
					"value": 4
				},
				{
					"identifier": "Calico",
					"value": 5
				},
				{
					"identifier": "Persian",
					"value": 6
				},
				{
					"identifier": "Ragdoll",
					"value": 7
				},
				{
					"identifier": "White",
					"value": 8
				},
				{
					"identifier": "Jellie",
					"value": 9
				},
				{
					"identifier": "Black",
					"value": 10
				}
			]
		},
		"::java::server::world::entity::mob::breedable::tamable::Parrot": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::tamable::Tamable"
					}
				},
				{
					"kind": "pair",
					"key": "Variant",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::tamable::ParrotVariant"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::breedable::tamable::ParrotVariant": {
			"kind": "enum",
			"enumKind": "int",
			"values": [
				{
					"identifier": "RedBlue",
					"value": 0
				},
				{
					"identifier": "Blue",
					"value": 1
				},
				{
					"identifier": "Green",
					"value": 2
				},
				{
					"identifier": "YellowBlue",
					"value": 3
				},
				{
					"identifier": "Gray",
					"value": 4
				}
			]
		},
		"::java::server::world::entity::mob::breedable::tamable::Tamable": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::Breedable"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"key": "OwnerUUID",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "uuid"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						},
						{
							"name": "uuid"
						}
					],
					"key": "Owner",
					"type": {
						"kind": "int_array",
						"lengthRange": {
							"kind": 0,
							"min": 4,
							"max": 4
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the mob is sitting.\n",
					"key": "Sitting",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::breedable::tamable::Wolf": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::tamable::Tamable"
					}
				},
				{
					"kind": "spread",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::NeutralMob"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Whether it is angry.\n",
					"key": "Angry",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Collar color, present for wild wolfs.\n",
					"key": "CollarColor",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::ColorByte"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"key": "variant",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "wolf_variant"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"key": "body_armor_item",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemStack"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::breedable::turtle::Turtle": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::Breedable"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether it has an egg.\n",
					"key": "HasEgg",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "HomePosX",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "HomePosY",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "HomePosZ",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "X coordinate of its travel target.\n",
					"key": "TravelPosX",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Y coordinate of its travel target.\n",
					"key": "TravelPosY",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Z coordinate of its travel target.\n",
					"key": "TravelPosZ",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::breedable::villager::Gossip": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "Type",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::villager::GossipType"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Value",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Upper bits of the gossip target's UUID.\n",
					"key": "TargetMost",
					"type": {
						"kind": "long"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Lower bits of the gossip target's UUID.\n",
					"key": "TargetLeast",
					"type": {
						"kind": "long"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::breedable::villager::GossipType": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "MajorNegative",
					"value": "major_negative"
				},
				{
					"identifier": "MinorNegative",
					"value": "minor_negative"
				},
				{
					"identifier": "MajorPositive",
					"value": "major_positive"
				},
				{
					"identifier": "MinorPositive",
					"value": "minor_positive"
				},
				{
					"identifier": "Trading",
					"value": "trading"
				}
			]
		},
		"::java::server::world::entity::mob::breedable::villager::Offers": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Trades it has to offer.\n",
					"key": "Recipes",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::villager::Recipe"
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::breedable::villager::Recipe": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Whether it should reward experience for using this trade.\n",
					"key": "rewardExp",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Maximum number of uses for this trade before it has to restock.\n",
					"key": "maxUses",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Times this trade has been used since it last restocked.\n",
					"key": "uses",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "First item it buys.\n",
					"key": "buy",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemStack"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Second item it buys.\n",
					"key": "buyB",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemStack"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Item it sells.\n",
					"key": "sell",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemStack"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "XP it gains from the trade.\n",
					"key": "xp",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Multiplier on the demand price adjuster.\n",
					"key": "priceMultiplier",
					"type": {
						"kind": "float"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Modifier added to the original price of the first cost item.\n",
					"key": "specialPrice",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Price adjuster of the first cost item based on demand.\n",
					"key": "demand",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::breedable::villager::Villager": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::Breedable"
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::villager::VillagerBase"
					}
				},
				{
					"kind": "pair",
					"key": "VillagerData",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::villager::VillagerData"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "FoodLevel",
					"type": {
						"kind": "byte"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Gossips it has heard.\n",
					"key": "Gossips",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::villager::Gossip"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Tick of the last time it has restocked.\n",
					"key": "LastRestock",
					"type": {
						"kind": "long"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Tick of the last time its gossips have decreased in strength.\n",
					"key": "LastGossipDecay",
					"type": {
						"kind": "long"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Times it has restocked in the past ten minutes.\n",
					"key": "RestocksToday",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "XP it has, increases with trading.\n",
					"key": "Xp",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::breedable::villager::VillagerBase": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Slots from 0 to 7.\n",
					"key": "Inventory",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemStack"
						},
						"lengthRange": {
							"kind": 0,
							"min": 0,
							"max": 8
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Trade offers it has.\n",
					"key": "Offers",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::villager::Offers"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::breedable::villager::VillagerData": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Used for trading and badge rendering.\n",
					"key": "level",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "profession",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "villager_profession"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "villager_type"
									}
								}
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::breedable::villager::WanderingTrader": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::MobBase"
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::villager::VillagerBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Ticks until it despawns.\n",
					"key": "DespawnDelay",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"desc": "Where it is heading to.\n",
					"key": "WanderTarget",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::villager::WanderTarget"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"desc": "Where it is heading to.\n",
					"key": "wander_target",
					"type": {
						"kind": "int_array",
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::breedable::villager::WanderTarget": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "X",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Y",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Z",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::creaking::Creaking": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::MobBase"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.4"
								}
							}
						}
					],
					"desc": "The creaking heart block that this is linked to.\n",
					"key": "home_pos",
					"type": {
						"kind": "list",
						"item": {
							"kind": "int"
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.21.2"
						}
					}
				}
			]
		},
		"::java::server::world::entity::mob::creeper::Creeper": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::MobBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether it is being struck by lightning.\n",
					"key": "powered",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Radius of the explosion.\n",
					"key": "ExplosionRadius",
					"type": {
						"kind": "byte"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Ticks until it explodes.\n",
					"key": "Fuse",
					"type": {
						"kind": "short"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether it was lit with flint and steel.\n",
					"key": "ignited",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::dolphin::Dolphin": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::MobBase"
					}
				},
				{
					"kind": "spread",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						}
					],
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::AgeableMob"
					}
				},
				{
					"kind": "pair",
					"desc": "X coordinate of the treasure it leads to.\n",
					"key": "TreasurePosX",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Y coordinate of the treasure it leads to.\n",
					"key": "TreasurePosY",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Z coordinate of the treasure it leads to.\n",
					"key": "TreasurePosZ",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether it has gotten fish from a player.\n",
					"key": "GotFish",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Moistness level of the dolphin.\n\nSet to 2400 when the dolphin is in water or rain, otherwise decreases by 1 every tick.\n\nThe dolphin takes damage when level is at 0 or below.\n",
					"key": "Moistness",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::ender_dragon::DragonPhase": {
			"kind": "enum",
			"enumKind": "int",
			"values": [
				{
					"identifier": "Circling",
					"value": 0
				},
				{
					"identifier": "Strafing",
					"value": 1
				},
				{
					"identifier": "FlyingToPortal",
					"value": 2
				},
				{
					"identifier": "Landing",
					"value": 3
				},
				{
					"identifier": "TakingOff",
					"value": 4
				},
				{
					"identifier": "BreathAttack",
					"value": 5
				},
				{
					"identifier": "Landed",
					"value": 6
				},
				{
					"identifier": "Roar",
					"value": 7
				},
				{
					"identifier": "Charging",
					"value": 8
				},
				{
					"identifier": "Dying",
					"value": 9
				},
				{
					"identifier": "Hovering",
					"value": 10
				}
			]
		},
		"::java::server::world::entity::mob::ender_dragon::EnderDragon": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::MobBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Fighting phase it is in.\n",
					"key": "DragonPhase",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::ender_dragon::DragonPhase"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::enderman::Enderman": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::MobBase"
					}
				},
				{
					"kind": "spread",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::NeutralMob"
					}
				},
				{
					"kind": "pair",
					"desc": "Block it is carrying.\n",
					"key": "carriedBlockState",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::BlockState"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::endermite::Endermite": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::MobBase"
					}
				},
				{
					"kind": "pair",
					"desc": "How long it has existed.\n",
					"key": "Lifetime",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether enderman should attack it.\n",
					"key": "PlayerSpawned",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::fish::Fish": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::MobBase"
					}
				},
				{
					"kind": "pair",
					"desc": "If it was released from a bucket.\n",
					"key": "FromBucket",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::fish::Pufferfish": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::fish::Fish"
					}
				},
				{
					"kind": "pair",
					"desc": "How puffed it is.\n",
					"key": "PuffState",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::fish::PuffState"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::fish::PuffState": {
			"kind": "enum",
			"enumKind": "int",
			"values": [
				{
					"identifier": "Deflated",
					"value": 0
				},
				{
					"identifier": "HalfPuffed",
					"value": 1
				},
				{
					"identifier": "Puffed",
					"value": 2
				}
			]
		},
		"::java::server::world::entity::mob::fish::Salmon": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::fish::Fish"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						}
					],
					"desc": "The size variant of the salmon.\n",
					"key": "type",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::fish::SalmonType"
					}
				}
			]
		},
		"::java::server::world::entity::mob::fish::SalmonType": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Small",
					"value": "small"
				},
				{
					"identifier": "Medium",
					"value": "medium"
				},
				{
					"identifier": "Large",
					"value": "large"
				}
			]
		},
		"::java::server::world::entity::mob::fish::TropicalFish": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::fish::Fish"
					}
				},
				{
					"kind": "pair",
					"key": "Variant",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::ghast::Ghast": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::MobBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Explosion radius of fireballs that are shot from it.\n",
					"key": "ExplosionPower",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::glow_squid::GlowSquid": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::MobBase"
					}
				},
				{
					"kind": "spread",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						}
					],
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::AgeableMob"
					}
				},
				{
					"kind": "pair",
					"desc": "Ticks that it will wait before glowing.\n",
					"key": "DarkTicksRemaining",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.17"
						}
					}
				}
			]
		},
		"::java::server::world::entity::mob::iron_golem::IronGolem": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::MobBase"
					}
				},
				{
					"kind": "spread",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::NeutralMob"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether a player created it.\n",
					"key": "PlayerCreated",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::LeashOwner": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "UUID",
					"type": {
						"kind": "int_array",
						"lengthRange": {
							"kind": 0,
							"min": 4,
							"max": 4
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::LivingEntity": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::EntityBase"
					}
				},
				{
					"kind": "pair",
					"key": "Health",
					"type": {
						"kind": "float"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "How much absorption health it has.\n",
					"key": "AbsorptionAmount",
					"type": {
						"kind": "float"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Timer since it has been damaged. Counts down to zero.\n",
					"key": "HurtTime",
					"type": {
						"kind": "short"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Ticks since it was last damaged, from its creation.\n",
					"key": "HurtByTimestamp",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Timer since it was marked as dead. Counts down to zero.\n",
					"key": "DeathTime",
					"type": {
						"kind": "short"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether it will glide when it falls.\n",
					"key": "FallFlying",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "X coordinate of where it is sleeping.\n",
					"key": "SleepingX",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Y coordinate of where it is sleeping.\n",
					"key": "SleepingY",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Z coordinate of where it is sleeping.\n",
					"key": "SleepingZ",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Brain",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "memories",
								"type": {
									"kind": "reference",
									"path": "::java::server::util::memory::Memories"
								},
								"optional": true
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"key": "Attributes",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::Attribute"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"key": "attributes",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::Attribute"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.2"
								}
							}
						}
					],
					"desc": "Active potion effects\n",
					"key": "ActiveEffects",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::util::effect::MobEffectInstance"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.2"
								}
							}
						}
					],
					"key": "active_effects",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::util::effect::MobEffectInstance"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether it should have an AI.\n",
					"key": "NoAI",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Team to join when it is spawned.\n",
					"key": "Team",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "team"
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::MobBase": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::LivingEntity"
					}
				},
				{
					"kind": "pair",
					"desc": "[main hand, offhand]\n",
					"key": "HandItems",
					"type": {
						"kind": "list",
						"item": {
							"kind": "union",
							"members": [
								{
									"kind": "reference",
									"path": "::java::server::world::item::ItemStack"
								},
								{
									"kind": "struct",
									"fields": []
								}
							]
						},
						"lengthRange": {
							"kind": 0,
							"min": 2,
							"max": 2
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "[feet, legs, body, head]\n",
					"key": "ArmorItems",
					"type": {
						"kind": "list",
						"item": {
							"kind": "union",
							"members": [
								{
									"kind": "reference",
									"path": "::java::server::world::item::ItemStack"
								},
								{
									"kind": "struct",
									"fields": []
								}
							]
						},
						"lengthRange": {
							"kind": 0,
							"min": 4,
							"max": 4
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Chance to drop the items it is holding, in [main hand, offhand].\n",
					"key": "HandDropChances",
					"type": {
						"kind": "list",
						"item": {
							"kind": "float"
						},
						"lengthRange": {
							"kind": 0,
							"min": 2,
							"max": 2
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Chance to drop the items it is wearing, in [feet, legs, body, head].\n",
					"key": "ArmorDropChances",
					"type": {
						"kind": "list",
						"item": {
							"kind": "float"
						},
						"lengthRange": {
							"kind": 0,
							"min": 4,
							"max": 4
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"desc": "Used for wolf armor & llama carpet decoration.\n",
					"key": "body_armor_item",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemStack"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"desc": "Chance to drop the item it is wearing.\n",
					"key": "body_armor_drop_chance",
					"type": {
						"kind": "float"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "DeathLootTable",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "loot_table"
											}
										},
										"empty": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "allowed"
											}
										}
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Seed for generating the death loot table.\n",
					"key": "DeathLootTableSeed",
					"type": {
						"kind": "long",
						"attributes": [
							{
								"name": "random"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether it can pick up loot.\n",
					"key": "CanPickUpLoot",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether it should not despawn naturally.\n",
					"key": "PersistenceRequired",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether it is left handed.\n",
					"key": "LeftHanded",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"desc": "What the leash is attached to.\n",
					"key": "Leash",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::server::world::entity::mob::UUIDLeash"
							},
							{
								"kind": "reference",
								"path": "::java::server::world::entity::mob::BlockLeash"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"desc": "What the leash is attached to.\n",
					"key": "leash",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "int_array",
								"lengthRange": {
									"kind": 0,
									"min": 3,
									"max": 3
								}
							},
							{
								"kind": "struct",
								"fields": [
									{
										"kind": "pair",
										"key": "UUID",
										"type": {
											"kind": "int_array",
											"lengthRange": {
												"kind": 0,
												"min": 4,
												"max": 4
											}
										},
										"optional": true
									}
								]
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::NeutralMob": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Ticks that it will be angry for.\n",
					"key": "AngerTime",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "uuid"
						}
					],
					"key": "AngryAt",
					"type": {
						"kind": "int_array",
						"lengthRange": {
							"kind": 0,
							"min": 4,
							"max": 4
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::phantom::Phantom": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::MobBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Approximate circle x coordinate.\n",
					"key": "AX",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Approximate circle y coordinate.\n",
					"key": "AY",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Approximate circle z coordinate.\n",
					"key": "AZ",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Size",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 64
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::piglin::Piglin": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::piglin::PiglinBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether it is a baby.\n",
					"key": "IsBaby",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether it does not hunt hoglins.\n",
					"key": "CannotHunt",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Inventory",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemStack"
						},
						"lengthRange": {
							"kind": 0,
							"min": 0,
							"max": 8
						}
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.16"
						}
					}
				}
			]
		},
		"::java::server::world::entity::mob::piglin::PiglinBase": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::MobBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether it will not transform to a zombified piglin when it is in the Overworld.\n",
					"key": "IsImmuneToZombification",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Ticks it has been in the overworld.\n",
					"key": "TimeInOverworld",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::player::Abilities": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Speed that the player walks at.\n",
					"key": "walkSpeed",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0.1,
							"max": 0.1
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Speed that the player flies at.\n",
					"key": "flySpeed",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0.05,
							"max": 0.05
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the player can fly.\n",
					"key": "mayfly",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the player is flying.\n",
					"key": "flying",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the player can only take damage from the void.\n",
					"key": "invulnerable",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the player may build.\n",
					"key": "mayBuild",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the player destroys blocks instantly.\n",
					"key": "instabuild",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::player::Dimension": {
			"kind": "enum",
			"enumKind": "int",
			"values": [
				{
					"identifier": "Nether",
					"value": -1
				},
				{
					"identifier": "Overworld",
					"value": 0
				},
				{
					"identifier": "End",
					"value": 1
				}
			]
		},
		"::java::server::world::entity::mob::player::EnderPearl": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "ender_pearl_dimension",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "dimension"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::AnyEntity"
					}
				}
			]
		},
		"::java::server::world::entity::mob::player::EnteredNetherPosition": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "x",
					"type": {
						"kind": "double"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "y",
					"type": {
						"kind": "double"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "z",
					"type": {
						"kind": "double"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::player::Gamemode": {
			"kind": "enum",
			"enumKind": "int",
			"values": [
				{
					"identifier": "Survival",
					"value": 0
				},
				{
					"identifier": "Creative",
					"value": 1
				},
				{
					"identifier": "Adventure",
					"value": 2
				},
				{
					"identifier": "Spectator",
					"value": 3
				}
			]
		},
		"::java::server::world::entity::mob::player::Player": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::LivingEntity"
					}
				},
				{
					"kind": "pair",
					"desc": "Version of the player NBT structure\n",
					"key": "DataVersion",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Dimension",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::server::world::entity::mob::player::Dimension",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.16"
											}
										}
									}
								]
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.16"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "dimension"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"desc": "Location of the player's last death.\n",
					"key": "LastDeathLocation",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::GlobalPos"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Game mode that the player is in.\n",
					"key": "playerGameType",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::player::Gamemode"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Previous game mode that the player was in.\n",
					"key": "previousPlayerGameType",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::player::Gamemode"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Score to display upon death.\n",
					"key": "Score",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Hotbar slot the player has selected.\n",
					"key": "SelectedItemSlot",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 8
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Item in the hotbar slot the player has selected.\n",
					"key": "SelectedItem",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::server::util::SlottedItem"
						},
						"typeArgs": [
							{
								"kind": "reference",
								"path": "::java::server::world::entity::mob::player::PlayerSlot"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Dimension of the player's respawn point.\n",
					"key": "SpawnDimension",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "dimension"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16.2"
								}
							}
						}
					],
					"desc": "The Y-rotation of the player's respawn point.\n",
					"key": "SpawnAngle",
					"type": {
						"kind": "float"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "X coordinate of the player's spawn point.\n",
					"key": "SpawnX",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Y coordinate of the player's spawn point.\n",
					"key": "SpawnY",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Z coordinate of the player's spawn point.\n",
					"key": "SpawnZ",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the player must spawn at the spawn point.\n",
					"key": "SpawnForced",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Ticks the player has been in bed.\n",
					"key": "SleepTimer",
					"type": {
						"kind": "short"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Level of the hunger bar.\n",
					"key": "foodLevel",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Rate at which the `foodSaturationLevel` depletes.\n",
					"key": "foodExhaustionLevel",
					"type": {
						"kind": "float"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Rate at which the hunger bar depletes.\n",
					"key": "foodSaturationLevel",
					"type": {
						"kind": "float"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Ticks until the player heals or takes starvation damage.\n",
					"key": "foodTickTimer",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Number of experience levels the player has.\n",
					"key": "XpLevel",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Percentage the experience bar is filled up.\n",
					"key": "XpP",
					"type": {
						"kind": "float"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Total experience the player has.\n",
					"key": "XpTotal",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Seed for enchantments.\n",
					"key": "XpSeed",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Inventory",
					"type": {
						"kind": "list",
						"item": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::server::util::SlottedItem"
							},
							"typeArgs": [
								{
									"kind": "reference",
									"path": "::java::server::world::entity::mob::player::PlayerSlot"
								}
							]
						},
						"lengthRange": {
							"kind": 0,
							"min": 0,
							"max": 41
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "The player's enderchest inventory.\n",
					"key": "EnderItems",
					"type": {
						"kind": "list",
						"item": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::server::util::SlottedItem"
							},
							"typeArgs": [
								{
									"kind": "byte",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 26
									}
								}
							]
						},
						"lengthRange": {
							"kind": 0,
							"min": 0,
							"max": 27
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Abilities of the player.\n",
					"key": "abilities",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::player::Abilities"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Position that the player entered the nether at.\n",
					"key": "enteredNetherPosition",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::player::EnteredNetherPosition"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Entity that the player is riding.\n",
					"key": "RootVehicle",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::player::RootVehicle"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Entity that is on the player's left shoulder.\n",
					"key": "ShoulderEntityLeft",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::AnyEntity"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Entity that is on the player's right shoulder.\n",
					"key": "ShoulderEntityRight",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::AnyEntity"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the player has gone to the overworld after defeating the Ender Dragon.\n",
					"key": "seenCredits",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Recipes that the player has.\n",
					"key": "recipeBook",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::player::RecipeBook"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"desc": "Tracking the warden spawning process for this player.\n",
					"key": "warden_spawn_tracker",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::player::WardenSpawnTracker"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						}
					],
					"desc": "Ender pearls thrown by this player.\n",
					"key": "ender_pearls",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::player::EnderPearl"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "CustomName",
					"type": {
						"kind": "union",
						"members": []
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "CustomNameVisible",
					"type": {
						"kind": "union",
						"members": []
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::player::PlayerSlot": {
			"kind": "union",
			"members": [
				{
					"kind": "byte",
					"valueRange": {
						"kind": 0,
						"min": 0,
						"max": 35
					}
				},
				{
					"kind": "byte",
					"valueRange": {
						"kind": 0,
						"min": 100,
						"max": 103
					}
				},
				{
					"kind": "byte",
					"valueRange": {
						"kind": 0,
						"min": -106,
						"max": -106
					}
				}
			]
		},
		"::java::server::world::entity::mob::player::RecipeBook": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Recipes the player has acquired.\n",
					"key": "recipes",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "recipe"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Recipes that should pulse in the crafting book.\n",
					"key": "toBeDisplayed",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "recipe"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the player has filtered crafting on in the crafting table.\n",
					"key": "isFilteringCraftable",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the player has the crafting book open in the crafting table.\n",
					"key": "isGuiOpen",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the player has filtered crafting on in the furnace.\n",
					"key": "isFurnaceFilteringCraftable",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the player has the crafting book open in the furnace.\n",
					"key": "isFurnaceGuiOpen",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::player::RootVehicle": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Upper bits of the ridden entity's UUID.\n",
					"key": "AttachMost",
					"type": {
						"kind": "long"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Lower bits of the ridden entity's UUID.\n",
					"key": "AttachLeast",
					"type": {
						"kind": "long"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "uuid"
						},
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Ridden entity's UUID.\n",
					"key": "Attach",
					"type": {
						"kind": "int_array",
						"lengthRange": {
							"kind": 0,
							"min": 4,
							"max": 4
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "The ridden entity.\n",
					"key": "Entity",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::AnyEntity"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::player::WardenSpawnTracker": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Ticks before the `warning_level` can be increased again.\n\nDecreases by 1 every tick. It is set to 200 game ticks (10 seconds) every time the warning level is increased.\n",
					"key": "cooldown_ticks",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Ticks since the player was warned for warden spawning.\n\nIncreases by 1 every tick. After 12000 game ticks (10 minutes) it will be set back to 0,\n\nand the `warning_level` will be decreased by 1.\n",
					"key": "ticks_since_last_warning",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "The warden will spawn at level 3.\n",
					"key": "warning_level",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 3
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::PolarBear": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::MobBase"
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::NeutralMob"
					}
				}
			]
		},
		"::java::server::world::entity::mob::raider::PatrolTarget": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "X",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Y",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Z",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::raider::Pillager": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::raider::RaiderBase"
					}
				},
				{
					"kind": "pair",
					"key": "Inventory",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemStack"
						},
						"lengthRange": {
							"kind": 0,
							"min": 0,
							"max": 5
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::raider::RaiderBase": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::MobBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether the raider is patrolling.\n",
					"key": "Patrolling",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the raider is leading the patrol.\n",
					"key": "PatrolLeader",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"desc": "Where the raider is heading towards.\n",
					"key": "PatrolTarget",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::raider::PatrolTarget"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"desc": "Where the raider is heading towards.\n",
					"key": "patrol_target",
					"type": {
						"kind": "int_array",
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Whether the raider can join raids and count towards the progress bar.\n",
					"key": "CanJoinRaid",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Id of the raid that the raider is in.\n",
					"key": "RaidId",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Wave that the raider is in.\n",
					"key": "Wave",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 8
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::raider::Ravager": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::raider::RaiderBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Ticks until it can attack.\n",
					"key": "AttackTick",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Ticks until it can roar.\n",
					"key": "RoarTick",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Ticks it is stunned for.\n",
					"key": "StunTick",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::raider::Spellcaster": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::raider::RaiderBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Ticks until the raider can cast its spell.\n",
					"key": "SpellTicks",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::raider::Vindicator": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::raider::RaiderBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether it should try to attack most other mobs.\n",
					"key": "Johnny",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::shulker::AttachFace": {
			"kind": "enum",
			"enumKind": "byte",
			"values": [
				{
					"identifier": "Down",
					"value": 0
				},
				{
					"identifier": "Up",
					"value": 1
				},
				{
					"identifier": "North",
					"value": 2
				},
				{
					"identifier": "South",
					"value": 3
				},
				{
					"identifier": "West",
					"value": 4
				},
				{
					"identifier": "East",
					"value": 5
				}
			]
		},
		"::java::server::world::entity::mob::shulker::Shulker": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::MobBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether it is peeking.\n",
					"key": "Peek",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Which face it is attached to.\n",
					"key": "AttachFace",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::shulker::AttachFace"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Color",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::server::util::color::ColorInt"
							},
							{
								"kind": "reference",
								"path": "::java::server::world::entity::mob::shulker::ShulkerColor"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"desc": "Approximate x coordinate of the shulker.\n",
					"key": "APX",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"desc": "Approximate y coordinate of the shulker.\n",
					"key": "APY",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"desc": "Approximate z coordinate of the shulker.\n",
					"key": "APZ",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::shulker::ShulkerColor": {
			"kind": "enum",
			"enumKind": "byte",
			"values": [
				{
					"identifier": "Normal",
					"value": 16
				}
			]
		},
		"::java::server::world::entity::mob::skeleton::Skeleton": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::MobBase"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"desc": "Time until it converts to a stray.\n",
					"key": "StrayConversionTime",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::slime::Slime": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::MobBase"
					}
				},
				{
					"kind": "pair",
					"key": "Size",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "int",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 0,
									"max": 126
								},
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether it is on the ground.\n",
					"key": "wasOnGround",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::snow_golem::SnowGolem": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::MobBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether it has a pumpkin.\n",
					"key": "Pumpkin",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::Squid": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::MobBase"
					}
				},
				{
					"kind": "spread",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						}
					],
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::AgeableMob"
					}
				}
			]
		},
		"::java::server::world::entity::mob::tadpole::Tadpole": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::MobBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Age of it in ticks. When greater than or equal to 24000, it grows into a frog.\n",
					"key": "Age",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "If it was released from a bucket.\n",
					"key": "FromBucket",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.19"
						}
					}
				}
			]
		},
		"::java::server::world::entity::mob::UUIDLeash": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Upper bits of the other entity's UUID.\n",
					"key": "UUIDMost",
					"type": {
						"kind": "long"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Lower bits of the other entity's UUID.\n",
					"key": "UUIDLeast",
					"type": {
						"kind": "long"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::vex::Vex": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::MobBase"
					}
				},
				{
					"kind": "pair",
					"desc": "X coordinate of the center of its wander bounds.\n",
					"key": "BoundX",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Y coordinate of the center of its wander bounds.\n",
					"key": "BoundY",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Z coordinate of the center of its wander bounds.\n",
					"key": "BoundZ",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Ticks until it starts to die.\n",
					"key": "LifeTicks",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::warden::AngerManagement": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Suspects that have angered the warden.\n",
					"key": "suspects",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::warden::Suspect"
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::warden::Suspect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Level of anger that will decrease by 1 every second.\n",
					"key": "anger",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1,
							"max": 150
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "uuid"
						}
					],
					"key": "uuid",
					"type": {
						"kind": "int_array",
						"lengthRange": {
							"kind": 0,
							"min": 4,
							"max": 4
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::warden::Warden": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::MobBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Anger management\n",
					"key": "anger",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::warden::AngerManagement"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Vibration listener\n",
					"key": "listener",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::game_event::VibrationListener"
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.19"
						}
					}
				}
			]
		},
		"::java::server::world::entity::mob::wither::Wither": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::MobBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Ticks it is invulnerable for.\n",
					"key": "Invul",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::zoglin::Zoglin": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::MobBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether it is a baby.\n",
					"key": "IsBaby",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.16"
						}
					}
				}
			]
		},
		"::java::server::world::entity::mob::zombie::Zombie": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::MobBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether it is a baby.\n",
					"key": "IsBaby",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether it can break doors.\n",
					"key": "CanBreakDoors",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Ticks until it converts.\n",
					"key": "DrownedConversionTime",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Ticks it has been in the water.\n",
					"key": "InWaterTime",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::zombie::ZombieVillager": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::zombie::Zombie"
					}
				},
				{
					"kind": "pair",
					"desc": "Villager's skin data\n",
					"key": "VillagerData",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::villager::VillagerData"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Villager's gossips\n",
					"key": "Gossips",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::villager::Gossip"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Villager's offers\n",
					"key": "Offers",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::breedable::villager::Offers"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Ticks until the it is converted.\n",
					"key": "ConversionTime",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Lower bits of the player's uuid who triggered the conversion.\n",
					"key": "ConversionPlayerLeast",
					"type": {
						"kind": "long"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Upper bits of the player's uuid who triggered the conversion.\n",
					"key": "ConversionPlayerMost",
					"type": {
						"kind": "long"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "uuid"
						},
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Player who triggered the conversion.\n",
					"key": "ConversionPlayer",
					"type": {
						"kind": "int_array",
						"lengthRange": {
							"kind": 0,
							"min": 4,
							"max": 4
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::mob::zombified_piglin::ZombiePigman": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::MobBase"
					}
				},
				{
					"kind": "spread",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::mob::NeutralMob"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether it is a baby.\n",
					"key": "IsBaby",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Ticks that it will be angry for.\n",
					"key": "Anger",
					"type": {
						"kind": "short"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "uuid"
						}
					],
					"desc": "Last player to hit a zombie pigman in this zombie pigman's detection range.\n",
					"key": "HurtBy",
					"type": {
						"kind": "string"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::ominous_item_spawner::OminousItemSpawner": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::EntityBase"
					}
				},
				{
					"kind": "pair",
					"key": "item",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemStack"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "spawn_item_after_ticks",
					"type": {
						"kind": "long"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::painting::Facing": {
			"kind": "enum",
			"enumKind": "byte",
			"values": [
				{
					"identifier": "South",
					"value": 0
				},
				{
					"identifier": "West",
					"value": 1
				},
				{
					"identifier": "North",
					"value": 2
				},
				{
					"identifier": "East",
					"value": 3
				}
			]
		},
		"::java::server::world::entity::painting::Painting": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::EntityBase"
					}
				},
				{
					"kind": "pair",
					"key": "TileX",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "TileY",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "TileZ",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Direction it is facing.\n",
					"key": "Facing",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::painting::Facing"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"desc": "Type of painting.\n",
					"key": "Motive",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "motive"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"desc": "Type of painting.\n",
					"key": "variant",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "painting_variant"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::data::variants::painting::PaintingVariant",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.21"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::projectile::arrow::Arrow": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::projectile::arrow::ArrowBase"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"desc": "Color of the arrow's potion bubble trail particles.\n\ncalculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.\n",
					"key": "Color",
					"type": {
						"kind": "int",
						"attributes": [
							{
								"name": "color",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "composite_rgb"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.2"
								}
							}
						}
					],
					"desc": "Effects to give to the hit entity.\n",
					"key": "CustomPotionEffects",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::util::effect::MobEffectInstance"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.2"
								}
							}
						},
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.3"
								}
							}
						}
					],
					"desc": "Effects to give to the hit entity.\n",
					"key": "custom_potion_effects",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::util::effect::MobEffectInstance"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.3"
								}
							}
						}
					],
					"desc": "Name of the default potion effect.\n",
					"key": "Potion",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "mob_effect"
									}
								}
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::projectile::arrow::ArrowBase": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::projectile::ProjectileBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Shake it creates.\n",
					"key": "shake",
					"type": {
						"kind": "byte"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "How players can pick up it.\n",
					"key": "pickup",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::projectile::arrow::Pickup"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Whether a player shot it.\n",
					"key": "player",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Ticks since it last moved.\n",
					"key": "life",
					"type": {
						"kind": "short"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Damage it should deal.\n",
					"key": "damage",
					"type": {
						"kind": "double"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether it is in the ground.\n",
					"key": "inGround",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Block it is in.\n",
					"key": "inBlockState",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::block_state::BlockState"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether it should do critical damage.\n",
					"key": "crit",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"desc": "Whether it was shot from a crossbow.\n",
					"key": "ShotFromCrossbow",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"desc": "The item which has shot this arrow.\n",
					"key": "weapon",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemStack"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Number of entities it can pass through.\n",
					"key": "PierceLevel",
					"type": {
						"kind": "byte"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": " Sound event to play when it hits something.\n\n\n\n Can only be vanilla sound events\n",
					"key": "SoundEvent",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "sound_event"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Upper bits of the owner's UUID.\n",
					"key": "OwnerUUIDMost",
					"type": {
						"kind": "long"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Lower bits of the owner's UUID.\n",
					"key": "OwnerUUIDLeast",
					"type": {
						"kind": "long"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.3"
								}
							}
						}
					],
					"key": "item",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemStack"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::projectile::arrow::Pickup": {
			"kind": "enum",
			"enumKind": "byte",
			"values": [
				{
					"identifier": "None",
					"value": 0
				},
				{
					"identifier": "Any",
					"value": 1
				},
				{
					"identifier": "Creative",
					"value": 2
				}
			]
		},
		"::java::server::world::entity::projectile::arrow::SpectralArrow": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::projectile::arrow::ArrowBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Ticks the glowing effect lasts.\n",
					"key": "Duration",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::projectile::arrow::Trident": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::projectile::arrow::ArrowBase"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.3"
								}
							}
						}
					],
					"key": "Trident",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemStack"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether it has already damaged an entity.\n",
					"key": "DealtDamage",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::projectile::fireball::AcceleratingProjectileBase": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::projectile::ProjectileBase"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"desc": "Acceleration\n",
					"key": "power",
					"type": {
						"kind": "list",
						"item": {
							"kind": "double"
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"key": "acceleration_power",
					"type": {
						"kind": "double"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::projectile::fireball::DespawnableProjectileBase": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::projectile::fireball::AcceleratingProjectileBase"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"key": "direction",
					"type": {
						"kind": "list",
						"item": {
							"kind": "double"
						},
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Ticks since it last moved.\n",
					"key": "life",
					"type": {
						"kind": "short"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::projectile::fireball::FireballBase": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::projectile::fireball::DespawnableProjectileBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Item it should render as.\n",
					"key": "Item",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemStack"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::projectile::fireball::LargeFireball": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::projectile::fireball::FireballBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Explosion radius.\n",
					"key": "ExplosionPower",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::projectile::fireball::WitherSkull": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::projectile::fireball::DespawnableProjectileBase"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.3"
								}
							}
						}
					],
					"key": "dangerous",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::projectile::LlamaSpit": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::projectile::ProjectileBase"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						},
						{
							"name": "uuid"
						}
					],
					"key": "Owner",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::projectile::OwnerUuid"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::projectile::OwnerUuid": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Upper bits of the owner's UUID.\n",
					"key": "OwnerUUIDMost",
					"type": {
						"kind": "long"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Lower bits of the owner's UUID.\n",
					"key": "OwnerUUIDLeast",
					"type": {
						"kind": "long"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::projectile::ProjectileBase": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::EntityBase"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.17"
								}
							}
						}
					],
					"desc": "Whether it has been shot. This is set to true when it exists for\n\nat least one tick, and is used by the game to ensure it only triggers the projectile_shoot\n\ngame event once.\n",
					"key": "HasBeenShot",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						},
						{
							"name": "uuid"
						}
					],
					"key": "Owner",
					"type": {
						"kind": "int_array",
						"lengthRange": {
							"kind": 0,
							"min": 4,
							"max": 4
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Whether it has left its owner.\n",
					"key": "LeftOwner",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::projectile::shulker_bullet::BulletTarget": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "The upper bits of the its UUID.\n",
					"key": "M",
					"type": {
						"kind": "long"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "The lower bits of the its UUID.\n",
					"key": "L",
					"type": {
						"kind": "long"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"key": "UUID",
					"type": {
						"kind": "int_array",
						"lengthRange": {
							"kind": 0,
							"min": 4,
							"max": 4
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "X block coordinate of the it.\n",
					"key": "X",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Y block coordinate of the it.\n",
					"key": "Y",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Z block coordinate of the it.\n",
					"key": "Z",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::projectile::shulker_bullet::ShulkerBullet": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::projectile::ProjectileBase"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"key": "Owner",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::projectile::shulker_bullet::BulletTarget"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Steps it takes to reach the target\n",
					"key": "Steps",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Target",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::projectile::shulker_bullet::BulletTarget"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "X offset to move based on the target's location.\n",
					"key": "TXD",
					"type": {
						"kind": "double"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Y offset to move based on the target's location.\n",
					"key": "TYD",
					"type": {
						"kind": "double"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Z offset to move based on the target's location.\n",
					"key": "TZD",
					"type": {
						"kind": "double"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::projectile::throwable::Owner": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Upper bits of the owner's UUID.\n",
					"key": "M",
					"type": {
						"kind": "long"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Lower bits of the owner's UUID.\n",
					"key": "L",
					"type": {
						"kind": "long"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::projectile::throwable::Potion": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::projectile::throwable::Throwable"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Item representation of the potion.\n",
					"key": "Potion",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemStack"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Item representation of the potion.\n",
					"key": "Item",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemStack"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::projectile::throwable::Throwable": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::projectile::ProjectileBase"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"key": "xTile",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"key": "yTile",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"key": "zTile",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Shake it creates.\n",
					"key": "shake",
					"type": {
						"kind": "byte"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Entity that threw it.\n",
					"key": "owner",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::projectile::throwable::Owner"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Whether it is in the ground.\n",
					"key": "inGround",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::projectile::throwable::ThrowableItem": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::projectile::throwable::Throwable"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Item representation of the projectile.\n",
					"key": "Item",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemStack"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::entity::tnt::Tnt": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::EntityBase"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.3"
								}
							}
						}
					],
					"desc": "Ticks until it explodes.\n",
					"key": "Fuse",
					"type": {
						"kind": "short"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.3"
								}
							}
						}
					],
					"desc": "Ticks until it explodes.\n",
					"key": "fuse",
					"type": {
						"kind": "short"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.3"
								}
							}
						}
					],
					"key": "block_state",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::block_state::BlockState"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						}
					],
					"key": "explosion_power",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 128
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::<anonymous 0>": {
			"kind": "struct",
			"fields": []
		},
		"::java::server::world::item::<anonymous 1>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string",
						"attributes": [
							{
								"name": "dispatcher_key",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "mcdoc:custom_data"
									}
								}
							}
						]
					},
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									{
										"keyword": "key"
									}
								]
							}
						],
						"registry": "mcdoc:custom_data"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::<anonymous 10>": {
			"kind": "struct",
			"fields": []
		},
		"::java::server::world::item::<anonymous 11>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::SingleItem"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"desc": "Number of items in the stack\n",
					"key": "count",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1,
							"max": 99
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"desc": "Number of items in the stack\n",
					"key": "Count",
					"type": {
						"kind": "byte"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::<anonymous 2>": {
			"kind": "struct",
			"fields": []
		},
		"::java::server::world::item::<anonymous 3>": {
			"kind": "struct",
			"fields": []
		},
		"::java::server::world::item::<anonymous 4>": {
			"kind": "struct",
			"fields": []
		},
		"::java::server::world::item::<anonymous 5>": {
			"kind": "struct",
			"fields": []
		},
		"::java::server::world::item::<anonymous 6>": {
			"kind": "enum",
			"enumKind": "int",
			"values": [
				{
					"identifier": "Enchantments",
					"value": 1
				},
				{
					"identifier": "AttributeModifiers",
					"value": 2
				},
				{
					"identifier": "Unbreakable",
					"value": 3
				},
				{
					"identifier": "CanDestroy",
					"value": 4
				},
				{
					"identifier": "CanPlaceOn",
					"value": 5
				},
				{
					"identifier": "Other",
					"value": 6
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16.2"
								}
							}
						}
					],
					"identifier": "LeatherColor",
					"value": 7
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19.4"
								}
							}
						}
					],
					"identifier": "Trim",
					"value": 8
				}
			]
		},
		"::java::server::world::item::<anonymous 7>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "attribute"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"key": "uuid",
					"type": {
						"kind": "int_array",
						"lengthRange": {
							"kind": 0,
							"min": 4,
							"max": 4
						}
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"key": "name",
					"type": {
						"kind": "string"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"desc": "Used when equipping and unequipping the item to identify which modifier to add or remove from the entity.\n",
					"key": "id",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "attribute_modifier"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "Change in the attribute.\n",
					"key": "amount",
					"type": {
						"kind": "double"
					}
				},
				{
					"kind": "pair",
					"key": "operation",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::attribute::AttributeOperation"
					}
				},
				{
					"kind": "pair",
					"desc": "Slot or slot type the item must be in for the modifier to take effect. Defaults to `any`.\n",
					"key": "slot",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::attribute::AttributeSlot"
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::server::world::item::<anonymous 8>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "AttributeName",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "union",
								"members": [
									{
										"kind": "reference",
										"path": "::java::server::util::attribute::AttributeName"
									},
									{
										"kind": "string"
									}
								],
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.16"
											}
										}
									}
								]
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.16"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "attribute"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Identifying name of the modifier, has no real effect.\n",
					"key": "Name",
					"type": {
						"kind": "string"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Slot that the modifier is active in.\n",
					"key": "Slot",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::attribute::AttributeSlot"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Operation",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::attribute::LegacyOperation"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Change in the attribute.\n",
					"key": "Amount",
					"type": {
						"kind": "double"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Upper bits of the modifier's UUID.\n",
					"key": "UUIDMost",
					"type": {
						"kind": "long"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"desc": "Lower bits of the modifier's UUID.\n",
					"key": "UUIDLeast",
					"type": {
						"kind": "long"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "uuid"
						},
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.16"
								}
							}
						}
					],
					"key": "UUID",
					"type": {
						"kind": "int_array",
						"lengthRange": {
							"kind": 0,
							"min": 4,
							"max": 4
						}
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "until",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.20.5"
						}
					}
				}
			]
		},
		"::java::server::world::item::<anonymous 9>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "data_component_type"
											}
										},
										"recommended": {
											"kind": "reference",
											"path": "::java::server::world::item::T"
										}
									}
								}
							}
						]
					},
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									{
										"keyword": "key"
									}
								]
							}
						],
						"registry": "minecraft:data_component"
					}
				},
				{
					"kind": "pair",
					"key": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "data_component_type"
											}
										},
										"recommended": {
											"kind": "reference",
											"path": "::java::server::world::item::T"
										},
										"prefix": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "!"
											}
										}
									}
								}
							}
						]
					},
					"type": {
						"kind": "struct",
						"fields": []
					}
				}
			]
		},
		"::java::server::world::item::AdventureModePredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "predicates",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::data::advancement::predicate::BlockPredicate"
						},
						"lengthRange": {
							"kind": 0,
							"min": 1
						}
					}
				},
				{
					"kind": "pair",
					"key": "show_in_tooltip",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::AnyItem": {
			"kind": "reference",
			"path": "::java::server::world::item::SingleItem"
		},
		"::java::server::world::item::ApplyEffectsConsumeEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "effects",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::util::effect::MobEffectInstance"
						}
					}
				},
				{
					"kind": "pair",
					"desc": "Chance the effects will be applied once consumed.\n",
					"key": "probability",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::AttributeModifier": {
			"kind": "union",
			"members": [
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "type",
							"type": {
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "attribute"
											}
										}
									}
								]
							}
						},
						{
							"kind": "pair",
							"attributes": [
								{
									"name": "until",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "1.21"
										}
									}
								}
							],
							"key": "uuid",
							"type": {
								"kind": "int_array",
								"lengthRange": {
									"kind": 0,
									"min": 4,
									"max": 4
								}
							}
						},
						{
							"kind": "pair",
							"attributes": [
								{
									"name": "until",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "1.21"
										}
									}
								}
							],
							"key": "name",
							"type": {
								"kind": "string"
							}
						},
						{
							"kind": "pair",
							"attributes": [
								{
									"name": "since",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "1.21"
										}
									}
								}
							],
							"desc": "Used when equipping and unequipping the item to identify which modifier to add or remove from the entity.\n",
							"key": "id",
							"type": {
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "attribute_modifier"
											}
										}
									}
								]
							}
						},
						{
							"kind": "pair",
							"desc": "Change in the attribute.\n",
							"key": "amount",
							"type": {
								"kind": "double"
							}
						},
						{
							"kind": "pair",
							"key": "operation",
							"type": {
								"kind": "reference",
								"path": "::java::server::util::attribute::AttributeOperation"
							}
						},
						{
							"kind": "pair",
							"desc": "Slot or slot type the item must be in for the modifier to take effect. Defaults to `any`.\n",
							"key": "slot",
							"type": {
								"kind": "reference",
								"path": "::java::server::util::attribute::AttributeSlot"
							},
							"optional": true
						}
					],
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					]
				},
				{
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"key": "AttributeName",
							"type": {
								"kind": "union",
								"members": [
									{
										"kind": "union",
										"members": [
											{
												"kind": "reference",
												"path": "::java::server::util::attribute::AttributeName"
											},
											{
												"kind": "string"
											}
										],
										"attributes": [
											{
												"name": "until",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "1.16"
													}
												}
											}
										]
									},
									{
										"kind": "string",
										"attributes": [
											{
												"name": "since",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "1.16"
													}
												}
											},
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "attribute"
													}
												}
											}
										]
									}
								]
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "Identifying name of the modifier, has no real effect.\n",
							"key": "Name",
							"type": {
								"kind": "string"
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "Slot that the modifier is active in.\n",
							"key": "Slot",
							"type": {
								"kind": "reference",
								"path": "::java::server::util::attribute::AttributeSlot"
							},
							"optional": true
						},
						{
							"kind": "pair",
							"key": "Operation",
							"type": {
								"kind": "reference",
								"path": "::java::server::util::attribute::LegacyOperation"
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "Change in the attribute.\n",
							"key": "Amount",
							"type": {
								"kind": "double"
							},
							"optional": true
						},
						{
							"kind": "pair",
							"attributes": [
								{
									"name": "until",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "1.16"
										}
									}
								}
							],
							"desc": "Upper bits of the modifier's UUID.\n",
							"key": "UUIDMost",
							"type": {
								"kind": "long"
							},
							"optional": true
						},
						{
							"kind": "pair",
							"attributes": [
								{
									"name": "until",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "1.16"
										}
									}
								}
							],
							"desc": "Lower bits of the modifier's UUID.\n",
							"key": "UUIDLeast",
							"type": {
								"kind": "long"
							},
							"optional": true
						},
						{
							"kind": "pair",
							"attributes": [
								{
									"name": "uuid"
								},
								{
									"name": "since",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "1.16"
										}
									}
								}
							],
							"key": "UUID",
							"type": {
								"kind": "int_array",
								"lengthRange": {
									"kind": 0,
									"min": 4,
									"max": 4
								}
							},
							"optional": true
						}
					],
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					]
				}
			]
		},
		"::java::server::world::item::AttributeModifiers": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "modifiers",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::item::AttributeModifier"
						}
					}
				},
				{
					"kind": "pair",
					"key": "show_in_tooltip",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::block::<anonymous 0>": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string"
					},
					"type": {
						"kind": "string"
					}
				}
			]
		},
		"::java::server::world::item::block::banner::BannerPatternLayer": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "color",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::ColorString"
					}
				},
				{
					"kind": "pair",
					"key": "pattern",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "banner_pattern"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::data::variants::banner_pattern::BannerPattern"
							}
						]
					}
				}
			]
		},
		"::java::server::world::item::block::beehive::Occupant": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "entity_data",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::AnyEntity"
					}
				},
				{
					"kind": "pair",
					"key": "min_ticks_in_hive",
					"type": {
						"kind": "int"
					}
				},
				{
					"kind": "pair",
					"key": "ticks_in_hive",
					"type": {
						"kind": "int"
					}
				}
			]
		},
		"::java::server::world::item::block::BlockEntityData": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "id",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "block_entity_type"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"id"
								]
							}
						],
						"registry": "minecraft:block_entity"
					}
				}
			]
		},
		"::java::server::world::item::block::BlockItem": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemBase"
					}
				},
				{
					"kind": "pair",
					"key": "BlockEntityTag",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockEntityData"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Blockstate that the placed block will have.\n",
					"key": "BlockStateTag",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									{
										"keyword": "parent"
									},
									"id"
								]
							}
						],
						"registry": "mcdoc:block_item_states"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::block::BlockItemComponents": {
			"kind": "union",
			"members": [
				{
					"kind": "reference",
					"path": "::java::server::world::item::ItemBaseComponents"
				},
				{
					"kind": "literal",
					"value": {
						"kind": "string",
						"value": "block_entity_data"
					}
				},
				{
					"kind": "literal",
					"value": {
						"kind": "string",
						"value": "block_state"
					}
				}
			]
		},
		"::java::server::world::item::block::container::ContainerLoot": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "loot_table",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "loot_table"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "seed",
					"type": {
						"kind": "long",
						"attributes": [
							{
								"name": "random"
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::block::container::ContainerSlot": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "The slot ID of the container.\r\n",
					"key": "slot",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 255
						}
					}
				},
				{
					"kind": "pair",
					"desc": "The item stack in this container slot.\r\n",
					"key": "item",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemStack"
					}
				}
			]
		},
		"::java::server::world::item::book::Generation": {
			"kind": "enum",
			"enumKind": "int",
			"values": [
				{
					"identifier": "Original",
					"value": 0
				},
				{
					"identifier": "Copy",
					"value": 1
				},
				{
					"identifier": "CopyOfCopy",
					"value": 2
				},
				{
					"identifier": "Tattered",
					"value": 3
				}
			]
		},
		"::java::server::world::item::book::WritableBook": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemBase"
					}
				},
				{
					"kind": "pair",
					"key": "pages",
					"type": {
						"kind": "list",
						"item": {
							"kind": "string"
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::book::WritableBookContent": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "pages",
					"type": {
						"kind": "list",
						"item": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::server::util::Filterable"
							},
							"typeArgs": [
								{
									"kind": "string"
								}
							]
						}
					}
				}
			]
		},
		"::java::server::world::item::book::WrittenBook": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether the dynamic content on the pages has been resolved.\n",
					"key": "resolved",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Pages of the book as JSON text components.\n",
					"key": "pages",
					"type": {
						"kind": "list",
						"item": {
							"kind": "string",
							"attributes": [
								{
									"name": "text_component"
								}
							]
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Generation of the book.\n",
					"key": "generation",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::book::Generation"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "author",
					"type": {
						"kind": "string"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "title",
					"type": {
						"kind": "string"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::book::WrittenBookContent": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "pages",
					"type": {
						"kind": "list",
						"item": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::server::util::Filterable"
							},
							"typeArgs": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "text_component"
										}
									]
								}
							]
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "title",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::server::util::Filterable"
								},
								"typeArgs": [
									{
										"kind": "string",
										"lengthRange": {
											"kind": 0,
											"max": 32
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "author",
					"type": {
						"kind": "string"
					}
				},
				{
					"kind": "pair",
					"desc": "Number of times this written book has been copied. Defaults to 0. If the value is greater than 1, the book cannot be copied.\n",
					"key": "generation",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::book::Generation"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the dynamic content on the pages has been resolved.\n",
					"key": "resolved",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::compass::Compass": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemBase"
					}
				},
				{
					"kind": "pair",
					"key": "LodestoneDimension",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "dimension"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "LodestonePos",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::compass::LodestonePos"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the compass should be linked to a lodestone.\n\nWhen true, the compass will reset if the lodestone at the position is removed.\n",
					"key": "LodestoneTracked",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::compass::LodestonePos": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "X",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Y",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Z",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::compass::LodestoneTarget": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Coordinates.\n",
					"key": "pos",
					"type": {
						"kind": "int_array",
						"lengthRange": {
							"kind": 0,
							"min": 3,
							"max": 3
						}
					}
				},
				{
					"kind": "pair",
					"key": "dimension",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "dimension"
									}
								}
							}
						]
					}
				}
			]
		},
		"::java::server::world::item::compass::LodestoneTracker": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Location of the lodestone. Optional. If not set, the compass will spin randomly.\n",
					"key": "target",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"desc": "Coordinates.\n",
								"key": "pos",
								"type": {
									"kind": "int_array",
									"lengthRange": {
										"kind": 0,
										"min": 3,
										"max": 3
									}
								}
							},
							{
								"kind": "pair",
								"key": "dimension",
								"type": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "dimension"
												}
											}
										}
									]
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "When `true`, the component is removed when the lodestone is broken. When `false`, the component is kept. Defaults to true.\n",
					"key": "tracked",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::Consumable": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Time taken for a player to consume the item. Defaults to 1.6.\n",
					"key": "consume_seconds",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "View model/arms animation used during consumption of the item. Defaults to `eat`.\n",
					"key": "animation",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemUseAnimation"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Sound played during and on completion of item consumption.\n",
					"key": "sound",
					"type": {
						"kind": "reference",
						"path": "::java::data::util::SoundEventRef"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the `item` particle is emitted while consuming the item. Defaults to `true`.\n",
					"key": "has_consume_particles",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Side effects which take place after consuming the item.\n",
					"key": "on_consume_effects",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::item::ConsumeEffect"
						}
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.21.2"
						}
					}
				}
			]
		},
		"::java::server::world::item::ConsumeEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "type",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "consume_effect_type"
									}
								}
							}
						]
					}
				},
				{
					"kind": "spread",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"type"
								]
							}
						],
						"registry": "minecraft:consume_effect"
					}
				}
			]
		},
		"::java::server::world::item::crossbow::<anonymous 0>": {
			"kind": "struct",
			"fields": []
		},
		"::java::server::world::item::crossbow::Crossbow": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Projectiles that are loaded.\n",
					"key": "ChargedProjectiles",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemStack"
						},
						"lengthRange": {
							"kind": 0,
							"min": 0,
							"max": 3
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the crossbow is charged.\n",
					"key": "Charged",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::CustomData": {
			"kind": "union",
			"members": [
				{
					"kind": "reference",
					"path": "::java::server::world::item::CustomDataMap"
				},
				{
					"kind": "string",
					"attributes": [
						{
							"name": "nbt",
							"value": {
								"kind": "reference",
								"path": "::java::server::world::item::CustomDataMap"
							}
						}
					]
				}
			]
		},
		"::java::server::world::item::CustomDataMap": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string",
						"attributes": [
							{
								"name": "dispatcher_key",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "mcdoc:custom_data"
									}
								}
							}
						]
					},
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									{
										"keyword": "key"
									}
								]
							}
						],
						"registry": "mcdoc:custom_data"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::CustomModelData": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "floats",
					"type": {
						"kind": "list",
						"item": {
							"kind": "float"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "flags",
					"type": {
						"kind": "list",
						"item": {
							"kind": "boolean"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "strings",
					"type": {
						"kind": "list",
						"item": {
							"kind": "string"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "colors",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::util::color::RGB"
						}
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.21.4"
						}
					}
				}
			]
		},
		"::java::server::world::item::DamageResistant": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "The damage types which the item is resistant to when in entity form.\n\nAdditionally, this also affects whether the equipped item will be damaged when the wearer is hurt by a specified damage type.\n",
					"key": "types",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "damage_type"
											}
										},
										"tags": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "required"
											}
										}
									}
								}
							}
						]
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.21.2"
						}
					}
				}
			]
		},
		"::java::server::world::item::DataComponentPatch": {
			"kind": "template",
			"child": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "tree",
										"values": {
											"registry": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "data_component_type"
												}
											},
											"recommended": {
												"kind": "reference",
												"path": "::java::server::world::item::T"
											}
										}
									}
								}
							]
						},
						"type": {
							"kind": "dispatcher",
							"parallelIndices": [
								{
									"kind": "dynamic",
									"accessor": [
										{
											"keyword": "key"
										}
									]
								}
							],
							"registry": "minecraft:data_component"
						}
					},
					{
						"kind": "pair",
						"key": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "tree",
										"values": {
											"registry": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "data_component_type"
												}
											},
											"recommended": {
												"kind": "reference",
												"path": "::java::server::world::item::T"
											},
											"prefix": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "!"
												}
											}
										}
									}
								}
							]
						},
						"type": {
							"kind": "struct",
							"fields": []
						}
					}
				]
			},
			"typeParams": [
				{
					"path": "::java::server::world::item::T"
				}
			]
		},
		"::java::server::world::item::DataComponentPredicate": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "data_component_type"
									}
								}
							}
						]
					},
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									{
										"keyword": "key"
									}
								]
							}
						],
						"registry": "minecraft:data_component"
					}
				}
			]
		},
		"::java::server::world::item::DeathProtection": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Effects applied when the item protects the holder.\n",
					"key": "death_effects",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::item::ConsumeEffect"
						}
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.21.2"
						}
					}
				}
			]
		},
		"::java::server::world::item::debug_stick::DebugStick": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemBase"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19"
								}
							}
						}
					],
					"key": "DebugProperty",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::debug_stick::DebugStickState"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::debug_stick::DebugStickState": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "block"
									}
								}
							}
						]
					},
					"type": {
						"kind": "string"
					}
				}
			]
		},
		"::java::server::world::item::Display": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "A JSON text component.\n",
					"key": "Name",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "text_component"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "A list of JSON text components, each element being a lore line.\n",
					"key": "Lore",
					"type": {
						"kind": "list",
						"item": {
							"kind": "string",
							"attributes": [
								{
									"name": "text_component"
								}
							]
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::Enchantable": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "value",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1
						}
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.21.2"
						}
					}
				}
			]
		},
		"::java::server::world::item::enchanted_book::EnchantedBook": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemBase"
					}
				},
				{
					"kind": "pair",
					"key": "StoredEnchantments",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::item::Enchantment"
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::Enchantment": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Which enchantment is being described.\n",
					"key": "id",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "enchantment"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Which level the enchantment is.\n",
					"key": "lvl",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "union",
								"members": [
									{
										"kind": "short",
										"valueRange": {
											"kind": 0,
											"min": 1
										}
									},
									{
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 1
										}
									}
								],
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							},
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 0,
									"max": 255
								},
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.17"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::EnchantmentLevels": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "enchantment"
									}
								}
							}
						]
					},
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 255
						}
					}
				}
			]
		},
		"::java::server::world::item::Enchantments": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "levels",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::EnchantmentLevels"
					}
				},
				{
					"kind": "pair",
					"key": "show_in_tooltip",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::Equippable": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "slot",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::inventory::EquipmentSlot"
					}
				},
				{
					"kind": "pair",
					"desc": "Sound event to play when the item is equipped.\n\nIf not specified, the default armor equip sound will be played.\n",
					"key": "equip_sound",
					"type": {
						"kind": "reference",
						"path": "::java::data::util::SoundEventRef"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.4"
								}
							}
						}
					],
					"desc": "The equipment model to use when equipped.\n\nFalls back to rendering as the item itself when in the head slot (or no rendering if not applicable).\n",
					"key": "model",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "equipment"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.4"
								}
							}
						}
					],
					"key": "asset_id",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "equipment"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "The overlay texture that should render in first person when equipped.\n",
					"key": "camera_overlay",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "texture"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Limits which entities can equip this item\n",
					"key": "allowed_entities",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "entity_type"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "entity_type"
												}
											}
										}
									]
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the item can be equipped by using a dispenser. Defaults to `true`.\n",
					"key": "dispensable",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the item can be equipped by right-clicking. Defaults to `true`.\n",
					"key": "swappable",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the item will be damaged when the wearer is damaged. Defaults to `true`.\n",
					"key": "damage_on_hurt",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.21.2"
						}
					}
				}
			]
		},
		"::java::server::world::item::firework::<anonymous 0>": {
			"kind": "enum",
			"enumKind": "byte",
			"values": [
				{
					"identifier": "SmallBall",
					"value": 0
				},
				{
					"identifier": "LargeBall",
					"value": 1
				},
				{
					"identifier": "Star",
					"value": 2
				},
				{
					"identifier": "Creeper",
					"value": 3
				},
				{
					"identifier": "Burst",
					"value": 4
				}
			]
		},
		"::java::server::world::item::firework::Explosion": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "shape",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::firework::FireworkShape"
					}
				},
				{
					"kind": "pair",
					"desc": "Colors of the initial particles of the explosion, randomly selected from.\n\nCalculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.\n",
					"key": "colors",
					"type": {
						"kind": "int_array",
						"attributes": [
							{
								"name": "color",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "composite_rgb"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Colors of the fading particles of the explosion\n",
					"key": "fade_colors",
					"type": {
						"kind": "int_array",
						"attributes": [
							{
								"name": "color",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "composite_rgb"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Added to a firework star via Diamond.\n",
					"key": "has_trail",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Added to a firework star via Glowstone Dust.\n",
					"key": "has_twinkle",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::firework::FireworkRocket": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemBase"
					}
				},
				{
					"kind": "pair",
					"key": "Fireworks",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::firework::LegacyFireworks"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::firework::Fireworks": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "explosions",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::item::firework::Explosion"
						},
						"lengthRange": {
							"kind": 0,
							"min": 0,
							"max": 256
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "flight_duration",
					"type": {
						"kind": "byte"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::firework::FireworkStar": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemBase"
					}
				},
				{
					"kind": "pair",
					"key": "Explosion",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::firework::LegacyExplosion"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::firework::LegacyExplosion": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Whether the explosion should flicker.\n",
					"key": "Flicker",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the explosion should have a trail.\n",
					"key": "Trail",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Type",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "enum",
								"enumKind": "byte",
								"values": [
									{
										"identifier": "SmallBall",
										"value": 0
									},
									{
										"identifier": "LargeBall",
										"value": 1
									},
									{
										"identifier": "Star",
										"value": 2
									},
									{
										"identifier": "Creeper",
										"value": 3
									},
									{
										"identifier": "Burst",
										"value": 4
									}
								]
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Colors of the explosion.\n\nCalculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.\n",
					"key": "Colors",
					"type": {
						"kind": "int_array",
						"attributes": [
							{
								"name": "color",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "composite_rgb"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Colors of the explosion fade.\n\nCalculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.\n",
					"key": "FadeColors",
					"type": {
						"kind": "int_array",
						"attributes": [
							{
								"name": "color",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "composite_rgb"
									}
								}
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::firework::LegacyFireworks": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Duration of flight.\n",
					"key": "Flight",
					"type": {
						"kind": "byte"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Explosions",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::item::firework::LegacyExplosion"
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::fish_bucket::AxolotlBucket": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemBase"
					}
				},
				{
					"kind": "pair",
					"key": "EntityTag",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::AnyEntity"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Turns into the `Variant` entity tag.\n",
					"key": "BucketVariantTag",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::fish_bucket::BasicFishBucket": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "EntityTag",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::AnyEntity"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::fish_bucket::BucketEntityData": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::AnyEntity"
					}
				},
				{
					"kind": "pair",
					"desc": "Turns into the expiry time of the memory module `has_hunting_cooldown` for axolotls.\n",
					"key": "HuntingCooldown",
					"type": {
						"kind": "long"
					}
				},
				{
					"kind": "pair",
					"desc": "Turns into the `Variant` entity tag for tropical fish.\n",
					"key": "BucketVariantTag",
					"type": {
						"kind": "int"
					}
				}
			]
		},
		"::java::server::world::item::Food": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Food points/haunches restored when eaten (capped to 20.0).\n",
					"key": "nutrition",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					}
				},
				{
					"kind": "pair",
					"desc": "Exact value added to the player's saturation level, capped at whatever the [new] food points value is.\n",
					"key": "saturation",
					"type": {
						"kind": "float"
					}
				},
				{
					"kind": "pair",
					"desc": "Whether the item can be eaten when the player's food points/haunches are full. Defaults to `false`\n",
					"key": "can_always_eat",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						}
					],
					"desc": "Seconds it takes to eat the item. Defaults to `1.6`\n",
					"key": "eat_seconds",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						}
					],
					"desc": "Applied when eaten.\n",
					"key": "effects",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::item::FoodEffect"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						},
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						}
					],
					"desc": "Works similarly to a milk bucket.\n",
					"key": "using_converts_to",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::SingleItem"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::FoodEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "effect",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::effect::MobEffectInstance"
					}
				},
				{
					"kind": "pair",
					"desc": "Chance for the effect to be applied. Defaults to 1.\n",
					"key": "probability",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 0,
							"max": 1
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::goat_horn::GoatHorn": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemBase"
					}
				},
				{
					"kind": "pair",
					"key": "instrument",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "instrument"
									}
								}
							}
						]
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.19"
						}
					}
				}
			]
		},
		"::java::server::world::item::head::PlayerHead": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemBase"
					}
				},
				{
					"kind": "pair",
					"key": "SkullOwner",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::server::world::item::head::SkullOwner"
							},
							{
								"kind": "string"
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::head::Profile": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Name of a player profile, i.e. its username.\n",
					"key": "name",
					"type": {
						"kind": "string"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "UUID of the owner. Used to update the other tags when the chunk loads or the holder logs in, in case the owner's name has changed.\n",
					"key": "id",
					"type": {
						"kind": "int_array",
						"lengthRange": {
							"kind": 0,
							"min": 4,
							"max": 4
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Resolved textures hosted on the minecraft CDN.\n",
					"key": "properties",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "list",
								"item": {
									"kind": "reference",
									"path": "::java::server::world::item::head::ProfileProperty"
								},
								"attributes": [
									{
										"name": "canonical"
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::server::world::item::head::ProfilePropertyMap"
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::head::ProfileProperty": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Usually `textures`.\n",
					"key": "name",
					"type": {
						"kind": "string"
					}
				},
				{
					"kind": "pair",
					"desc": "Base64 encoded JSON value of the texture index.\n",
					"key": "value",
					"type": {
						"kind": "string"
					}
				},
				{
					"kind": "pair",
					"desc": "Verifies the hash of the resulting texture.\n",
					"key": "signature",
					"type": {
						"kind": "string"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::head::ProfilePropertyMap": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "The key is usually `textures`.\n\nBase64 encoded JSON value of the texture index.\n",
					"key": {
						"kind": "string"
					},
					"type": {
						"kind": "list",
						"item": {
							"kind": "string"
						}
					}
				}
			]
		},
		"::java::server::world::item::head::Properties": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "textures",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::item::head::Texture"
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::head::SkullOwner": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "uuid"
						}
					],
					"desc": "Optional.\n",
					"key": "Id",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.16"
											}
										}
									}
								]
							},
							{
								"kind": "int_array",
								"lengthRange": {
									"kind": 0,
									"min": 4,
									"max": 4
								},
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.16"
											}
										}
									}
								]
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Name of the owner, if missing appears as a steve head.\n",
					"key": "Name",
					"type": {
						"kind": "string"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Properties",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::head::Properties"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::head::Texture": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "Signature",
					"type": {
						"kind": "string"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Base64 encoded JSON value of the texture index.\n",
					"key": "Value",
					"type": {
						"kind": "string"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::ItemBase": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Damage that an item has. Only used for tools, armor, etc.\n",
					"key": "Damage",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the item should be unbreakable.\n\nOnly used for tools, armor, etc.\n",
					"key": "Unbreakable",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "List of the block states that can be destroyed by this item when holding it in adventure mode.\n",
					"key": "CanDestroy",
					"type": {
						"kind": "list",
						"item": {
							"kind": "string",
							"attributes": [
								{
									"name": "block_predicate"
								}
							]
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "List of blockstates that this block item can be placed on.\n",
					"key": "CanPlaceOn",
					"type": {
						"kind": "list",
						"item": {
							"kind": "string",
							"attributes": [
								{
									"name": "block_predicate"
								}
							]
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Tag that describes the custom model an item will take.\n\nUsed by the `custom_model_data` model overrides predicate.\n\nHas certain restrictions due to float conversion.\n",
					"key": "CustomModelData",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "List of enchantments that are on the item.\n",
					"key": "Enchantments",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::item::Enchantment"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Number of experience levels to add to the base level cost when repairing, combining, or renaming this item with an anvil.\n",
					"key": "RepairCost",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Applied to an entity that has equipped the item.\n",
					"key": "AttributeModifiers",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::item::AttributeModifier"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Display settings.\n",
					"key": "display",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::Display"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "bitfield",
							"value": {
								"kind": "tree",
								"values": {
									"0": {
										"kind": "enum",
										"enumKind": "int",
										"values": [
											{
												"identifier": "Enchantments",
												"value": 1
											},
											{
												"identifier": "AttributeModifiers",
												"value": 2
											},
											{
												"identifier": "Unbreakable",
												"value": 3
											},
											{
												"identifier": "CanDestroy",
												"value": 4
											},
											{
												"identifier": "CanPlaceOn",
												"value": 5
											},
											{
												"identifier": "Other",
												"value": 6
											},
											{
												"attributes": [
													{
														"name": "since",
														"value": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "1.16.2"
															}
														}
													}
												],
												"identifier": "LeatherColor",
												"value": 7
											},
											{
												"attributes": [
													{
														"name": "since",
														"value": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "1.19.4"
															}
														}
													}
												],
												"identifier": "Trim",
												"value": 8
											}
										]
									}
								}
							}
						}
					],
					"desc": "Bitfield for which flags to hide on an item.\n",
					"key": "HideFlags",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.19.4"
								}
							}
						}
					],
					"desc": "Trim to apply to the item & armor when worn.\n",
					"key": "Trim",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::Trim"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::ItemBaseComponents": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "AttributeModifiers",
					"value": "attribute_modifiers"
				},
				{
					"identifier": "CanBreak",
					"value": "can_break"
				},
				{
					"identifier": "CanPlaceOn",
					"value": "can_place_on"
				},
				{
					"identifier": "CustomData",
					"value": "custom_data"
				},
				{
					"identifier": "CustomModelData",
					"value": "custom_model_data"
				},
				{
					"identifier": "Damage",
					"value": "damage"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						}
					],
					"identifier": "Enchantable",
					"value": "enchantable"
				},
				{
					"identifier": "EnchantmentGlintOverride",
					"value": "enchantment_glint_override"
				},
				{
					"identifier": "Enchantments",
					"value": "enchantments"
				},
				{
					"identifier": "FireResistant",
					"value": "fire_resistant"
				},
				{
					"identifier": "Food",
					"value": "food"
				},
				{
					"identifier": "HideAdditionalTooltip",
					"value": "hide_additional_tooltip"
				},
				{
					"identifier": "HideTooltip",
					"value": "hide_tooltip"
				},
				{
					"identifier": "ItemName",
					"value": "item_name"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21"
								}
							}
						}
					],
					"identifier": "JukeboxPlayable",
					"value": "jukebox_playable"
				},
				{
					"identifier": "Lore",
					"value": "lore"
				},
				{
					"identifier": "MaxDamage",
					"value": "max_damage"
				},
				{
					"identifier": "MaxStackSize",
					"value": "max_stack_size"
				},
				{
					"identifier": "Rarity",
					"value": "rarity"
				},
				{
					"identifier": "RepairCost",
					"value": "repair_cost"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.2"
								}
							}
						}
					],
					"identifier": "Repairable",
					"value": "repairable"
				},
				{
					"identifier": "Tool",
					"value": "tool"
				},
				{
					"identifier": "Trim",
					"value": "trim"
				},
				{
					"identifier": "Unbreakable",
					"value": "unbreakable"
				}
			]
		},
		"::java::server::world::item::ItemStack": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::SingleItem"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"desc": "Number of items in the stack\n",
					"key": "count",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1,
							"max": 99
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"desc": "Number of items in the stack\n",
					"key": "Count",
					"type": {
						"kind": "byte"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::ItemUseAnimation": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "None",
					"value": "none"
				},
				{
					"identifier": "Eat",
					"value": "eat"
				},
				{
					"identifier": "Drink",
					"value": "drink"
				},
				{
					"identifier": "Block",
					"value": "block"
				},
				{
					"identifier": "Bow",
					"value": "bow"
				},
				{
					"identifier": "Spear",
					"value": "spear"
				},
				{
					"identifier": "Crossbow",
					"value": "crossbow"
				},
				{
					"identifier": "Spyglass",
					"value": "spyglass"
				},
				{
					"identifier": "TootHorn",
					"value": "toot_horn"
				},
				{
					"identifier": "Brush",
					"value": "brush"
				},
				{
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.21.4"
								}
							}
						}
					],
					"identifier": "Bundle",
					"value": "bundle"
				}
			]
		},
		"::java::server::world::item::JukeboxPlayable": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "song",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "jukebox_song"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "show_in_tooltip",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.21"
						}
					}
				}
			]
		},
		"::java::server::world::item::knowledge_book::KnowledgeBook": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemBase"
					}
				},
				{
					"kind": "pair",
					"key": "Recipes",
					"type": {
						"kind": "list",
						"item": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "recipe"
										}
									}
								}
							]
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::leather_armor::ColorDisplay": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::Display"
					}
				},
				{
					"kind": "pair",
					"desc": "Color of the armor.\n\nCalculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.\n",
					"key": "color",
					"type": {
						"kind": "int",
						"attributes": [
							{
								"name": "color",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "composite_rgb"
									}
								}
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::leather_armor::DyedColor": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Color of the armor.\n\nCalculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.\n",
					"key": "rgb",
					"type": {
						"kind": "int",
						"attributes": [
							{
								"name": "color",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "composite_rgb"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "show_in_tooltip",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::leather_armor::LeatherArmor": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemBase"
					}
				},
				{
					"kind": "pair",
					"key": "display",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::leather_armor::ColorDisplay"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::map::ColorDisplay": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::Display"
					}
				},
				{
					"kind": "pair",
					"desc": "Calculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.\n",
					"key": "MapColor",
					"type": {
						"kind": "int",
						"attributes": [
							{
								"name": "color",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "composite_rgb"
									}
								}
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::map::Decoration": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Decoration type.\n",
					"key": "type",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "map_decoration_type"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::server::world::item::map::IconByteId",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "World x position.\n",
					"key": "x",
					"type": {
						"kind": "double"
					}
				},
				{
					"kind": "pair",
					"desc": "World z position.\n",
					"key": "z",
					"type": {
						"kind": "double"
					}
				},
				{
					"kind": "pair",
					"desc": "Rotation of the decoration, measured in degrees clockwise.\n",
					"key": "rot",
					"type": {
						"kind": "float"
					}
				}
			]
		},
		"::java::server::world::item::map::FilledMap": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Map number, representing the shared state holding map contents and markers.\n",
					"key": "map",
					"type": {
						"kind": "int"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Amount to increase the current map scale by when crafting.\n",
					"key": "map_scale_direction",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Whether the map should be locked after being taken out of the cartography table.\n",
					"key": "map_to_lock",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Decorations on the map.\n",
					"key": "Decorations",
					"type": {
						"kind": "list",
						"item": {
							"kind": "struct",
							"fields": [
								{
									"kind": "spread",
									"type": {
										"kind": "reference",
										"path": "::java::server::world::item::map::Decoration"
									}
								},
								{
									"kind": "pair",
									"desc": "An arbitrary unique string identifying the decoration.\n",
									"key": "id",
									"type": {
										"kind": "string"
									}
								}
							]
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Display for the item.\n",
					"key": "display",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::server::world::item::Display"
								}
							},
							{
								"kind": "pair",
								"desc": "Calculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.\n",
								"key": "MapColor",
								"type": {
									"kind": "int",
									"attributes": [
										{
											"name": "color",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "composite_rgb"
												}
											}
										}
									]
								},
								"optional": true
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::map::IconByteId": {
			"kind": "enum",
			"enumKind": "byte",
			"values": [
				{
					"identifier": "Player",
					"value": 0
				},
				{
					"identifier": "Frame",
					"value": 1
				},
				{
					"identifier": "RedMarker",
					"value": 2
				},
				{
					"identifier": "BlueMarker",
					"value": 3
				},
				{
					"identifier": "TargetX",
					"value": 4
				},
				{
					"identifier": "TargetPoint",
					"value": 5
				},
				{
					"identifier": "PlayerOffMap",
					"value": 6
				},
				{
					"identifier": "PlayerOffLimits",
					"value": 7
				},
				{
					"identifier": "Mansion",
					"value": 8
				},
				{
					"identifier": "Monument",
					"value": 9
				},
				{
					"identifier": "WhiteBanner",
					"value": 10
				},
				{
					"identifier": "OrangeBanner",
					"value": 11
				},
				{
					"identifier": "MagentaBanner",
					"value": 12
				},
				{
					"identifier": "LightBlueBanner",
					"value": 13
				},
				{
					"identifier": "YellowBanner",
					"value": 14
				},
				{
					"identifier": "LimeBanner",
					"value": 15
				},
				{
					"identifier": "PinkBanner",
					"value": 16
				},
				{
					"identifier": "GrayBanner",
					"value": 17
				},
				{
					"identifier": "LightGrayBanner",
					"value": 18
				},
				{
					"identifier": "CyanBanner",
					"value": 19
				},
				{
					"identifier": "PurpleBanner",
					"value": 20
				},
				{
					"identifier": "BlueBanner",
					"value": 21
				},
				{
					"identifier": "BrownBanner",
					"value": 22
				},
				{
					"identifier": "GreenBanner",
					"value": 23
				},
				{
					"identifier": "RedBanner",
					"value": 24
				},
				{
					"identifier": "BlackBanner",
					"value": 25
				},
				{
					"identifier": "RedX",
					"value": 26
				}
			]
		},
		"::java::server::world::item::map::IdentifiedDecoration": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::map::Decoration"
					}
				},
				{
					"kind": "pair",
					"desc": "An arbitrary unique string identifying the decoration.\n",
					"key": "id",
					"type": {
						"kind": "string"
					}
				}
			]
		},
		"::java::server::world::item::map::MapDecorations": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": {
						"kind": "string"
					},
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::map::Decoration"
					}
				}
			]
		},
		"::java::server::world::item::PlaySoundConsumeEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "sound",
					"type": {
						"kind": "reference",
						"path": "::java::data::util::SoundEventRef"
					}
				}
			]
		},
		"::java::server::world::item::potion::EffectItem": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemBase"
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.2"
								}
							}
						}
					],
					"desc": "List of the effects that will be applied with this item.\n",
					"key": "CustomPotionEffects",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::util::effect::MobEffectInstance"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.2"
								}
							}
						}
					],
					"desc": "List of the effects that will be applied with this item.\n",
					"key": "custom_potion_effects",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::util::effect::MobEffectInstance"
						}
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Default potion effect\n",
					"key": "Potion",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "potion"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Calculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.\n",
					"key": "CustomPotionColor",
					"type": {
						"kind": "int",
						"attributes": [
							{
								"name": "color",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "composite_rgb"
									}
								}
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::potion::PotionContents": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "potion",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "potion"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Calculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.\n",
					"key": "custom_color",
					"type": {
						"kind": "int",
						"attributes": [
							{
								"name": "color",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "composite_rgb"
									}
								}
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "If present, is used to generate the item name using the translation key `item.minecraft.<potion_type>.effect.<custom_name>`.\n",
					"key": "custom_name",
					"type": {
						"kind": "string"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "custom_effects",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::util::effect::MobEffectInstance"
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::Rarity": {
			"kind": "enum",
			"enumKind": "string",
			"values": [
				{
					"identifier": "Common",
					"value": "common"
				},
				{
					"identifier": "Uncommon",
					"value": "uncommon"
				},
				{
					"identifier": "Rare",
					"value": "rare"
				},
				{
					"identifier": "Epic",
					"value": "epic"
				}
			]
		},
		"::java::server::world::item::RemoveEffectsConsumeEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "effects",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "mob_effect"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "mob_effect"
												}
											}
										}
									]
								}
							}
						]
					}
				}
			]
		},
		"::java::server::world::item::Repairable": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "items",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "item"
													}
												},
												"tags": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "allowed"
													}
												}
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "item"
												}
											}
										}
									]
								}
							}
						]
					}
				}
			],
			"attributes": [
				{
					"name": "since",
					"value": {
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "1.21.2"
						}
					}
				}
			]
		},
		"::java::server::world::item::shield::BlockEntityTag": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Base color.\n",
					"key": "Base",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::color::ColorInt"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"key": "Patterns",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::item::shield::Pattern"
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::shield::Pattern": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Color of the pattern.\n",
					"key": "Color",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::color::ColorInt"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Pattern id.\n",
					"key": "Pattern",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::BannerPattern"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::shield::Shield": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Banner Data.\n",
					"key": "BlockEntityTag",
					"type": {
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"desc": "Base color.\n",
								"key": "Base",
								"type": {
									"kind": "reference",
									"path": "::java::server::util::color::ColorInt"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "Patterns",
								"type": {
									"kind": "list",
									"item": {
										"kind": "reference",
										"path": "::java::server::world::item::shield::Pattern"
									}
								},
								"optional": true
							}
						]
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::SingleItem": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "ID of the item.\n",
					"key": "id",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "item"
											}
										}
									}
								]
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									},
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "item"
													}
												},
												"exclude": {
													"kind": "tree",
													"values": {
														"0": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "air"
															}
														}
													}
												}
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "since",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"key": "components",
					"type": {
						"kind": "concrete",
						"child": {
							"kind": "reference",
							"path": "::java::server::world::item::DataComponentPatch"
						},
						"typeArgs": [
							{
								"kind": "dispatcher",
								"parallelIndices": [
									{
										"kind": "dynamic",
										"accessor": [
											"id"
										]
									}
								],
								"registry": "minecraft:item_component"
							}
						]
					},
					"optional": true
				},
				{
					"kind": "pair",
					"attributes": [
						{
							"name": "until",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "1.20.5"
								}
							}
						}
					],
					"key": "tag",
					"type": {
						"kind": "dispatcher",
						"parallelIndices": [
							{
								"kind": "dynamic",
								"accessor": [
									"id"
								]
							}
						],
						"registry": "minecraft:item"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::spawn_item::SpawnItem": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Data of the spawned entity.\n",
					"key": "EntityTag",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::entity::AnyEntity"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::spawn_item::SpawnItemComponents": {
			"kind": "union",
			"members": [
				{
					"kind": "reference",
					"path": "::java::server::world::item::ItemBaseComponents"
				},
				{
					"kind": "literal",
					"value": {
						"kind": "string",
						"value": "entity_data"
					}
				}
			]
		},
		"::java::server::world::item::suspicious_stew::Effect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "EffectId",
					"type": {
						"kind": "reference",
						"path": "::java::server::util::EffectId"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Duration in ticks.\n",
					"key": "EffectDuration",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::suspicious_stew::SuspiciousStew": {
			"kind": "struct",
			"fields": [
				{
					"kind": "spread",
					"type": {
						"kind": "reference",
						"path": "::java::server::world::item::ItemBase"
					}
				},
				{
					"kind": "pair",
					"desc": "Effects this stew will give.\n",
					"key": "Effects",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::item::suspicious_stew::Effect"
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::suspicious_stew::SuspiciousStewEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "id",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "mob_effect"
									}
								}
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "Duration of the effect in ticks. Defaults to `160`; 8 seconds.\n",
					"key": "duration",
					"type": {
						"kind": "int",
						"valueRange": {
							"kind": 0,
							"min": 1
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::TeleportRandomlyConsumeEffect": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Defaults to 16.\n",
					"key": "diameter",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 0,
							"min": 1
						}
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::Tool": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Blocks that this tool has a special behavior with.\n",
					"key": "rules",
					"type": {
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::item::ToolRule"
						}
					}
				},
				{
					"kind": "pair",
					"desc": "Used if no rules override it. Defaults to 1.0.\n",
					"key": "default_mining_speed",
					"type": {
						"kind": "float"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Amount of durability to remove each time a block is broken with this tool. Must be a non-negative integer.\n",
					"key": "damage_per_block",
					"type": {
						"kind": "int"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::ToolRule": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "blocks",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "block"
											}
										}
									}
								]
							},
							{
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "block"
												}
											}
										}
									]
								}
							},
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "block"
													}
												}
											}
										}
									}
								]
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "Overrides the default mining speed.\n",
					"key": "speed",
					"type": {
						"kind": "float"
					},
					"optional": true
				},
				{
					"kind": "pair",
					"desc": "Overrides whether or not this tool is considered correct to mine at its most efficient speed, and to drop items if the block's loot table requires it.\n",
					"key": "correct_for_drops",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::Trim": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "The trim material of this item..\n",
					"key": "material",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "trim_material"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::data::trim::TrimMaterial"
							}
						]
					}
				},
				{
					"kind": "pair",
					"desc": "The trim pattern of this item.\n",
					"key": "pattern",
					"type": {
						"kind": "union",
						"members": [
							{
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "trim_pattern"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::data::trim::TrimPattern"
							}
						]
					}
				},
				{
					"kind": "pair",
					"key": "show_in_tooltip",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::Unbreakable": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"key": "show_in_tooltip",
					"type": {
						"kind": "boolean"
					},
					"optional": true
				}
			]
		},
		"::java::server::world::item::UseCooldown": {
			"kind": "struct",
			"fields": [
				{
					"kind": "pair",
					"desc": "Time the cooldown will last.\n",
					"key": "seconds",
					"type": {
						"kind": "float",
						"valueRange": {
							"kind": 2,
							"min": 0
						}
					}
				},
				{
					"kind": "pair",
					"desc": "If present, this item will be part of a cooldown group and no longer share cooldowns with its base item type.\n\nInstead, cooldowns applied to this item will only be shared with any other items that are part of the same cooldown group.\n",
					"key": "cooldown_group",
					"type": {
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "cooldown_group"
											}
										},
										"definition": {
											"kind": "literal",
											"value": {
												"kind": "boolean",
												"value": true
											}
										}
									}
								}
							}
						]
					},
					"optional": true
				}
			]
		}
	},
	"mcdoc/dispatcher": {
		"mcdoc:block_item_states": {
			"%none": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": {
							"kind": "string"
						},
						"type": {
							"kind": "string"
						}
					}
				]
			},
			"%unknown": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": {
							"kind": "string"
						},
						"type": {
							"kind": "string"
						}
					}
				]
			}
		},
		"mcdoc:block_state_keys": {
			"%none": {
				"kind": "string"
			},
			"%unknown": {
				"kind": "string"
			}
		},
		"mcdoc:block_states": {
			"%none": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": {
							"kind": "string"
						},
						"type": {
							"kind": "string"
						}
					}
				]
			},
			"%unknown": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": {
							"kind": "string"
						},
						"type": {
							"kind": "string"
						}
					}
				]
			}
		},
		"mcdoc:custom_data": {
			"%unknown": {
				"kind": "any"
			}
		},
		"mcdoc:fluid_states": {
			"%none": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": {
							"kind": "string"
						},
						"type": {
							"kind": "string"
						}
					}
				]
			},
			"%unknown": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": {
							"kind": "string"
						},
						"type": {
							"kind": "string"
						}
					}
				]
			}
		},
		"mcdoc:marker_data": {
			"%unknown": {
				"kind": "any"
			}
		},
		"minecraft:apply_bonus_formula": {
			"binomial_with_bonus_count": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "parameters",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "extra",
									"type": {
										"kind": "int"
									}
								},
								{
									"kind": "pair",
									"key": "probability",
									"type": {
										"kind": "float",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 1
										}
									}
								}
							]
						}
					}
				]
			},
			"ore_drops": {
				"kind": "struct",
				"fields": []
			},
			"uniform_bonus_count": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "parameters",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "bonusMultiplier",
									"type": {
										"kind": "int"
									}
								}
							]
						}
					}
				]
			}
		},
		"minecraft:biome_source": {
			"checkerboard": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "scale",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 62
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "biomes",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "list",
									"item": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "worldgen/biome"
													}
												}
											}
										]
									}
								},
								{
									"kind": "string",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.18.2"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "worldgen/biome"
														}
													},
													"tags": {
														"kind": "reference",
														"path": "::java::data::worldgen::dimension::biome_source::allowed"
													}
												}
											}
										}
									]
								}
							]
						}
					}
				]
			},
			"fixed": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "biome",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "worldgen/biome"
										}
									}
								}
							]
						}
					}
				]
			},
			"multi_noise": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::dimension::biome_source::MultiNoiseBase"
						}
					},
					{
						"kind": "pair",
						"key": "preset",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "reference",
									"path": "::java::data::worldgen::dimension::biome_source::MultiNoisePreset",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.18"
												}
											}
										}
									]
								},
								{
									"kind": "reference",
									"path": "::java::data::worldgen::dimension::biome_source::MultiNoisePreset",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.18"
												}
											}
										},
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.19.4"
												}
											}
										},
										{
											"name": "id"
										}
									]
								},
								{
									"kind": "string",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.19.4"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "worldgen/multi_noise_biome_source_parameter_list"
												}
											}
										}
									]
								}
							]
						},
						"optional": true
					},
					{
						"kind": "spread",
						"type": {
							"kind": "dispatcher",
							"parallelIndices": [
								{
									"kind": "dynamic",
									"accessor": [
										"preset"
									]
								}
							],
							"registry": "minecraft:multi_noise_biome_source"
						}
					}
				]
			},
			"the_end": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"key": "seed",
						"type": {
							"kind": "long",
							"attributes": [
								{
									"name": "random"
								}
							]
						}
					}
				]
			},
			"vanilla_layered": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "seed",
						"type": {
							"kind": "long",
							"attributes": [
								{
									"name": "random"
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "large_biomes",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "legacy_biome_init_layer",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "until",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.18"
							}
						}
					}
				]
			}
		},
		"minecraft:block": {
			"acacia_hanging_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19.3"
							}
						}
					}
				]
			},
			"acacia_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"acacia_wall_hanging_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19.3"
							}
						}
					}
				]
			},
			"acacia_wall_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"bamboo_hanging_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19.3"
							}
						}
					}
				]
			},
			"bamboo_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19.3"
							}
						}
					}
				]
			},
			"bamboo_wall_hanging_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19.3"
							}
						}
					}
				]
			},
			"bamboo_wall_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19.3"
							}
						}
					}
				]
			},
			"barrel": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "container"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"beacon": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "beacon"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"bed": {
				"kind": "reference",
				"path": "::java::server::world::block::BlockEntity"
			},
			"bee_nest": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "beehive"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"beehive": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "beehive"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"bell": {
				"kind": "reference",
				"path": "::java::server::world::block::BlockEntity"
			},
			"birch_hanging_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19.3"
							}
						}
					}
				]
			},
			"birch_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"birch_wall_hanging_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19.3"
							}
						}
					}
				]
			},
			"birch_wall_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"black_banner": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "banner"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"black_shulker_box": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "container"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"blast_furnace": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "furnace"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"blue_banner": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "banner"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"blue_shulker_box": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "container"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"brewing_stand": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "brewing_stand"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"brown_banner": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "banner"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"brown_shulker_box": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "container"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"calibrated_sculk_sensor": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sculk_sensor"
					}
				],
				"registry": "minecraft:block_entity",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.20"
							}
						}
					}
				]
			},
			"campfire": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "campfire"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"chain_command_block": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "command_block"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"cherry_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19.4"
							}
						}
					}
				]
			},
			"cherry_wall_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19.4"
							}
						}
					}
				]
			},
			"chest": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "container"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"chiseled_bookshelf": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "chiseled_bookshelf"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"command_block": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "command_block"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"comparator": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "comparator"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"conduit": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "conduit"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"creeper_head": {
				"kind": "reference",
				"path": "::java::server::world::block::BlockEntity"
			},
			"creeper_wall_head": {
				"kind": "reference",
				"path": "::java::server::world::block::BlockEntity"
			},
			"crimson_hanging_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19.3"
							}
						}
					}
				]
			},
			"crimson_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"crimson_wall_hanging_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19.3"
							}
						}
					}
				]
			},
			"crimson_wall_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"cyan_banner": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "banner"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"cyan_shulker_box": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "container"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"dark_oak_hanging_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19.3"
							}
						}
					}
				]
			},
			"dark_oak_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"dark_oak_wall_hanging_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19.3"
							}
						}
					}
				]
			},
			"dark_oak_wall_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"daylight_detector": {
				"kind": "reference",
				"path": "::java::server::world::block::BlockEntity"
			},
			"decorated_pot": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "decorated_pot"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"dispenser": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "dispenser"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"dragon_head": {
				"kind": "reference",
				"path": "::java::server::world::block::BlockEntity"
			},
			"dragon_wall_head": {
				"kind": "reference",
				"path": "::java::server::world::block::BlockEntity"
			},
			"dropper": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "dispenser"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"enchanting_table": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "enchanting_table"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"end_gateway": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "end_gateway"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"end_portal": {
				"kind": "reference",
				"path": "::java::server::world::block::BlockEntity"
			},
			"ender_chest": {
				"kind": "reference",
				"path": "::java::server::world::block::BlockEntity"
			},
			"furnace": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "furnace"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"gray_banner": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "banner"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"gray_shulker_box": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "container"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"green_banner": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "banner"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"green_shulker_box": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "container"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"hopper": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "hopper"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"jigsaw": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "jigsaw"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"jukebox": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "jukebox"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"jungle_hanging_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19.3"
							}
						}
					}
				]
			},
			"jungle_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"jungle_wall_hanging_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19.3"
							}
						}
					}
				]
			},
			"jungle_wall_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"lectern": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "lectern"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"light_blue_banner": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "banner"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"light_blue_shulker_box": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "container"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"light_gray_banner": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "banner"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"light_gray_shulker_box": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "container"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"lime_banner": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "banner"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"lime_shulker_box": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "container"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"magenta_banner": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "banner"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"magenta_shulker_box": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "container"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"mangrove_hanging_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19.3"
							}
						}
					}
				]
			},
			"mangrove_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19"
							}
						}
					}
				]
			},
			"mangrove_wall_hanging_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19.3"
							}
						}
					}
				]
			},
			"mangrove_wall_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19"
							}
						}
					}
				]
			},
			"moving_piston": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "moving_piston"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"oak_hanging_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19.3"
							}
						}
					}
				]
			},
			"oak_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"oak_wall_hanging_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19.3"
							}
						}
					}
				]
			},
			"oak_wall_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"orange_banner": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "banner"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"orange_shulker_box": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "container"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"pink_banner": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "banner"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"pink_shulker_box": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "container"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"player_head": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "skull"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"player_wall_head": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "skull"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"purple_banner": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "banner"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"purple_shulker_box": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "container"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"red_banner": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "banner"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"red_shulker_box": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "container"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"repeating_command_block": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "command_block"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"sculk_catalyst": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sculk_catalyst"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"sculk_sensor": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sculk_sensor"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"sculk_shrieker": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sculk_shrieker"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"shulker_box": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "container"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"skeleton_skull": {
				"kind": "reference",
				"path": "::java::server::world::block::BlockEntity"
			},
			"skeleton_wall_skull": {
				"kind": "reference",
				"path": "::java::server::world::block::BlockEntity"
			},
			"smoker": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "furnace"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"soul_campfire": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "campfire"
					}
				],
				"registry": "minecraft:block_entity",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.16"
							}
						}
					}
				]
			},
			"spawner": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "mob_spawner"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"spruce_hanging_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19.3"
							}
						}
					}
				]
			},
			"spruce_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"spruce_wall_hanging_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19.3"
							}
						}
					}
				]
			},
			"spruce_wall_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"structure_block": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "structure_block"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"suspicious_gravel": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "brushable_block"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"suspicious_sand": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "brushable_block"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"trapped_chest": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "container"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"trial_spawner": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "trial_spawner"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"vault": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "vault"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"warped_hanging_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19.3"
							}
						}
					}
				]
			},
			"warped_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"warped_wall_hanging_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19.3"
							}
						}
					}
				]
			},
			"warped_wall_sign": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "sign"
					}
				],
				"registry": "minecraft:block_entity",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"white_banner": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "banner"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"white_shulker_box": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "container"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"wither_skeleton_skull": {
				"kind": "reference",
				"path": "::java::server::world::block::BlockEntity"
			},
			"wither_skeleton_wall_skull": {
				"kind": "reference",
				"path": "::java::server::world::block::BlockEntity"
			},
			"yellow_banner": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "banner"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"yellow_shulker_box": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "static",
						"value": "container"
					}
				],
				"registry": "minecraft:block_entity"
			},
			"zombie_head": {
				"kind": "reference",
				"path": "::java::server::world::block::BlockEntity"
			},
			"zombie_wall_head": {
				"kind": "reference",
				"path": "::java::server::world::block::BlockEntity"
			}
		},
		"minecraft:block_entity": {
			"banner": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::BlockEntity"
						}
					},
					{
						"kind": "pair",
						"desc": "Shows up on map markers\n",
						"key": "CustomName",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "text_component"
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						],
						"key": "Patterns",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::world::block::banner::LegacyPattern"
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						],
						"key": "patterns",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::world::block::banner::Pattern"
							}
						},
						"optional": true
					}
				]
			},
			"beacon": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::BlockEntity"
						}
					},
					{
						"kind": "pair",
						"key": "CustomName",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "text_component"
								}
							]
						},
						"optional": true
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::Lockable"
						}
					},
					{
						"kind": "pair",
						"desc": "Number of levels from the pyramid.\n",
						"key": "Levels",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.2"
									}
								}
							}
						],
						"desc": "Potion effect.\n",
						"key": "Primary",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "reference",
									"path": "::java::server::world::block::beacon::NoneId"
								},
								{
									"kind": "reference",
									"path": "::java::server::util::EffectId"
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.2"
									}
								}
							}
						],
						"desc": "Potion effect.\n",
						"key": "Secondary",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "reference",
									"path": "::java::server::world::block::beacon::NoneId"
								},
								{
									"kind": "reference",
									"path": "::java::server::util::EffectId"
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.2"
									}
								}
							}
						],
						"key": "primary_effect",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "mob_effect"
										}
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.2"
									}
								}
							}
						],
						"key": "secondary_effect",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "mob_effect"
										}
									}
								}
							]
						},
						"optional": true
					}
				]
			},
			"beehive": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::BlockEntity"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						],
						"key": "FlowerPos",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::beehive::FlowerPos"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						],
						"key": "flower_pos",
						"type": {
							"kind": "int_array",
							"lengthRange": {
								"kind": 0,
								"min": 3,
								"max": 3
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						],
						"key": "Bees",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::world::block::beehive::LegacyBee"
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						],
						"key": "bees",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::world::block::beehive::Bee"
							}
						},
						"optional": true
					}
				]
			},
			"blast_furnace": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::BlockEntity"
						}
					},
					{
						"kind": "pair",
						"key": "CustomName",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "text_component"
								}
							]
						},
						"optional": true
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::Lockable"
						}
					},
					{
						"kind": "pair",
						"desc": "The items in this furnace, with slots:\n\n* 0: Item being smelted\n\n* 1: Fuel\n\n* 2: Output\n",
						"key": "Items",
						"type": {
							"kind": "list",
							"item": {
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::server::util::inventory::SlottedItem"
								},
								"typeArgs": [
									{
										"kind": "byte",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 2
										}
									}
								]
							},
							"lengthRange": {
								"kind": 0,
								"min": 0,
								"max": 3
							}
						},
						"optional": true
					},
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.4"
									}
								}
							}
						],
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"desc": "Ticks until the current fuel runs out.\n",
									"key": "BurnTime",
									"type": {
										"kind": "short"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"desc": "Ticks the item has been smelting for.\n",
									"key": "CookTime",
									"type": {
										"kind": "short"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"desc": "Total ticks the item will take to be smelted.\n",
									"key": "CookTimeTotal",
									"type": {
										"kind": "short"
									},
									"optional": true
								}
							]
						}
					},
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.4"
									}
								}
							}
						],
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"desc": "Total ticks the item will take to be smelted.\n",
									"key": "cooking_total_time",
									"type": {
										"kind": "short"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"desc": "Ticks the item has been smelting for.\n",
									"key": "cooking_time_spent",
									"type": {
										"kind": "short"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"desc": "Ticks until the current fuel runs out.\n",
									"key": "lit_time_remaining",
									"type": {
										"kind": "short"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"desc": "Total ticks the current fuel will burn.\n",
									"key": "lit_total_time",
									"type": {
										"kind": "short"
									},
									"optional": true
								}
							]
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"desc": "Recipes that have been used since the last time a result item was removed from the GUI. Used to calculate the experience to give to the player.\n",
						"key": "RecipesUsed",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"desc": "How many times this recipe has been used.\n",
									"key": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "recipe"
													}
												}
											}
										]
									},
									"type": {
										"kind": "int"
									}
								}
							]
						},
						"optional": true
					}
				]
			},
			"brewing_stand": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::BlockEntity"
						}
					},
					{
						"kind": "pair",
						"key": "CustomName",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "text_component"
								}
							]
						},
						"optional": true
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::Lockable"
						}
					},
					{
						"kind": "pair",
						"desc": "* 0: left brewing slot\n\n* 1: middle brewing slot\n\n* 2: right brewing slot\n\n* 3: ingredient slot\n\n* 4: fuel slot\n",
						"key": "Items",
						"type": {
							"kind": "list",
							"item": {
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::server::util::inventory::SlottedItem"
								},
								"typeArgs": [
									{
										"kind": "byte",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 4
										}
									}
								]
							},
							"lengthRange": {
								"kind": 0,
								"min": 0,
								"max": 5
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Number of ticks until the brewing is complete.\n",
						"key": "BrewTime",
						"type": {
							"kind": "short"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Amount of fuel the brewing stand has left.\n",
						"key": "Fuel",
						"type": {
							"kind": "byte"
						},
						"optional": true
					}
				]
			},
			"brushable_block": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::BlockEntity"
						}
					},
					{
						"kind": "pair",
						"desc": "Loot table that will decide the brushed loot.\n",
						"key": "LootTable",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "tree",
										"values": {
											"registry": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "loot_table"
												}
											},
											"empty": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "allowed"
												}
											}
										}
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Seed of the loot table.\n",
						"key": "LootTableSeed",
						"type": {
							"kind": "long",
							"attributes": [
								{
									"name": "random"
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Item that was rolled from the loot table, which is currently peeking out.\n",
						"key": "item",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemStack"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Direction of the block that was interacted with.\n\nWrite-only, is not saved by the game.\n",
						"key": "hit_direction",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::direction::DirectionInt"
						},
						"optional": true
					}
				]
			},
			"calibrated_sculk_sensor": {
				"kind": "reference",
				"path": "::java::server::world::block::sculk_sensor::SculkSensor",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.20"
							}
						}
					}
				]
			},
			"campfire": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::BlockEntity"
						}
					},
					{
						"kind": "pair",
						"key": "Items",
						"type": {
							"kind": "list",
							"item": {
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::server::util::inventory::SlottedItem"
								},
								"typeArgs": [
									{
										"kind": "byte",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 3
										}
									}
								]
							},
							"lengthRange": {
								"kind": 0,
								"min": 0,
								"max": 4
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Ticks each item has been cooking.\n\nIndex is according to item slot.\n",
						"key": "CookingTimes",
						"type": {
							"kind": "int_array",
							"lengthRange": {
								"kind": 0,
								"min": 4,
								"max": 4
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Ticks each item still has to cook.\n\nIndex is according to item slot.\n",
						"key": "CookingTotalTimes",
						"type": {
							"kind": "int_array",
							"lengthRange": {
								"kind": 0,
								"min": 4,
								"max": 4
							}
						},
						"optional": true
					}
				]
			},
			"chiseled_bookshelf": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::BlockEntity"
						}
					},
					{
						"kind": "pair",
						"desc": "Slots from 0 to 5.\n",
						"key": "Items",
						"type": {
							"kind": "list",
							"item": {
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::server::util::SlottedItem"
								},
								"typeArgs": [
									{
										"kind": "byte",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 5
										}
									}
								]
							},
							"lengthRange": {
								"kind": 0,
								"min": 0,
								"max": 6
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "last_interacted_slot",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 5
							}
						},
						"optional": true
					}
				]
			},
			"command_block": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::BlockEntity"
						}
					},
					{
						"kind": "pair",
						"key": "CustomName",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "text_component"
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "Command",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "command",
									"value": {
										"kind": "tree",
										"values": {
											"slash": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "allowed"
												}
											},
											"empty": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "allowed"
												}
											},
											"max_length": {
												"kind": "literal",
												"value": {
													"kind": "int",
													"value": 32500
												}
											}
										}
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Success count of the last command.\n",
						"key": "SuccessCount",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Output of the last command.\n",
						"key": "LastOutput",
						"type": {
							"kind": "string"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether to record command output.\n",
						"key": "TrackOutput",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether it is powered by redstone.\n",
						"key": "powered",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether it is automatically powered.\n",
						"key": "auto",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether the previous command block was successful when the command block was executed.\n\nThis is always true for non-conditional command blocks.\n",
						"key": "conditionMet",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether to record the tick of the latest command execution.\n",
						"key": "UpdateLastExecution",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Tick of the latest command execution.\n",
						"key": "LastExecution",
						"type": {
							"kind": "long"
						},
						"optional": true
					}
				]
			},
			"comparator": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::BlockEntity"
						}
					},
					{
						"kind": "pair",
						"desc": "Strength of the redstone output.\n",
						"key": "OutputSignal",
						"type": {
							"kind": "int"
						},
						"optional": true
					}
				]
			},
			"conduit": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::BlockEntity"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"desc": "The hostile mob that the conduit is currently attacking.\n",
						"key": "target_uuid",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::conduit::TargetUuid",
							"attributes": [
								{
									"name": "uuid"
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"desc": "The hostile mob that the conduit is currently attacking.\n",
						"key": "Target",
						"type": {
							"kind": "int_array",
							"lengthRange": {
								"kind": 0,
								"min": 4,
								"max": 4
							},
							"attributes": [
								{
									"name": "uuid"
								}
							]
						},
						"optional": true
					}
				]
			},
			"container": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::container::ContainerBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Slots from 0 to 26.\n",
						"key": "Items",
						"type": {
							"kind": "list",
							"item": {
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::server::util::inventory::SlottedItem"
								},
								"typeArgs": [
									{
										"kind": "byte",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 26
										}
									}
								]
							},
							"lengthRange": {
								"kind": 0,
								"min": 0,
								"max": 27
							}
						},
						"optional": true
					}
				]
			},
			"crafter": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::BlockEntity"
						}
					},
					{
						"kind": "pair",
						"key": "crafting_ticks_remaining",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "disabled_slots",
						"type": {
							"kind": "int_array",
							"lengthRange": {
								"kind": 0,
								"max": 9
							},
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 8
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "triggered",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "literal",
									"value": {
										"kind": "int",
										"value": 0
									}
								},
								{
									"kind": "literal",
									"value": {
										"kind": "int",
										"value": 1
									}
								}
							]
						},
						"optional": true
					}
				]
			},
			"creaking_heart": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::BlockEntity"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.4"
									}
								}
							}
						],
						"desc": "The creaking mob that is linked to this heart.\n",
						"key": "creaking",
						"type": {
							"kind": "list",
							"item": {
								"kind": "int"
							},
							"lengthRange": {
								"kind": 0,
								"min": 4,
								"max": 4
							},
							"attributes": [
								{
									"name": "uuid"
								}
							]
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"decorated_pot": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::BlockEntity"
						}
					},
					{
						"kind": "pair",
						"desc": "Item ID of what was used for each side of the pot.\n",
						"key": "sherds",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::world::block::decorated_pot::Sherd",
								"attributes": [
									{
										"name": "id"
									}
								]
							},
							"lengthRange": {
								"kind": 0,
								"min": 4,
								"max": 4
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.3"
									}
								}
							}
						],
						"desc": "Loot table that will populate this container.\n",
						"key": "LootTable",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "tree",
										"values": {
											"registry": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "loot_table"
												}
											},
											"empty": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "allowed"
												}
											}
										}
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.3"
									}
								}
							}
						],
						"desc": "Seed of the loot table.\n",
						"key": "LootTableSeed",
						"type": {
							"kind": "long",
							"attributes": [
								{
									"name": "random"
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.3"
									}
								}
							}
						],
						"key": "item",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemStack"
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19.4"
							}
						}
					}
				]
			},
			"dispenser": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::container::ContainerBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Slots from 0 to 8.\n",
						"key": "Items",
						"type": {
							"kind": "list",
							"item": {
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::server::util::inventory::SlottedItem"
								},
								"typeArgs": [
									{
										"kind": "byte",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 8
										}
									}
								]
							},
							"lengthRange": {
								"kind": 0,
								"min": 0,
								"max": 9
							}
						},
						"optional": true
					}
				]
			},
			"dropper": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::container::ContainerBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Slots from 0 to 8.\n",
						"key": "Items",
						"type": {
							"kind": "list",
							"item": {
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::server::util::inventory::SlottedItem"
								},
								"typeArgs": [
									{
										"kind": "byte",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 8
										}
									}
								]
							},
							"lengthRange": {
								"kind": 0,
								"min": 0,
								"max": 9
							}
						},
						"optional": true
					}
				]
			},
			"enchanting_table": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::BlockEntity"
						}
					},
					{
						"kind": "pair",
						"key": "CustomName",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "text_component"
								}
							]
						},
						"optional": true
					}
				]
			},
			"end_gateway": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::BlockEntity"
						}
					},
					{
						"kind": "pair",
						"desc": "In game ticks.\n",
						"key": "Age",
						"type": {
							"kind": "long"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether to teleport to the exact location.\n",
						"key": "ExactTeleport",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						],
						"desc": "Coordinates of where to teleport entities to.\n",
						"key": "ExitPortal",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::end_gateway::ExitPortal"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						],
						"desc": "Coordinates of where to teleport entities to.\n",
						"key": "exit_portal",
						"type": {
							"kind": "int_array",
							"lengthRange": {
								"kind": 0,
								"min": 3,
								"max": 3
							}
						},
						"optional": true
					}
				]
			},
			"furnace": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::BlockEntity"
						}
					},
					{
						"kind": "pair",
						"key": "CustomName",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "text_component"
								}
							]
						},
						"optional": true
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::Lockable"
						}
					},
					{
						"kind": "pair",
						"desc": "The items in this furnace, with slots:\n\n* 0: Item being smelted\n\n* 1: Fuel\n\n* 2: Output\n",
						"key": "Items",
						"type": {
							"kind": "list",
							"item": {
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::server::util::inventory::SlottedItem"
								},
								"typeArgs": [
									{
										"kind": "byte",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 2
										}
									}
								]
							},
							"lengthRange": {
								"kind": 0,
								"min": 0,
								"max": 3
							}
						},
						"optional": true
					},
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.4"
									}
								}
							}
						],
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"desc": "Ticks until the current fuel runs out.\n",
									"key": "BurnTime",
									"type": {
										"kind": "short"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"desc": "Ticks the item has been smelting for.\n",
									"key": "CookTime",
									"type": {
										"kind": "short"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"desc": "Total ticks the item will take to be smelted.\n",
									"key": "CookTimeTotal",
									"type": {
										"kind": "short"
									},
									"optional": true
								}
							]
						}
					},
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.4"
									}
								}
							}
						],
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"desc": "Total ticks the item will take to be smelted.\n",
									"key": "cooking_total_time",
									"type": {
										"kind": "short"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"desc": "Ticks the item has been smelting for.\n",
									"key": "cooking_time_spent",
									"type": {
										"kind": "short"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"desc": "Ticks until the current fuel runs out.\n",
									"key": "lit_time_remaining",
									"type": {
										"kind": "short"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"desc": "Total ticks the current fuel will burn.\n",
									"key": "lit_total_time",
									"type": {
										"kind": "short"
									},
									"optional": true
								}
							]
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"desc": "Recipes that have been used since the last time a result item was removed from the GUI. Used to calculate the experience to give to the player.\n",
						"key": "RecipesUsed",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"desc": "How many times this recipe has been used.\n",
									"key": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "recipe"
													}
												}
											}
										]
									},
									"type": {
										"kind": "int"
									}
								}
							]
						},
						"optional": true
					}
				]
			},
			"hanging_sign": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::block::sign::OldSign",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20"
									}
								}
							}
						]
					},
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::server::world::block::BlockEntity"
								}
							},
							{
								"kind": "pair",
								"key": "back_text",
								"type": {
									"kind": "reference",
									"path": "::java::server::world::block::sign::SignText"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "front_text",
								"type": {
									"kind": "reference",
									"path": "::java::server::world::block::sign::SignText"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"desc": "Whether the sign can no longer be edited. If a sign is editable\n",
								"key": "is_waxed",
								"type": {
									"kind": "boolean"
								},
								"optional": true
							}
						],
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20"
									}
								}
							}
						]
					}
				]
			},
			"hopper": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::container::ContainerBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Slots from 0 to 4.\n",
						"key": "Items",
						"type": {
							"kind": "list",
							"item": {
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::server::util::inventory::SlottedItem"
								},
								"typeArgs": [
									{
										"kind": "byte",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 4
										}
									}
								]
							},
							"lengthRange": {
								"kind": 0,
								"min": 0,
								"max": 5
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Ticks until an item can be transferred.\n",
						"key": "TransferCooldown",
						"type": {
							"kind": "int"
						},
						"optional": true
					}
				]
			},
			"jigsaw": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"desc": "Structure pool this will connect to.\n",
						"key": "target_pool",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "worldgen/template_pool"
										}
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"desc": "How the resultant structure can be transformed.\n",
						"key": "joint",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::jigsaw::JointType"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"desc": "Structure pool this will \"spawn\" in.\n",
						"key": "pool",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "worldgen/template_pool"
										}
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"desc": "ID this will \"spawn\" in.\n",
						"key": "name",
						"type": {
							"kind": "string"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"desc": "ID of the type of jigsaw this will be \"spawned\" from.\n",
						"key": "target",
						"type": {
							"kind": "string"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Final block state of the jigsaw.\n",
						"key": "final_state",
						"type": {
							"kind": "string"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"desc": "ID of the type of jigsaw this connects to.\n",
						"key": "attachment_type",
						"type": {
							"kind": "string"
						},
						"optional": true
					}
				]
			},
			"jukebox": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::BlockEntity"
						}
					},
					{
						"kind": "pair",
						"key": "RecordItem",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemStack"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "TickCount",
						"type": {
							"kind": "long"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "RecordStartTick",
						"type": {
							"kind": "long"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "IsPlaying",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"lectern": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::BlockEntity"
						}
					},
					{
						"kind": "pair",
						"key": "Book",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemStack"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Current page the book is on.\n",
						"key": "Page",
						"type": {
							"kind": "int"
						},
						"optional": true
					}
				]
			},
			"mob_spawner": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::BlockEntity"
						}
					},
					{
						"kind": "pair",
						"desc": "Entities that can be placed.\n",
						"key": "SpawnPotentials",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::world::block::spawner::SpawnPotential"
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Data for the next mob to spawn.\n\nOverwritten by `SpawnPotentials`.\n",
						"key": "SpawnData",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "reference",
									"path": "::java::server::world::entity::AnyEntity",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.18"
												}
											}
										}
									]
								},
								{
									"kind": "reference",
									"path": "::java::server::world::block::spawner::SpawnerEntry",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.18"
												}
											}
										}
									]
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Number of entities that will be placed.\n",
						"key": "SpawnCount",
						"type": {
							"kind": "short"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Range that the spawned entities will be placed.\n",
						"key": "SpawnRange",
						"type": {
							"kind": "short"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Ticks until the next spawn.\n",
						"key": "Delay",
						"type": {
							"kind": "short"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Minimum random delay for the next spawn.\n",
						"key": "MinSpawnDelay",
						"type": {
							"kind": "short"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Maximum random delay for the next spawn.\n",
						"key": "MaxSpawnDelay",
						"type": {
							"kind": "short"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Maximum number of entities nearby.\n",
						"key": "MaxNearbyEntities",
						"type": {
							"kind": "short"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Radius in blocks that a player has to be within to spawn entities.\n",
						"key": "RequiredPlayerRange",
						"type": {
							"kind": "short"
						},
						"optional": true
					}
				]
			},
			"moving_piston": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::BlockEntity"
						}
					},
					{
						"kind": "pair",
						"desc": "Moving block represented by the moving piston.\n",
						"key": "blockState",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "The direction it is moving.\n",
						"key": "facing",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::moving_piston::Facing"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "How far it has moved.\n",
						"key": "progress",
						"type": {
							"kind": "float"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "extending",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether the moving piston is the piston head.\n",
						"key": "source",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"sculk_catalyst": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::BlockEntity"
						}
					},
					{
						"kind": "pair",
						"key": "cursors",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::world::block::sculk_catalyst::ChargeCursor"
							}
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19"
							}
						}
					}
				]
			},
			"sculk_sensor": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "last_vibration_frequency",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 1,
								"max": 15
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"desc": "Vibration listener\n",
						"key": "listener",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::game_event::VibrationListener"
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"sculk_shrieker": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "warning_level",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "listener",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::game_event::VibrationListener"
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19"
							}
						}
					}
				]
			},
			"sign": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::block::sign::OldSign",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20"
									}
								}
							}
						]
					},
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::server::world::block::BlockEntity"
								}
							},
							{
								"kind": "pair",
								"key": "back_text",
								"type": {
									"kind": "reference",
									"path": "::java::server::world::block::sign::SignText"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "front_text",
								"type": {
									"kind": "reference",
									"path": "::java::server::world::block::sign::SignText"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"desc": "Whether the sign can no longer be edited. If a sign is editable\n",
								"key": "is_waxed",
								"type": {
									"kind": "boolean"
								},
								"optional": true
							}
						],
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20"
									}
								}
							}
						]
					}
				]
			},
			"skull": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::BlockEntity"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"desc": "Owner of the skull.\n",
						"key": "Owner",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::head::SkullOwner"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							},
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						],
						"key": "SkullOwner",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::head::SkullOwner"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Name of the owner, if exists will be converted to SkullOwner.\n",
						"key": "ExtraType",
						"type": {
							"kind": "string"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19.3"
									}
								}
							}
						],
						"key": "note_block_sound",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "weighed_sound_event"
										}
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						],
						"key": "profile",
						"type": {
							"kind": "dispatcher",
							"parallelIndices": [
								{
									"kind": "static",
									"value": "profile"
								}
							],
							"registry": "minecraft:data_component"
						},
						"optional": true
					}
				]
			},
			"smoker": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::BlockEntity"
						}
					},
					{
						"kind": "pair",
						"key": "CustomName",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "text_component"
								}
							]
						},
						"optional": true
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::Lockable"
						}
					},
					{
						"kind": "pair",
						"desc": "The items in this furnace, with slots:\n\n* 0: Item being smelted\n\n* 1: Fuel\n\n* 2: Output\n",
						"key": "Items",
						"type": {
							"kind": "list",
							"item": {
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::server::util::inventory::SlottedItem"
								},
								"typeArgs": [
									{
										"kind": "byte",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 2
										}
									}
								]
							},
							"lengthRange": {
								"kind": 0,
								"min": 0,
								"max": 3
							}
						},
						"optional": true
					},
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.4"
									}
								}
							}
						],
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"desc": "Ticks until the current fuel runs out.\n",
									"key": "BurnTime",
									"type": {
										"kind": "short"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"desc": "Ticks the item has been smelting for.\n",
									"key": "CookTime",
									"type": {
										"kind": "short"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"desc": "Total ticks the item will take to be smelted.\n",
									"key": "CookTimeTotal",
									"type": {
										"kind": "short"
									},
									"optional": true
								}
							]
						}
					},
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.4"
									}
								}
							}
						],
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"desc": "Total ticks the item will take to be smelted.\n",
									"key": "cooking_total_time",
									"type": {
										"kind": "short"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"desc": "Ticks the item has been smelting for.\n",
									"key": "cooking_time_spent",
									"type": {
										"kind": "short"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"desc": "Ticks until the current fuel runs out.\n",
									"key": "lit_time_remaining",
									"type": {
										"kind": "short"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"desc": "Total ticks the current fuel will burn.\n",
									"key": "lit_total_time",
									"type": {
										"kind": "short"
									},
									"optional": true
								}
							]
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"desc": "Recipes that have been used since the last time a result item was removed from the GUI. Used to calculate the experience to give to the player.\n",
						"key": "RecipesUsed",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"desc": "How many times this recipe has been used.\n",
									"key": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "recipe"
													}
												}
											}
										]
									},
									"type": {
										"kind": "int"
									}
								}
							]
						},
						"optional": true
					}
				]
			},
			"structure_block": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::BlockEntity"
						}
					},
					{
						"kind": "pair",
						"key": "name",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "tree",
										"values": {
											"registry": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "structure"
												}
											},
											"empty": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "allowed"
												}
											}
										}
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Author of the structure.\n",
						"key": "author",
						"type": {
							"kind": "string"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Custom data for the structure. Stores the data id for \"DATA\" mode.\n",
						"key": "metadata",
						"type": {
							"kind": "string"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Relative offset.\n",
						"key": "posX",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Relative offset.\n",
						"key": "posY",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Relative offset.\n",
						"key": "posZ",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "sizeX",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "sizeY",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "sizeZ",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "rotation",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::structure_block::Rotation"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "mirror",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::structure_block::Mirror"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "mode",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::structure_block::Mode"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "ignoreEntities",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether to show the bounding box.\n",
						"key": "showboundingbox",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether it has been powered by redstone.\n",
						"key": "powered",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Chance for each block to stay.\n",
						"key": "integrity",
						"type": {
							"kind": "float"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Seed for the integrity random.\n",
						"key": "seed",
						"type": {
							"kind": "long",
							"attributes": [
								{
									"name": "random"
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether to show invisible blocks inside the bounding box.\n",
						"key": "showair",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"trial_spawner": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Spawning behavior when the player does not have the Bad Omen effect.\n",
						"key": "normal_config",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "reference",
									"path": "::java::data::trial_spawner::TrialSpawnerConfig"
								},
								{
									"kind": "string",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.21.2"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "trial_spawner"
												}
											}
										}
									]
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Spawning behavior when the player has the Bad Omen effect.\n",
						"key": "ominous_config",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "reference",
									"path": "::java::data::trial_spawner::TrialSpawnerConfig"
								},
								{
									"kind": "string",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.21.2"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "trial_spawner"
												}
											}
										}
									]
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Maximum distance for players to activate the trial spawner, or join a battle\n",
						"key": "required_player_range",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 1,
								"max": 128
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Time in ticks for the cooldown period. Included the time spend dispensing the reward.\n",
						"key": "target_cooldown_length",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Players that are have been nearby during the current battle\n",
						"key": "registered_players",
						"type": {
							"kind": "list",
							"item": {
								"kind": "list",
								"item": {
									"kind": "int"
								},
								"lengthRange": {
									"kind": 0,
									"min": 4,
									"max": 4
								},
								"attributes": [
									{
										"name": "uuid"
									}
								]
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "All mobs that have been spawned by this trial spawner and are currently alive\n",
						"key": "current_mobs",
						"type": {
							"kind": "list",
							"item": {
								"kind": "list",
								"item": {
									"kind": "int"
								},
								"lengthRange": {
									"kind": 0,
									"min": 4,
									"max": 4
								},
								"attributes": [
									{
										"name": "uuid"
									}
								]
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Gametime in ticks when the cooldown ends\n",
						"key": "cooldown_ends_at",
						"type": {
							"kind": "long"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Gametime in ticks when the next spawning attempt happens\n",
						"key": "next_mob_spawns_at",
						"type": {
							"kind": "long"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "total_mobs_spawned",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "The next entity to spawn, also controlls the entity displayed in the trial spawner\n",
						"key": "spawn_data",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::block::spawner::SpawnerEntry"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "The loot table selected to be used to determine the reward\n",
						"key": "ejecting_loot_table",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "loot_table"
										}
									}
								}
							]
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.20.5"
							}
						}
					}
				]
			},
			"vault": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "server_data",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"desc": "Ticks until the loot table is ran again to update the display item.\r\n",
									"key": "state_updating_resumes_at",
									"type": {
										"kind": "long"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"desc": "When a player is in this list they can no longer open the vault, but other players can.\r\n",
									"key": "rewarded_players",
									"type": {
										"kind": "list",
										"item": {
											"kind": "int_array",
											"lengthRange": {
												"kind": 0,
												"min": 4,
												"max": 4
											}
										}
									},
									"optional": true
								},
								{
									"kind": "pair",
									"desc": "Items that are being ejected from the vault when it is opened. As each item is ejected, it is removed from this list, before ejection, it is previewed as the `display_item`.\r\n",
									"key": "items_to_eject",
									"type": {
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::server::world::item::ItemStack"
										}
									},
									"optional": true
								},
								{
									"kind": "pair",
									"desc": "Number of items that the loot table started off the opening with, does not change while items are ejected.\r\n",
									"key": "total_ejections_needed",
									"type": {
										"kind": "int"
									},
									"optional": true
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "config",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"desc": "Item required to open the vault.\r\n",
									"key": "key_item",
									"type": {
										"kind": "reference",
										"path": "::java::server::world::item::ItemStack"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"desc": "Defaults to \"minecraft:chests/trial_chambers/reward\".\r\n",
									"key": "loot_table",
									"type": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "loot_table"
													}
												}
											}
										]
									},
									"optional": true
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "When a player is in range of the vault, the same display item will be shown to all players.\r\n\nThis is also used for the items that are being ejected from the vault.\r\n",
						"key": "shared_data",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "struct",
									"fields": []
								},
								{
									"kind": "struct",
									"fields": [
										{
											"kind": "pair",
											"desc": "Item that is displayed to players when they are in range of the vault.\r\n",
											"key": "display_item",
											"type": {
												"kind": "reference",
												"path": "::java::server::world::item::ItemStack"
											},
											"optional": true
										},
										{
											"kind": "pair",
											"key": "connected_players",
											"type": {
												"kind": "list",
												"item": {
													"kind": "int_array",
													"lengthRange": {
														"kind": 0,
														"min": 4,
														"max": 4
													}
												}
											},
											"optional": true
										}
									]
								}
							]
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.20.5"
							}
						}
					}
				]
			}
		},
		"minecraft:block_placer": {
			"column_placer": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.17"
									}
								}
							}
						],
						"key": "min_size",
						"type": {
							"kind": "int"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.17"
									}
								}
							}
						],
						"key": "extra_size",
						"type": {
							"kind": "int"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.17"
									}
								}
							}
						],
						"key": "size",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::IntProvider"
							},
							"typeArgs": [
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 0
									}
								}
							]
						}
					}
				]
			},
			"double_plant_placer": {
				"kind": "struct",
				"fields": []
			},
			"simple_block_placer": {
				"kind": "struct",
				"fields": []
			}
		},
		"minecraft:block_predicate": {
			"all_of": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "predicates",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::worldgen::feature::block_predicate::BlockPredicate"
							}
						}
					}
				]
			},
			"any_of": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "predicates",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::worldgen::feature::block_predicate::BlockPredicate"
							}
						}
					}
				]
			},
			"has_sturdy_face": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_predicate::PredicateOffset"
						}
					},
					{
						"kind": "pair",
						"key": "direction",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::direction::Direction"
						}
					}
				]
			},
			"inside_world_bounds": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_predicate::PredicateOffset"
						}
					}
				]
			},
			"matching_block_tag": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_predicate::PredicateOffset"
						}
					},
					{
						"kind": "pair",
						"key": "tag",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "tree",
										"values": {
											"registry": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "block"
												}
											},
											"tags": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "implicit"
												}
											}
										}
									}
								}
							]
						}
					}
				]
			},
			"matching_blocks": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_predicate::PredicateOffset"
						}
					},
					{
						"kind": "pair",
						"key": "blocks",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "list",
									"item": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "block"
													}
												}
											}
										]
									}
								},
								{
									"kind": "string",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.18.2"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "block"
														}
													},
													"tags": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "allowed"
														}
													}
												}
											}
										}
									]
								}
							]
						}
					}
				]
			},
			"matching_fluids": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_predicate::PredicateOffset"
						}
					},
					{
						"kind": "pair",
						"key": "fluids",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "list",
									"item": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "fluid"
													}
												}
											}
										]
									}
								},
								{
									"kind": "string",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.18.2"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "fluid"
														}
													},
													"tags": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "allowed"
														}
													}
												}
											}
										}
									]
								}
							]
						}
					}
				]
			},
			"not": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "predicate",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_predicate::BlockPredicate"
						}
					}
				]
			},
			"unobstructed": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "offset",
						"type": {
							"kind": "list",
							"item": {
								"kind": "int"
							},
							"lengthRange": {
								"kind": 0,
								"min": 3,
								"max": 3
							}
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21"
							}
						}
					}
				]
			},
			"would_survive": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_predicate::PredicateOffset"
						}
					},
					{
						"kind": "pair",
						"key": "state",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					}
				]
			}
		},
		"minecraft:block_state_provider": {
			"dual_noise_provider": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_state_provider::BaseNoiseProvider"
						}
					},
					{
						"kind": "pair",
						"key": "variety",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::server::util::range::InclusiveRange"
							},
							"typeArgs": [
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 1,
										"max": 64
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "slow_noise",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::dimension::biome_source::NoiseParameters"
						}
					},
					{
						"kind": "pair",
						"key": "slow_scale",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0
							}
						}
					},
					{
						"kind": "pair",
						"key": "states",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::util::block_state::BlockState"
							}
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.18"
							}
						}
					}
				]
			},
			"noise_provider": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_state_provider::BaseNoiseProvider"
						}
					},
					{
						"kind": "pair",
						"key": "states",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::util::block_state::BlockState"
							}
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.18"
							}
						}
					}
				]
			},
			"noise_threshold_provider": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_state_provider::BaseNoiseProvider"
						}
					},
					{
						"kind": "pair",
						"key": "threshold",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": -1,
								"max": 1
							}
						}
					},
					{
						"kind": "pair",
						"key": "high_chance",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					},
					{
						"kind": "pair",
						"key": "default_state",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					},
					{
						"kind": "pair",
						"key": "low_states",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::util::block_state::BlockState"
							}
						}
					},
					{
						"kind": "pair",
						"key": "high_states",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::util::block_state::BlockState"
							}
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.18"
							}
						}
					}
				]
			},
			"randomized_int_state_provider": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "property",
						"type": {
							"kind": "string"
						}
					},
					{
						"kind": "pair",
						"key": "values",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::IntProvider"
							},
							"typeArgs": [
								{
									"kind": "int"
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "source",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"rotated_block_provider": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "state",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					}
				]
			},
			"simple_state_provider": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "state",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					}
				]
			},
			"weighted_state_provider": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "entries",
						"type": {
							"kind": "list",
							"item": {
								"kind": "struct",
								"fields": [
									{
										"kind": "pair",
										"key": "weight",
										"type": {
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 1
											}
										}
									},
									{
										"kind": "pair",
										"key": "data",
										"type": {
											"kind": "reference",
											"path": "::java::server::util::block_state::BlockState"
										}
									}
								]
							}
						}
					}
				]
			}
		},
		"minecraft:carver_config": {
			"canyon": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "vertical_rotation",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::FloatProvider"
							},
							"typeArgs": [
								{
									"kind": "float"
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "shape",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::carver::CanyonShape"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"cave": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "horizontal_radius_multiplier",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::FloatProvider"
							},
							"typeArgs": [
								{
									"kind": "float"
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "vertical_radius_multiplier",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::FloatProvider"
							},
							"typeArgs": [
								{
									"kind": "float"
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "floor_level",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::FloatProvider"
							},
							"typeArgs": [
								{
									"kind": "float",
									"valueRange": {
										"kind": 0,
										"min": -1,
										"max": 1
									}
								}
							]
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"nether_cave": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "horizontal_radius_multiplier",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::FloatProvider"
							},
							"typeArgs": [
								{
									"kind": "float"
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "vertical_radius_multiplier",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::FloatProvider"
							},
							"typeArgs": [
								{
									"kind": "float"
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "floor_level",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::FloatProvider"
							},
							"typeArgs": [
								{
									"kind": "float",
									"valueRange": {
										"kind": 0,
										"min": -1,
										"max": 1
									}
								}
							]
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			}
		},
		"minecraft:chunk_generator": {
			"flat": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "settings",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::dimension::chunk_generator::FlatGeneratorSettings"
						}
					}
				]
			},
			"noise": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"key": "seed",
						"type": {
							"kind": "long",
							"attributes": [
								{
									"name": "random"
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "settings",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::noise_settings::NoiseGeneratorSettingsRef"
						}
					},
					{
						"kind": "pair",
						"key": "biome_source",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::dimension::biome_source::BiomeSource"
						}
					}
				]
			}
		},
		"minecraft:click_event": {
			"change_page": {
				"kind": "string",
				"attributes": [
					{
						"name": "integer",
						"value": {
							"kind": "tree",
							"values": {
								"min": {
									"kind": "literal",
									"value": {
										"kind": "int",
										"value": 1
									}
								}
							}
						}
					}
				]
			},
			"copy_to_clipboard": {
				"kind": "string"
			},
			"open_url": {
				"kind": "string",
				"attributes": [
					{
						"name": "url"
					}
				]
			},
			"run_command": {
				"kind": "union",
				"members": [
					{
						"kind": "string",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19.1"
									}
								}
							},
							{
								"name": "command",
								"value": {
									"kind": "tree",
									"values": {
										"slash": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "chat"
											}
										}
									}
								}
							}
						]
					},
					{
						"kind": "string",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19.1"
									}
								}
							},
							{
								"name": "command",
								"value": {
									"kind": "tree",
									"values": {
										"slash": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "required"
											}
										}
									}
								}
							}
						]
					}
				]
			},
			"suggest_command": {
				"kind": "string",
				"attributes": [
					{
						"name": "command",
						"value": {
							"kind": "tree",
							"values": {
								"slash": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "chat"
									}
								}
							}
						}
					}
				]
			}
		},
		"minecraft:conditional_item_property": {
			"%unknown": {
				"kind": "struct",
				"fields": []
			},
			"custom_model_data": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "The index of the `flags` list in the `custom_model_data` component. Defaults to 0.\n",
						"key": "index",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0
							}
						},
						"optional": true
					}
				]
			},
			"has_component": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "component",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "data_component_type"
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"desc": "Whether the default components should be handled as \"no component\". Defaults to false.\n",
						"key": "ignore_default",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"keybind_down": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "The keybind ID to check for.\n",
						"key": "keybind",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::text::Keybind"
						}
					}
				]
			},
			"view_entity": {
				"kind": "struct",
				"fields": []
			}
		},
		"minecraft:consume_effect": {
			"apply_effects": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "effects",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::util::effect::MobEffectInstance"
							}
						}
					},
					{
						"kind": "pair",
						"desc": "Chance the effects will be applied once consumed.\n",
						"key": "probability",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						},
						"optional": true
					}
				]
			},
			"clear_all_effects": {
				"kind": "struct",
				"fields": []
			},
			"play_sound": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "sound",
						"type": {
							"kind": "reference",
							"path": "::java::data::util::SoundEventRef"
						}
					}
				]
			},
			"remove_effects": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "effects",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "mob_effect"
														}
													},
													"tags": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "allowed"
														}
													}
												}
											}
										}
									]
								},
								{
									"kind": "list",
									"item": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "mob_effect"
													}
												}
											}
										]
									}
								}
							]
						}
					}
				]
			},
			"teleport_randomly": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Defaults to 16.\n",
						"key": "diameter",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 1
							}
						},
						"optional": true
					}
				]
			}
		},
		"minecraft:data_component": {
			"attribute_modifiers": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::AttributeModifiers",
						"attributes": [
							{
								"name": "canonical"
							}
						]
					},
					{
						"kind": "list",
						"item": {
							"kind": "reference",
							"path": "::java::server::world::item::AttributeModifier"
						}
					}
				]
			},
			"banner_patterns": {
				"kind": "list",
				"item": {
					"kind": "reference",
					"path": "::java::server::world::item::block::banner::BannerPatternLayer"
				}
			},
			"base_color": {
				"kind": "reference",
				"path": "::java::server::util::color::ColorString"
			},
			"bees": {
				"kind": "list",
				"item": {
					"kind": "reference",
					"path": "::java::server::world::item::block::beehive::Occupant"
				}
			},
			"block_entity_data": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockEntityData"
					},
					{
						"kind": "string",
						"attributes": [
							{
								"name": "nbt",
								"value": {
									"kind": "reference",
									"path": "::java::server::world::item::block::BlockEntityData"
								}
							}
						]
					}
				]
			},
			"block_state": {
				"kind": "dispatcher",
				"parallelIndices": [
					{
						"kind": "dynamic",
						"accessor": [
							{
								"keyword": "parent"
							},
							"id"
						]
					}
				],
				"registry": "mcdoc:block_item_states"
			},
			"bucket_entity_data": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::fish_bucket::BucketEntityData"
					},
					{
						"kind": "string",
						"attributes": [
							{
								"name": "nbt",
								"value": {
									"kind": "reference",
									"path": "::java::server::world::item::fish_bucket::BucketEntityData"
								}
							}
						]
					}
				]
			},
			"bundle_contents": {
				"kind": "list",
				"item": {
					"kind": "reference",
					"path": "::java::server::world::item::ItemStack"
				}
			},
			"can_break": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::AdventureModePredicate",
						"attributes": [
							{
								"name": "canonical"
							}
						]
					},
					{
						"kind": "reference",
						"path": "::java::data::advancement::predicate::BlockPredicate"
					}
				]
			},
			"can_place_on": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::AdventureModePredicate",
						"attributes": [
							{
								"name": "canonical"
							}
						]
					},
					{
						"kind": "reference",
						"path": "::java::data::advancement::predicate::BlockPredicate"
					}
				]
			},
			"charged_projectiles": {
				"kind": "list",
				"item": {
					"kind": "reference",
					"path": "::java::server::world::item::ItemStack"
				}
			},
			"consumable": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Time taken for a player to consume the item. Defaults to 1.6.\n",
						"key": "consume_seconds",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "View model/arms animation used during consumption of the item. Defaults to `eat`.\n",
						"key": "animation",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemUseAnimation"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Sound played during and on completion of item consumption.\n",
						"key": "sound",
						"type": {
							"kind": "reference",
							"path": "::java::data::util::SoundEventRef"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether the `item` particle is emitted while consuming the item. Defaults to `true`.\n",
						"key": "has_consume_particles",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Side effects which take place after consuming the item.\n",
						"key": "on_consume_effects",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::world::item::ConsumeEffect"
							}
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"container": {
				"kind": "list",
				"item": {
					"kind": "reference",
					"path": "::java::server::world::item::block::container::ContainerSlot"
				},
				"lengthRange": {
					"kind": 0,
					"max": 256
				}
			},
			"container_loot": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "loot_table",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "loot_table"
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "seed",
						"type": {
							"kind": "long",
							"attributes": [
								{
									"name": "random"
								}
							]
						},
						"optional": true
					}
				]
			},
			"custom_data": {
				"kind": "reference",
				"path": "::java::server::world::item::CustomData"
			},
			"custom_model_data": {
				"kind": "union",
				"members": [
					{
						"kind": "int",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.4"
									}
								}
							}
						]
					},
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "floats",
								"type": {
									"kind": "list",
									"item": {
										"kind": "float"
									}
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "flags",
								"type": {
									"kind": "list",
									"item": {
										"kind": "boolean"
									}
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "strings",
								"type": {
									"kind": "list",
									"item": {
										"kind": "string"
									}
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "colors",
								"type": {
									"kind": "list",
									"item": {
										"kind": "reference",
										"path": "::java::server::util::color::RGB"
									}
								},
								"optional": true
							}
						],
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.4"
									}
								}
							}
						]
					}
				]
			},
			"custom_name": {
				"kind": "union",
				"members": [
					{
						"kind": "string",
						"attributes": [
							{
								"name": "text_component"
							}
						]
					}
				]
			},
			"damage": {
				"kind": "int",
				"valueRange": {
					"kind": 0,
					"min": 0
				}
			},
			"damage_resistant": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "The damage types which the item is resistant to when in entity form.\n\nAdditionally, this also affects whether the equipped item will be damaged when the wearer is hurt by a specified damage type.\n",
						"key": "types",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "tree",
										"values": {
											"registry": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "damage_type"
												}
											},
											"tags": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "required"
												}
											}
										}
									}
								}
							]
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"death_protection": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Effects applied when the item protects the holder.\n",
						"key": "death_effects",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::world::item::ConsumeEffect"
							}
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"debug_stick_state": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "block"
										}
									}
								}
							]
						},
						"type": {
							"kind": "string"
						}
					}
				]
			},
			"dyed_color": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::leather_armor::DyedColor",
						"attributes": [
							{
								"name": "canonical"
							}
						]
					},
					{
						"kind": "int",
						"attributes": [
							{
								"name": "color",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "composite_rgb"
									}
								}
							}
						]
					}
				]
			},
			"enchantable": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "value",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 1
							}
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"enchantment_glint_override": {
				"kind": "boolean"
			},
			"enchantments": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::Enchantments",
						"attributes": [
							{
								"name": "canonical"
							}
						]
					},
					{
						"kind": "reference",
						"path": "::java::server::world::item::EnchantmentLevels"
					}
				]
			},
			"entity_data": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::entity::AnyEntity"
					},
					{
						"kind": "string",
						"attributes": [
							{
								"name": "nbt",
								"value": {
									"kind": "reference",
									"path": "::java::server::world::entity::AnyEntity"
								}
							}
						]
					}
				]
			},
			"equippable": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "slot",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::inventory::EquipmentSlot"
						}
					},
					{
						"kind": "pair",
						"desc": "Sound event to play when the item is equipped.\n\nIf not specified, the default armor equip sound will be played.\n",
						"key": "equip_sound",
						"type": {
							"kind": "reference",
							"path": "::java::data::util::SoundEventRef"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.4"
									}
								}
							}
						],
						"desc": "The equipment model to use when equipped.\n\nFalls back to rendering as the item itself when in the head slot (or no rendering if not applicable).\n",
						"key": "model",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "equipment"
										}
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.4"
									}
								}
							}
						],
						"key": "asset_id",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "equipment"
										}
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "The overlay texture that should render in first person when equipped.\n",
						"key": "camera_overlay",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "texture"
										}
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Limits which entities can equip this item\n",
						"key": "allowed_entities",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "entity_type"
														}
													},
													"tags": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "allowed"
														}
													}
												}
											}
										}
									]
								},
								{
									"kind": "list",
									"item": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "entity_type"
													}
												}
											}
										]
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether the item can be equipped by using a dispenser. Defaults to `true`.\n",
						"key": "dispensable",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether the item can be equipped by right-clicking. Defaults to `true`.\n",
						"key": "swappable",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether the item will be damaged when the wearer is damaged. Defaults to `true`.\n",
						"key": "damage_on_hurt",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"fire_resistant": {
				"kind": "struct",
				"fields": [],
				"attributes": [
					{
						"name": "until",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"firework_explosion": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "shape",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::firework::FireworkShape"
						}
					},
					{
						"kind": "pair",
						"desc": "Colors of the initial particles of the explosion, randomly selected from.\n\nCalculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.\n",
						"key": "colors",
						"type": {
							"kind": "int_array",
							"attributes": [
								{
									"name": "color",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "composite_rgb"
										}
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Colors of the fading particles of the explosion\n",
						"key": "fade_colors",
						"type": {
							"kind": "int_array",
							"attributes": [
								{
									"name": "color",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "composite_rgb"
										}
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Added to a firework star via Diamond.\n",
						"key": "has_trail",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Added to a firework star via Glowstone Dust.\n",
						"key": "has_twinkle",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"fireworks": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "explosions",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::world::item::firework::Explosion"
							},
							"lengthRange": {
								"kind": 0,
								"min": 0,
								"max": 256
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "flight_duration",
						"type": {
							"kind": "byte"
						},
						"optional": true
					}
				]
			},
			"food": {
				"kind": "reference",
				"path": "::java::server::world::item::Food"
			},
			"glider": {
				"kind": "struct",
				"fields": []
			},
			"hide_additional_tooltip": {
				"kind": "struct",
				"fields": []
			},
			"hide_tooltip": {
				"kind": "struct",
				"fields": []
			},
			"instrument": {
				"kind": "union",
				"members": [
					{
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "instrument"
									}
								}
							}
						]
					},
					{
						"kind": "reference",
						"path": "::java::data::variants::instrument::Instrument"
					}
				]
			},
			"intangible_projectile": {
				"kind": "struct",
				"fields": []
			},
			"item_model": {
				"kind": "union",
				"members": [
					{
						"kind": "string",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.4"
									}
								}
							},
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "model"
											}
										},
										"path": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "item/"
											}
										}
									}
								}
							}
						]
					},
					{
						"kind": "string",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.4"
									}
								}
							},
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "item_definition"
											}
										}
									}
								}
							}
						]
					}
				]
			},
			"item_name": {
				"kind": "union",
				"members": [
					{
						"kind": "string",
						"attributes": [
							{
								"name": "text_component"
							}
						]
					}
				]
			},
			"jukebox_playable": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "song",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "jukebox_song"
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "show_in_tooltip",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21"
							}
						}
					}
				]
			},
			"lock": {
				"kind": "union",
				"members": [
					{
						"kind": "string",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.2"
									}
								}
							}
						]
					},
					{
						"kind": "reference",
						"path": "::java::data::advancement::predicate::ItemPredicate",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.2"
									}
								}
							}
						]
					}
				]
			},
			"lodestone_tracker": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Location of the lodestone. Optional. If not set, the compass will spin randomly.\n",
						"key": "target",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"desc": "Coordinates.\n",
									"key": "pos",
									"type": {
										"kind": "int_array",
										"lengthRange": {
											"kind": 0,
											"min": 3,
											"max": 3
										}
									}
								},
								{
									"kind": "pair",
									"key": "dimension",
									"type": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "dimension"
													}
												}
											}
										]
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "When `true`, the component is removed when the lodestone is broken. When `false`, the component is kept. Defaults to true.\n",
						"key": "tracked",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"lore": {
				"kind": "list",
				"item": {
					"kind": "string",
					"attributes": [
						{
							"name": "text_component"
						}
					]
				}
			},
			"map_color": {
				"kind": "int",
				"attributes": [
					{
						"name": "color",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "composite_rgb"
							}
						}
					}
				]
			},
			"map_decorations": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": {
							"kind": "string"
						},
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::map::Decoration"
						}
					}
				]
			},
			"map_id": {
				"kind": "int"
			},
			"max_damage": {
				"kind": "int",
				"valueRange": {
					"kind": 0,
					"min": 1
				}
			},
			"max_stack_size": {
				"kind": "int",
				"valueRange": {
					"kind": 0,
					"min": 1,
					"max": 99
				}
			},
			"note_block_sound": {
				"kind": "union",
				"members": [
					{
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "weighed_sound_event"
									}
								}
							}
						]
					}
				]
			},
			"ominous_bottle_amplifier": {
				"kind": "int",
				"valueRange": {
					"kind": 0,
					"min": 0,
					"max": 4
				}
			},
			"pot_decorations": {
				"kind": "list",
				"item": {
					"kind": "reference",
					"path": "::java::server::world::block::decorated_pot::Sherd",
					"attributes": [
						{
							"name": "id"
						}
					]
				},
				"lengthRange": {
					"kind": 0,
					"min": 4,
					"max": 4
				}
			},
			"potion_contents": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::potion::PotionContents",
						"attributes": [
							{
								"name": "canonical"
							}
						]
					},
					{
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "potion"
									}
								}
							}
						]
					}
				]
			},
			"profile": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::head::Profile",
						"attributes": [
							{
								"name": "canonical"
							}
						]
					},
					{
						"kind": "string"
					}
				]
			},
			"rarity": {
				"kind": "reference",
				"path": "::java::server::world::item::Rarity"
			},
			"recipes": {
				"kind": "list",
				"item": {
					"kind": "string",
					"attributes": [
						{
							"name": "id",
							"value": {
								"kind": "literal",
								"value": {
									"kind": "string",
									"value": "recipe"
								}
							}
						}
					]
				}
			},
			"repair_cost": {
				"kind": "int",
				"valueRange": {
					"kind": 0,
					"min": 0
				}
			},
			"repairable": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "items",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "item"
														}
													},
													"tags": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "allowed"
														}
													}
												}
											}
										}
									]
								},
								{
									"kind": "list",
									"item": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "item"
													}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"stored_enchantments": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::Enchantments",
						"attributes": [
							{
								"name": "canonical"
							}
						]
					},
					{
						"kind": "reference",
						"path": "::java::server::world::item::EnchantmentLevels"
					}
				]
			},
			"suspicious_stew_effects": {
				"kind": "list",
				"item": {
					"kind": "reference",
					"path": "::java::server::world::item::suspicious_stew::SuspiciousStewEffect"
				}
			},
			"tool": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Blocks that this tool has a special behavior with.\n",
						"key": "rules",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::world::item::ToolRule"
							}
						}
					},
					{
						"kind": "pair",
						"desc": "Used if no rules override it. Defaults to 1.0.\n",
						"key": "default_mining_speed",
						"type": {
							"kind": "float"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Amount of durability to remove each time a block is broken with this tool. Must be a non-negative integer.\n",
						"key": "damage_per_block",
						"type": {
							"kind": "int"
						},
						"optional": true
					}
				]
			},
			"tooltip_style": {
				"kind": "string",
				"attributes": [
					{
						"name": "id"
					}
				]
			},
			"trim": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "The trim material of this item..\n",
						"key": "material",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "trim_material"
												}
											}
										}
									]
								},
								{
									"kind": "reference",
									"path": "::java::data::trim::TrimMaterial"
								}
							]
						}
					},
					{
						"kind": "pair",
						"desc": "The trim pattern of this item.\n",
						"key": "pattern",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "trim_pattern"
												}
											}
										}
									]
								},
								{
									"kind": "reference",
									"path": "::java::data::trim::TrimPattern"
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "show_in_tooltip",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"unbreakable": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "show_in_tooltip",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"use_cooldown": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Time the cooldown will last.\n",
						"key": "seconds",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 2,
								"min": 0
							}
						}
					},
					{
						"kind": "pair",
						"desc": "If present, this item will be part of a cooldown group and no longer share cooldowns with its base item type.\n\nInstead, cooldowns applied to this item will only be shared with any other items that are part of the same cooldown group.\n",
						"key": "cooldown_group",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "tree",
										"values": {
											"registry": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "cooldown_group"
												}
											},
											"definition": {
												"kind": "literal",
												"value": {
													"kind": "boolean",
													"value": true
												}
											}
										}
									}
								}
							]
						},
						"optional": true
					}
				]
			},
			"use_remainder": {
				"kind": "reference",
				"path": "::java::server::world::item::ItemStack"
			},
			"writable_book_content": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "pages",
						"type": {
							"kind": "list",
							"item": {
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::server::util::Filterable"
								},
								"typeArgs": [
									{
										"kind": "string"
									}
								]
							}
						}
					}
				]
			},
			"written_book_content": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "pages",
						"type": {
							"kind": "list",
							"item": {
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::server::util::Filterable"
								},
								"typeArgs": [
									{
										"kind": "string",
										"attributes": [
											{
												"name": "text_component"
											}
										]
									}
								]
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "title",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::server::util::Filterable"
									},
									"typeArgs": [
										{
											"kind": "string",
											"lengthRange": {
												"kind": 0,
												"max": 32
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "author",
						"type": {
							"kind": "string"
						}
					},
					{
						"kind": "pair",
						"desc": "Number of times this written book has been copied. Defaults to 0. If the value is greater than 1, the book cannot be copied.\n",
						"key": "generation",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::book::Generation"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether the dynamic content on the pages has been resolved.\n",
						"key": "resolved",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			}
		},
		"minecraft:decorator_config": {
			"carving_mask": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "step",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::CarveStep"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.17"
									}
								}
							}
						],
						"key": "probability",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					}
				]
			},
			"cave_surface": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "surface",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "floor"
									}
								},
								{
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "ceiling"
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "floor_to_ceiling_search_range",
						"type": {
							"kind": "int"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"chance": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "chance",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0
							}
						}
					}
				]
			},
			"count": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "count",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::worldgen::UniformInt"
									},
									"typeArgs": [
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": -10,
												"max": 128
											}
										},
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 128
											}
										}
									],
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								},
								{
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::worldgen::IntProvider"
									},
									"typeArgs": [
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 256
											}
										}
									],
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								}
							]
						}
					}
				]
			},
			"count_extra": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "count",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "int",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								},
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 0
									},
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "extra_count",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "int",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								},
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 0
									},
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "extra_chance",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					}
				]
			},
			"count_multilayer": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "count",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::worldgen::UniformInt"
									},
									"typeArgs": [
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": -10,
												"max": 128
											}
										},
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 128
											}
										}
									],
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								},
								{
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::worldgen::IntProvider"
									},
									"typeArgs": [
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 256
											}
										}
									],
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								}
							]
						}
					}
				]
			},
			"count_noise": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "noise_level",
						"type": {
							"kind": "float"
						}
					},
					{
						"kind": "pair",
						"key": "below_noise",
						"type": {
							"kind": "int"
						}
					},
					{
						"kind": "pair",
						"key": "above_noise",
						"type": {
							"kind": "int"
						}
					}
				]
			},
			"count_noise_biased": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "noise_to_count_ratio",
						"type": {
							"kind": "int"
						}
					},
					{
						"kind": "pair",
						"key": "noise_factor",
						"type": {
							"kind": "float"
						}
					},
					{
						"kind": "pair",
						"key": "noise_offset",
						"type": {
							"kind": "float"
						},
						"optional": true
					}
				]
			},
			"dark_oak_tree": {
				"kind": "struct",
				"fields": []
			},
			"decorated": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "outer",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::decorator::ConfiguredDecorator"
						}
					},
					{
						"kind": "pair",
						"key": "inner",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::decorator::ConfiguredDecorator"
						}
					}
				]
			},
			"depth_average": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "baseline",
						"type": {
							"kind": "int"
						}
					},
					{
						"kind": "pair",
						"key": "spread",
						"type": {
							"kind": "int"
						}
					}
				],
				"attributes": [
					{
						"name": "until",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"end_gateway": {
				"kind": "struct",
				"fields": []
			},
			"fire": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "count",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::worldgen::UniformInt"
									},
									"typeArgs": [
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": -10,
												"max": 128
											}
										},
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 128
											}
										}
									],
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								},
								{
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::worldgen::IntProvider"
									},
									"typeArgs": [
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 256
											}
										}
									],
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								}
							]
						}
					}
				]
			},
			"glowstone": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "count",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::worldgen::UniformInt"
									},
									"typeArgs": [
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": -10,
												"max": 128
											}
										},
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 128
											}
										}
									],
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								},
								{
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::worldgen::IntProvider"
									},
									"typeArgs": [
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 256
											}
										}
									],
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								}
							]
						}
					}
				]
			},
			"heightmap": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "heightmap",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::HeightmapType"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"heightmap_spread_double": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "heightmap",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::HeightmapType"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"iceberg": {
				"kind": "struct",
				"fields": []
			},
			"lava_lake": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "chance",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0
							}
						}
					}
				]
			},
			"nope": {
				"kind": "struct",
				"fields": []
			},
			"range": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::data::worldgen::feature::decorator::OldRangeConfig",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.17"
									}
								}
							}
						]
					},
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "height",
								"type": {
									"kind": "reference",
									"path": "::java::data::worldgen::HeightProvider"
								}
							}
						],
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.17"
									}
								}
							}
						]
					}
				]
			},
			"range_biased": {
				"kind": "reference",
				"path": "::java::data::worldgen::feature::decorator::OldRangeConfig",
				"attributes": [
					{
						"name": "until",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"range_very_biased": {
				"kind": "reference",
				"path": "::java::data::worldgen::feature::decorator::OldRangeConfig",
				"attributes": [
					{
						"name": "until",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"spread_32_above": {
				"kind": "struct",
				"fields": []
			},
			"square": {
				"kind": "struct",
				"fields": []
			},
			"water_depth_threshold": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "max_water_depth",
						"type": {
							"kind": "int"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"water_lake": {
				"kind": "reference",
				"path": "::java::data::worldgen::feature::decorator::ChanceConfig",
				"attributes": [
					{
						"name": "until",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			}
		},
		"minecraft:density_function": {
			"abs": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "argument",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::DensityFunctionRef"
						}
					}
				]
			},
			"add": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "argument1",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::DensityFunctionRef"
						}
					},
					{
						"kind": "pair",
						"key": "argument2",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::DensityFunctionRef"
						}
					}
				]
			},
			"blend_density": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "argument",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::DensityFunctionRef"
						}
					}
				]
			},
			"cache_2d": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "argument",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::DensityFunctionRef"
						}
					}
				]
			},
			"cache_all_in_cell": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "argument",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::DensityFunctionRef"
						}
					}
				]
			},
			"cache_once": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "argument",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::DensityFunctionRef"
						}
					}
				]
			},
			"clamp": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "input",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::DensityFunction"
						}
					},
					{
						"kind": "pair",
						"key": "min",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::NoiseRange"
						}
					},
					{
						"kind": "pair",
						"key": "max",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::NoiseRange"
						}
					}
				]
			},
			"constant": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "argument",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::NoiseRange"
						}
					}
				]
			},
			"cube": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "argument",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::DensityFunctionRef"
						}
					}
				]
			},
			"flat_cache": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "argument",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::DensityFunctionRef"
						}
					}
				]
			},
			"half_negative": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "argument",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::DensityFunctionRef"
						}
					}
				]
			},
			"interpolated": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "argument",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::DensityFunctionRef"
						}
					}
				]
			},
			"max": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "argument1",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::DensityFunctionRef"
						}
					},
					{
						"kind": "pair",
						"key": "argument2",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::DensityFunctionRef"
						}
					}
				]
			},
			"min": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "argument1",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::DensityFunctionRef"
						}
					},
					{
						"kind": "pair",
						"key": "argument2",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::DensityFunctionRef"
						}
					}
				]
			},
			"mul": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "argument1",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::DensityFunctionRef"
						}
					},
					{
						"kind": "pair",
						"key": "argument2",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::DensityFunctionRef"
						}
					}
				]
			},
			"noise": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "noise",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "worldgen/noise"
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "xz_scale",
						"type": {
							"kind": "float"
						}
					},
					{
						"kind": "pair",
						"key": "y_scale",
						"type": {
							"kind": "float"
						}
					}
				]
			},
			"old_blended_noise": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "xz_scale",
						"type": {
							"kind": "float"
						}
					},
					{
						"kind": "pair",
						"key": "y_scale",
						"type": {
							"kind": "float"
						}
					},
					{
						"kind": "pair",
						"key": "xz_factor",
						"type": {
							"kind": "float"
						}
					},
					{
						"kind": "pair",
						"key": "y_factor",
						"type": {
							"kind": "float"
						}
					},
					{
						"kind": "pair",
						"key": "smear_scale_multiplier",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 1,
								"max": 8
							}
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19"
							}
						}
					}
				]
			},
			"quarter_negative": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "argument",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::DensityFunctionRef"
						}
					}
				]
			},
			"range_choice": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "input",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::DensityFunctionRef"
						}
					},
					{
						"kind": "pair",
						"key": "min_inclusive",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::NoiseRange"
						}
					},
					{
						"kind": "pair",
						"key": "max_exclusive",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::NoiseRange"
						}
					},
					{
						"kind": "pair",
						"key": "when_in_range",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::DensityFunctionRef"
						}
					},
					{
						"kind": "pair",
						"key": "when_out_of_range",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::DensityFunctionRef"
						}
					}
				]
			},
			"shift": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "argument",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "worldgen/noise"
										}
									}
								}
							]
						}
					}
				]
			},
			"shift_a": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "argument",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "worldgen/noise"
										}
									}
								}
							]
						}
					}
				]
			},
			"shift_b": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "argument",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "worldgen/noise"
										}
									}
								}
							]
						}
					}
				]
			},
			"shifted_noise": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::Noise"
						}
					},
					{
						"kind": "pair",
						"key": "shift_x",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::DensityFunctionRef"
						}
					},
					{
						"kind": "pair",
						"key": "shift_y",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::DensityFunctionRef"
						}
					},
					{
						"kind": "pair",
						"key": "shift_z",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::DensityFunctionRef"
						}
					}
				]
			},
			"slide": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "argument",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::DensityFunctionRef"
						}
					}
				]
			},
			"spline": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "spline",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::CubicSpline"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"key": "min_value",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::NoiseRange"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"key": "max_value",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::NoiseRange"
						}
					}
				]
			},
			"square": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "argument",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::DensityFunctionRef"
						}
					}
				]
			},
			"squeeze": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "argument",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::DensityFunctionRef"
						}
					}
				]
			},
			"terrain_shaper_spline": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "spline",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::SplineType"
						}
					},
					{
						"kind": "pair",
						"key": "min_value",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::NoiseRange"
						}
					},
					{
						"kind": "pair",
						"key": "max_value",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::NoiseRange"
						}
					},
					{
						"kind": "pair",
						"key": "continentalness",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::DensityFunctionRef"
						}
					},
					{
						"kind": "pair",
						"key": "erosion",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::DensityFunctionRef"
						}
					},
					{
						"kind": "pair",
						"key": "weirdness",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::DensityFunctionRef"
						}
					}
				],
				"attributes": [
					{
						"name": "until",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19"
							}
						}
					}
				]
			},
			"weird_scaled_sampler": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "rarity_value_mapper",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::RarityType"
						}
					},
					{
						"kind": "pair",
						"key": "noise",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "worldgen/noise"
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "input",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::DensityFunctionRef"
						}
					}
				]
			},
			"y_clamped_gradient": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "from_y",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": -4064,
								"max": 4062
							}
						}
					},
					{
						"kind": "pair",
						"key": "to_y",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": -4064,
								"max": 4062
							}
						}
					},
					{
						"kind": "pair",
						"key": "from_value",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::NoiseRange"
						}
					},
					{
						"kind": "pair",
						"key": "to_value",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::density_function::NoiseRange"
						}
					}
				]
			}
		},
		"minecraft:effect_component": {
			"ammo_use": {
				"kind": "list",
				"item": {
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"desc": "Predicate context: Item Parameters.\n",
							"key": "requirements",
							"type": {
								"kind": "union",
								"members": [
									{
										"kind": "reference",
										"path": "::java::data::loot::LootCondition"
									},
									{
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::data::loot::LootCondition"
										}
									}
								]
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "Amount of ammunition being used up.\n",
							"key": "effect",
							"type": {
								"kind": "reference",
								"path": "::java::data::enchantment::ValueEffect"
							}
						}
					]
				}
			},
			"armor_effectiveness": {
				"kind": "list",
				"item": {
					"kind": "reference",
					"path": "::java::data::enchantment::DamageEnchantmentEffect"
				}
			},
			"attributes": {
				"kind": "list",
				"item": {
					"kind": "reference",
					"path": "::java::data::enchantment::AttributeEffect"
				}
			},
			"block_experience": {
				"kind": "list",
				"item": {
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"desc": "Predicate context: Item Parameters.\n",
							"key": "requirements",
							"type": {
								"kind": "union",
								"members": [
									{
										"kind": "reference",
										"path": "::java::data::loot::LootCondition"
									},
									{
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::data::loot::LootCondition"
										}
									}
								]
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "Amount of experience awarded.\n",
							"key": "effect",
							"type": {
								"kind": "reference",
								"path": "::java::data::enchantment::ValueEffect"
							}
						}
					]
				}
			},
			"crossbow_charge_sounds": {
				"kind": "list",
				"item": {
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"desc": "Start of charging.\n",
							"key": "start",
							"type": {
								"kind": "reference",
								"path": "::java::data::util::SoundEventRef"
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "Middle of charging.\n",
							"key": "mid",
							"type": {
								"kind": "reference",
								"path": "::java::data::util::SoundEventRef"
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "End of charging.\n",
							"key": "end",
							"type": {
								"kind": "reference",
								"path": "::java::data::util::SoundEventRef"
							},
							"optional": true
						}
					]
				}
			},
			"crossbow_charge_time": {
				"kind": "reference",
				"path": "::java::data::enchantment::ValueEffect"
			},
			"damage": {
				"kind": "list",
				"item": {
					"kind": "reference",
					"path": "::java::data::enchantment::DamageEnchantmentEffect"
				}
			},
			"damage_immunity": {
				"kind": "list",
				"item": {
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"desc": "Predicate context: Damage Parameters.\n",
							"key": "requirements",
							"type": {
								"kind": "union",
								"members": [
									{
										"kind": "reference",
										"path": "::java::data::loot::LootCondition"
									},
									{
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::data::loot::LootCondition"
										}
									}
								]
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "Dummy value; this is a boolean effect.\n",
							"key": "effect",
							"type": {
								"kind": "struct",
								"fields": []
							}
						}
					]
				}
			},
			"damage_protection": {
				"kind": "list",
				"item": {
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"desc": "Predicate context: Damage Parameters.\n",
							"key": "requirements",
							"type": {
								"kind": "union",
								"members": [
									{
										"kind": "reference",
										"path": "::java::data::loot::LootCondition"
									},
									{
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::data::loot::LootCondition"
										}
									}
								]
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "Amount of damage being absorbed; as \"fake armor\".\n",
							"key": "effect",
							"type": {
								"kind": "reference",
								"path": "::java::data::enchantment::ValueEffect"
							}
						}
					]
				}
			},
			"equipment_drops": {
				"kind": "list",
				"item": {
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"desc": "Predicate context: Damage Parameters.\n",
							"key": "requirements",
							"type": {
								"kind": "union",
								"members": [
									{
										"kind": "reference",
										"path": "::java::data::loot::LootCondition"
									},
									{
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::data::loot::LootCondition"
										}
									}
								]
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "Chance between `0.0` and `1.0` of an equipped piece dropping.\n",
							"key": "effect",
							"type": {
								"kind": "reference",
								"path": "::java::data::enchantment::ValueEffect"
							}
						},
						{
							"kind": "pair",
							"desc": "Which subject needs to be enchanted for the effect to apply.\n",
							"key": "enchanted",
							"type": {
								"kind": "union",
								"members": [
									{
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "attacker"
										}
									},
									{
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "victim"
										}
									}
								]
							}
						}
					]
				}
			},
			"fishing_luck_bonus": {
				"kind": "list",
				"item": {
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"desc": " Predicate context: Entity Parameters.\n\n\n\n `this` is the player fishing.\n",
							"key": "requirements",
							"type": {
								"kind": "union",
								"members": [
									{
										"kind": "reference",
										"path": "::java::data::loot::LootCondition"
									},
									{
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::data::loot::LootCondition"
										}
									}
								]
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "Amount of luck being added.\n",
							"key": "effect",
							"type": {
								"kind": "reference",
								"path": "::java::data::enchantment::ValueEffect"
							}
						}
					]
				}
			},
			"fishing_time_reduction": {
				"kind": "list",
				"item": {
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"desc": " Predicate context: Entity Parameters.\n\n\n\n `this` is the player fishing.\n",
							"key": "requirements",
							"type": {
								"kind": "union",
								"members": [
									{
										"kind": "reference",
										"path": "::java::data::loot::LootCondition"
									},
									{
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::data::loot::LootCondition"
										}
									}
								]
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "Time reduction in seconds (higher values mean less time until a fish bites).\n",
							"key": "effect",
							"type": {
								"kind": "reference",
								"path": "::java::data::enchantment::ValueEffect"
							}
						}
					]
				}
			},
			"hit_block": {
				"kind": "list",
				"item": {
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"desc": " Predicate context: Entity Parameters.\n\n\n\n `this` is the entity hitting the Block, unless during a projectile attack, then, `this` is the projectile.\n",
							"key": "requirements",
							"type": {
								"kind": "union",
								"members": [
									{
										"kind": "reference",
										"path": "::java::data::loot::LootCondition"
									},
									{
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::data::loot::LootCondition"
										}
									}
								]
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "On the entity hitting the Block\n",
							"key": "effect",
							"type": {
								"kind": "reference",
								"path": "::java::data::enchantment::EntityEffect"
							}
						}
					]
				}
			},
			"item_damage": {
				"kind": "list",
				"item": {
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"desc": "Predicate context: Item Parameters.\n",
							"key": "requirements",
							"type": {
								"kind": "union",
								"members": [
									{
										"kind": "reference",
										"path": "::java::data::loot::LootCondition"
									},
									{
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::data::loot::LootCondition"
										}
									}
								]
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "Amount of damage being dealt to the item.\n",
							"key": "effect",
							"type": {
								"kind": "reference",
								"path": "::java::data::enchantment::ValueEffect"
							}
						}
					]
				}
			},
			"knockback": {
				"kind": "list",
				"item": {
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"desc": "Predicate context: Damage Parameters.\n",
							"key": "requirements",
							"type": {
								"kind": "union",
								"members": [
									{
										"kind": "reference",
										"path": "::java::data::loot::LootCondition"
									},
									{
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::data::loot::LootCondition"
										}
									}
								]
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "Amount of knockback being applied.\n",
							"key": "effect",
							"type": {
								"kind": "reference",
								"path": "::java::data::enchantment::ValueEffect"
							}
						}
					]
				}
			},
			"location_changed": {
				"kind": "list",
				"item": {
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"desc": "Predicate context: Location Parameters.\n",
							"key": "requirements",
							"type": {
								"kind": "union",
								"members": [
									{
										"kind": "reference",
										"path": "::java::data::loot::LootCondition"
									},
									{
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::data::loot::LootCondition"
										}
									}
								]
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "On the entity changing location.\n",
							"key": "effect",
							"type": {
								"kind": "reference",
								"path": "::java::data::enchantment::LocationBasedEffect"
							}
						}
					]
				}
			},
			"mob_experience": {
				"kind": "list",
				"item": {
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"desc": " Predicate context: Entity Parameters.\n\n\n\n `this` is the killed mob.\n",
							"key": "requirements",
							"type": {
								"kind": "union",
								"members": [
									{
										"kind": "reference",
										"path": "::java::data::loot::LootCondition"
									},
									{
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::data::loot::LootCondition"
										}
									}
								]
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "Amount of experience awarded.\n",
							"key": "effect",
							"type": {
								"kind": "reference",
								"path": "::java::data::enchantment::ValueEffect"
							}
						}
					]
				}
			},
			"post_attack": {
				"kind": "list",
				"item": {
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"desc": "Predicate context: Damage Parameters.\n",
							"key": "requirements",
							"type": {
								"kind": "union",
								"members": [
									{
										"kind": "reference",
										"path": "::java::data::loot::LootCondition"
									},
									{
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::data::loot::LootCondition"
										}
									}
								]
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "Examples:\n\n- A Fire Aspect Enchant would specify that when the attacker is enchanted, the ignite effect is applied, and the affected party is the victim.\n\n- Thorns would specify that when the victim is enchanted, the damage_entity effect is applied, and the affected party is the attacker.\n",
							"key": "effect",
							"type": {
								"kind": "reference",
								"path": "::java::data::enchantment::EntityEffect"
							}
						},
						{
							"kind": "pair",
							"key": "enchanted",
							"type": {
								"kind": "reference",
								"path": "::java::data::enchantment::AttackTarget"
							}
						},
						{
							"kind": "pair",
							"key": "affected",
							"type": {
								"kind": "reference",
								"path": "::java::data::enchantment::AttackTarget"
							}
						}
					]
				}
			},
			"prevent_armor_change": {
				"kind": "struct",
				"fields": []
			},
			"prevent_equipment_drop": {
				"kind": "struct",
				"fields": []
			},
			"projectile_count": {
				"kind": "list",
				"item": {
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"desc": " Predicate context: Entity Parameters.\n\n\n\n `this` is the entity drawing the weapon.\n",
							"key": "requirements",
							"type": {
								"kind": "union",
								"members": [
									{
										"kind": "reference",
										"path": "::java::data::loot::LootCondition"
									},
									{
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::data::loot::LootCondition"
										}
									}
								]
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "Amount of projectiles being loaded/drawn.\n",
							"key": "effect",
							"type": {
								"kind": "reference",
								"path": "::java::data::enchantment::ValueEffect"
							}
						}
					]
				}
			},
			"projectile_piercing": {
				"kind": "list",
				"item": {
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"desc": " Predicate context: Item Parameters.\n\n\n\n Tool is the ammunition item.\n",
							"key": "requirements",
							"type": {
								"kind": "union",
								"members": [
									{
										"kind": "reference",
										"path": "::java::data::loot::LootCondition"
									},
									{
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::data::loot::LootCondition"
										}
									}
								]
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "Amount of entities the projectile will pierce through before despawning.\n",
							"key": "effect",
							"type": {
								"kind": "reference",
								"path": "::java::data::enchantment::ValueEffect"
							}
						}
					]
				}
			},
			"projectile_spawned": {
				"kind": "list",
				"item": {
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"desc": " Predicate context: Entity Parameters.\n\n\n\n `this` is the newly spawned projectile.\n",
							"key": "requirements",
							"type": {
								"kind": "union",
								"members": [
									{
										"kind": "reference",
										"path": "::java::data::loot::LootCondition"
									},
									{
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::data::loot::LootCondition"
										}
									}
								]
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "On the newly spawned projectile.\n",
							"key": "effect",
							"type": {
								"kind": "reference",
								"path": "::java::data::enchantment::EntityEffect"
							}
						}
					]
				}
			},
			"projectile_spread": {
				"kind": "list",
				"item": {
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"desc": " Predicate context: Entity Parameters.\n\n\n\n `this` is the entity shooting the projectile.\n",
							"key": "requirements",
							"type": {
								"kind": "union",
								"members": [
									{
										"kind": "reference",
										"path": "::java::data::loot::LootCondition"
									},
									{
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::data::loot::LootCondition"
										}
									}
								]
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "Maximum spread of projectiles measured in degrees from the aim line.\n",
							"key": "effect",
							"type": {
								"kind": "reference",
								"path": "::java::data::enchantment::ValueEffect"
							}
						}
					]
				}
			},
			"repair_with_xp": {
				"kind": "list",
				"item": {
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"desc": "Predicate context: Item Parameters.\n",
							"key": "requirements",
							"type": {
								"kind": "union",
								"members": [
									{
										"kind": "reference",
										"path": "::java::data::loot::LootCondition"
									},
									{
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::data::loot::LootCondition"
										}
									}
								]
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "Amount of durability increase per experience point, `mending` uses 2x.\n",
							"key": "effect",
							"type": {
								"kind": "reference",
								"path": "::java::data::enchantment::ValueEffect"
							}
						}
					]
				}
			},
			"smash_damage_per_block_fallen": {
				"kind": "list",
				"item": {
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"desc": "Predicate context: Damage Parameters.\n",
							"key": "requirements",
							"type": {
								"kind": "union",
								"members": [
									{
										"kind": "reference",
										"path": "::java::data::loot::LootCondition"
									},
									{
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::data::loot::LootCondition"
										}
									}
								]
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "Amount of damage dealt per block fallen.\n",
							"key": "effect",
							"type": {
								"kind": "reference",
								"path": "::java::data::enchantment::ValueEffect"
							}
						}
					]
				}
			},
			"tick": {
				"kind": "list",
				"item": {
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"desc": " Predicate context: Entity Parameters.\n\n\n\n `this` is the entity with the Enchanted Item.\n",
							"key": "requirements",
							"type": {
								"kind": "union",
								"members": [
									{
										"kind": "reference",
										"path": "::java::data::loot::LootCondition"
									},
									{
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::data::loot::LootCondition"
										}
									}
								]
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "On every tick. Performance recommendation: don't use with `run_function` unless necessary.\n",
							"key": "effect",
							"type": {
								"kind": "reference",
								"path": "::java::data::enchantment::EntityEffect"
							}
						}
					]
				}
			},
			"trident_return_acceleration": {
				"kind": "list",
				"item": {
					"kind": "struct",
					"fields": [
						{
							"kind": "pair",
							"desc": " Predicate context: Entity Parameters.\n\n\n\n `this` is the trident entity.\n",
							"key": "requirements",
							"type": {
								"kind": "union",
								"members": [
									{
										"kind": "reference",
										"path": "::java::data::loot::LootCondition"
									},
									{
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::data::loot::LootCondition"
										}
									}
								]
							},
							"optional": true
						},
						{
							"kind": "pair",
							"desc": "Amount of acceleration applied to the returning trident.\n",
							"key": "effect",
							"type": {
								"kind": "reference",
								"path": "::java::data::enchantment::ValueEffect"
							}
						}
					]
				}
			},
			"trident_sound": {
				"kind": "list",
				"item": {
					"kind": "reference",
					"path": "::java::data::util::SoundEventRef"
				}
			},
			"trident_spin_attack_strength": {
				"kind": "reference",
				"path": "::java::data::enchantment::ValueEffect"
			}
		},
		"minecraft:enchantment_provider": {
			"by_cost": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "enchantments",
						"type": {
							"kind": "reference",
							"path": "::java::data::enchantment::EnchantmentsType"
						}
					},
					{
						"kind": "pair",
						"desc": "Cost to use for the Enchanting process.\n",
						"key": "cost",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::IntProvider"
							},
							"typeArgs": [
								{
									"kind": "int"
								}
							]
						}
					}
				]
			},
			"by_cost_with_difficulty": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "enchantments",
						"type": {
							"kind": "reference",
							"path": "::java::data::enchantment::EnchantmentsType"
						}
					},
					{
						"kind": "pair",
						"desc": "Positive integer representing the minimum possible cost\n",
						"key": "min_cost",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0
							}
						}
					},
					{
						"kind": "pair",
						"desc": "Span of the cost randomization when the special factor is at its maximum.\n",
						"key": "max_cost_span",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0
							}
						}
					}
				]
			},
			"single": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "enchantment",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "enchantment"
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "level",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::IntProvider"
							},
							"typeArgs": [
								{
									"kind": "int"
								}
							]
						}
					}
				]
			}
		},
		"minecraft:entity": {
			"acacia_boat": {
				"kind": "reference",
				"path": "::java::server::world::entity::boat::Boat",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"acacia_chest_boat": {
				"kind": "reference",
				"path": "::java::server::world::entity::boat::ChestBoat",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"allay": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::MobBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether the allay can duplicate. This is set to false when the allay duplicates.\n",
						"key": "CanDuplicate",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Ticks until `CanDuplicate` is set to true. This is set to 6000 game ticks (5 minutes) when the allay duplicates.\n",
						"key": "DuplicationCooldown",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Items it has picked up. Note that the item given by the player is in\n\nthe allay's `HandItems[0]` tag, not here.\n",
						"key": "Inventory",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::world::item::ItemStack"
							},
							"lengthRange": {
								"kind": 0,
								"min": 1,
								"max": 1
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Vibration game event listener.\n",
						"key": "listener",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::game_event::VibrationListener"
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19"
							}
						}
					}
				]
			},
			"area_effect_cloud": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::EntityBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Number of ticks it has existed.\n\nControls when it will despawn; when greater than `Duration + WaitTime`.\n",
						"key": "Age",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Color of the particles.\n\ncalculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive\n",
						"key": "Color",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Maximum number of ticks until it will disappear after `WaitTime` is done\n",
						"key": "Duration",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Number of ticks until the effects are reapplied.\n",
						"key": "ReapplicationDelay",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Number of ticks until it appears.\n",
						"key": "WaitTime",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Amount the duration changes when it is active.\n",
						"key": "DurationOnUse",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"desc": "Upper bits of the owner's UUID.\n",
						"key": "OwnerUUIDMost",
						"type": {
							"kind": "long"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"desc": "Lower bits of the owner's UUID.\n",
						"key": "OwnerUUIDLeast",
						"type": {
							"kind": "long"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "uuid"
							},
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"key": "Owner",
						"type": {
							"kind": "int_array",
							"lengthRange": {
								"kind": 0,
								"min": 4,
								"max": 4
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Radius of the particles & effect applications.\n",
						"key": "Radius",
						"type": {
							"kind": "float"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Change in the radius when it is used.\n",
						"key": "RadiusOnUse",
						"type": {
							"kind": "float"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Change in the radius per tick.\n",
						"key": "RadiusPerTick",
						"type": {
							"kind": "float"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Particle the area effect cloud displays.\n",
						"key": "Particle",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.5"
												}
											}
										}
									]
								},
								{
									"kind": "reference",
									"path": "::java::server::util::particle::Particle",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.5"
												}
											}
										}
									]
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						],
						"desc": "Default potion effect.\n",
						"key": "Potion",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "potion"
										}
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						],
						"desc": "Potion effects that get applied on use.\n",
						"key": "Effects",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::util::effect::MobEffectInstance"
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						],
						"key": "potion_contents",
						"type": {
							"kind": "dispatcher",
							"parallelIndices": [
								{
									"kind": "static",
									"value": "potion_contents"
								}
							],
							"registry": "minecraft:data_component"
						},
						"optional": true
					}
				]
			},
			"armadillo": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::Breedable"
						}
					},
					{
						"kind": "pair",
						"key": "state",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::armadillo::ArmadilloState"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "scute_time",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0
							}
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.20.5"
							}
						}
					}
				]
			},
			"armor_stand": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::MobBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether it should be invisible.\n",
						"key": "Invisible",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether it has no hitbox.\n",
						"key": "Marker",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether it should have a no base plate.\n",
						"key": "NoBasePlate",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether it should show its arms.\n",
						"key": "ShowArms",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether it is small.\n",
						"key": "Small",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "bitfield",
								"value": {
									"kind": "tree",
									"values": {
										"0": {
											"kind": "enum",
											"enumKind": "int",
											"values": [
												{
													"identifier": "HandAll",
													"value": 1
												},
												{
													"identifier": "BootsAll",
													"value": 2
												},
												{
													"identifier": "LeggingsAll",
													"value": 3
												},
												{
													"identifier": "ChestplateAll",
													"value": 4
												},
												{
													"identifier": "HelmetAll",
													"value": 5
												},
												{
													"identifier": "OffhandAll",
													"value": 6
												},
												{
													"identifier": "HandReplace",
													"value": 7
												},
												{
													"identifier": "BootsReplace",
													"value": 8
												},
												{
													"identifier": "LeggingsReplace",
													"value": 9
												},
												{
													"identifier": "ChestplateReplace",
													"value": 10
												},
												{
													"identifier": "HelmetReplace",
													"value": 11
												},
												{
													"identifier": "OffhandReplace",
													"value": 12
												},
												{
													"identifier": "HandPlace",
													"value": 13
												},
												{
													"identifier": "BootsPlace",
													"value": 14
												},
												{
													"identifier": "LeggingsPlace",
													"value": 15
												},
												{
													"identifier": "ChestplatePlace",
													"value": 16
												},
												{
													"identifier": "HelmetPlace",
													"value": 17
												},
												{
													"identifier": "OffhandPlace",
													"value": 18
												}
											]
										}
									}
								}
							}
						],
						"desc": "A bitfield of the slots that cannot be used.\n",
						"key": "DisabledSlots",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Body part rotations.\n",
						"key": "Pose",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::armor_stand::Pose"
						},
						"optional": true
					}
				]
			},
			"arrow": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::projectile::arrow::ArrowBase"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						],
						"desc": "Color of the arrow's potion bubble trail particles.\n\ncalculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.\n",
						"key": "Color",
						"type": {
							"kind": "int",
							"attributes": [
								{
									"name": "color",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "composite_rgb"
										}
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.2"
									}
								}
							}
						],
						"desc": "Effects to give to the hit entity.\n",
						"key": "CustomPotionEffects",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::util::effect::MobEffectInstance"
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.2"
									}
								}
							},
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.3"
									}
								}
							}
						],
						"desc": "Effects to give to the hit entity.\n",
						"key": "custom_potion_effects",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::util::effect::MobEffectInstance"
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.3"
									}
								}
							}
						],
						"desc": "Name of the default potion effect.\n",
						"key": "Potion",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "mob_effect"
										}
									}
								}
							]
						},
						"optional": true
					}
				]
			},
			"axolotl": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::Breedable"
						}
					},
					{
						"kind": "pair",
						"desc": "The variant of the axolotl.\n",
						"key": "Variant",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::axolotl::Variant"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "If this axolotl was released from a bucket.\n",
						"key": "FromBucket",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"bamboo_chest_raft": {
				"kind": "reference",
				"path": "::java::server::world::entity::boat::ChestBoat",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"bamboo_raft": {
				"kind": "reference",
				"path": "::java::server::world::entity::boat::Boat",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"bat": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::MobBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether it is upside down.\n",
						"key": "BatFlags",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"bee": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::Breedable"
						}
					},
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::NeutralMob"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						],
						"key": "HivePos",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::bee::HivePos"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						],
						"key": "hive_pos",
						"type": {
							"kind": "int_array",
							"lengthRange": {
								"kind": 0,
								"min": 3,
								"max": 3
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						],
						"desc": "Position of the flower the bee is circling\n",
						"key": "FlowerPos",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::bee::FlowerPos"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						],
						"desc": "Position of the flower the bee is circling\n",
						"key": "flower_pos",
						"type": {
							"kind": "int_array",
							"lengthRange": {
								"kind": 0,
								"min": 3,
								"max": 3
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether the bee has nectar.\n",
						"key": "HasNectar",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether the bee has stung an entity.\n",
						"key": "HasStung",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Ticks since the bee has pollinated a crop.\n",
						"key": "TicksSincePollination",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Ticks until the bee can enter its hive.\n",
						"key": "CannotEnterHiveTicks",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Crops grown since the bee has gathered nectar.\n",
						"key": "CropsGrownSincePollination",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Ticks the bee will be angry for.\n",
						"key": "Anger",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "uuid"
							}
						],
						"desc": "Player that has attacked the bee.\n",
						"key": "HurtBy",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.16"
												}
											}
										}
									]
								},
								{
									"kind": "int_array",
									"lengthRange": {
										"kind": 0,
										"min": 4,
										"max": 4
									},
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.16"
												}
											}
										}
									]
								}
							]
						},
						"optional": true
					}
				]
			},
			"birch_boat": {
				"kind": "reference",
				"path": "::java::server::world::entity::boat::Boat",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"birch_chest_boat": {
				"kind": "reference",
				"path": "::java::server::world::entity::boat::ChestBoat",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"blaze": {
				"kind": "reference",
				"path": "::java::server::world::entity::mob::MobBase"
			},
			"block_display": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::display::DisplayBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Block state to display.\n\nDoes display most block entities (eg. Chests, Beds, Furnaces, etc).\n\nDoes not display specially rendered block entities (eg. The bell in a bell block, an end gateway, the book on an enchantment table, a banner, a sign, etc).\n",
						"key": "block_state",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						},
						"optional": true
					}
				]
			},
			"boat": {
				"kind": "reference",
				"path": "::java::server::world::entity::boat::Boat",
				"attributes": [
					{
						"name": "until",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"bogged": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::MobBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether the mushrooms on this bogged have been sheared.\n",
						"key": "sheared",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"breeze": {
				"kind": "reference",
				"path": "::java::server::world::entity::mob::MobBase"
			},
			"breeze_wind_charge": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::projectile::ProjectileBase"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21"
									}
								}
							}
						],
						"desc": "Acceleration\n",
						"key": "power",
						"type": {
							"kind": "list",
							"item": {
								"kind": "double"
							},
							"lengthRange": {
								"kind": 0,
								"min": 3,
								"max": 3
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21"
									}
								}
							}
						],
						"key": "acceleration_power",
						"type": {
							"kind": "double"
						},
						"optional": true
					}
				]
			},
			"camel": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::horse::HorseBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether it is sitting.\n",
						"key": "IsSitting",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "The tick when it started changing its pose.\n",
						"key": "LastPoseTick",
						"type": {
							"kind": "long"
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"cat": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::tamable::Tamable"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"key": "CatType",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::tamable::CatType"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Collar color, present for stray cats.\n",
						"key": "CollarColor",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::ColorByte"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"key": "variant",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "cat_variant"
										}
									}
								}
							]
						},
						"optional": true
					}
				]
			},
			"cave_spider": {
				"kind": "reference",
				"path": "::java::server::world::entity::mob::MobBase"
			},
			"cherry_boat": {
				"kind": "reference",
				"path": "::java::server::world::entity::boat::Boat",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"cherry_chest_boat": {
				"kind": "reference",
				"path": "::java::server::world::entity::boat::ChestBoat",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"chest_boat": {
				"kind": "reference",
				"path": "::java::server::world::entity::boat::ChestBoat",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19"
							}
						}
					},
					{
						"name": "until",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"chest_minecart": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::minecart::Minecart"
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::minecart::ContainerMinecart"
						}
					},
					{
						"kind": "pair",
						"desc": "Slots from 0 to 26.\n",
						"key": "Items",
						"type": {
							"kind": "list",
							"item": {
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::server::util::SlottedItem"
								},
								"typeArgs": [
									{
										"kind": "byte",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 26
										}
									}
								]
							},
							"lengthRange": {
								"kind": 0,
								"min": 0,
								"max": 27
							}
						},
						"optional": true
					}
				]
			},
			"chicken": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::Breedable"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether it is from a chicken jockey.\n\nIf true it will despawn and will drop more experience.\n",
						"key": "IsChickenJockey",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Time until it lays another egg.\n",
						"key": "EggLayTime",
						"type": {
							"kind": "int"
						},
						"optional": true
					}
				]
			},
			"cod": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::MobBase"
						}
					},
					{
						"kind": "pair",
						"desc": "If it was released from a bucket.\n",
						"key": "FromBucket",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"command_block_minecart": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::minecart::Minecart"
						}
					},
					{
						"kind": "pair",
						"key": "Command",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "command",
									"value": {
										"kind": "tree",
										"values": {
											"slash": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "allowed"
												}
											},
											"empty": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "allowed"
												}
											},
											"max_length": {
												"kind": "literal",
												"value": {
													"kind": "int",
													"value": 32500
												}
											}
										}
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Success count of the last command.\n",
						"key": "SuccessCount",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Output of the last command.\n",
						"key": "LastOutput",
						"type": {
							"kind": "string"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether to record command output.\n",
						"key": "TrackOutput",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"cow": {
				"kind": "reference",
				"path": "::java::server::world::entity::mob::breedable::Breedable"
			},
			"creaking": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::MobBase"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.4"
									}
								}
							}
						],
						"desc": "The creaking heart block that this is linked to.\n",
						"key": "home_pos",
						"type": {
							"kind": "list",
							"item": {
								"kind": "int"
							},
							"lengthRange": {
								"kind": 0,
								"min": 3,
								"max": 3
							}
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"creaking_transient": {
				"kind": "reference",
				"path": "::java::server::world::entity::mob::creaking::Creaking",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					},
					{
						"name": "until",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.4"
							}
						}
					}
				]
			},
			"creeper": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::MobBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether it is being struck by lightning.\n",
						"key": "powered",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Radius of the explosion.\n",
						"key": "ExplosionRadius",
						"type": {
							"kind": "byte"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Ticks until it explodes.\n",
						"key": "Fuse",
						"type": {
							"kind": "short"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether it was lit with flint and steel.\n",
						"key": "ignited",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"dark_oak_boat": {
				"kind": "reference",
				"path": "::java::server::world::entity::boat::Boat",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"dark_oak_chest_boat": {
				"kind": "reference",
				"path": "::java::server::world::entity::boat::ChestBoat",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"dolphin": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::MobBase"
						}
					},
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.2"
									}
								}
							}
						],
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::AgeableMob"
						}
					},
					{
						"kind": "pair",
						"desc": "X coordinate of the treasure it leads to.\n",
						"key": "TreasurePosX",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Y coordinate of the treasure it leads to.\n",
						"key": "TreasurePosY",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Z coordinate of the treasure it leads to.\n",
						"key": "TreasurePosZ",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether it has gotten fish from a player.\n",
						"key": "GotFish",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Moistness level of the dolphin.\n\nSet to 2400 when the dolphin is in water or rain, otherwise decreases by 1 every tick.\n\nThe dolphin takes damage when level is at 0 or below.\n",
						"key": "Moistness",
						"type": {
							"kind": "int"
						},
						"optional": true
					}
				]
			},
			"donkey": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::horse::HorseBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether it has a chest.\n",
						"key": "ChestedHorse",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Slots from 0 to 14.\n",
						"key": "Items",
						"type": {
							"kind": "list",
							"item": {
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::server::util::SlottedItem"
								},
								"typeArgs": [
									{
										"kind": "byte",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 14
										}
									}
								]
							},
							"lengthRange": {
								"kind": 0,
								"min": 0,
								"max": 15
							}
						},
						"optional": true
					}
				]
			},
			"dragon_fireball": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::projectile::fireball::AcceleratingProjectileBase"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"key": "direction",
						"type": {
							"kind": "list",
							"item": {
								"kind": "double"
							},
							"lengthRange": {
								"kind": 0,
								"min": 3,
								"max": 3
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"desc": "Ticks since it last moved.\n",
						"key": "life",
						"type": {
							"kind": "short"
						},
						"optional": true
					}
				]
			},
			"drowned": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::MobBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether it is a baby.\n",
						"key": "IsBaby",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether it can break doors.\n",
						"key": "CanBreakDoors",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Ticks until it converts.\n",
						"key": "DrownedConversionTime",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Ticks it has been in the water.\n",
						"key": "InWaterTime",
						"type": {
							"kind": "int"
						},
						"optional": true
					}
				]
			},
			"egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::projectile::throwable::Throwable"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"desc": "Item representation of the projectile.\n",
						"key": "Item",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemStack"
						},
						"optional": true
					}
				]
			},
			"elder_guardian": {
				"kind": "reference",
				"path": "::java::server::world::entity::mob::MobBase"
			},
			"end_crystal": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::EntityBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether to show the base of the end crystal.\n",
						"key": "ShowBottom",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						],
						"desc": "Coordinates that the beam is pointing to\n",
						"key": "BeamTarget",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::end_crystal::BeamTarget"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						],
						"desc": "Coordinates that the beam is pointing to\n",
						"key": "beam_target",
						"type": {
							"kind": "int_array",
							"lengthRange": {
								"kind": 0,
								"min": 3,
								"max": 3
							}
						},
						"optional": true
					}
				]
			},
			"ender_dragon": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::MobBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Fighting phase it is in.\n",
						"key": "DragonPhase",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::ender_dragon::DragonPhase"
						},
						"optional": true
					}
				]
			},
			"ender_pearl": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::projectile::throwable::Throwable"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"desc": "Item representation of the projectile.\n",
						"key": "Item",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemStack"
						},
						"optional": true
					}
				]
			},
			"enderman": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::MobBase"
						}
					},
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::NeutralMob"
						}
					},
					{
						"kind": "pair",
						"desc": "Block it is carrying.\n",
						"key": "carriedBlockState",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::BlockState"
						},
						"optional": true
					}
				]
			},
			"endermite": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::MobBase"
						}
					},
					{
						"kind": "pair",
						"desc": "How long it has existed.\n",
						"key": "Lifetime",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether enderman should attack it.\n",
						"key": "PlayerSpawned",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"evoker": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::raider::RaiderBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Ticks until the raider can cast its spell.\n",
						"key": "SpellTicks",
						"type": {
							"kind": "int"
						},
						"optional": true
					}
				]
			},
			"evoker_fangs": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::EntityBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Ticks until the fangs pop out of the ground.\n",
						"key": "Warmup",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "uuid"
							}
						],
						"key": "Owner",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "reference",
									"path": "::java::server::world::entity::evoker_fangs::Owner",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.16"
												}
											}
										}
									]
								},
								{
									"kind": "int_array",
									"lengthRange": {
										"kind": 0,
										"min": 4,
										"max": 4
									},
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.16"
												}
											}
										}
									]
								}
							]
						},
						"optional": true
					}
				]
			},
			"experience_bottle": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::projectile::throwable::Throwable"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"desc": "Item representation of the projectile.\n",
						"key": "Item",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemStack"
						},
						"optional": true
					}
				]
			},
			"experience_orb": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::EntityBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Ticks that it has existed.\n",
						"key": "Age",
						"type": {
							"kind": "short"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "Health",
						"type": {
							"kind": "short"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Amount of experience it will give.\n",
						"key": "Value",
						"type": {
							"kind": "short"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.17"
									}
								}
							}
						],
						"desc": "Remaining number of times that the orb can be picked up.\n\nWhen the orb is picked up, the value decreases by 1.\n\nWhen multiple orbs are merged, their values are added up to result orb.\n\nWhen the value reaches 0, the orb is depleted.\n",
						"key": "Count",
						"type": {
							"kind": "int"
						},
						"optional": true
					}
				]
			},
			"eye_of_ender": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::EntityBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Item to render as\n",
						"key": "Item",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemStack"
						},
						"optional": true
					}
				]
			},
			"falling_block": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::EntityBase"
						}
					},
					{
						"kind": "pair",
						"desc": "NBT data for the placed block.\n",
						"key": "TileEntityData",
						"type": {
							"kind": "dispatcher",
							"parallelIndices": [
								{
									"kind": "dynamic",
									"accessor": [
										"BlockState",
										"Name"
									]
								}
							],
							"registry": "minecraft:block"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Block state for the placed block.\n",
						"key": "BlockState",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::BlockState"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Ticks it has existed.\n",
						"key": "Time",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether it should drop as a block when destroyed.\n",
						"key": "DropItem",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether this it should hurt entities.\n",
						"key": "HurtEntities",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Maximum damage it should deal.\n",
						"key": "FallHurtMax",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Damage multiplier.\n",
						"key": "FallHurtAmount",
						"type": {
							"kind": "float"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20"
									}
								}
							}
						],
						"desc": "Whether the block should be destroyed instead of placed after landing on a solid block.\n\nWhen `true`, the block is not dropped as an item, even if the DropItem tag is set to `true`.\n\nHowever, if the entity is deleted due to its Time value being too high, this tag is ignored and an item is dropped depending on the `DropItem` tag.\n\nDefaults to `1` for falling suspicious sand and suspicious gravel, and `0` for the other vanilla falling blocks and any summoned falling block.\n",
						"key": "CancelDrop",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"fireball": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::projectile::fireball::FireballBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Explosion radius.\n",
						"key": "ExplosionPower",
						"type": {
							"kind": "int"
						},
						"optional": true
					}
				]
			},
			"firework_rocket": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::EntityBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Ticks it has existed.\n",
						"key": "Life",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Ticks it will exist.\n",
						"key": "LifeTime",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether it should move at an angle.\n",
						"key": "ShotAtAngle",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "FireworksItem",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemStack"
						},
						"optional": true
					}
				]
			},
			"fox": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::Breedable"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"desc": "List of trusted players.\n",
						"key": "TrustedUUIDs",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::world::entity::mob::breedable::fox::TrustedUUID",
								"attributes": [
									{
										"name": "uuid"
									}
								]
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"desc": "List of trusted players.\n",
						"key": "Trusted",
						"type": {
							"kind": "list",
							"item": {
								"kind": "int_array",
								"lengthRange": {
									"kind": 0,
									"min": 4,
									"max": 4
								},
								"attributes": [
									{
										"name": "uuid"
									}
								]
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether it is sleeping.\n",
						"key": "Sleeping",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "The type of fox.\n",
						"key": "Type",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::fox::FoxType"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether it is sitting.\n",
						"key": "Sitting",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether it is crouching.\n",
						"key": "Crouching",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"frog": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::Breedable"
						}
					},
					{
						"kind": "pair",
						"key": "variant",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "frog_variant"
										}
									}
								}
							]
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19"
							}
						}
					}
				]
			},
			"furnace_minecart": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::minecart::Minecart"
						}
					},
					{
						"kind": "pair",
						"desc": "Acceleration in x axis.\n",
						"key": "PushX",
						"type": {
							"kind": "double"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Acceleration in z axis.\n",
						"key": "PushZ",
						"type": {
							"kind": "double"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Ticks until the fuel runs out.\n",
						"key": "Fuel",
						"type": {
							"kind": "short"
						},
						"optional": true
					}
				]
			},
			"ghast": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::MobBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Explosion radius of fireballs that are shot from it.\n",
						"key": "ExplosionPower",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0
							}
						},
						"optional": true
					}
				]
			},
			"giant": {
				"kind": "reference",
				"path": "::java::server::world::entity::mob::MobBase"
			},
			"glow_item_frame": {
				"kind": "reference",
				"path": "::java::server::world::entity::item_frame::ItemFrame",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"glow_squid": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::MobBase"
						}
					},
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.2"
									}
								}
							}
						],
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::AgeableMob"
						}
					},
					{
						"kind": "pair",
						"desc": "Ticks that it will wait before glowing.\n",
						"key": "DarkTicksRemaining",
						"type": {
							"kind": "int"
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"goat": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::Breedable"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"desc": "Whether it has its left horn.\n",
						"key": "HasLeftHorn",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"desc": "Whether it has its right horn.\n",
						"key": "HasRightHorn",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether it is a screaming goat.\n",
						"key": "IsScreamingGoat",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"guardian": {
				"kind": "reference",
				"path": "::java::server::world::entity::mob::MobBase"
			},
			"hoglin": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::Breedable"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether it will not transform to a zoglin when it is in the Overword.\n",
						"key": "IsImmuneToZombification",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether it cannot be hunted by piglins\n",
						"key": "CannotBeHunted",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "The number of ticks it has been in the overworld.\n",
						"key": "TimeInOverworld",
						"type": {
							"kind": "int"
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.16"
							}
						}
					}
				]
			},
			"hopper_minecart": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::minecart::Minecart"
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::minecart::ContainerMinecart"
						}
					},
					{
						"kind": "pair",
						"desc": "Slots from 0 to 4.\n",
						"key": "Items",
						"type": {
							"kind": "list",
							"item": {
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::server::util::SlottedItem"
								},
								"typeArgs": [
									{
										"kind": "byte",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 4
										}
									}
								]
							},
							"lengthRange": {
								"kind": 0,
								"min": 0,
								"max": 5
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Ticks until an item can be transferred.\n",
						"key": "TransferCooldown",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether it should pick up items.\n",
						"key": "Enabled",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"horse": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::horse::HorseBase"
						}
					},
					{
						"kind": "pair",
						"key": "Variant",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::horse::HorseVariant"
						},
						"optional": true
					}
				]
			},
			"husk": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::MobBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether it is a baby.\n",
						"key": "IsBaby",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether it can break doors.\n",
						"key": "CanBreakDoors",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Ticks until it converts.\n",
						"key": "DrownedConversionTime",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Ticks it has been in the water.\n",
						"key": "InWaterTime",
						"type": {
							"kind": "int"
						},
						"optional": true
					}
				]
			},
			"illusioner": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::raider::RaiderBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Ticks until the raider can cast its spell.\n",
						"key": "SpellTicks",
						"type": {
							"kind": "int"
						},
						"optional": true
					}
				]
			},
			"interaction": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::EntityBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Cube hitbox width centered on the entity. Negative values are effectively `| x |`.\n",
						"key": "width",
						"type": {
							"kind": "float"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Cube hitbox height stretching up from the entity position. Negative values stretch the hitbox down.\n",
						"key": "height",
						"type": {
							"kind": "float"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether an action should trigger a response. Defaults to false.\n\nResponse:\n\nAttack - When true, the default attack sound is played.\n\nInteraction - When true, the player's arm swings.\n",
						"key": "response",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Record of last attack (left click) event, can be updated every tick (no invulnerability frames).\n",
						"key": "attack",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::interaction::Action"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Record of last interaction (use; right click) event, can be updated every tick, if the player is holding the key it updates every 3 ticks.\n",
						"key": "interaction",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::interaction::Action"
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19.4"
							}
						}
					}
				]
			},
			"iron_golem": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::MobBase"
						}
					},
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::NeutralMob"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether a player created it.\n",
						"key": "PlayerCreated",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"item": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::EntityBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Ticks it has existed.\n",
						"key": "Age",
						"type": {
							"kind": "short"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "Health",
						"type": {
							"kind": "short"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Ticks until an entity can pick up this item.\n",
						"key": "PickupDelay",
						"type": {
							"kind": "short"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "uuid"
							}
						],
						"desc": "Only this entity can pick up the item.\n",
						"key": "Owner",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "reference",
									"path": "::java::server::world::entity::item::Uuid",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.16"
												}
											}
										}
									]
								},
								{
									"kind": "int_array",
									"lengthRange": {
										"kind": 0,
										"min": 4,
										"max": 4
									},
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.16"
												}
											}
										}
									]
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "uuid"
							}
						],
						"desc": "Player who threw the item. Can be set and/or changed to any entity.\n",
						"key": "Thrower",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "reference",
									"path": "::java::server::world::entity::item::Uuid",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.16"
												}
											}
										}
									]
								},
								{
									"kind": "int_array",
									"lengthRange": {
										"kind": 0,
										"min": 4,
										"max": 4
									},
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.16"
												}
											}
										}
									]
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "Item",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemStack"
						},
						"optional": true
					}
				]
			},
			"item_display": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::display::DisplayBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Item stack to display.\n",
						"key": "item",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemStack"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Describes item model transform applied to item (as defined in `display` section in model JSON). Defaults to `fixed`.\n",
						"key": "item_display",
						"type": {
							"kind": "reference",
							"path": "::java::assets::model::ItemTransformType"
						},
						"optional": true
					}
				]
			},
			"item_frame": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::EntityBase"
						}
					},
					{
						"kind": "pair",
						"key": "TileX",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "TileY",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "TileZ",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Direction it is facing.\n",
						"key": "Facing",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::item_frame::Facing"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "Item",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemStack"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Chance the item has to drop.\n",
						"key": "ItemDropChance",
						"type": {
							"kind": "float"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Rotation of the item.\n",
						"key": "ItemRotation",
						"type": {
							"kind": "byte",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 7
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"desc": "Whether the item frame should be invisible.\n\nThe item inside the frame is not effected.\n",
						"key": "Invisible",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"desc": "Whether the item frame should not be able to be broken and should disallow the item to be moved.\n",
						"key": "Fixed",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"jungle_boat": {
				"kind": "reference",
				"path": "::java::server::world::entity::boat::Boat",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"jungle_chest_boat": {
				"kind": "reference",
				"path": "::java::server::world::entity::boat::ChestBoat",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"llama": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::Breedable"
						}
					},
					{
						"kind": "pair",
						"desc": "Unknown use.\n\nRemains `0` even if it was bred.\n",
						"key": "Bred",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether it is grazing.\n",
						"key": "EatingHaystack",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether it has been tamed.\n",
						"key": "Tame",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Higher values make it easier to tame.\n\nIncreases with feeding.\n",
						"key": "Temper",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 100
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"desc": "Player who tamed it.\n",
						"key": "OwnerUUID",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "uuid"
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							},
							{
								"name": "uuid"
							}
						],
						"desc": "Player who tamed the horse.\n",
						"key": "Owner",
						"type": {
							"kind": "int_array",
							"lengthRange": {
								"kind": 0,
								"min": 4,
								"max": 4
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						],
						"desc": "Carpet decoration on its back.\n",
						"key": "DecorItem",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemStack"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether it has a chest.\n",
						"key": "ChestedHorse",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "List of slots, scales with `Strength`.\n",
						"key": "Items",
						"type": {
							"kind": "dispatcher",
							"parallelIndices": [
								{
									"kind": "dynamic",
									"accessor": [
										"Strength"
									]
								}
							],
							"registry": "minecraft:llama_strength"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Determines both the number of items it can carry and how likely it is for wolves to run away.\n",
						"key": "Strength",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 1,
								"max": 5
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "Variant",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::llama::LlamaVariant"
						},
						"optional": true
					}
				]
			},
			"llama_spit": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::projectile::ProjectileBase"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							},
							{
								"name": "uuid"
							}
						],
						"key": "Owner",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::projectile::OwnerUuid"
						},
						"optional": true
					}
				]
			},
			"magma_cube": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::MobBase"
						}
					},
					{
						"kind": "pair",
						"key": "Size",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "int",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								},
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 126
									},
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether it is on the ground.\n",
						"key": "wasOnGround",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"mangrove_boat": {
				"kind": "reference",
				"path": "::java::server::world::entity::boat::Boat",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"mangrove_chest_boat": {
				"kind": "reference",
				"path": "::java::server::world::entity::boat::ChestBoat",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"marker": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::EntityBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Any stored data\n",
						"key": "data",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": {
										"kind": "string",
										"attributes": [
											{
												"name": "dispatcher_key",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "mcdoc:marker_data"
													}
												}
											}
										]
									},
									"type": {
										"kind": "dispatcher",
										"parallelIndices": [
											{
												"kind": "dynamic",
												"accessor": [
													{
														"keyword": "key"
													}
												]
											}
										],
										"registry": "mcdoc:marker_data"
									}
								}
							]
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"minecart": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::EntityBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether to display a custom block.\n",
						"key": "CustomDisplayTile",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Custom block to display.\n\nOnly has effects when `CustomDisplayTile` is true.\n",
						"key": "DisplayState",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::BlockState"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Vertical offset of the custom block display.\n",
						"key": "DisplayOffset",
						"type": {
							"kind": "int"
						},
						"optional": true
					}
				]
			},
			"mooshroom": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::Breedable"
						}
					},
					{
						"kind": "pair",
						"key": "Type",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::mooshroom::MooshroomType"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.2"
									}
								}
							}
						],
						"desc": "Effect that the mooshroom gives to suspicious stew.\n",
						"key": "EffectId",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::effect::EffectId"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.2"
									}
								}
							}
						],
						"desc": "Duration of the suspicious stew effect.\n",
						"key": "EffectDuration",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.2"
									}
								}
							}
						],
						"key": "stew_effects",
						"type": {
							"kind": "dispatcher",
							"parallelIndices": [
								{
									"kind": "static",
									"value": "suspicious_stew_effects"
								}
							],
							"registry": "minecraft:data_component"
						},
						"optional": true
					}
				]
			},
			"mule": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::horse::HorseBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether it has a chest.\n",
						"key": "ChestedHorse",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Slots from 0 to 14.\n",
						"key": "Items",
						"type": {
							"kind": "list",
							"item": {
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::server::util::SlottedItem"
								},
								"typeArgs": [
									{
										"kind": "byte",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 14
										}
									}
								]
							},
							"lengthRange": {
								"kind": 0,
								"min": 0,
								"max": 15
							}
						},
						"optional": true
					}
				]
			},
			"oak_boat": {
				"kind": "reference",
				"path": "::java::server::world::entity::boat::Boat",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"oak_chest_boat": {
				"kind": "reference",
				"path": "::java::server::world::entity::boat::ChestBoat",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"ocelot": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::Breedable"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether it trusts players.\n",
						"key": "Trusting",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"ominous_item_spawner": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::EntityBase"
						}
					},
					{
						"kind": "pair",
						"key": "item",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemStack"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "spawn_item_after_ticks",
						"type": {
							"kind": "long"
						},
						"optional": true
					}
				]
			},
			"painting": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::EntityBase"
						}
					},
					{
						"kind": "pair",
						"key": "TileX",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "TileY",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "TileZ",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Direction it is facing.\n",
						"key": "Facing",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::painting::Facing"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"desc": "Type of painting.\n",
						"key": "Motive",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "motive"
										}
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"desc": "Type of painting.\n",
						"key": "variant",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "painting_variant"
												}
											}
										}
									]
								},
								{
									"kind": "reference",
									"path": "::java::data::variants::painting::PaintingVariant",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.21"
												}
											}
										}
									]
								}
							]
						},
						"optional": true
					}
				]
			},
			"pale_oak_boat": {
				"kind": "reference",
				"path": "::java::server::world::entity::boat::Boat",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"pale_oak_chest_boat": {
				"kind": "reference",
				"path": "::java::server::world::entity::boat::ChestBoat",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"panda": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::Breedable"
						}
					},
					{
						"kind": "pair",
						"desc": "Displayed gene.\n\nIf this gene is recessive and 'HiddenGene' is not the same, the panda will display the 'normal' gene.\n",
						"key": "MainGene",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::panda::Gene"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Hidden gene.\n",
						"key": "HiddenGene",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::panda::Gene"
						},
						"optional": true
					}
				]
			},
			"parrot": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::tamable::Tamable"
						}
					},
					{
						"kind": "pair",
						"key": "Variant",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::tamable::ParrotVariant"
						},
						"optional": true
					}
				]
			},
			"phantom": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::MobBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Approximate circle x coordinate.\n",
						"key": "AX",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Approximate circle y coordinate.\n",
						"key": "AY",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Approximate circle z coordinate.\n",
						"key": "AZ",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "Size",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 64
							}
						},
						"optional": true
					}
				]
			},
			"pig": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::Breedable"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether there is a saddle on it.\n",
						"key": "Saddle",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"piglin": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::piglin::PiglinBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether it is a baby.\n",
						"key": "IsBaby",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether it does not hunt hoglins.\n",
						"key": "CannotHunt",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "Inventory",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::world::item::ItemStack"
							},
							"lengthRange": {
								"kind": 0,
								"min": 0,
								"max": 8
							}
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.16"
							}
						}
					}
				]
			},
			"piglin_brute": {
				"kind": "reference",
				"path": "::java::server::world::entity::mob::piglin::PiglinBase",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.16.2"
							}
						}
					}
				]
			},
			"pillager": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::raider::RaiderBase"
						}
					},
					{
						"kind": "pair",
						"key": "Inventory",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::world::item::ItemStack"
							},
							"lengthRange": {
								"kind": 0,
								"min": 0,
								"max": 5
							}
						},
						"optional": true
					}
				]
			},
			"player": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::LivingEntity"
						}
					},
					{
						"kind": "pair",
						"desc": "Version of the player NBT structure\n",
						"key": "DataVersion",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "Dimension",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "reference",
									"path": "::java::server::world::entity::mob::player::Dimension",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.16"
												}
											}
										}
									]
								},
								{
									"kind": "string",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.16"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "dimension"
												}
											}
										}
									]
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"desc": "Location of the player's last death.\n",
						"key": "LastDeathLocation",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::GlobalPos"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Game mode that the player is in.\n",
						"key": "playerGameType",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::player::Gamemode"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"desc": "Previous game mode that the player was in.\n",
						"key": "previousPlayerGameType",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::player::Gamemode"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Score to display upon death.\n",
						"key": "Score",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Hotbar slot the player has selected.\n",
						"key": "SelectedItemSlot",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 8
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Item in the hotbar slot the player has selected.\n",
						"key": "SelectedItem",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::server::util::SlottedItem"
							},
							"typeArgs": [
								{
									"kind": "reference",
									"path": "::java::server::world::entity::mob::player::PlayerSlot"
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"desc": "Dimension of the player's respawn point.\n",
						"key": "SpawnDimension",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "dimension"
										}
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16.2"
									}
								}
							}
						],
						"desc": "The Y-rotation of the player's respawn point.\n",
						"key": "SpawnAngle",
						"type": {
							"kind": "float"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "X coordinate of the player's spawn point.\n",
						"key": "SpawnX",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Y coordinate of the player's spawn point.\n",
						"key": "SpawnY",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Z coordinate of the player's spawn point.\n",
						"key": "SpawnZ",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether the player must spawn at the spawn point.\n",
						"key": "SpawnForced",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Ticks the player has been in bed.\n",
						"key": "SleepTimer",
						"type": {
							"kind": "short"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Level of the hunger bar.\n",
						"key": "foodLevel",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Rate at which the `foodSaturationLevel` depletes.\n",
						"key": "foodExhaustionLevel",
						"type": {
							"kind": "float"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Rate at which the hunger bar depletes.\n",
						"key": "foodSaturationLevel",
						"type": {
							"kind": "float"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Ticks until the player heals or takes starvation damage.\n",
						"key": "foodTickTimer",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Number of experience levels the player has.\n",
						"key": "XpLevel",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Percentage the experience bar is filled up.\n",
						"key": "XpP",
						"type": {
							"kind": "float"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Total experience the player has.\n",
						"key": "XpTotal",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Seed for enchantments.\n",
						"key": "XpSeed",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "Inventory",
						"type": {
							"kind": "list",
							"item": {
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::server::util::SlottedItem"
								},
								"typeArgs": [
									{
										"kind": "reference",
										"path": "::java::server::world::entity::mob::player::PlayerSlot"
									}
								]
							},
							"lengthRange": {
								"kind": 0,
								"min": 0,
								"max": 41
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "The player's enderchest inventory.\n",
						"key": "EnderItems",
						"type": {
							"kind": "list",
							"item": {
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::server::util::SlottedItem"
								},
								"typeArgs": [
									{
										"kind": "byte",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 26
										}
									}
								]
							},
							"lengthRange": {
								"kind": 0,
								"min": 0,
								"max": 27
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Abilities of the player.\n",
						"key": "abilities",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::player::Abilities"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Position that the player entered the nether at.\n",
						"key": "enteredNetherPosition",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::player::EnteredNetherPosition"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Entity that the player is riding.\n",
						"key": "RootVehicle",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::player::RootVehicle"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Entity that is on the player's left shoulder.\n",
						"key": "ShoulderEntityLeft",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Entity that is on the player's right shoulder.\n",
						"key": "ShoulderEntityRight",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether the player has gone to the overworld after defeating the Ender Dragon.\n",
						"key": "seenCredits",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Recipes that the player has.\n",
						"key": "recipeBook",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::player::RecipeBook"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"desc": "Tracking the warden spawning process for this player.\n",
						"key": "warden_spawn_tracker",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::player::WardenSpawnTracker"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.2"
									}
								}
							}
						],
						"desc": "Ender pearls thrown by this player.\n",
						"key": "ender_pearls",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::world::entity::mob::player::EnderPearl"
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "CustomName",
						"type": {
							"kind": "union",
							"members": []
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "CustomNameVisible",
						"type": {
							"kind": "union",
							"members": []
						},
						"optional": true
					}
				]
			},
			"polar_bear": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::MobBase"
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::NeutralMob"
						}
					}
				]
			},
			"potion": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::projectile::throwable::Throwable"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"desc": "Item representation of the potion.\n",
						"key": "Potion",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemStack"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"desc": "Item representation of the potion.\n",
						"key": "Item",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemStack"
						},
						"optional": true
					}
				]
			},
			"pufferfish": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::fish::Fish"
						}
					},
					{
						"kind": "pair",
						"desc": "How puffed it is.\n",
						"key": "PuffState",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::fish::PuffState"
						},
						"optional": true
					}
				]
			},
			"rabbit": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::Breedable"
						}
					},
					{
						"kind": "pair",
						"key": "RabbitType",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::rabbit::RabbitType"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Ticks down once a carrot crop is eaten\n",
						"key": "MoreCarrotTicks",
						"type": {
							"kind": "int"
						},
						"optional": true
					}
				]
			},
			"ravager": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::raider::RaiderBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Ticks until it can attack.\n",
						"key": "AttackTick",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Ticks until it can roar.\n",
						"key": "RoarTick",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Ticks it is stunned for.\n",
						"key": "StunTick",
						"type": {
							"kind": "int"
						},
						"optional": true
					}
				]
			},
			"salmon": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::fish::Fish"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.2"
									}
								}
							}
						],
						"desc": "The size variant of the salmon.\n",
						"key": "type",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::fish::SalmonType"
						}
					}
				]
			},
			"sheep": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::Breedable"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether it has been shorn.\n",
						"key": "Sheared",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "Color",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::ColorByte"
						},
						"optional": true
					}
				]
			},
			"shulker": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::MobBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether it is peeking.\n",
						"key": "Peek",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Which face it is attached to.\n",
						"key": "AttachFace",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::shulker::AttachFace"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "Color",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "reference",
									"path": "::java::server::util::color::ColorInt"
								},
								{
									"kind": "reference",
									"path": "::java::server::world::entity::mob::shulker::ShulkerColor"
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.17"
									}
								}
							}
						],
						"desc": "Approximate x coordinate of the shulker.\n",
						"key": "APX",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.17"
									}
								}
							}
						],
						"desc": "Approximate y coordinate of the shulker.\n",
						"key": "APY",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.17"
									}
								}
							}
						],
						"desc": "Approximate z coordinate of the shulker.\n",
						"key": "APZ",
						"type": {
							"kind": "int"
						},
						"optional": true
					}
				]
			},
			"shulker_bullet": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::projectile::ProjectileBase"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"key": "Owner",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::projectile::shulker_bullet::BulletTarget"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Steps it takes to reach the target\n",
						"key": "Steps",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "Target",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::projectile::shulker_bullet::BulletTarget"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "X offset to move based on the target's location.\n",
						"key": "TXD",
						"type": {
							"kind": "double"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Y offset to move based on the target's location.\n",
						"key": "TYD",
						"type": {
							"kind": "double"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Z offset to move based on the target's location.\n",
						"key": "TZD",
						"type": {
							"kind": "double"
						},
						"optional": true
					}
				]
			},
			"silverfish": {
				"kind": "reference",
				"path": "::java::server::world::entity::mob::MobBase"
			},
			"skeleton": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::MobBase"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.17"
									}
								}
							}
						],
						"desc": "Time until it converts to a stray.\n",
						"key": "StrayConversionTime",
						"type": {
							"kind": "int"
						},
						"optional": true
					}
				]
			},
			"skeleton_horse": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::horse::HorseBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether it was spawned by a trap.\n",
						"key": "SkeletonTrap",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Ticks it has existed.\n",
						"key": "SkeletonTrapTime",
						"type": {
							"kind": "int"
						},
						"optional": true
					}
				]
			},
			"slime": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::MobBase"
						}
					},
					{
						"kind": "pair",
						"key": "Size",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "int",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								},
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 126
									},
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether it is on the ground.\n",
						"key": "wasOnGround",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"small_fireball": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::projectile::fireball::DespawnableProjectileBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Item it should render as.\n",
						"key": "Item",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemStack"
						},
						"optional": true
					}
				]
			},
			"sniffer": {
				"kind": "reference",
				"path": "::java::server::world::entity::mob::breedable::Breedable",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19.4"
							}
						}
					}
				]
			},
			"snow_golem": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::MobBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether it has a pumpkin.\n",
						"key": "Pumpkin",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"snowball": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::projectile::throwable::Throwable"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"desc": "Item representation of the projectile.\n",
						"key": "Item",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemStack"
						},
						"optional": true
					}
				]
			},
			"spawner_minecart": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::minecart::Minecart"
						}
					},
					{
						"kind": "pair",
						"desc": "List of potential entities to place next.\n",
						"key": "SpawnPotentials",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::world::block::spawner::SpawnPotential"
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Data for the next mob to place.\n\nWill be overwritten by `SpawnPotentials`.\n",
						"key": "SpawnData",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "reference",
									"path": "::java::server::world::entity::AnyEntity",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.18"
												}
											}
										}
									]
								},
								{
									"kind": "reference",
									"path": "::java::server::world::block::spawner::SpawnerEntry",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.18"
												}
											}
										}
									]
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Number of entities that will be placed.\n",
						"key": "SpawnCount",
						"type": {
							"kind": "short"
						}
					},
					{
						"kind": "pair",
						"desc": "Range that the spawned entities will be placed in.\n",
						"key": "SpawnRange",
						"type": {
							"kind": "short"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Ticks until the next spawn.\n",
						"key": "Delay",
						"type": {
							"kind": "short"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Minimum random delay for the next spawn.\n",
						"key": "MinSpawnDelay",
						"type": {
							"kind": "short"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Maximum random delay for the next spawn.\n",
						"key": "MaxSpawnDelay",
						"type": {
							"kind": "short"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Maximum number of entities nearby.\n",
						"key": "MaxNearbyEntities",
						"type": {
							"kind": "short"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Radius in blocks that a player has to be within to spawn entities.\n",
						"key": "RequiredPlayerRange",
						"type": {
							"kind": "short"
						},
						"optional": true
					}
				]
			},
			"spectral_arrow": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::projectile::arrow::ArrowBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Ticks the glowing effect lasts.\n",
						"key": "Duration",
						"type": {
							"kind": "int"
						},
						"optional": true
					}
				]
			},
			"spider": {
				"kind": "reference",
				"path": "::java::server::world::entity::mob::MobBase"
			},
			"spruce_boat": {
				"kind": "reference",
				"path": "::java::server::world::entity::boat::Boat",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"spruce_chest_boat": {
				"kind": "reference",
				"path": "::java::server::world::entity::boat::ChestBoat",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"squid": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::MobBase"
						}
					},
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.2"
									}
								}
							}
						],
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::AgeableMob"
						}
					}
				]
			},
			"stray": {
				"kind": "reference",
				"path": "::java::server::world::entity::mob::MobBase"
			},
			"strider": {
				"kind": "reference",
				"path": "::java::server::world::entity::mob::breedable::saddled::Saddled",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.16"
							}
						}
					}
				]
			},
			"tadpole": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::MobBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Age of it in ticks. When greater than or equal to 24000, it grows into a frog.\n",
						"key": "Age",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "If it was released from a bucket.\n",
						"key": "FromBucket",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19"
							}
						}
					}
				]
			},
			"text_display": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::display::DisplayBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Text to display. Components are resolved with the executor set to the display entity and the position set to `0 0 0`.\n",
						"key": "text",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "text_component"
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Line width in pixels used to split lines (note: new line can be also added with \\n characters). Defaults to 200.\n",
						"key": "line_width",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Opacity (alpha component) of rendered text. Defaults to 255. Interpolated.\n",
						"key": "text_opacity",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 255
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Color of background. Includes alpha channel. Defaults to 0x40000000. Interpolated.\n\nCalculated as `ALPHA << 24 | RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.\n",
						"key": "background",
						"type": {
							"kind": "int",
							"attributes": [
								{
									"name": "color",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "composite_argb"
										}
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "If true, overrides `background` & rendering uses default text background color (same as in chat). Defaults to false.\n",
						"key": "default_background",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Should text be displayed with shadow. Defaults to false.\n",
						"key": "shadow",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Should text be visible through blocks. Defaults to false.\n",
						"key": "see_through",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "How text should be aligned. Defaults to `center`.\n\nWill log an error when not specified, see [MC-261036](https://bugs.mojang.com/browse/MC-261036).\n",
						"key": "alignment",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::display::text::TextAlignment"
						}
					}
				]
			},
			"tnt": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::EntityBase"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.3"
									}
								}
							}
						],
						"desc": "Ticks until it explodes.\n",
						"key": "Fuse",
						"type": {
							"kind": "short"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.3"
									}
								}
							}
						],
						"desc": "Ticks until it explodes.\n",
						"key": "fuse",
						"type": {
							"kind": "short"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.3"
									}
								}
							}
						],
						"key": "block_state",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.2"
									}
								}
							}
						],
						"key": "explosion_power",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 128
							}
						},
						"optional": true
					}
				]
			},
			"tnt_minecart": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::minecart::Minecart"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.4"
									}
								}
							}
						],
						"desc": "Ticks until it explodes.\n",
						"key": "TNTFuse",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.4"
									}
								}
							}
						],
						"desc": "Ticks until it explodes.\n",
						"key": "fuse",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.2"
									}
								}
							}
						],
						"key": "explosion_power",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 128
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.4"
									}
								}
							}
						],
						"desc": "Controls the amount of added damage depending on the speed of the minecart.\n",
						"key": "explosion_speed_factor",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 128
							}
						},
						"optional": true
					}
				]
			},
			"trader_llama": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::llama::Llama"
						}
					},
					{
						"kind": "pair",
						"desc": "When it will despawn.\n",
						"key": "DespawnDelay",
						"type": {
							"kind": "int"
						},
						"optional": true
					}
				]
			},
			"trident": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::projectile::arrow::ArrowBase"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.3"
									}
								}
							}
						],
						"key": "Trident",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemStack"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether it has already damaged an entity.\n",
						"key": "DealtDamage",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"tropical_fish": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::fish::Fish"
						}
					},
					{
						"kind": "pair",
						"key": "Variant",
						"type": {
							"kind": "int"
						},
						"optional": true
					}
				]
			},
			"turtle": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::Breedable"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether it has an egg.\n",
						"key": "HasEgg",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "HomePosX",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "HomePosY",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "HomePosZ",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "X coordinate of its travel target.\n",
						"key": "TravelPosX",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Y coordinate of its travel target.\n",
						"key": "TravelPosY",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Z coordinate of its travel target.\n",
						"key": "TravelPosZ",
						"type": {
							"kind": "int"
						},
						"optional": true
					}
				]
			},
			"vex": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::MobBase"
						}
					},
					{
						"kind": "pair",
						"desc": "X coordinate of the center of its wander bounds.\n",
						"key": "BoundX",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Y coordinate of the center of its wander bounds.\n",
						"key": "BoundY",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Z coordinate of the center of its wander bounds.\n",
						"key": "BoundZ",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Ticks until it starts to die.\n",
						"key": "LifeTicks",
						"type": {
							"kind": "int"
						},
						"optional": true
					}
				]
			},
			"villager": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::Breedable"
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::villager::VillagerBase"
						}
					},
					{
						"kind": "pair",
						"key": "VillagerData",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::villager::VillagerData"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "FoodLevel",
						"type": {
							"kind": "byte"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Gossips it has heard.\n",
						"key": "Gossips",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::world::entity::mob::breedable::villager::Gossip"
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Tick of the last time it has restocked.\n",
						"key": "LastRestock",
						"type": {
							"kind": "long"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Tick of the last time its gossips have decreased in strength.\n",
						"key": "LastGossipDecay",
						"type": {
							"kind": "long"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Times it has restocked in the past ten minutes.\n",
						"key": "RestocksToday",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "XP it has, increases with trading.\n",
						"key": "Xp",
						"type": {
							"kind": "int"
						},
						"optional": true
					}
				]
			},
			"vindicator": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::raider::RaiderBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether it should try to attack most other mobs.\n",
						"key": "Johnny",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"wandering_trader": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::MobBase"
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::villager::VillagerBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Ticks until it despawns.\n",
						"key": "DespawnDelay",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						],
						"desc": "Where it is heading to.\n",
						"key": "WanderTarget",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::villager::WanderTarget"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						],
						"desc": "Where it is heading to.\n",
						"key": "wander_target",
						"type": {
							"kind": "int_array",
							"lengthRange": {
								"kind": 0,
								"min": 3,
								"max": 3
							}
						},
						"optional": true
					}
				]
			},
			"warden": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::MobBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Anger management\n",
						"key": "anger",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::warden::AngerManagement"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Vibration listener\n",
						"key": "listener",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::game_event::VibrationListener"
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19"
							}
						}
					}
				]
			},
			"witch": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::MobBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether the raider is patrolling.\n",
						"key": "Patrolling",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether the raider is leading the patrol.\n",
						"key": "PatrolLeader",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						],
						"desc": "Where the raider is heading towards.\n",
						"key": "PatrolTarget",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::raider::PatrolTarget"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						],
						"desc": "Where the raider is heading towards.\n",
						"key": "patrol_target",
						"type": {
							"kind": "int_array",
							"lengthRange": {
								"kind": 0,
								"min": 3,
								"max": 3
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"desc": "Whether the raider can join raids and count towards the progress bar.\n",
						"key": "CanJoinRaid",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Id of the raid that the raider is in.\n",
						"key": "RaidId",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Wave that the raider is in.\n",
						"key": "Wave",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 8
							}
						},
						"optional": true
					}
				]
			},
			"wither": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::MobBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Ticks it is invulnerable for.\n",
						"key": "Invul",
						"type": {
							"kind": "int"
						},
						"optional": true
					}
				]
			},
			"wither_skeleton": {
				"kind": "reference",
				"path": "::java::server::world::entity::mob::MobBase"
			},
			"wither_skull": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::projectile::fireball::DespawnableProjectileBase"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.3"
									}
								}
							}
						],
						"key": "dangerous",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"wolf": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::tamable::Tamable"
						}
					},
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::NeutralMob"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"desc": "Whether it is angry.\n",
						"key": "Angry",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Collar color, present for wild wolfs.\n",
						"key": "CollarColor",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::ColorByte"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						],
						"key": "variant",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "wolf_variant"
										}
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						],
						"key": "body_armor_item",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemStack"
						},
						"optional": true
					}
				]
			},
			"zoglin": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::MobBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether it is a baby.\n",
						"key": "IsBaby",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.16"
							}
						}
					}
				]
			},
			"zombie": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::MobBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether it is a baby.\n",
						"key": "IsBaby",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether it can break doors.\n",
						"key": "CanBreakDoors",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Ticks until it converts.\n",
						"key": "DrownedConversionTime",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Ticks it has been in the water.\n",
						"key": "InWaterTime",
						"type": {
							"kind": "int"
						},
						"optional": true
					}
				]
			},
			"zombie_horse": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::Breedable"
						}
					},
					{
						"kind": "pair",
						"desc": "Unknown use.\n\nRemains `0` even if it was bred.\n",
						"key": "Bred",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether it is eating a haystack.\n",
						"key": "EatingHaystack",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether it has been tamed.\n",
						"key": "Tame",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Higher values make it easier to tame. Increases with feeding.\n",
						"key": "Temper",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 100
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"desc": "Player who tamed it.\n",
						"key": "OwnerUUID",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "uuid"
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							},
							{
								"name": "uuid"
							}
						],
						"desc": "Player who tamed it.\n",
						"key": "Owner",
						"type": {
							"kind": "int_array",
							"lengthRange": {
								"kind": 0,
								"min": 4,
								"max": 4
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "SaddleItem",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemStack"
						},
						"optional": true
					}
				]
			},
			"zombie_pigman": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::MobBase"
						}
					},
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::NeutralMob"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether it is a baby.\n",
						"key": "IsBaby",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"desc": "Ticks that it will be angry for.\n",
						"key": "Anger",
						"type": {
							"kind": "short"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "uuid"
							}
						],
						"desc": "Last player to hit a zombie pigman in this zombie pigman's detection range.\n",
						"key": "HurtBy",
						"type": {
							"kind": "string"
						},
						"optional": true
					}
				]
			},
			"zombie_villager": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::zombie::Zombie"
						}
					},
					{
						"kind": "pair",
						"desc": "Villager's skin data\n",
						"key": "VillagerData",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::villager::VillagerData"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Villager's gossips\n",
						"key": "Gossips",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::world::entity::mob::breedable::villager::Gossip"
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Villager's offers\n",
						"key": "Offers",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::villager::Offers"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Ticks until the it is converted.\n",
						"key": "ConversionTime",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"desc": "Lower bits of the player's uuid who triggered the conversion.\n",
						"key": "ConversionPlayerLeast",
						"type": {
							"kind": "long"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"desc": "Upper bits of the player's uuid who triggered the conversion.\n",
						"key": "ConversionPlayerMost",
						"type": {
							"kind": "long"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "uuid"
							},
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"desc": "Player who triggered the conversion.\n",
						"key": "ConversionPlayer",
						"type": {
							"kind": "int_array",
							"lengthRange": {
								"kind": 0,
								"min": 4,
								"max": 4
							}
						},
						"optional": true
					}
				]
			}
		},
		"minecraft:entity_effect": {
			"all_of": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "effects",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::enchantment::EntityEffect"
							},
							"lengthRange": {
								"kind": 0,
								"min": 1
							}
						}
					}
				]
			},
			"apply_mob_effect": {
				"kind": "reference",
				"path": "::java::data::enchantment::ApplyMobEffectEntityEffect"
			},
			"change_item_damage": {
				"kind": "reference",
				"path": "::java::data::enchantment::ChangeItemDamageEffect",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"damage_entity": {
				"kind": "reference",
				"path": "::java::data::enchantment::DamageEntityEffect"
			},
			"damage_item": {
				"kind": "reference",
				"path": "::java::data::enchantment::DamageItemEffect",
				"attributes": [
					{
						"name": "until",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"explode": {
				"kind": "reference",
				"path": "::java::data::enchantment::ExplodeEntityEffect"
			},
			"ignite": {
				"kind": "reference",
				"path": "::java::data::enchantment::IgniteEntityEffect"
			},
			"play_sound": {
				"kind": "reference",
				"path": "::java::data::enchantment::PlaySoundEntityEffect"
			},
			"replace_block": {
				"kind": "reference",
				"path": "::java::data::enchantment::ReplaceBlockEntityEffect"
			},
			"replace_disk": {
				"kind": "reference",
				"path": "::java::data::enchantment::ReplaceDiskEntityEffect"
			},
			"run_function": {
				"kind": "reference",
				"path": "::java::data::enchantment::RunFunctionEntityEffect"
			},
			"set_block_properties": {
				"kind": "reference",
				"path": "::java::data::enchantment::SetBlockPropertiesEntityEffect"
			},
			"spawn_particles": {
				"kind": "reference",
				"path": "::java::data::enchantment::SpawnParticlesEntityEffect"
			},
			"summon_entity": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "If multiple entity types are specified, a random entity type is selected.\n",
						"key": "entity",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "entity_type"
														}
													},
													"tags": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "allowed"
														}
													}
												}
											}
										}
									]
								},
								{
									"kind": "list",
									"item": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "entity_type"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"desc": "Whether the summoned entity should join the team of the owner of the Enchanted Item.\n",
						"key": "join_team",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			}
		},
		"minecraft:entity_sub_predicate": {
			"axolotl": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "variant",
						"type": {
							"kind": "reference",
							"path": "::java::data::advancement::predicate::AxolotlVariant"
						}
					}
				]
			},
			"boat": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "variant",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::boat::BoatType"
						}
					}
				]
			},
			"cat": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "variant",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.5"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "cat_variant"
												}
											}
										}
									]
								},
								{
									"kind": "string",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.5"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "cat_variant"
														}
													},
													"tags": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "allowed"
														}
													}
												}
											}
										}
									]
								},
								{
									"kind": "list",
									"item": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "cat_variant"
													}
												}
											}
										]
									},
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.5"
												}
											}
										}
									]
								}
							]
						}
					}
				]
			},
			"fishing_hook": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "in_open_water",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"fox": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "variant",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::fox::FoxType"
						}
					}
				]
			},
			"frog": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "variant",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.5"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "frog_variant"
												}
											}
										}
									]
								},
								{
									"kind": "string",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.5"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "frog_variant"
														}
													},
													"tags": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "allowed"
														}
													}
												}
											}
										}
									]
								},
								{
									"kind": "list",
									"item": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "frog_variant"
													}
												}
											}
										]
									},
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.5"
												}
											}
										}
									]
								}
							]
						}
					}
				]
			},
			"horse": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "variant",
						"type": {
							"kind": "reference",
							"path": "::java::data::advancement::predicate::HorseVariant"
						}
					}
				]
			},
			"lightning": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "blocks_set_on_fire",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::util::MinMaxBounds"
							},
							"typeArgs": [
								{
									"kind": "int"
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "entity_struck",
						"type": {
							"kind": "reference",
							"path": "::java::data::advancement::predicate::EntityPredicate"
						},
						"optional": true
					}
				]
			},
			"llama": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "variant",
						"type": {
							"kind": "reference",
							"path": "::java::data::advancement::predicate::LlamaVariant"
						}
					}
				]
			},
			"mooshroom": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "variant",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::mob::breedable::mooshroom::MooshroomType"
						}
					}
				]
			},
			"painting": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "variant",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.5"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "painting_variant"
												}
											}
										}
									]
								},
								{
									"kind": "string",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.5"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "painting_variant"
														}
													},
													"tags": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "allowed"
														}
													}
												}
											}
										}
									]
								},
								{
									"kind": "list",
									"item": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "painting_variant"
													}
												}
											}
										]
									},
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.5"
												}
											}
										}
									]
								}
							]
						}
					}
				]
			},
			"parrot": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "variant",
						"type": {
							"kind": "reference",
							"path": "::java::data::advancement::predicate::ParrotVariant"
						}
					}
				]
			},
			"player": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "advancements",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "advancement"
													}
												}
											}
										]
									},
									"type": {
										"kind": "union",
										"members": [
											{
												"kind": "boolean"
											},
											{
												"kind": "struct",
												"fields": [
													{
														"kind": "pair",
														"key": {
															"kind": "string"
														},
														"type": {
															"kind": "boolean"
														}
													}
												]
											}
										]
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "gamemode",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "reference",
									"path": "::java::data::advancement::predicate::GameMode",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.21"
												}
											}
										}
									]
								},
								{
									"kind": "list",
									"item": {
										"kind": "reference",
										"path": "::java::data::advancement::predicate::GameMode"
									},
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.21"
												}
											}
										}
									]
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Experience/XP level.\n",
						"key": "level",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::util::MinMaxBounds"
							},
							"typeArgs": [
								{
									"kind": "int"
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "recipes",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "recipe"
													}
												}
											}
										]
									},
									"type": {
										"kind": "boolean"
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "stats",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::advancement::predicate::StatisticPredicate"
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "looking_at",
						"type": {
							"kind": "reference",
							"path": "::java::data::advancement::predicate::EntityPredicate"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.2"
									}
								}
							}
						],
						"desc": "Checks the movement keys of the player.\n",
						"key": "input",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "forward",
									"type": {
										"kind": "boolean"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "backward",
									"type": {
										"kind": "boolean"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "left",
									"type": {
										"kind": "boolean"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "right",
									"type": {
										"kind": "boolean"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "jump",
									"type": {
										"kind": "boolean"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "sneak",
									"type": {
										"kind": "boolean"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "sprint",
									"type": {
										"kind": "boolean"
									},
									"optional": true
								}
							]
						},
						"optional": true
					}
				]
			},
			"rabbit": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "variant",
						"type": {
							"kind": "string"
						}
					}
				]
			},
			"raider": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "has_raid",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "is_captain",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"salmon": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "variant",
						"type": {
							"kind": "reference",
							"path": "::java::data::advancement::predicate::SalmonVariant"
						},
						"optional": true
					}
				]
			},
			"sheep": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "sheared",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "color",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::color::ColorString"
						},
						"optional": true
					}
				]
			},
			"slime": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "size",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::util::MinMaxBounds"
							},
							"typeArgs": [
								{
									"kind": "int"
								}
							]
						},
						"optional": true
					}
				]
			},
			"tropical_fish": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "The pattern of the tropical fish.\n",
						"key": "variant",
						"type": {
							"kind": "reference",
							"path": "::java::data::advancement::predicate::TropicalFishPattern"
						}
					}
				]
			},
			"villager": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "variant",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "villager_type"
										}
									}
								}
							]
						}
					}
				]
			},
			"wolf": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "variant",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "wolf_variant"
														}
													},
													"tags": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "allowed"
														}
													}
												}
											}
										}
									]
								},
								{
									"kind": "list",
									"item": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "wolf_variant"
													}
												}
											}
										]
									}
								}
							]
						}
					}
				]
			}
		},
		"minecraft:feature_config": {
			"bamboo": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "probability",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					}
				]
			},
			"basalt_columns": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "reach",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::worldgen::UniformInt"
									},
									"typeArgs": [
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 2
											}
										},
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 1
											}
										}
									],
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								},
								{
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::worldgen::IntProvider"
									},
									"typeArgs": [
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 3
											}
										}
									],
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "height",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::worldgen::UniformInt"
									},
									"typeArgs": [
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 1,
												"max": 5
											}
										},
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 5
											}
										}
									],
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								},
								{
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::worldgen::IntProvider"
									},
									"typeArgs": [
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 1,
												"max": 10
											}
										}
									],
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								}
							]
						}
					}
				]
			},
			"block_column": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "direction",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::direction::Direction"
						}
					},
					{
						"kind": "pair",
						"key": "allowed_placement",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_predicate::BlockPredicate"
						}
					},
					{
						"kind": "pair",
						"key": "prioritize_tip",
						"type": {
							"kind": "boolean"
						}
					},
					{
						"kind": "pair",
						"key": "layers",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::worldgen::feature::BlockColumnLayer"
							}
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.18"
							}
						}
					}
				]
			},
			"block_pile": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "state_provider",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
						}
					}
				]
			},
			"decorated": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "decorator",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::decorator::ConfiguredDecorator"
						}
					},
					{
						"kind": "pair",
						"key": "feature",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::FeatureRef"
						}
					}
				],
				"attributes": [
					{
						"name": "until",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.18"
							}
						}
					}
				]
			},
			"delta_feature": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "contents",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					},
					{
						"kind": "pair",
						"key": "rim",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					},
					{
						"kind": "pair",
						"key": "size",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::worldgen::UniformInt"
									},
									"typeArgs": [
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 8
											}
										},
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 8
											}
										}
									],
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								},
								{
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::worldgen::IntProvider"
									},
									"typeArgs": [
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 16
											}
										}
									],
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "rim_size",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::worldgen::UniformInt"
									},
									"typeArgs": [
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 8
											}
										},
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 8
											}
										}
									],
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								},
								{
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::worldgen::IntProvider"
									},
									"typeArgs": [
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 16
											}
										}
									],
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								}
							]
						}
					}
				]
			},
			"disk": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"key": "state",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"key": "state_provider",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::RuleBasedBlockStateProvider"
						}
					},
					{
						"kind": "pair",
						"key": "radius",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::worldgen::UniformInt"
									},
									"typeArgs": [
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 4
											}
										},
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 4
											}
										}
									],
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								},
								{
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::worldgen::IntProvider"
									},
									"typeArgs": [
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 8
											}
										}
									],
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "half_height",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 4
							}
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"key": "targets",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::util::block_state::BlockState"
							}
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"key": "target",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_predicate::BlockPredicate"
						}
					}
				]
			},
			"dripstone_cluster": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "floor_to_ceiling_search_range",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 1,
								"max": 512
							}
						}
					},
					{
						"kind": "pair",
						"key": "height",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::IntProvider"
							},
							"typeArgs": [
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 128
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "radius",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::IntProvider"
							},
							"typeArgs": [
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 128
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"desc": "Max height difference between the stalagmite and stalactite.\n",
						"key": "max_stalagmite_stalactite_height_diff",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 64
							}
						}
					},
					{
						"kind": "pair",
						"key": "height_deviation",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 1,
								"max": 64
							}
						}
					},
					{
						"kind": "pair",
						"key": "dripstone_block_layer_thickness",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::IntProvider"
							},
							"typeArgs": [
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 128
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "density",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::FloatProvider"
							},
							"typeArgs": [
								{
									"kind": "float",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 2
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "wetness",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::FloatProvider"
							},
							"typeArgs": [
								{
									"kind": "float",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 2
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "chance_of_dripstone_column_at_max_distance_from_center",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					},
					{
						"kind": "pair",
						"key": "max_distance_from_edge_affecting_chance_of_dripstone_column",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 1,
								"max": 64
							}
						}
					},
					{
						"kind": "pair",
						"key": "max_distance_from_center_affecting_height_bias",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 1,
								"max": 64
							}
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"emerald_ore": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "state",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					},
					{
						"kind": "pair",
						"key": "target",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					}
				]
			},
			"end_gateway": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "exact",
						"type": {
							"kind": "boolean"
						}
					},
					{
						"kind": "pair",
						"key": "exit",
						"type": {
							"kind": "list",
							"item": {
								"kind": "int"
							},
							"lengthRange": {
								"kind": 0,
								"min": 3,
								"max": 3
							}
						},
						"optional": true
					}
				]
			},
			"end_spike": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "spikes",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::worldgen::feature::EndSpike"
							}
						}
					},
					{
						"kind": "pair",
						"key": "crystal_invulnerable",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "crystal_beam_target",
						"type": {
							"kind": "list",
							"item": {
								"kind": "int"
							},
							"lengthRange": {
								"kind": 0,
								"min": 3,
								"max": 3
							}
						},
						"optional": true
					}
				]
			},
			"fill_layer": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "state",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					},
					{
						"kind": "pair",
						"key": "height",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 255
							}
						}
					}
				]
			},
			"flower": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "How many attempts will be made to find a placement. Defaults to 128.\n",
						"key": "tries",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "int",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								},
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 1
									},
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								}
							]
						},
						"optional": true
					},
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.18"
									}
								}
							}
						],
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "can_replace",
									"type": {
										"kind": "boolean"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "project",
									"type": {
										"kind": "boolean"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "need_water",
									"type": {
										"kind": "boolean"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "xspread",
									"type": {
										"kind": "union",
										"members": [
											{
												"kind": "int",
												"attributes": [
													{
														"name": "until",
														"value": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "1.17"
															}
														}
													}
												]
											},
											{
												"kind": "int",
												"valueRange": {
													"kind": 0,
													"min": 0
												},
												"attributes": [
													{
														"name": "since",
														"value": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "1.17"
															}
														}
													}
												]
											}
										]
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "yspread",
									"type": {
										"kind": "union",
										"members": [
											{
												"kind": "int",
												"attributes": [
													{
														"name": "until",
														"value": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "1.17"
															}
														}
													}
												]
											},
											{
												"kind": "int",
												"valueRange": {
													"kind": 0,
													"min": 0
												},
												"attributes": [
													{
														"name": "since",
														"value": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "1.17"
															}
														}
													}
												]
											}
										]
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "zspread",
									"type": {
										"kind": "union",
										"members": [
											{
												"kind": "int",
												"attributes": [
													{
														"name": "until",
														"value": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "1.17"
															}
														}
													}
												]
											},
											{
												"kind": "int",
												"valueRange": {
													"kind": 0,
													"min": 0
												},
												"attributes": [
													{
														"name": "since",
														"value": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "1.17"
															}
														}
													}
												]
											}
										]
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "state_provider",
									"type": {
										"kind": "reference",
										"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
									}
								},
								{
									"kind": "pair",
									"key": "block_placer",
									"type": {
										"kind": "reference",
										"path": "::java::data::worldgen::feature::BlockPlacer"
									}
								},
								{
									"kind": "pair",
									"key": "whitelist",
									"type": {
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::server::util::block_state::BlockState"
										}
									}
								},
								{
									"kind": "pair",
									"key": "blacklist",
									"type": {
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::server::util::block_state::BlockState"
										}
									}
								}
							]
						}
					},
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.18"
									}
								}
							}
						],
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"desc": "Defaults to 7.\n",
									"key": "xz_spread",
									"type": {
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0
										}
									},
									"optional": true
								},
								{
									"kind": "pair",
									"desc": "Defaults to 3.\n",
									"key": "y_spread",
									"type": {
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0
										}
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "feature",
									"type": {
										"kind": "reference",
										"path": "::java::data::worldgen::feature::FeatureRef"
									}
								}
							]
						}
					}
				]
			},
			"forest_rock": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "state",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					}
				]
			},
			"fossil": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "If more corners are exposed to air, feature placement is cancelled.\n",
						"key": "max_empty_corners_allowed",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 7
							}
						}
					},
					{
						"kind": "pair",
						"key": "fossil_structures",
						"type": {
							"kind": "list",
							"item": {
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "structure"
											}
										}
									}
								]
							}
						}
					},
					{
						"kind": "pair",
						"key": "overlay_structures",
						"type": {
							"kind": "list",
							"item": {
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "structure"
											}
										}
									}
								]
							}
						}
					},
					{
						"kind": "pair",
						"key": "fossil_processors",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::processor_list::ProcessorListRef"
						}
					},
					{
						"kind": "pair",
						"key": "overlay_processors",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::processor_list::ProcessorListRef"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"geode": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "blocks",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::GeodeBlockSettings"
						}
					},
					{
						"kind": "pair",
						"key": "layers",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::GeodeLayerSettings"
						}
					},
					{
						"kind": "pair",
						"key": "crack",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::GeodeCrackSettings"
						}
					},
					{
						"kind": "pair",
						"key": "noise_multiplier",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "use_potential_placements_chance",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "use_alternate_layer0_chance",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "placements_require_layer0_alternate",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "outer_wall_distance",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::IntProvider"
							},
							"typeArgs": [
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 1,
										"max": 20
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "distribution_points",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::IntProvider"
							},
							"typeArgs": [
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 1,
										"max": 20
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "point_offset",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::IntProvider"
							},
							"typeArgs": [
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 1,
										"max": 10
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "min_gen_offset",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "max_gen_offset",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "invalid_blocks_threshold",
						"type": {
							"kind": "int"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"glow_lichen": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"key": "block",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::MultifaceBlock",
							"attributes": [
								{
									"name": "id"
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "search_range",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 1,
								"max": 64
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "chance_of_spreading",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "can_place_on_floor",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "can_place_on_ceiling",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "can_place_on_wall",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "can_be_placed_on",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "list",
									"item": {
										"kind": "reference",
										"path": "::java::server::util::block_state::BlockState"
									},
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.18"
												}
											}
										}
									]
								},
								{
									"kind": "list",
									"item": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "block"
													}
												}
											}
										]
									},
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.18"
												}
											}
										}
									]
								},
								{
									"kind": "string",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.18.2"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "block"
														}
													},
													"tags": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "allowed"
														}
													}
												}
											}
										}
									]
								}
							]
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"growing_plant": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "direction",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::direction::Direction"
						}
					},
					{
						"kind": "pair",
						"key": "allow_water",
						"type": {
							"kind": "boolean"
						}
					},
					{
						"kind": "pair",
						"key": "height_distribution",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::worldgen::feature::GrowingPlantHeight"
							}
						}
					},
					{
						"kind": "pair",
						"key": "body_provider",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
						}
					},
					{
						"kind": "pair",
						"key": "head_provider",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					},
					{
						"name": "until",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.18"
							}
						}
					}
				]
			},
			"huge_brown_mushroom": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "cap_provider",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
						}
					},
					{
						"kind": "pair",
						"key": "stem_provider",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
						}
					},
					{
						"kind": "pair",
						"key": "foliage_radius",
						"type": {
							"kind": "int"
						}
					}
				]
			},
			"huge_fungus": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "hat_state",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					},
					{
						"kind": "pair",
						"key": "decor_state",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					},
					{
						"kind": "pair",
						"key": "stem_state",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					},
					{
						"kind": "pair",
						"key": "valid_base_block",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					},
					{
						"kind": "pair",
						"key": "planted",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20"
									}
								}
							}
						],
						"key": "replaceable_blocks",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_predicate::BlockPredicate"
						}
					}
				]
			},
			"huge_red_mushroom": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "cap_provider",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
						}
					},
					{
						"kind": "pair",
						"key": "stem_provider",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
						}
					},
					{
						"kind": "pair",
						"key": "foliage_radius",
						"type": {
							"kind": "int"
						}
					}
				]
			},
			"ice_patch": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"key": "state",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"key": "state_provider",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::RuleBasedBlockStateProvider"
						}
					},
					{
						"kind": "pair",
						"key": "radius",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::worldgen::UniformInt"
									},
									"typeArgs": [
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 4
											}
										},
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 4
											}
										}
									],
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								},
								{
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::worldgen::IntProvider"
									},
									"typeArgs": [
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 8
											}
										}
									],
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "half_height",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 4
							}
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"key": "targets",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::util::block_state::BlockState"
							}
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"key": "target",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_predicate::BlockPredicate"
						}
					}
				]
			},
			"iceberg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "state",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					}
				]
			},
			"lake": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.18"
									}
								}
							}
						],
						"key": "state",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.18"
									}
								}
							}
						],
						"key": "fluid",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.18"
									}
								}
							}
						],
						"key": "barrier",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
						}
					}
				]
			},
			"large_dripstone": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "floor_to_ceiling_search_range",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 1,
								"max": 512
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "column_radius",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::IntProvider"
							},
							"typeArgs": [
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 60
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "height_scale",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::FloatProvider"
							},
							"typeArgs": [
								{
									"kind": "float",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 20
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "max_column_radius_to_cave_height_ratio",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					},
					{
						"kind": "pair",
						"key": "stalactite_bluntness",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::FloatProvider"
							},
							"typeArgs": [
								{
									"kind": "float",
									"valueRange": {
										"kind": 0,
										"min": 0.1,
										"max": 10
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "stalagmite_bluntness",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::FloatProvider"
							},
							"typeArgs": [
								{
									"kind": "float",
									"valueRange": {
										"kind": 0,
										"min": 0.1,
										"max": 10
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "wind_speed",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::FloatProvider"
							},
							"typeArgs": [
								{
									"kind": "float",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 2
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "min_radius_for_wind",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 100
							}
						}
					},
					{
						"kind": "pair",
						"key": "min_bluntness_for_wind",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"multiface_growth": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"key": "block",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::MultifaceBlock",
							"attributes": [
								{
									"name": "id"
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "search_range",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 1,
								"max": 64
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "chance_of_spreading",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "can_place_on_floor",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "can_place_on_ceiling",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "can_place_on_wall",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "can_be_placed_on",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "list",
									"item": {
										"kind": "reference",
										"path": "::java::server::util::block_state::BlockState"
									},
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.18"
												}
											}
										}
									]
								},
								{
									"kind": "list",
									"item": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "block"
													}
												}
											}
										]
									},
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.18"
												}
											}
										}
									]
								},
								{
									"kind": "string",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.18.2"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "block"
														}
													},
													"tags": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "allowed"
														}
													}
												}
											}
										}
									]
								}
							]
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"nether_forest_vegetation": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "state_provider",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
						}
					},
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.18"
									}
								}
							}
						],
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "spread_width",
									"type": {
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 1
										}
									}
								},
								{
									"kind": "pair",
									"key": "spread_height",
									"type": {
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 1
										}
									}
								}
							]
						}
					}
				]
			},
			"netherrack_replace_blobs": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "state",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					},
					{
						"kind": "pair",
						"key": "target",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					},
					{
						"kind": "pair",
						"key": "radius",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::worldgen::UniformInt"
									},
									"typeArgs": [
										{
											"kind": "int"
										},
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0
											}
										}
									],
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								},
								{
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::worldgen::IntProvider"
									},
									"typeArgs": [
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 12
											}
										}
									],
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								}
							]
						}
					}
				]
			},
			"no_bonemeal_flower": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "How many attempts will be made to find a placement. Defaults to 128.\n",
						"key": "tries",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "int",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								},
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 1
									},
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								}
							]
						},
						"optional": true
					},
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.18"
									}
								}
							}
						],
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "can_replace",
									"type": {
										"kind": "boolean"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "project",
									"type": {
										"kind": "boolean"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "need_water",
									"type": {
										"kind": "boolean"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "xspread",
									"type": {
										"kind": "union",
										"members": [
											{
												"kind": "int",
												"attributes": [
													{
														"name": "until",
														"value": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "1.17"
															}
														}
													}
												]
											},
											{
												"kind": "int",
												"valueRange": {
													"kind": 0,
													"min": 0
												},
												"attributes": [
													{
														"name": "since",
														"value": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "1.17"
															}
														}
													}
												]
											}
										]
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "yspread",
									"type": {
										"kind": "union",
										"members": [
											{
												"kind": "int",
												"attributes": [
													{
														"name": "until",
														"value": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "1.17"
															}
														}
													}
												]
											},
											{
												"kind": "int",
												"valueRange": {
													"kind": 0,
													"min": 0
												},
												"attributes": [
													{
														"name": "since",
														"value": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "1.17"
															}
														}
													}
												]
											}
										]
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "zspread",
									"type": {
										"kind": "union",
										"members": [
											{
												"kind": "int",
												"attributes": [
													{
														"name": "until",
														"value": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "1.17"
															}
														}
													}
												]
											},
											{
												"kind": "int",
												"valueRange": {
													"kind": 0,
													"min": 0
												},
												"attributes": [
													{
														"name": "since",
														"value": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "1.17"
															}
														}
													}
												]
											}
										]
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "state_provider",
									"type": {
										"kind": "reference",
										"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
									}
								},
								{
									"kind": "pair",
									"key": "block_placer",
									"type": {
										"kind": "reference",
										"path": "::java::data::worldgen::feature::BlockPlacer"
									}
								},
								{
									"kind": "pair",
									"key": "whitelist",
									"type": {
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::server::util::block_state::BlockState"
										}
									}
								},
								{
									"kind": "pair",
									"key": "blacklist",
									"type": {
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::server::util::block_state::BlockState"
										}
									}
								}
							]
						}
					},
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.18"
									}
								}
							}
						],
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"desc": "Defaults to 7.\n",
									"key": "xz_spread",
									"type": {
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0
										}
									},
									"optional": true
								},
								{
									"kind": "pair",
									"desc": "Defaults to 3.\n",
									"key": "y_spread",
									"type": {
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0
										}
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "feature",
									"type": {
										"kind": "reference",
										"path": "::java::data::worldgen::feature::FeatureRef"
									}
								}
							]
						}
					}
				]
			},
			"no_surface_ore": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.17"
									}
								}
							}
						],
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::TargetBlock"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.17"
									}
								}
							}
						],
						"key": "targets",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::worldgen::feature::TargetBlock"
							}
						}
					},
					{
						"kind": "pair",
						"key": "size",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 64
							}
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.17"
									}
								}
							}
						],
						"desc": "Chance that feature placement will be discarded if the ore is exposed to air blocks.\n",
						"key": "discard_chance_on_air_exposure",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					}
				]
			},
			"ore": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.17"
									}
								}
							}
						],
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::TargetBlock"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.17"
									}
								}
							}
						],
						"key": "targets",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::worldgen::feature::TargetBlock"
							}
						}
					},
					{
						"kind": "pair",
						"key": "size",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 64
							}
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.17"
									}
								}
							}
						],
						"desc": "Chance that feature placement will be discarded if the ore is exposed to air blocks.\n",
						"key": "discard_chance_on_air_exposure",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					}
				]
			},
			"pointed_dripstone": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "chance_of_taller_dripstone",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "chance_of_directional_spread",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "chance_of_spread_radius2",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "chance_of_spread_radius3",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						},
						"optional": true
					}
				]
			},
			"random_boolean_selector": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "feature_false",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::FeatureRef"
						}
					},
					{
						"kind": "pair",
						"key": "feature_true",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::FeatureRef"
						}
					}
				]
			},
			"random_patch": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "How many attempts will be made to find a placement. Defaults to 128.\n",
						"key": "tries",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "int",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								},
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 1
									},
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								}
							]
						},
						"optional": true
					},
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.18"
									}
								}
							}
						],
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "can_replace",
									"type": {
										"kind": "boolean"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "project",
									"type": {
										"kind": "boolean"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "need_water",
									"type": {
										"kind": "boolean"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "xspread",
									"type": {
										"kind": "union",
										"members": [
											{
												"kind": "int",
												"attributes": [
													{
														"name": "until",
														"value": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "1.17"
															}
														}
													}
												]
											},
											{
												"kind": "int",
												"valueRange": {
													"kind": 0,
													"min": 0
												},
												"attributes": [
													{
														"name": "since",
														"value": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "1.17"
															}
														}
													}
												]
											}
										]
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "yspread",
									"type": {
										"kind": "union",
										"members": [
											{
												"kind": "int",
												"attributes": [
													{
														"name": "until",
														"value": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "1.17"
															}
														}
													}
												]
											},
											{
												"kind": "int",
												"valueRange": {
													"kind": 0,
													"min": 0
												},
												"attributes": [
													{
														"name": "since",
														"value": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "1.17"
															}
														}
													}
												]
											}
										]
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "zspread",
									"type": {
										"kind": "union",
										"members": [
											{
												"kind": "int",
												"attributes": [
													{
														"name": "until",
														"value": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "1.17"
															}
														}
													}
												]
											},
											{
												"kind": "int",
												"valueRange": {
													"kind": 0,
													"min": 0
												},
												"attributes": [
													{
														"name": "since",
														"value": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "1.17"
															}
														}
													}
												]
											}
										]
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "state_provider",
									"type": {
										"kind": "reference",
										"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
									}
								},
								{
									"kind": "pair",
									"key": "block_placer",
									"type": {
										"kind": "reference",
										"path": "::java::data::worldgen::feature::BlockPlacer"
									}
								},
								{
									"kind": "pair",
									"key": "whitelist",
									"type": {
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::server::util::block_state::BlockState"
										}
									}
								},
								{
									"kind": "pair",
									"key": "blacklist",
									"type": {
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::server::util::block_state::BlockState"
										}
									}
								}
							]
						}
					},
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.18"
									}
								}
							}
						],
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"desc": "Defaults to 7.\n",
									"key": "xz_spread",
									"type": {
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0
										}
									},
									"optional": true
								},
								{
									"kind": "pair",
									"desc": "Defaults to 3.\n",
									"key": "y_spread",
									"type": {
										"kind": "int",
										"valueRange": {
											"kind": 0,
											"min": 0
										}
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "feature",
									"type": {
										"kind": "reference",
										"path": "::java::data::worldgen::feature::FeatureRef"
									}
								}
							]
						}
					}
				]
			},
			"random_selector": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "features",
						"type": {
							"kind": "list",
							"item": {
								"kind": "struct",
								"fields": [
									{
										"kind": "pair",
										"key": "chance",
										"type": {
											"kind": "float",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 1
											}
										}
									},
									{
										"kind": "pair",
										"key": "feature",
										"type": {
											"kind": "reference",
											"path": "::java::data::worldgen::feature::FeatureRef"
										}
									}
								]
							}
						}
					},
					{
						"kind": "pair",
						"key": "default",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::FeatureRef"
						}
					}
				]
			},
			"replace_single_block": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "targets",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::worldgen::feature::TargetBlock"
							}
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"root_system": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "required_vertical_space_for_tree",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 1,
								"max": 64
							}
						}
					},
					{
						"kind": "pair",
						"key": "root_radius",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 1,
								"max": 64
							}
						}
					},
					{
						"kind": "pair",
						"key": "root_placement_attempts",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 1,
								"max": 256
							}
						}
					},
					{
						"kind": "pair",
						"key": "root_column_max_height",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 1,
								"max": 4096
							}
						}
					},
					{
						"kind": "pair",
						"key": "hanging_root_radius",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 1,
								"max": 64
							}
						}
					},
					{
						"kind": "pair",
						"key": "hanging_roots_vertical_span",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 16
							}
						}
					},
					{
						"kind": "pair",
						"key": "hanging_root_placement_attempts",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 256
							}
						}
					},
					{
						"kind": "pair",
						"key": "allowed_vertical_water_for_tree",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 1,
								"max": 64
							}
						}
					},
					{
						"kind": "pair",
						"key": "root_replaceable",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.18.2"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "block"
														}
													},
													"tags": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "implicit"
														}
													}
												}
											}
										}
									]
								},
								{
									"kind": "list",
									"item": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "block"
													}
												}
											}
										]
									},
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.18.2"
												}
											}
										}
									]
								},
								{
									"kind": "string",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.18.2"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "block"
														}
													},
													"tags": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "allowed"
														}
													}
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "root_state_provider",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
						}
					},
					{
						"kind": "pair",
						"key": "hanging_root_state_provider",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.18"
									}
								}
							}
						],
						"key": "allowed_tree_position",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_predicate::BlockPredicate"
						}
					},
					{
						"kind": "pair",
						"key": "feature",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::FeatureRef"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"scattered_ore": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.17"
									}
								}
							}
						],
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::TargetBlock"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.17"
									}
								}
							}
						],
						"key": "targets",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::worldgen::feature::TargetBlock"
							}
						}
					},
					{
						"kind": "pair",
						"key": "size",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 64
							}
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.17"
									}
								}
							}
						],
						"desc": "Chance that feature placement will be discarded if the ore is exposed to air blocks.\n",
						"key": "discard_chance_on_air_exposure",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					}
				]
			},
			"sculk_patch": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "charge_count",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 1,
								"max": 32
							}
						}
					},
					{
						"kind": "pair",
						"key": "amount_per_charge",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 1,
								"max": 500
							}
						}
					},
					{
						"kind": "pair",
						"key": "spread_attempts",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 1,
								"max": 64
							}
						}
					},
					{
						"kind": "pair",
						"key": "growth_rounds",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 8
							}
						}
					},
					{
						"kind": "pair",
						"key": "spread_rounds",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 8
							}
						}
					},
					{
						"kind": "pair",
						"key": "extra_rare_growths",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::IntProvider"
							},
							"typeArgs": [
								{
									"kind": "int"
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "catalyst_chance",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19"
							}
						}
					}
				]
			},
			"sea_pickle": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "count",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::worldgen::UniformInt"
									},
									"typeArgs": [
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": -10,
												"max": 128
											}
										},
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 128
											}
										}
									],
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								},
								{
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::worldgen::IntProvider"
									},
									"typeArgs": [
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 256
											}
										}
									],
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								}
							]
						}
					}
				]
			},
			"seagrass": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "probability",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					}
				]
			},
			"simple_block": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "to_place",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "reference",
									"path": "::java::server::util::block_state::BlockState",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								},
								{
									"kind": "reference",
									"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.4"
									}
								}
							}
						],
						"desc": "Whether to schedule a block update. Defaults to `false`.\n",
						"key": "schedule_tick",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.17"
									}
								}
							}
						],
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "place_on",
									"type": {
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::server::util::block_state::BlockState"
										}
									}
								},
								{
									"kind": "pair",
									"key": "place_in",
									"type": {
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::server::util::block_state::BlockState"
										}
									}
								},
								{
									"kind": "pair",
									"key": "place_under",
									"type": {
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::server::util::block_state::BlockState"
										}
									}
								}
							]
						}
					},
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.17"
									}
								}
							},
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.18"
									}
								}
							}
						],
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "place_on",
									"type": {
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::server::util::block_state::BlockState"
										}
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "place_in",
									"type": {
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::server::util::block_state::BlockState"
										}
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "place_under",
									"type": {
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::server::util::block_state::BlockState"
										}
									},
									"optional": true
								}
							]
						}
					}
				]
			},
			"simple_random_selector": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "features",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "list",
									"item": {
										"kind": "reference",
										"path": "::java::data::worldgen::feature::FeatureRef"
									}
								},
								{
									"kind": "string",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.18.2"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "worldgen/placed_feature"
														}
													},
													"tags": {
														"kind": "reference",
														"path": "::java::data::worldgen::feature::allowed"
													}
												}
											}
										}
									]
								}
							]
						}
					}
				]
			},
			"small_dripstone": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "max_placements",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 100
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "empty_space_search_radius",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 20
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "max_offset_from_origin",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 20
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "chance_of_taller_dripstone",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					},
					{
						"name": "until",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.18"
							}
						}
					}
				]
			},
			"spring_feature": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "state",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::fluid_state::FluidState"
						}
					},
					{
						"kind": "pair",
						"key": "rock_count",
						"type": {
							"kind": "int"
						}
					},
					{
						"kind": "pair",
						"key": "hole_count",
						"type": {
							"kind": "int"
						}
					},
					{
						"kind": "pair",
						"key": "requires_block_below",
						"type": {
							"kind": "boolean"
						}
					},
					{
						"kind": "pair",
						"key": "valid_blocks",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "list",
									"item": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "block"
													}
												}
											}
										]
									}
								},
								{
									"kind": "string",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.18.2"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "block"
														}
													},
													"tags": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "allowed"
														}
													}
												}
											}
										}
									]
								}
							]
						}
					}
				]
			},
			"tree": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.17"
									}
								}
							}
						],
						"key": "max_water_depth",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "ignore_vines",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.17"
									}
								}
							}
						],
						"key": "heightmap",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::HeightmapType"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.17"
									}
								}
							}
						],
						"key": "force_dirt",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "minimum_size",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::tree::FeatureSize"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.17"
									}
								}
							}
						],
						"key": "dirt_provider",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.17"
									}
								}
							},
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.18"
									}
								}
							}
						],
						"key": "sapling_provider",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
						}
					},
					{
						"kind": "pair",
						"key": "trunk_provider",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.17"
									}
								}
							}
						],
						"key": "leaves_provider",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.17"
									}
								}
							}
						],
						"key": "foliage_provider",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"key": "root_placer",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::tree::RootPlacer"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "trunk_placer",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::tree::TrunkPlacer"
						}
					},
					{
						"kind": "pair",
						"key": "foliage_placer",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::tree::FoliagePlacer"
						}
					},
					{
						"kind": "pair",
						"key": "decorators",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::worldgen::feature::tree::TreeDecorator"
							}
						}
					}
				]
			},
			"twisting_vines": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "spread_width",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 1
							}
						}
					},
					{
						"kind": "pair",
						"key": "spread_height",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 1
							}
						}
					},
					{
						"kind": "pair",
						"key": "max_height",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 1
							}
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.18"
							}
						}
					}
				]
			},
			"underwater_magma": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "floor_search_range",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 512
							}
						}
					},
					{
						"kind": "pair",
						"key": "placement_radius_around_floor",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 64
							}
						}
					},
					{
						"kind": "pair",
						"key": "placement_probability_per_valid_position",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"vegetation_patch": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "surface",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::CaveSurface"
						}
					},
					{
						"kind": "pair",
						"key": "depth",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::IntProvider"
							},
							"typeArgs": [
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 1,
										"max": 128
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "vertical_range",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 1,
								"max": 256
							}
						}
					},
					{
						"kind": "pair",
						"key": "extra_bottom_block_chance",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					},
					{
						"kind": "pair",
						"key": "extra_edge_column_chance",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					},
					{
						"kind": "pair",
						"key": "vegetation_chance",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					},
					{
						"kind": "pair",
						"key": "xz_radius",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::IntProvider"
							},
							"typeArgs": [
								{
									"kind": "int"
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "replaceable",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.18.2"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "block"
														}
													},
													"tags": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "implicit"
														}
													}
												}
											}
										}
									]
								},
								{
									"kind": "string",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.18.2"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "block"
														}
													},
													"tags": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "required"
														}
													}
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "ground_state",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
						}
					},
					{
						"kind": "pair",
						"key": "vegetation_feature",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::FeatureRef"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"waterlogged_vegetation_patch": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "surface",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::CaveSurface"
						}
					},
					{
						"kind": "pair",
						"key": "depth",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::IntProvider"
							},
							"typeArgs": [
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 1,
										"max": 128
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "vertical_range",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 1,
								"max": 256
							}
						}
					},
					{
						"kind": "pair",
						"key": "extra_bottom_block_chance",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					},
					{
						"kind": "pair",
						"key": "extra_edge_column_chance",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					},
					{
						"kind": "pair",
						"key": "vegetation_chance",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					},
					{
						"kind": "pair",
						"key": "xz_radius",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::IntProvider"
							},
							"typeArgs": [
								{
									"kind": "int"
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "replaceable",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.18.2"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "block"
														}
													},
													"tags": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "implicit"
														}
													}
												}
											}
										}
									]
								},
								{
									"kind": "string",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.18.2"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "block"
														}
													},
													"tags": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "required"
														}
													}
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "ground_state",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
						}
					},
					{
						"kind": "pair",
						"key": "vegetation_feature",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::FeatureRef"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			}
		},
		"minecraft:feature_size": {
			"three_layers_feature_size": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "min_clipped_height",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 80
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "limit",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 80
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "upper_limit",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 80
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "lower_size",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 16
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "middle_size",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 16
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "upper_size",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 16
							}
						},
						"optional": true
					}
				]
			},
			"two_layers_feature_size": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "min_clipped_height",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 80
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "limit",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 81
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "lower_size",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 16
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "upper_size",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 16
							}
						},
						"optional": true
					}
				]
			}
		},
		"minecraft:float_provider": {
			"clamped_normal": {
				"kind": "reference",
				"path": "::java::data::worldgen::ClampedNormalFloatProvider"
			},
			"constant": {
				"kind": "reference",
				"path": "::java::data::worldgen::ConstantFloatProvider"
			},
			"trapezoid": {
				"kind": "reference",
				"path": "::java::data::worldgen::TrapezoidFloatProvider"
			},
			"uniform": {
				"kind": "reference",
				"path": "::java::data::worldgen::UniformFloatProvider"
			}
		},
		"minecraft:foliage_placer": {
			"blob_foliage_placer": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "height",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 16
							}
						}
					}
				]
			},
			"bush_foliage_placer": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "height",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 16
							}
						}
					}
				]
			},
			"cherry_foliage_placer": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "height",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::IntProvider"
							},
							"typeArgs": [
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 4,
										"max": 16
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "wide_bottom_layer_hole_chance",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					},
					{
						"kind": "pair",
						"key": "corner_hole_chance",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					},
					{
						"kind": "pair",
						"key": "hanging_leaves_chance",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					},
					{
						"kind": "pair",
						"key": "hanging_leaves_extension_chance",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19.4"
							}
						}
					}
				]
			},
			"fancy_foliage_placer": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "height",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 16
							}
						}
					}
				]
			},
			"jungle_foliage_placer": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "height",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 16
							}
						}
					}
				]
			},
			"mega_pine_foliage_placer": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "crown_height",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::worldgen::UniformInt"
									},
									"typeArgs": [
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 16
											}
										},
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 8
											}
										}
									],
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								},
								{
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::worldgen::IntProvider"
									},
									"typeArgs": [
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 24
											}
										}
									],
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								}
							]
						}
					}
				]
			},
			"pine_foliage_placer": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "height",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::worldgen::UniformInt"
									},
									"typeArgs": [
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 16
											}
										},
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 8
											}
										}
									],
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								},
								{
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::worldgen::IntProvider"
									},
									"typeArgs": [
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 24
											}
										}
									],
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								}
							]
						}
					}
				]
			},
			"random_spread_foliage_placer": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "foliage_height",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::IntProvider"
							},
							"typeArgs": [
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 1,
										"max": 512
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "leaf_placement_attempts",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 256
							}
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"spruce_foliage_placer": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "trunk_height",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::worldgen::UniformInt"
									},
									"typeArgs": [
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 16
											}
										},
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 8
											}
										}
									],
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								},
								{
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::worldgen::IntProvider"
									},
									"typeArgs": [
										{
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0,
												"max": 24
											}
										}
									],
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								}
							]
						}
					}
				]
			}
		},
		"minecraft:glyph_provider": {
			"bitmap": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "file",
						"type": {
							"kind": "string"
						}
					},
					{
						"kind": "pair",
						"key": "height",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "ascent",
						"type": {
							"kind": "int"
						}
					},
					{
						"kind": "pair",
						"key": "chars",
						"type": {
							"kind": "list",
							"item": {
								"kind": "string",
								"lengthRange": {
									"kind": 0,
									"min": 1
								}
							},
							"lengthRange": {
								"kind": 0,
								"min": 1
							}
						}
					}
				]
			},
			"legacy_unicode": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "sizes",
						"type": {
							"kind": "string"
						}
					},
					{
						"kind": "pair",
						"key": "template",
						"type": {
							"kind": "string"
						}
					}
				],
				"attributes": [
					{
						"name": "until",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.20"
							}
						}
					}
				]
			},
			"reference": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "id",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "font"
										}
									}
								}
							]
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.20"
							}
						}
					}
				]
			},
			"space": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "advances",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": {
										"kind": "string",
										"lengthRange": {
											"kind": 0,
											"min": 1,
											"max": 1
										}
									},
									"type": {
										"kind": "float"
									}
								}
							]
						}
					}
				]
			},
			"ttf": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "file",
						"type": {
							"kind": "string"
						}
					},
					{
						"kind": "pair",
						"key": "size",
						"type": {
							"kind": "float"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "oversample",
						"type": {
							"kind": "float"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "shift",
						"type": {
							"kind": "tuple",
							"items": [
								{
									"kind": "float"
								},
								{
									"kind": "float"
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "skip",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string"
								},
								{
									"kind": "list",
									"item": {
										"kind": "string"
									}
								}
							]
						},
						"optional": true
					}
				]
			},
			"unihex": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "ZIP archive containing one or more *.hex files (files in archive with different extensions are ignored).\n",
						"key": "hex_file",
						"type": {
							"kind": "string"
						}
					},
					{
						"kind": "pair",
						"desc": "List of ranges to override the size of.\n",
						"key": "size_overrides",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::assets::font::UnihexOverrideRange"
							}
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.20"
							}
						}
					}
				]
			}
		},
		"minecraft:height_provider": {
			"biased_to_bottom": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::UniformHeightProvider"
						}
					},
					{
						"kind": "pair",
						"key": "inner",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 1
							}
						},
						"optional": true
					}
				]
			},
			"constant": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "value",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::VerticalAnchor"
						}
					}
				]
			},
			"trapezoid": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::UniformHeightProvider"
						}
					},
					{
						"kind": "pair",
						"key": "plateau",
						"type": {
							"kind": "int"
						},
						"optional": true
					}
				]
			},
			"uniform": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "min_inclusive",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::VerticalAnchor"
						}
					},
					{
						"kind": "pair",
						"key": "max_inclusive",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::VerticalAnchor"
						}
					}
				]
			},
			"very_biased_to_bottom": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::UniformHeightProvider"
						}
					},
					{
						"kind": "pair",
						"key": "inner",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 1
							}
						},
						"optional": true
					}
				]
			},
			"weighted_list": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "distribution",
						"type": {
							"kind": "list",
							"item": {
								"kind": "struct",
								"fields": [
									{
										"kind": "pair",
										"key": "weight",
										"type": {
											"kind": "int"
										}
									},
									{
										"kind": "pair",
										"key": "data",
										"type": {
											"kind": "reference",
											"path": "::java::data::worldgen::HeightProvider"
										}
									}
								]
							}
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.18"
							}
						}
					}
				]
			}
		},
		"minecraft:hover_event": {
			"show_entity": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "deprecated",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"key": "value",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "name",
									"type": {
										"kind": "string"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "type",
									"type": {
										"kind": "string"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "id",
									"type": {
										"kind": "string"
									},
									"optional": true
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"key": "contents",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "name",
									"type": {
										"kind": "reference",
										"path": "::java::server::util::text::Text"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "type",
									"type": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "entity_type"
													}
												}
											}
										]
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "id",
									"type": {
										"kind": "string",
										"attributes": [
											{
												"name": "uuid"
											}
										]
									},
									"optional": true
								}
							]
						},
						"optional": true
					}
				]
			},
			"show_item": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "deprecated",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"key": "value",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "nbt",
									"value": {
										"kind": "reference",
										"path": "::java::server::world::item::ItemStack"
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"key": "contents",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "id",
									"type": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "item"
													}
												}
											}
										]
									}
								},
								{
									"kind": "pair",
									"key": "count",
									"type": {
										"kind": "int"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.5"
												}
											}
										}
									],
									"key": "tag",
									"type": {
										"kind": "string",
										"attributes": [
											{
												"name": "nbt",
												"value": {
													"kind": "dispatcher",
													"parallelIndices": [
														{
															"kind": "dynamic",
															"accessor": [
																"id"
															]
														}
													],
													"registry": "minecraft:item"
												}
											}
										]
									},
									"optional": true
								},
								{
									"kind": "pair",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.5"
												}
											}
										}
									],
									"key": "components",
									"type": {
										"kind": "concrete",
										"child": {
											"kind": "reference",
											"path": "::java::server::world::item::DataComponentPatch"
										},
										"typeArgs": [
											{
												"kind": "dispatcher",
												"parallelIndices": [
													{
														"kind": "dynamic",
														"accessor": [
															"id"
														]
													}
												],
												"registry": "minecraft:item_component"
											}
										]
									},
									"optional": true
								}
							]
						},
						"optional": true
					}
				]
			},
			"show_text": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "deprecated",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"key": "value",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::text::Text"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16"
									}
								}
							}
						],
						"key": "contents",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::text::Text"
						},
						"optional": true
					}
				]
			}
		},
		"minecraft:int_provider": {
			"biased_to_bottom": {
				"kind": "template",
				"child": {
					"kind": "union",
					"members": [
						{
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "value",
									"type": {
										"kind": "concrete",
										"child": {
											"kind": "reference",
											"path": "::java::data::worldgen::UniformIntProvider"
										},
										"typeArgs": [
											{
												"kind": "reference",
												"path": "::java::data::worldgen::T"
											}
										]
									}
								}
							],
							"attributes": [
								{
									"name": "until",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "1.20.5"
										}
									}
								}
							]
						},
						{
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::UniformIntProvider"
							},
							"typeArgs": [
								{
									"kind": "reference",
									"path": "::java::data::worldgen::T"
								}
							],
							"attributes": [
								{
									"name": "since",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "1.20.5"
										}
									}
								}
							]
						}
					]
				},
				"typeParams": [
					{
						"path": "::java::data::worldgen::T"
					}
				]
			},
			"clamped": {
				"kind": "template",
				"child": {
					"kind": "union",
					"members": [
						{
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "value",
									"type": {
										"kind": "concrete",
										"child": {
											"kind": "reference",
											"path": "::java::data::worldgen::ClampedIntProvider"
										},
										"typeArgs": [
											{
												"kind": "reference",
												"path": "::java::data::worldgen::T"
											}
										]
									}
								}
							],
							"attributes": [
								{
									"name": "until",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "1.20.5"
										}
									}
								}
							]
						},
						{
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::ClampedIntProvider"
							},
							"typeArgs": [
								{
									"kind": "reference",
									"path": "::java::data::worldgen::T"
								}
							],
							"attributes": [
								{
									"name": "since",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "1.20.5"
										}
									}
								}
							]
						}
					]
				},
				"typeParams": [
					{
						"path": "::java::data::worldgen::T"
					}
				]
			},
			"clamped_normal": {
				"kind": "template",
				"child": {
					"kind": "union",
					"members": [
						{
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "value",
									"type": {
										"kind": "concrete",
										"child": {
											"kind": "reference",
											"path": "::java::data::worldgen::ClampedNormalIntProvider"
										},
										"typeArgs": [
											{
												"kind": "reference",
												"path": "::java::data::worldgen::T"
											}
										]
									}
								}
							],
							"attributes": [
								{
									"name": "until",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "1.20.5"
										}
									}
								}
							]
						},
						{
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::ClampedNormalIntProvider"
							},
							"typeArgs": [
								{
									"kind": "reference",
									"path": "::java::data::worldgen::T"
								}
							],
							"attributes": [
								{
									"name": "since",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "1.20.5"
										}
									}
								}
							]
						}
					]
				},
				"typeParams": [
					{
						"path": "::java::data::worldgen::T"
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.18"
							}
						}
					}
				]
			},
			"constant": {
				"kind": "union",
				"members": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"key": "value",
								"type": {
									"kind": "reference",
									"path": "::java::data::worldgen::ConstantIntProvider"
								}
							}
						],
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						]
					},
					{
						"kind": "reference",
						"path": "::java::data::worldgen::ConstantIntProvider"
					}
				]
			},
			"uniform": {
				"kind": "template",
				"child": {
					"kind": "union",
					"members": [
						{
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "value",
									"type": {
										"kind": "concrete",
										"child": {
											"kind": "reference",
											"path": "::java::data::worldgen::UniformIntProvider"
										},
										"typeArgs": [
											{
												"kind": "reference",
												"path": "::java::data::worldgen::T"
											}
										]
									}
								}
							],
							"attributes": [
								{
									"name": "until",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "1.20.5"
										}
									}
								}
							]
						},
						{
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::UniformIntProvider"
							},
							"typeArgs": [
								{
									"kind": "reference",
									"path": "::java::data::worldgen::T"
								}
							],
							"attributes": [
								{
									"name": "since",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "1.20.5"
										}
									}
								}
							]
						}
					]
				},
				"typeParams": [
					{
						"path": "::java::data::worldgen::T"
					}
				]
			},
			"weighted_list": {
				"kind": "reference",
				"path": "::java::data::worldgen::WeightListIntProvider",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.18"
							}
						}
					}
				]
			}
		},
		"minecraft:item": {
			"%blockitem": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"key": "BlockEntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::block::BlockEntityData"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Blockstate that the placed block will have.\n",
						"key": "BlockStateTag",
						"type": {
							"kind": "dispatcher",
							"parallelIndices": [
								{
									"kind": "dynamic",
									"accessor": [
										{
											"keyword": "parent"
										},
										"id"
									]
								}
							],
							"registry": "mcdoc:block_item_states"
						},
						"optional": true
					}
				]
			},
			"%unknown": {
				"kind": "reference",
				"path": "::java::server::world::item::ItemBase"
			},
			"acacia_boat": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItem"
			},
			"acacia_chest_boat": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItem"
			},
			"allay_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"armadillo_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"armor_stand": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItem"
			},
			"axolotl_bucket": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"axolotl_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"bamboo_chest_raft": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItem"
			},
			"bamboo_raft": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItem"
			},
			"bat_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"bee_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"birch_boat": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItem"
			},
			"birch_chest_boat": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItem"
			},
			"blaze_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"bogged_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"breeze_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"camel_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"cat_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"cave_spider_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"cherry_boat": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItem"
			},
			"cherry_chest_boat": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItem"
			},
			"chest_minecart": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItem"
			},
			"chicken_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"cod_bucket": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"cod_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"command_block_minecart": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItem"
			},
			"compass": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"key": "LodestoneDimension",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "dimension"
										}
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "LodestonePos",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::compass::LodestonePos"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether the compass should be linked to a lodestone.\n\nWhen true, the compass will reset if the lodestone at the position is removed.\n",
						"key": "LodestoneTracked",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"cow_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"creeper_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"crossbow": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Projectiles that are loaded.\n",
						"key": "ChargedProjectiles",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::world::item::ItemStack"
							},
							"lengthRange": {
								"kind": 0,
								"min": 0,
								"max": 3
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether the crossbow is charged.\n",
						"key": "Charged",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"dark_oak_boat": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItem"
			},
			"dark_oak_chest_boat": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItem"
			},
			"debug_stick": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"key": "DebugProperty",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::debug_stick::DebugStickState"
						},
						"optional": true
					}
				]
			},
			"dolphin_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"donkey_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"drowned_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"elder_guardian_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"enchanted_book": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"key": "StoredEnchantments",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::world::item::Enchantment"
							}
						},
						"optional": true
					}
				]
			},
			"ender_dragon_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"enderman_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"endermite_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"evoker_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"filled_map": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Map number, representing the shared state holding map contents and markers.\n",
						"key": "map",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Amount to increase the current map scale by when crafting.\n",
						"key": "map_scale_direction",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 1
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether the map should be locked after being taken out of the cartography table.\n",
						"key": "map_to_lock",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Decorations on the map.\n",
						"key": "Decorations",
						"type": {
							"kind": "list",
							"item": {
								"kind": "struct",
								"fields": [
									{
										"kind": "spread",
										"type": {
											"kind": "reference",
											"path": "::java::server::world::item::map::Decoration"
										}
									},
									{
										"kind": "pair",
										"desc": "An arbitrary unique string identifying the decoration.\n",
										"key": "id",
										"type": {
											"kind": "string"
										}
									}
								]
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Display for the item.\n",
						"key": "display",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "spread",
									"type": {
										"kind": "reference",
										"path": "::java::server::world::item::Display"
									}
								},
								{
									"kind": "pair",
									"desc": "Calculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.\n",
									"key": "MapColor",
									"type": {
										"kind": "int",
										"attributes": [
											{
												"name": "color",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "composite_rgb"
													}
												}
											}
										]
									},
									"optional": true
								}
							]
						},
						"optional": true
					}
				]
			},
			"firework_rocket": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"key": "Fireworks",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::firework::LegacyFireworks"
						},
						"optional": true
					}
				]
			},
			"firework_star": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"key": "Explosion",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::firework::LegacyExplosion"
						},
						"optional": true
					}
				]
			},
			"fox_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"frog_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"furnace_minecart": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItem"
			},
			"ghast_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"glow_item_frame": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItem"
			},
			"glow_squid_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"goat_horn": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"key": "instrument",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "instrument"
										}
									}
								}
							]
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19"
							}
						}
					}
				]
			},
			"goat_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"guardian_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"hoglin_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"hopper_minecart": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItem"
			},
			"horse_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"husk_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"iron_golem_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"item_frame": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItem"
			},
			"jungle_boat": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItem"
			},
			"jungle_chest_boat": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItem"
			},
			"knowledge_book": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"key": "Recipes",
						"type": {
							"kind": "list",
							"item": {
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "recipe"
											}
										}
									}
								]
							}
						},
						"optional": true
					}
				]
			},
			"leather_boots": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"key": "display",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::leather_armor::ColorDisplay"
						},
						"optional": true
					}
				]
			},
			"leather_chestplate": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"key": "display",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::leather_armor::ColorDisplay"
						},
						"optional": true
					}
				]
			},
			"leather_helmet": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"key": "display",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::leather_armor::ColorDisplay"
						},
						"optional": true
					}
				]
			},
			"leather_horse_armor": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"key": "display",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::leather_armor::ColorDisplay"
						},
						"optional": true
					}
				]
			},
			"leather_leggings": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"key": "display",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::leather_armor::ColorDisplay"
						},
						"optional": true
					}
				]
			},
			"lingering_potion": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.2"
									}
								}
							}
						],
						"desc": "List of the effects that will be applied with this item.\n",
						"key": "CustomPotionEffects",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::util::effect::MobEffectInstance"
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.2"
									}
								}
							}
						],
						"desc": "List of the effects that will be applied with this item.\n",
						"key": "custom_potion_effects",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::util::effect::MobEffectInstance"
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Default potion effect\n",
						"key": "Potion",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "potion"
										}
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Calculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.\n",
						"key": "CustomPotionColor",
						"type": {
							"kind": "int",
							"attributes": [
								{
									"name": "color",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "composite_rgb"
										}
									}
								}
							]
						},
						"optional": true
					}
				]
			},
			"llama_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"magma_cube_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"mangrove_boat": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItem"
			},
			"mangrove_chest_boat": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItem"
			},
			"minecart": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItem"
			},
			"mooshroom_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"mule_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"oak_boat": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItem"
			},
			"oak_chest_boat": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItem"
			},
			"ocelot_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"painting": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItem"
			},
			"panda_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"parrot_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"phantom_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"pig_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"piglin_brute_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"piglin_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"pillager_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"player_head": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"key": "SkullOwner",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "reference",
									"path": "::java::server::world::item::head::SkullOwner"
								},
								{
									"kind": "string"
								}
							]
						},
						"optional": true
					}
				]
			},
			"polar_bear_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"potion": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.2"
									}
								}
							}
						],
						"desc": "List of the effects that will be applied with this item.\n",
						"key": "CustomPotionEffects",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::util::effect::MobEffectInstance"
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.2"
									}
								}
							}
						],
						"desc": "List of the effects that will be applied with this item.\n",
						"key": "custom_potion_effects",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::util::effect::MobEffectInstance"
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Default potion effect\n",
						"key": "Potion",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "potion"
										}
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Calculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.\n",
						"key": "CustomPotionColor",
						"type": {
							"kind": "int",
							"attributes": [
								{
									"name": "color",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "composite_rgb"
										}
									}
								}
							]
						},
						"optional": true
					}
				]
			},
			"pufferfish_bucket": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"pufferfish_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"rabbit_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"ravager_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"salmon_bucket": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"salmon_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"sheep_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"shield": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Banner Data.\n",
						"key": "BlockEntityTag",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"desc": "Base color.\n",
									"key": "Base",
									"type": {
										"kind": "reference",
										"path": "::java::server::util::color::ColorInt"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "Patterns",
									"type": {
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::server::world::item::shield::Pattern"
										}
									},
									"optional": true
								}
							]
						},
						"optional": true
					}
				]
			},
			"shulker_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"silverfish_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"skeleton_horse_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"skeleton_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"slime_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"sniffer_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"snow_golem_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"spider_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"splash_potion": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.2"
									}
								}
							}
						],
						"desc": "List of the effects that will be applied with this item.\n",
						"key": "CustomPotionEffects",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::util::effect::MobEffectInstance"
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.2"
									}
								}
							}
						],
						"desc": "List of the effects that will be applied with this item.\n",
						"key": "custom_potion_effects",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::util::effect::MobEffectInstance"
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Default potion effect\n",
						"key": "Potion",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "potion"
										}
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Calculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.\n",
						"key": "CustomPotionColor",
						"type": {
							"kind": "int",
							"attributes": [
								{
									"name": "color",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "composite_rgb"
										}
									}
								}
							]
						},
						"optional": true
					}
				]
			},
			"spruce_boat": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItem"
			},
			"spruce_chest_boat": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItem"
			},
			"squid_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"stray_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"strider_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"suspicious_stew": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Effects this stew will give.\n",
						"key": "Effects",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::world::item::suspicious_stew::Effect"
							}
						},
						"optional": true
					}
				]
			},
			"tadpole_bucket": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"tadpole_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"tipped_arrow": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.2"
									}
								}
							}
						],
						"desc": "List of the effects that will be applied with this item.\n",
						"key": "CustomPotionEffects",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::util::effect::MobEffectInstance"
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.2"
									}
								}
							}
						],
						"desc": "List of the effects that will be applied with this item.\n",
						"key": "custom_potion_effects",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::util::effect::MobEffectInstance"
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Default potion effect\n",
						"key": "Potion",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "potion"
										}
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Calculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.\n",
						"key": "CustomPotionColor",
						"type": {
							"kind": "int",
							"attributes": [
								{
									"name": "color",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "composite_rgb"
										}
									}
								}
							]
						},
						"optional": true
					}
				]
			},
			"tnt_minecart": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItem"
			},
			"trader_llama_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"tropical_fish_bucket": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Turns into the `Variant` entity tag.\n",
						"key": "BucketVariantTag",
						"type": {
							"kind": "int"
						},
						"optional": true
					}
				]
			},
			"tropical_fish_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"turtle_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"vex_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"villager_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"vindicator_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"wandering_trader_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"warden_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"witch_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"wither_skeleton_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"wither_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"wolf_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"writable_book": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"key": "pages",
						"type": {
							"kind": "list",
							"item": {
								"kind": "string"
							}
						},
						"optional": true
					}
				]
			},
			"written_book": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether the dynamic content on the pages has been resolved.\n",
						"key": "resolved",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Pages of the book as JSON text components.\n",
						"key": "pages",
						"type": {
							"kind": "list",
							"item": {
								"kind": "string",
								"attributes": [
									{
										"name": "text_component"
									}
								]
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Generation of the book.\n",
						"key": "generation",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::book::Generation"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "author",
						"type": {
							"kind": "string"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "title",
						"type": {
							"kind": "string"
						},
						"optional": true
					}
				]
			},
			"zoglin_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"zombie_horse_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"zombie_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"zombie_villager_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			},
			"zombified_piglin_spawn_egg": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::ItemBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Data of the spawned entity.\n",
						"key": "EntityTag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::entity::AnyEntity"
						},
						"optional": true
					}
				]
			}
		},
		"minecraft:item_component": {
			"%blockitem": {
				"kind": "reference",
				"path": "::java::server::world::item::block::BlockItemComponents"
			},
			"%unknown": {
				"kind": "reference",
				"path": "::java::server::world::item::ItemBaseComponents"
			},
			"acacia_boat": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"acacia_chest_boat": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"allay_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"armadillo_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"armor_stand": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"arrow": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::ItemBaseComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "intangible_projectile"
						}
					}
				]
			},
			"axolotl_bucket": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::ItemBaseComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "bucket_entity_data"
						}
					}
				]
			},
			"axolotl_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"bamboo_chest_raft": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"bamboo_raft": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"barrel": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container_loot"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "lock"
						}
					}
				]
			},
			"bat_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"bee_nest": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "bees"
						}
					}
				]
			},
			"bee_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"beehive": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "bees"
						}
					}
				]
			},
			"birch_boat": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"birch_chest_boat": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"black_banner": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "banner_patterns"
						}
					}
				]
			},
			"black_shulker_box": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container_loot"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "lock"
						}
					}
				]
			},
			"blaze_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"blue_banner": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "banner_patterns"
						}
					}
				]
			},
			"blue_shulker_box": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container_loot"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "lock"
						}
					}
				]
			},
			"bogged_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"breeze_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"brown_banner": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "banner_patterns"
						}
					}
				]
			},
			"brown_shulker_box": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container_loot"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "lock"
						}
					}
				]
			},
			"bundle": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::ItemBaseComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "bundle_contents"
						}
					}
				]
			},
			"camel_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"cat_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"cave_spider_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"cherry_boat": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"cherry_chest_boat": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"chest": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container_loot"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "lock"
						}
					}
				]
			},
			"chest_minecart": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"chicken_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"cod_bucket": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::ItemBaseComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "bucket_entity_data"
						}
					}
				]
			},
			"cod_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"command_block_minecart": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"compass": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::ItemBaseComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "lodestone_tracker"
						}
					}
				]
			},
			"cow_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"creeper_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"crossbow": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::ItemBaseComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "charged_projectiles"
						}
					}
				]
			},
			"cyan_banner": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "banner_patterns"
						}
					}
				]
			},
			"cyan_shulker_box": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container_loot"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "lock"
						}
					}
				]
			},
			"dark_oak_boat": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"dark_oak_chest_boat": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"debug_stick": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::ItemBaseComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "debug_stick_state"
						}
					}
				]
			},
			"decorated_pot": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "pot_decorations"
						}
					}
				]
			},
			"dispenser": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container"
						}
					}
				]
			},
			"dolphin_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"donkey_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"dropper": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container"
						}
					}
				]
			},
			"drowned_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"elder_guardian_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"enchanted_book": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::ItemBaseComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "stored_enchantments"
						}
					}
				]
			},
			"ender_dragon_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"enderman_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"endermite_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"evoker_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"filled_map": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::ItemBaseComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "map_color"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "map_decorations"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "map_id"
						}
					}
				]
			},
			"firework_rocket": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::ItemBaseComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "fireworks"
						}
					}
				]
			},
			"firework_star": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::ItemBaseComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "firework_explosion"
						}
					}
				]
			},
			"fox_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"frog_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"furnace_minecart": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"ghast_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"glow_item_frame": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"glow_squid_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"goat_horn": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::ItemBaseComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "instrument"
						}
					}
				]
			},
			"goat_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"gray_banner": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "banner_patterns"
						}
					}
				]
			},
			"gray_shulker_box": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container_loot"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "lock"
						}
					}
				]
			},
			"green_banner": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "banner_patterns"
						}
					}
				]
			},
			"green_shulker_box": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container_loot"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "lock"
						}
					}
				]
			},
			"guardian_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"hoglin_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"hopper_minecart": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"horse_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"husk_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"iron_golem_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"item_frame": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"jungle_boat": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"jungle_chest_boat": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"knowledge_book": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::ItemBaseComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "recipes"
						}
					}
				]
			},
			"leather_boots": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::ItemBaseComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "dyed_color"
						}
					}
				]
			},
			"leather_chestplate": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::ItemBaseComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "dyed_color"
						}
					}
				]
			},
			"leather_helmet": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::ItemBaseComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "dyed_color"
						}
					}
				]
			},
			"leather_horse_armor": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::ItemBaseComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "dyed_color"
						}
					}
				]
			},
			"leather_leggings": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::ItemBaseComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "dyed_color"
						}
					}
				]
			},
			"light_blue_banner": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "banner_patterns"
						}
					}
				]
			},
			"light_blue_shulker_box": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container_loot"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "lock"
						}
					}
				]
			},
			"light_gray_banner": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "banner_patterns"
						}
					}
				]
			},
			"light_gray_shulker_box": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container_loot"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "lock"
						}
					}
				]
			},
			"lime_banner": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "banner_patterns"
						}
					}
				]
			},
			"lime_shulker_box": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container_loot"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "lock"
						}
					}
				]
			},
			"lingering_potion": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::ItemBaseComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "potion_contents"
						}
					}
				]
			},
			"llama_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"magenta_banner": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "banner_patterns"
						}
					}
				]
			},
			"magenta_shulker_box": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container_loot"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "lock"
						}
					}
				]
			},
			"magma_cube_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"mangrove_boat": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"mangrove_chest_boat": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"minecart": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"mooshroom_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"mule_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"oak_boat": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"oak_chest_boat": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"ocelot_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"ominous_bottle": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::ItemBaseComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "ominous_bottle_amplifier"
						}
					}
				]
			},
			"orange_banner": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "banner_patterns"
						}
					}
				]
			},
			"orange_shulker_box": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container_loot"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "lock"
						}
					}
				]
			},
			"panda_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"parrot_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"phantom_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"pig_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"piglin_brute_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"piglin_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"pillager_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"pink_banner": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "banner_patterns"
						}
					}
				]
			},
			"pink_shulker_box": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container_loot"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "lock"
						}
					}
				]
			},
			"player_head": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::ItemBaseComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "profile"
						}
					}
				]
			},
			"polar_bear_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"potion": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::ItemBaseComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "potion_contents"
						}
					}
				]
			},
			"pufferfish_bucket": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::ItemBaseComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "bucket_entity_data"
						}
					}
				]
			},
			"pufferfish_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"purple_banner": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "banner_patterns"
						}
					}
				]
			},
			"purple_shulker_box": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container_loot"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "lock"
						}
					}
				]
			},
			"rabbit_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"ravager_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"red_banner": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "banner_patterns"
						}
					}
				]
			},
			"red_shulker_box": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container_loot"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "lock"
						}
					}
				]
			},
			"salmon_bucket": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::ItemBaseComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "bucket_entity_data"
						}
					}
				]
			},
			"salmon_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"sheep_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"shield": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::ItemBaseComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "banner_patterns"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "base_color"
						}
					}
				]
			},
			"shulker_box": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container_loot"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "lock"
						}
					}
				]
			},
			"shulker_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"silverfish_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"skeleton_horse_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"skeleton_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"slime_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"sniffer_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"snow_golem_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"spectral_arrow": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::ItemBaseComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "intangible_projectile"
						}
					}
				]
			},
			"spider_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"splash_potion": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::ItemBaseComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "potion_contents"
						}
					}
				]
			},
			"spruce_boat": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"spruce_chest_boat": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"squid_bucket": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::ItemBaseComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "bucket_entity_data"
						}
					}
				]
			},
			"squid_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"stray_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"strider_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"suspicious_stew": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::ItemBaseComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "suspicious_stew_effects"
						}
					}
				]
			},
			"tadpole_bucket": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::ItemBaseComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "bucket_entity_data"
						}
					}
				]
			},
			"tadpole_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"tipped_arrow": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::ItemBaseComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "potion_contents"
						}
					}
				]
			},
			"tnt_minecart": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"trader_llama_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"trapped_chest": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container_loot"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "lock"
						}
					}
				]
			},
			"tropical_fish_bucket": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::ItemBaseComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "bucket_entity_data"
						}
					}
				]
			},
			"tropical_fish_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"turtle_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"vex_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"villager_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"vindicator_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"wandering_trader_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"warden_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"white_banner": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "banner_patterns"
						}
					}
				]
			},
			"white_shulker_box": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container_loot"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "lock"
						}
					}
				]
			},
			"witch_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"wither_skeleton_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"wither_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"wolf_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"writable_book": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::ItemBaseComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "writable_book_content"
						}
					}
				]
			},
			"written_book": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::ItemBaseComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "written_book_content"
						}
					}
				]
			},
			"yellow_banner": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "banner_patterns"
						}
					}
				]
			},
			"yellow_shulker_box": {
				"kind": "union",
				"members": [
					{
						"kind": "reference",
						"path": "::java::server::world::item::block::BlockItemComponents"
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "container_loot"
						}
					},
					{
						"kind": "literal",
						"value": {
							"kind": "string",
							"value": "lock"
						}
					}
				]
			},
			"zoglin_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"zombie_horse_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"zombie_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"zombie_villager_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			},
			"zombified_piglin_spawn_egg": {
				"kind": "reference",
				"path": "::java::server::world::item::spawn_item::SpawnItemComponents"
			}
		},
		"minecraft:item_model": {
			"bundle/selected_item": {
				"kind": "struct",
				"fields": []
			},
			"composite": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "models",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::assets::item_definition::ItemModel"
							}
						}
					}
				]
			},
			"condition": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "property",
						"type": {
							"kind": "reference",
							"path": "::java::assets::item_definition::ConditionalPropertyType",
							"attributes": [
								{
									"name": "id"
								}
							]
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "dispatcher",
							"parallelIndices": [
								{
									"kind": "dynamic",
									"accessor": [
										"property"
									]
								}
							],
							"registry": "minecraft:conditional_item_property"
						}
					},
					{
						"kind": "pair",
						"key": "on_true",
						"type": {
							"kind": "reference",
							"path": "::java::assets::item_definition::ItemModel"
						}
					},
					{
						"kind": "pair",
						"key": "on_false",
						"type": {
							"kind": "reference",
							"path": "::java::assets::item_definition::ItemModel"
						}
					}
				]
			},
			"model": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "model",
						"type": {
							"kind": "reference",
							"path": "::java::assets::model::ModelRef"
						}
					},
					{
						"kind": "pair",
						"key": "tints",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::assets::item_definition::ModelTint"
							}
						},
						"optional": true
					}
				]
			},
			"range_dispatch": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "property",
						"type": {
							"kind": "reference",
							"path": "::java::assets::item_definition::NumericPropertyType",
							"attributes": [
								{
									"name": "id"
								}
							]
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "dispatcher",
							"parallelIndices": [
								{
									"kind": "dynamic",
									"accessor": [
										"property"
									]
								}
							],
							"registry": "minecraft:numeric_item_property"
						}
					},
					{
						"kind": "pair",
						"desc": "Factor to multiply the property value with. Defaults to 1.\n",
						"key": "scale",
						"type": {
							"kind": "float"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "List of ranges. Will select last entry with threshold less or equal to value.\n\nOrder does not matter, list will be sorted by threshold in ascending order.\n",
						"key": "entries",
						"type": {
							"kind": "list",
							"item": {
								"kind": "struct",
								"fields": [
									{
										"kind": "pair",
										"key": "threshold",
										"type": {
											"kind": "float"
										}
									},
									{
										"kind": "pair",
										"key": "model",
										"type": {
											"kind": "reference",
											"path": "::java::assets::item_definition::ItemModel"
										}
									}
								]
							}
						}
					},
					{
						"kind": "pair",
						"desc": "Item model to render if no entries were less or equal to the value.\n",
						"key": "fallback",
						"type": {
							"kind": "reference",
							"path": "::java::assets::item_definition::ItemModel"
						},
						"optional": true
					}
				]
			},
			"select": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "property",
						"type": {
							"kind": "reference",
							"path": "::java::assets::item_definition::SelectPropertyType",
							"attributes": [
								{
									"name": "id"
								}
							]
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "dispatcher",
							"parallelIndices": [
								{
									"kind": "dynamic",
									"accessor": [
										"property"
									]
								}
							],
							"registry": "minecraft:select_item_property"
						}
					},
					{
						"kind": "pair",
						"key": "cases",
						"type": {
							"kind": "list",
							"item": {
								"kind": "struct",
								"fields": [
									{
										"kind": "pair",
										"key": "when",
										"type": {
											"kind": "union",
											"members": [
												{
													"kind": "string"
												},
												{
													"kind": "list",
													"item": {
														"kind": "string"
													}
												}
											]
										}
									},
									{
										"kind": "pair",
										"key": "model",
										"type": {
											"kind": "reference",
											"path": "::java::assets::item_definition::ItemModel"
										}
									}
								]
							}
						}
					},
					{
						"kind": "pair",
						"desc": "Item model to render if none of the cases matched the value.\n",
						"key": "fallback",
						"type": {
							"kind": "reference",
							"path": "::java::assets::item_definition::ItemModel"
						},
						"optional": true
					}
				]
			},
			"special": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Renders a special hardcoded model.\n",
						"key": "model",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "type",
									"type": {
										"kind": "reference",
										"path": "::java::assets::item_definition::SpecialModelType",
										"attributes": [
											{
												"name": "id"
											}
										]
									}
								},
								{
									"kind": "spread",
									"type": {
										"kind": "dispatcher",
										"parallelIndices": [
											{
												"kind": "dynamic",
												"accessor": [
													"type"
												]
											}
										],
										"registry": "minecraft:special_item_model"
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"desc": "Base model, providing transformations, particle texture and GUI light.\n",
						"key": "base",
						"type": {
							"kind": "reference",
							"path": "::java::assets::model::ModelRef"
						}
					}
				]
			}
		},
		"minecraft:item_sub_predicate": {
			"attribute_modifiers": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "modifiers",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::advancement::predicate::CollectionPredicate"
							},
							"typeArgs": [
								{
									"kind": "reference",
									"path": "::java::data::advancement::predicate::AttributeModifiersPredicateEntry"
								}
							]
						},
						"optional": true
					}
				]
			},
			"bundle_contents": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "items",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::advancement::predicate::CollectionPredicate"
							},
							"typeArgs": [
								{
									"kind": "reference",
									"path": "::java::data::advancement::predicate::ItemPredicate"
								}
							]
						},
						"optional": true
					}
				]
			},
			"container": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "items",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::advancement::predicate::CollectionPredicate"
							},
							"typeArgs": [
								{
									"kind": "reference",
									"path": "::java::data::advancement::predicate::ItemPredicate"
								}
							]
						},
						"optional": true
					}
				]
			},
			"custom_data": {
				"kind": "reference",
				"path": "::java::server::world::item::CustomData"
			},
			"damage": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "damage",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::util::MinMaxBounds"
							},
							"typeArgs": [
								{
									"kind": "int"
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "durability",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::util::MinMaxBounds"
							},
							"typeArgs": [
								{
									"kind": "int"
								}
							]
						},
						"optional": true
					}
				]
			},
			"enchantments": {
				"kind": "list",
				"item": {
					"kind": "reference",
					"path": "::java::data::advancement::predicate::EnchantmentPredicate"
				}
			},
			"firework_explosion": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "shape",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::firework::FireworkShape"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "has_twinkle",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "has_trail",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"fireworks": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "explosions",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::advancement::predicate::CollectionPredicate"
							},
							"typeArgs": [
								{
									"kind": "reference",
									"path": "::java::data::advancement::predicate::FireworkExplosionPredicate"
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "flight_duration",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::util::MinMaxBounds"
							},
							"typeArgs": [
								{
									"kind": "int"
								}
							]
						},
						"optional": true
					}
				]
			},
			"jukebox_playable": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "song",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "jukebox_song"
														}
													},
													"tags": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "allowed"
														}
													}
												}
											}
										}
									]
								},
								{
									"kind": "list",
									"item": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "jukebox_song"
													}
												}
											}
										]
									}
								}
							]
						},
						"optional": true
					}
				]
			},
			"potion_contents": {
				"kind": "union",
				"members": [
					{
						"kind": "string",
						"attributes": [
							{
								"name": "id",
								"value": {
									"kind": "tree",
									"values": {
										"registry": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "potion"
											}
										},
										"tags": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "allowed"
											}
										}
									}
								}
							}
						]
					},
					{
						"kind": "list",
						"item": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "potion"
										}
									}
								}
							]
						}
					}
				]
			},
			"stored_enchantments": {
				"kind": "list",
				"item": {
					"kind": "reference",
					"path": "::java::data::advancement::predicate::EnchantmentPredicate"
				}
			},
			"trim": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "material",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "trim_material"
														}
													},
													"tags": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "allowed"
														}
													}
												}
											}
										}
									]
								},
								{
									"kind": "list",
									"item": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "trim_material"
													}
												}
											}
										]
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "pattern",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "trim_pattern"
														}
													},
													"tags": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "allowed"
														}
													}
												}
											}
										}
									]
								},
								{
									"kind": "list",
									"item": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "trim_pattern"
													}
												}
											}
										]
									}
								}
							]
						},
						"optional": true
					}
				]
			},
			"writable_book_content": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "pages",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::advancement::predicate::CollectionPredicate"
							},
							"typeArgs": [
								{
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::server::util::Filterable"
									},
									"typeArgs": [
										{
											"kind": "string"
										}
									]
								}
							]
						},
						"optional": true
					}
				]
			},
			"written_book_content": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "pages",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::advancement::predicate::CollectionPredicate"
							},
							"typeArgs": [
								{
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::server::util::Filterable"
									},
									"typeArgs": [
										{
											"kind": "reference",
											"path": "::java::server::util::text::Text"
										}
									]
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "author",
						"type": {
							"kind": "string"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "title",
						"type": {
							"kind": "string"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "generation",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::util::MinMaxBounds"
							},
							"typeArgs": [
								{
									"kind": "int"
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "resolved",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			}
		},
		"minecraft:jigsaw_max_distance_from_center": {
			"%none": {
				"kind": "int",
				"valueRange": {
					"kind": 0,
					"min": 1,
					"max": 128
				}
			},
			"%unknown": {
				"kind": "int",
				"valueRange": {
					"kind": 0,
					"min": 1,
					"max": 128
				}
			},
			"beard_box": {
				"kind": "int",
				"valueRange": {
					"kind": 0,
					"min": 1,
					"max": 116
				}
			},
			"beard_thin": {
				"kind": "int",
				"valueRange": {
					"kind": 0,
					"min": 1,
					"max": 116
				}
			},
			"bury": {
				"kind": "int",
				"valueRange": {
					"kind": 0,
					"min": 1,
					"max": 116
				}
			}
		},
		"minecraft:level_based_value": {
			"clamped": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "value",
						"type": {
							"kind": "reference",
							"path": "::java::data::enchantment::LevelBasedValue"
						}
					},
					{
						"kind": "pair",
						"key": "min",
						"type": {
							"kind": "float"
						}
					},
					{
						"kind": "pair",
						"key": "max",
						"type": {
							"kind": "float"
						}
					}
				]
			},
			"fraction": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "numerator",
						"type": {
							"kind": "reference",
							"path": "::java::data::enchantment::LevelBasedValue"
						}
					},
					{
						"kind": "pair",
						"key": "denominator",
						"type": {
							"kind": "reference",
							"path": "::java::data::enchantment::LevelBasedValue"
						}
					}
				]
			},
			"levels_squared": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Added to the exponent; `0.0` for squared, `1.0` for cubed, `.5` for square root, `-4` for negpow(2), etc.\n",
						"key": "added",
						"type": {
							"kind": "float"
						}
					}
				]
			},
			"linear": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Base cost at level 1.\n",
						"key": "base",
						"type": {
							"kind": "float"
						}
					},
					{
						"kind": "pair",
						"desc": "Cost increase per level above 1.\n",
						"key": "per_level_above_first",
						"type": {
							"kind": "float"
						}
					}
				]
			},
			"lookup": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Indexed by `level - 1` to apply, if present\n",
						"key": "values",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::enchantment::LevelBasedValue"
							},
							"lengthRange": {
								"kind": 0,
								"min": 1
							}
						}
					},
					{
						"kind": "pair",
						"desc": "Applied if the level is greater than the size of `values`.\n",
						"key": "fallback",
						"type": {
							"kind": "reference",
							"path": "::java::data::enchantment::LevelBasedValue"
						}
					}
				]
			}
		},
		"minecraft:list_operation": {
			"append": {
				"kind": "struct",
				"fields": []
			},
			"insert": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "The offset in the list to insert into. Defaults to 0.\n",
						"key": "offset",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0
							}
						},
						"optional": true
					}
				]
			},
			"replace_all": {
				"kind": "struct",
				"fields": []
			},
			"replace_section": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "The offset of the section to replace. Defaults to 0.\n",
						"key": "offset",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "The size of the section to replace. Defaults to size of the new list.\n",
						"key": "size",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0
							}
						},
						"optional": true
					}
				]
			}
		},
		"minecraft:llama_strength": {
			"1": {
				"kind": "union",
				"members": [
					{
						"kind": "list",
						"item": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::server::util::inventory::SlottedItem"
							},
							"typeArgs": [
								{
									"kind": "byte",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 2
									}
								}
							]
						},
						"lengthRange": {
							"kind": 0,
							"min": 0,
							"max": 3
						}
					}
				]
			},
			"2": {
				"kind": "union",
				"members": [
					{
						"kind": "list",
						"item": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::server::util::inventory::SlottedItem"
							},
							"typeArgs": [
								{
									"kind": "byte",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 5
									}
								}
							]
						},
						"lengthRange": {
							"kind": 0,
							"min": 0,
							"max": 6
						}
					}
				]
			},
			"3": {
				"kind": "union",
				"members": [
					{
						"kind": "list",
						"item": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::server::util::inventory::SlottedItem"
							},
							"typeArgs": [
								{
									"kind": "byte",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 8
									}
								}
							]
						},
						"lengthRange": {
							"kind": 0,
							"min": 0,
							"max": 9
						}
					}
				]
			},
			"4": {
				"kind": "union",
				"members": [
					{
						"kind": "list",
						"item": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::server::util::inventory::SlottedItem"
							},
							"typeArgs": [
								{
									"kind": "byte",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 11
									}
								}
							]
						},
						"lengthRange": {
							"kind": 0,
							"min": 0,
							"max": 12
						}
					}
				]
			},
			"5": {
				"kind": "union",
				"members": [
					{
						"kind": "list",
						"item": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::server::util::inventory::SlottedItem"
							},
							"typeArgs": [
								{
									"kind": "byte",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 14
									}
								}
							]
						},
						"lengthRange": {
							"kind": 0,
							"min": 0,
							"max": 15
						}
					}
				]
			},
			"%none": {
				"kind": "union",
				"members": [
					{
						"kind": "list",
						"item": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::server::util::inventory::SlottedItem"
							},
							"typeArgs": [
								{
									"kind": "byte",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 14
									}
								}
							]
						},
						"lengthRange": {
							"kind": 0,
							"min": 0,
							"max": 15
						}
					}
				]
			}
		},
		"minecraft:location_based_effect": {
			"all_of": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "effects",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::enchantment::LocationBasedEffect"
							},
							"lengthRange": {
								"kind": 0,
								"min": 1
							}
						}
					}
				]
			},
			"apply_mob_effect": {
				"kind": "reference",
				"path": "::java::data::enchantment::ApplyMobEffectEntityEffect"
			},
			"attribute": {
				"kind": "reference",
				"path": "::java::data::enchantment::AttributeEffect"
			},
			"change_item_damage": {
				"kind": "reference",
				"path": "::java::data::enchantment::ChangeItemDamageEffect",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"damage_entity": {
				"kind": "reference",
				"path": "::java::data::enchantment::DamageEntityEffect"
			},
			"damage_item": {
				"kind": "reference",
				"path": "::java::data::enchantment::DamageItemEffect",
				"attributes": [
					{
						"name": "until",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"explode": {
				"kind": "reference",
				"path": "::java::data::enchantment::ExplodeEntityEffect"
			},
			"ignite": {
				"kind": "reference",
				"path": "::java::data::enchantment::IgniteEntityEffect"
			},
			"play_sound": {
				"kind": "reference",
				"path": "::java::data::enchantment::PlaySoundEntityEffect"
			},
			"replace_block": {
				"kind": "reference",
				"path": "::java::data::enchantment::ReplaceBlockEntityEffect"
			},
			"replace_disk": {
				"kind": "reference",
				"path": "::java::data::enchantment::ReplaceDiskEntityEffect"
			},
			"run_function": {
				"kind": "reference",
				"path": "::java::data::enchantment::RunFunctionEntityEffect"
			},
			"set_block_properties": {
				"kind": "reference",
				"path": "::java::data::enchantment::SetBlockPropertiesEntityEffect"
			},
			"spawn_particles": {
				"kind": "reference",
				"path": "::java::data::enchantment::SpawnParticlesEntityEffect"
			}
		},
		"minecraft:loot_condition": {
			"all_of": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Passes when all of these conditions pass.\n",
						"key": "terms",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::loot::LootCondition"
							}
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.20"
							}
						}
					}
				]
			},
			"alternative": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "terms",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::loot::LootCondition"
							}
						}
					}
				],
				"attributes": [
					{
						"name": "until",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.20"
							}
						}
					}
				]
			},
			"any_of": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Passes when any of these conditions pass.\n",
						"key": "terms",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::loot::LootCondition"
							}
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.20"
							}
						}
					}
				]
			},
			"block_state_property": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "block",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "block"
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "properties",
						"type": {
							"kind": "dispatcher",
							"parallelIndices": [
								{
									"kind": "dynamic",
									"accessor": [
										"block"
									]
								}
							],
							"registry": "mcdoc:block_states"
						},
						"optional": true
					}
				]
			},
			"damage_source_properties": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "predicate",
						"type": {
							"kind": "reference",
							"path": "::java::data::advancement::predicate::DamageSourcePredicate"
						}
					}
				]
			},
			"enchantment_active_check": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "active",
						"type": {
							"kind": "boolean"
						}
					}
				]
			},
			"entity_properties": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "entity",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::EntityTarget"
						}
					},
					{
						"kind": "pair",
						"key": "predicate",
						"type": {
							"kind": "reference",
							"path": "::java::data::advancement::predicate::EntityPredicate"
						}
					}
				]
			},
			"entity_scores": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "entity",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::EntityTarget"
						}
					},
					{
						"kind": "pair",
						"key": "scores",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": {
										"kind": "string",
										"attributes": [
											{
												"name": "objective"
											}
										]
									},
									"type": {
										"kind": "union",
										"members": [
											{
												"kind": "reference",
												"path": "::java::data::util::RandomValueBounds",
												"attributes": [
													{
														"name": "until",
														"value": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "1.17"
															}
														}
													}
												]
											},
											{
												"kind": "reference",
												"path": "::java::data::util::IntRange",
												"attributes": [
													{
														"name": "since",
														"value": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "1.17"
															}
														}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				]
			},
			"inverted": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "term",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::LootCondition"
						}
					}
				]
			},
			"killed_by_player": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "inverse",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"location_check": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "offsetX",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "offsetY",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "offsetZ",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "predicate",
						"type": {
							"kind": "reference",
							"path": "::java::data::advancement::predicate::LocationPredicate"
						}
					}
				]
			},
			"match_tool": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "predicate",
						"type": {
							"kind": "reference",
							"path": "::java::data::advancement::predicate::ItemPredicate"
						}
					}
				]
			},
			"random_chance": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "chance",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "float",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 1
									},
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.21"
												}
											}
										}
									]
								},
								{
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::util::NumberProvider"
									},
									"typeArgs": [
										{
											"kind": "float"
										}
									],
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.21"
												}
											}
										}
									]
								}
							]
						}
					}
				]
			},
			"random_chance_with_enchanted_bonus": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "unenchanted_chance",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					},
					{
						"kind": "pair",
						"key": "enchanted_chance",
						"type": {
							"kind": "reference",
							"path": "::java::data::enchantment::LevelBasedValue"
						}
					},
					{
						"kind": "pair",
						"key": "enchantment",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "enchantment"
										}
									}
								}
							]
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21"
							}
						}
					}
				]
			},
			"random_chance_with_looting": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "chance",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					},
					{
						"kind": "pair",
						"desc": "Looting adjustment to the base success rate. Formula is `chance + (looting_level * looting_multiplier)` .\n",
						"key": "looting_multiplier",
						"type": {
							"kind": "float"
						}
					}
				],
				"attributes": [
					{
						"name": "until",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21"
							}
						}
					}
				]
			},
			"reference": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "A cyclic reference causes a parsing failure.\n",
						"key": "name",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "predicate"
										}
									}
								}
							]
						}
					}
				]
			},
			"table_bonus": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "enchantment",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "enchantment"
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"desc": "Probabilities for each enchantment level\n",
						"key": "chances",
						"type": {
							"kind": "list",
							"item": {
								"kind": "float",
								"valueRange": {
									"kind": 0,
									"min": 0,
									"max": 1
								}
							}
						}
					}
				]
			},
			"time_check": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Check the current game tick.\n",
						"key": "value",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "reference",
									"path": "::java::data::util::RandomValueBounds",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								},
								{
									"kind": "reference",
									"path": "::java::data::util::IntRange",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "pair",
						"desc": "Game tick supplied to `value` check gets modulo-divided by this.\n\nFor example, if set to 24000, `value` operates on a time period of days.\n",
						"key": "period",
						"type": {
							"kind": "long"
						},
						"optional": true
					}
				]
			},
			"value_check": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "value",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::util::NumberProvider"
							},
							"typeArgs": [
								{
									"kind": "int"
								}
							]
						}
					},
					{
						"kind": "pair",
						"desc": "Passes when `value` is within this range.\n",
						"key": "range",
						"type": {
							"kind": "reference",
							"path": "::java::data::util::IntRange"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"weather_check": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "raining",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "thundering",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			}
		},
		"minecraft:loot_function": {
			"apply_bonus": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "enchantment",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "enchantment"
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "formula",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "apply_bonus_formula"
										}
									}
								}
							]
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "dispatcher",
							"parallelIndices": [
								{
									"kind": "dynamic",
									"accessor": [
										"formula"
									]
								}
							],
							"registry": "minecraft:apply_bonus_formula"
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				]
			},
			"copy_components": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "source",
						"type": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "block_entity"
							}
						}
					},
					{
						"kind": "pair",
						"desc": "If omitted, all components present are included\n",
						"key": "include",
						"type": {
							"kind": "list",
							"item": {
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "data_component_type"
											}
										}
									}
								]
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Defaults to none.\n",
						"key": "exclude",
						"type": {
							"kind": "list",
							"item": {
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "data_component_type"
											}
										}
									}
								]
							}
						},
						"optional": true
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.20.5"
							}
						}
					}
				]
			},
			"copy_custom_data": {
				"kind": "reference",
				"path": "::java::data::loot::function::CopyNbt",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.20.5"
							}
						}
					}
				]
			},
			"copy_name": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "source",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::CopyNameSource"
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				]
			},
			"copy_nbt": {
				"kind": "reference",
				"path": "::java::data::loot::function::CopyNbt",
				"attributes": [
					{
						"name": "until",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.20.5"
							}
						}
					}
				]
			},
			"copy_state": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "block",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "block"
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "properties",
						"type": {
							"kind": "list",
							"item": {
								"kind": "dispatcher",
								"parallelIndices": [
									{
										"kind": "dynamic",
										"accessor": [
											{
												"keyword": "parent"
											},
											"block"
										]
									}
								],
								"registry": "mcdoc:block_state_keys"
							}
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				]
			},
			"enchant_randomly": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21"
									}
								}
							}
						],
						"desc": "If omitted, all enchantments applicable to the item are possible\n",
						"key": "enchantments",
						"type": {
							"kind": "list",
							"item": {
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "enchantment"
											}
										}
									}
								]
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "The allowed enchantments. If omitted, all enchantments applicable to the item are possible.\n",
						"key": "options",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "enchantment"
														}
													},
													"tags": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "allowed"
														}
													}
												}
											}
										}
									]
								},
								{
									"kind": "list",
									"item": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "enchantment"
													}
												}
											}
										]
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": " Whether to only enchant with item-compatible enchantments. Defaults to `true`.\n\n\n\n Note: Books are considered compatible with all Enchantments.\n",
						"key": "only_compatible",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				]
			},
			"enchant_with_levels": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "The levels to enchant this item with.\n",
						"key": "levels",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "reference",
									"path": "::java::data::util::RandomIntGenerator",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								},
								{
									"kind": "reference",
									"path": "::java::data::util::NumberProvider",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21"
									}
								}
							}
						],
						"desc": "The allowed enchantments. If omitted, all enchantments applicable to the item are possible.\n",
						"key": "options",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "enchantment"
														}
													},
													"tags": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "allowed"
														}
													}
												}
											}
										}
									]
								},
								{
									"kind": "list",
									"item": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "enchantment"
													}
												}
											}
										]
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21"
									}
								}
							}
						],
						"desc": "Whether treasure enchantments are allowed on this item.\n",
						"key": "treasure",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				]
			},
			"enchanted_count_increase": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::EnchantedCountBase"
						}
					},
					{
						"kind": "pair",
						"desc": "Enchantment that increases yields.\n",
						"key": "enchantment",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "enchantment"
										}
									}
								}
							]
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21"
							}
						}
					}
				]
			},
			"exploration_map": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Generated structure to locate. Accepts any of the structure types used by the `/locate` command. Defaults to buried treasure.\n",
						"key": "destination",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.19"
												}
											}
										}
									]
								},
								{
									"kind": "string",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.19"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "worldgen/structure"
														}
													},
													"tags": {
														"kind": "reference",
														"path": "::java::data::loot::function::implicit"
													}
												}
											}
										}
									]
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "The icon used to mark the destination on the map. Accepts any of the map icon text IDs (case insensitive).\n\nIf `mansion` or `monument` is used, the color of the lines on the item texture changes to match the corresponding explorer map.\n",
						"key": "decoration",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "reference",
									"path": "::java::data::loot::function::MapDecoration",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.5"
												}
											}
										}
									]
								},
								{
									"kind": "string",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.5"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "map_decoration_type"
												}
											}
										}
									]
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Defaults to 2.\n",
						"key": "zoom",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "The size, in chunks, of the area to search for structures.\n\nThe area checked is square, not circular.\n\nRadius `0` causes only the current chunk to be searched, radius `1` causes the current chunk and eight adjacent chunks to be searched, and so on.\n\nDefaults to `50`.\n",
						"key": "search_radius",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Whether to not search in chunks that have already been generated. Defaults to `true`.\n",
						"key": "skip_existing_chunks",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				]
			},
			"explosion_decay": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				]
			},
			"fill_player_head": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "`this` to use the entity that died or the player that gained the advancement, opened the container, or broke the block.\n",
						"key": "entity",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::EntityTarget"
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				]
			},
			"filtered": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Item predicate to select items to modify.\n",
						"key": "item_filter",
						"type": {
							"kind": "reference",
							"path": "::java::data::advancement::predicate::ItemPredicate"
						}
					},
					{
						"kind": "pair",
						"desc": "Loot function to apply to the selected items.\n",
						"key": "modifier",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "reference",
									"path": "::java::data::loot::LootFunction"
								},
								{
									"kind": "list",
									"item": {
										"kind": "reference",
										"path": "::java::data::loot::LootFunction"
									}
								}
							]
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.20.5"
							}
						}
					}
				]
			},
			"furnace_smelt": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				]
			},
			"limit_count": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Limits the count of the item to a range.\n",
						"key": "limit",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "reference",
									"path": "::java::data::util::IntLimiter",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								},
								{
									"kind": "reference",
									"path": "::java::data::util::IntRange",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				]
			},
			"looting_enchant": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::EnchantedCountBase"
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				],
				"attributes": [
					{
						"name": "until",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21"
							}
						}
					}
				]
			},
			"modify_contents": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Describes target component's items to modify.\n",
						"key": "component",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::ContainerComponents",
							"attributes": [
								{
									"name": "id"
								}
							]
						}
					},
					{
						"kind": "pair",
						"desc": "Applied to every item inside container.\n",
						"key": "modifier",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "reference",
									"path": "::java::data::loot::LootFunction"
								},
								{
									"kind": "list",
									"item": {
										"kind": "reference",
										"path": "::java::data::loot::LootFunction"
									}
								}
							]
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				]
			},
			"reference": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Item modifier to reference.\n",
						"key": "name",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "item_modifier"
										}
									}
								}
							]
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.20"
							}
						}
					}
				]
			},
			"sequence": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "List of functions to apply to this item.\n",
						"key": "functions",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::loot::LootFunction"
							}
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.20.2"
							}
						}
					}
				]
			},
			"set_attributes": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "List of attribute modifiers to apply to this item.\n",
						"key": "modifiers",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::loot::function::AttributeModifier"
							}
						}
					},
					{
						"kind": "pair",
						"desc": "Whether to replace existing attributes (otherwise append to existing). Defaults to `true`.\n",
						"key": "replace",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				]
			},
			"set_banner_pattern": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "List of banner pattern layers.\n",
						"key": "patterns",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::loot::function::BannerPatternLayer"
							}
						}
					},
					{
						"kind": "pair",
						"desc": "Whether to add to the banner pattern list.\n",
						"key": "append",
						"type": {
							"kind": "boolean"
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"set_book_cover": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "If omitted, the original title is kept (or an empty string is used if there was no component)\n",
						"key": "title",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::server::util::Filterable"
							},
							"typeArgs": [
								{
									"kind": "string",
									"lengthRange": {
										"kind": 0,
										"min": 0,
										"max": 32
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "If omitted, the original author is kept (or an empty string is used if there was no component)\n",
						"key": "author",
						"type": {
							"kind": "string"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "If omitted, the original generation is kept (or 0 is used if there was no component)\n",
						"key": "generation",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 3
							}
						},
						"optional": true
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.20.5"
							}
						}
					}
				]
			},
			"set_components": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "components",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::server::world::item::DataComponentPatch"
							},
							"typeArgs": [
								{
									"kind": "union",
									"members": []
								}
							]
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.20.5"
							}
						}
					}
				]
			},
			"set_contents": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.18"
									}
								}
							},
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						],
						"key": "type",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "block_entity_type"
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						],
						"desc": "Describes target component to be filled with items.\n",
						"key": "component",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::ContainerComponents",
							"attributes": [
								{
									"name": "id"
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "entries",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::loot::LootPoolEntry"
							}
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				]
			},
			"set_count": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "count",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "reference",
									"path": "::java::data::util::RandomIntGenerator",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								},
								{
									"kind": "reference",
									"path": "::java::data::util::NumberProvider",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.17"
									}
								}
							}
						],
						"desc": "Whether to add to the existing count. Defaults to `false`.\n",
						"key": "add",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				]
			},
			"set_custom_data": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "tag",
						"type": {
							"kind": "reference",
							"path": "::java::server::world::item::CustomData"
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.20.5"
							}
						}
					}
				]
			},
			"set_custom_model_data": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.4"
									}
								}
							}
						],
						"desc": "Tag that describes the custom model an item will take.\n\nUsed by the `custom_model_data` model overrides predicate.\n\nHas certain restrictions due to float conversion.\n",
						"key": "value",
						"type": {
							"kind": "reference",
							"path": "::java::data::util::NumberProvider"
						}
					},
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.4"
									}
								}
							}
						],
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "floats",
									"type": {
										"kind": "struct",
										"fields": [
											{
												"kind": "pair",
												"key": "values",
												"type": {
													"kind": "list",
													"item": {
														"kind": "reference",
														"path": "::java::data::util::NumberProvider"
													}
												}
											},
											{
												"kind": "spread",
												"type": {
													"kind": "reference",
													"path": "::java::data::loot::function::ListOperation"
												}
											}
										]
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "flags",
									"type": {
										"kind": "struct",
										"fields": [
											{
												"kind": "pair",
												"key": "values",
												"type": {
													"kind": "list",
													"item": {
														"kind": "boolean"
													}
												}
											},
											{
												"kind": "spread",
												"type": {
													"kind": "reference",
													"path": "::java::data::loot::function::ListOperation"
												}
											}
										]
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "strings",
									"type": {
										"kind": "struct",
										"fields": [
											{
												"kind": "pair",
												"key": "values",
												"type": {
													"kind": "list",
													"item": {
														"kind": "string"
													}
												}
											},
											{
												"kind": "spread",
												"type": {
													"kind": "reference",
													"path": "::java::data::loot::function::ListOperation"
												}
											}
										]
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "colors",
									"type": {
										"kind": "struct",
										"fields": [
											{
												"kind": "pair",
												"key": "values",
												"type": {
													"kind": "list",
													"item": {
														"kind": "union",
														"members": [
															{
																"kind": "reference",
																"path": "::java::data::util::NumberProvider"
															},
															{
																"kind": "reference",
																"path": "::java::server::util::color::RGB"
															}
														]
													}
												}
											},
											{
												"kind": "spread",
												"type": {
													"kind": "reference",
													"path": "::java::data::loot::function::ListOperation"
												}
											}
										]
									},
									"optional": true
								}
							]
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.20.5"
							}
						}
					}
				]
			},
			"set_damage": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Decimal percentage. Can be negative when used in combination with `add`.\n",
						"key": "damage",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "reference",
									"path": "::java::data::util::RandomValueBounds",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								},
								{
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::util::NumberProvider"
									},
									"typeArgs": [
										{
											"kind": "float",
											"valueRange": {
												"kind": 0,
												"min": -1,
												"max": 1
											}
										}
									],
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.17"
									}
								}
							}
						],
						"desc": "Whether to add to the existing damage of the item. Defaults to `false`.\n",
						"key": "add",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				]
			},
			"set_enchantments": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "A map of enchantments to levels. Setting an enchantment to `0` removes it from the item.\n",
						"key": "enchantments",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "enchantment"
													}
												}
											}
										]
									},
									"type": {
										"kind": "concrete",
										"child": {
											"kind": "reference",
											"path": "::java::data::util::NumberProvider"
										},
										"typeArgs": [
											{
												"kind": "int",
												"valueRange": {
													"kind": 0,
													"min": 0
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"desc": "Whether to add to the level of each enchantment. Defaults to `false`.\n",
						"key": "add",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"set_firework_explosion": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "If omitted, the original shape is kept (or `small_ball` is used if there was no component).\n",
						"key": "shape",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::firework::FireworkShape"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "If omitted, the original colors are kept (or `[]` is used if there was no component).\n\nCalculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.\n",
						"key": "colors",
						"type": {
							"kind": "int_array",
							"attributes": [
								{
									"name": "color",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "composite_rgb"
										}
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "If omitted, the original fade colors are kept (or `[]` is used if there was no component).\n\nCalculated as `RED << 16 | GREEN << 8 | BLUE`. Each of these fields must be between 0 and 255, inclusive.\n",
						"key": "fade_colors",
						"type": {
							"kind": "int_array",
							"attributes": [
								{
									"name": "color",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "composite_rgb"
										}
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "If omitted, the original `has_trail` value is kept (or `false` is used if there was no component).\n",
						"key": "trail",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "If omitted, the original `has_twinkle` value is kept (or `false` is used if there was no component).\n",
						"key": "twinkle",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.20.5"
							}
						}
					}
				]
			},
			"set_fireworks": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "If omitted, the flight duration of the item is left untouched - or set to 0 if the component did not exist before.\n",
						"key": "flight_duration",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 255
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "explosions",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "values",
									"type": {
										"kind": "list",
										"item": {
											"kind": "dispatcher",
											"parallelIndices": [
												{
													"kind": "static",
													"value": "firework_explosion"
												}
											],
											"registry": "minecraft:data_component"
										}
									}
								},
								{
									"kind": "spread",
									"type": {
										"kind": "reference",
										"path": "::java::data::loot::function::ListOperation"
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.20.5"
							}
						}
					}
				]
			},
			"set_instrument": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Sets the instrument tag for a goat horn.\n",
						"key": "options",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "tree",
										"values": {
											"registry": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "instrument"
												}
											},
											"tags": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "required"
												}
											}
										}
									}
								}
							]
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19"
							}
						}
					}
				]
			},
			"set_item": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "item",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.21.2"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "item"
												}
											}
										}
									]
								},
								{
									"kind": "string",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.21.2"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "item"
														}
													},
													"exclude": {
														"kind": "tree",
														"values": {
															"0": {
																"kind": "literal",
																"value": {
																	"kind": "string",
																	"value": "air"
																}
															}
														}
													}
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				]
			},
			"set_loot_table": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.18"
									}
								}
							}
						],
						"desc": "The block entity type of the container.\n",
						"key": "type",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "block_entity_type"
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"desc": "The loot table to set to the container block item.\n",
						"key": "name",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "loot_table"
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"desc": "The container seed to use. Defaults to a random seed.\n",
						"key": "seed",
						"type": {
							"kind": "long",
							"attributes": [
								{
									"name": "random"
								}
							]
						},
						"optional": true
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				]
			},
			"set_lore": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "The entity used to resolve the text components.\n",
						"key": "entity",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::EntityTarget"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "lore",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::util::text::Text"
							}
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						],
						"desc": "Whether to replace the existing lore list. Defaults to true.\n",
						"key": "replace",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						],
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::ListOperation"
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				]
			},
			"set_name": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Specifies the entity to act as the target `@s` in the JSON text component.\n",
						"key": "entity",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::EntityTarget"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "name",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::text::Text"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						],
						"desc": "Which name component to set. Defaults to `custom_name`.\n",
						"key": "target",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::SetNameTarget"
						},
						"optional": true
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				]
			},
			"set_nbt": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "tag",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "nbt",
									"value": {
										"kind": "dispatcher",
										"parallelIndices": [
											{
												"kind": "static",
												"value": "%fallback"
											}
										],
										"registry": "minecraft:item"
									}
								}
							]
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				],
				"attributes": [
					{
						"name": "until",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.20.5"
							}
						}
					}
				]
			},
			"set_ominous_bottle_amplifier": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "amplifier",
						"type": {
							"kind": "reference",
							"path": "::java::data::util::NumberProvider"
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.20.5"
							}
						}
					}
				]
			},
			"set_potion": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "The potion identifier.\n",
						"key": "id",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "potion"
										}
									}
								}
							]
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.18"
							}
						}
					}
				]
			},
			"set_stew_effect": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Sets the status effects for suspicious stew.\n",
						"key": "effects",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::loot::function::StewEffect"
							}
						},
						"optional": true
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				]
			},
			"set_writable_book_pages": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Sets the pages of a book and quill.\n",
						"key": "pages",
						"type": {
							"kind": "list",
							"item": {
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::server::util::Filterable"
								},
								"typeArgs": [
									{
										"kind": "string"
									}
								]
							}
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::ListOperation"
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.20.5"
							}
						}
					}
				]
			},
			"set_written_book_pages": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Sets the pages of a written book.\n",
						"key": "pages",
						"type": {
							"kind": "list",
							"item": {
								"kind": "concrete",
								"child": {
									"kind": "reference",
									"path": "::java::server::util::Filterable"
								},
								"typeArgs": [
									{
										"kind": "reference",
										"path": "::java::server::util::text::Text"
									}
								]
							}
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::ListOperation"
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.20.5"
							}
						}
					}
				]
			},
			"toggle_tooltips": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Toggles which tooltips are shown.\n",
						"key": "toggles",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": {
										"kind": "reference",
										"path": "::java::data::loot::function::ToggleableDataComponent",
										"attributes": [
											{
												"name": "id"
											}
										]
									},
									"type": {
										"kind": "boolean"
									}
								}
							]
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::Conditions"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.20.5"
							}
						}
					}
				]
			}
		},
		"minecraft:loot_pool_entry": {
			"alternatives": {
				"kind": "reference",
				"path": "::java::data::loot::CompositePoolEntry"
			},
			"dynamic": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "name",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::DynamicDrops",
							"attributes": [
								{
									"name": "id"
								}
							]
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::SingletonPoolEntry"
						}
					}
				]
			},
			"empty": {
				"kind": "reference",
				"path": "::java::data::loot::SingletonPoolEntry"
			},
			"group": {
				"kind": "reference",
				"path": "::java::data::loot::CompositePoolEntry"
			},
			"item": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "name",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.21.2"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "item"
												}
											}
										}
									]
								},
								{
									"kind": "string",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.21.2"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "item"
														}
													},
													"exclude": {
														"kind": "tree",
														"values": {
															"0": {
																"kind": "literal",
																"value": {
																	"kind": "string",
																	"value": "air"
																}
															}
														}
													}
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::SingletonPoolEntry"
						}
					}
				]
			},
			"loot_table": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						],
						"key": "name",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "loot_table"
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						],
						"key": "value",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "loot_table"
												}
											}
										}
									]
								},
								{
									"kind": "reference",
									"path": "::java::data::loot::LootTable"
								}
							]
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::SingletonPoolEntry"
						}
					}
				]
			},
			"sequence": {
				"kind": "reference",
				"path": "::java::data::loot::CompositePoolEntry"
			},
			"tag": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "name",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "tree",
										"values": {
											"registry": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "item"
												}
											},
											"tags": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "implicit"
												}
											}
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"desc": "If `true`, drops a random item from the tag. If `false`, drops all items in the tag.\n",
						"key": "expand",
						"type": {
							"kind": "boolean"
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::SingletonPoolEntry"
						}
					}
				]
			}
		},
		"minecraft:memory_module": {
			"%unknown": {
				"kind": "union",
				"members": []
			},
			"admiring_disabled": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether the piglin cannot admire an item.\n\nSet when converting, when attacked, or when admiring an item.\n",
						"key": "value",
						"type": {
							"kind": "boolean"
						}
					}
				]
			},
			"admiring_item": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether the piglin is currently admiring an item.\n",
						"key": "value",
						"type": {
							"kind": "boolean"
						}
					}
				]
			},
			"angry_at": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "The target of the piglin or piglin brute.\n",
						"key": "value",
						"type": {
							"kind": "int_array",
							"lengthRange": {
								"kind": 0,
								"min": 4,
								"max": 4
							},
							"attributes": [
								{
									"name": "uuid"
								}
							]
						}
					}
				]
			},
			"breeze_jump_cooldown": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "If present, the breeze will not long jump or slide. Set after performing a long jump.\n",
						"key": "value",
						"type": {
							"kind": "struct",
							"fields": []
						}
					}
				]
			},
			"breeze_jump_inhaling": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "If present, the breeze will not long jump or shoot a wind charge when stuck.\n",
						"key": "value",
						"type": {
							"kind": "struct",
							"fields": []
						}
					}
				]
			},
			"breeze_jump_target": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "The block position that the breeze is jumping towards.\n",
						"key": "value",
						"type": {
							"kind": "int_array",
							"lengthRange": {
								"kind": 0,
								"min": 3,
								"max": 3
							}
						}
					}
				]
			},
			"breeze_leaving_water": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "If present, the breeze is in water.\n",
						"key": "value",
						"type": {
							"kind": "struct",
							"fields": []
						}
					}
				]
			},
			"breeze_shoot": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "If present, the breeze is able to shoot a wind charge, and will not long jump or slide.\n",
						"key": "value",
						"type": {
							"kind": "struct",
							"fields": []
						}
					}
				]
			},
			"breeze_shoot_charging": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "If present, the breeze will not shoot a wind charge. Set when starting to shoot.\n",
						"key": "value",
						"type": {
							"kind": "struct",
							"fields": []
						}
					}
				]
			},
			"breeze_shoot_cooldown": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "If present, the breeze will not shoot a wind charge. Set after shooting\n",
						"key": "value",
						"type": {
							"kind": "struct",
							"fields": []
						}
					}
				]
			},
			"breeze_shoot_recover": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "If present, the breeze will not shoot a wind charge.\n",
						"key": "value",
						"type": {
							"kind": "struct",
							"fields": []
						}
					}
				]
			},
			"danger_detected_recently": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether the armadillo has detected danger recently.\n",
						"key": "value",
						"type": {
							"kind": "boolean"
						}
					}
				]
			},
			"dig_cooldown": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "If present, the warden will not dig down.\n",
						"key": "value",
						"type": {
							"kind": "struct",
							"fields": []
						}
					}
				]
			},
			"gaze_cooldown_ticks": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "Ticks before the armadillo or camel can randomly look around again.\n",
						"key": "value",
						"type": {
							"kind": "int"
						}
					}
				]
			},
			"golem_detected_recently": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether the villager has detected an iron golem recently.\n",
						"key": "value",
						"type": {
							"kind": "boolean"
						}
					}
				]
			},
			"has_hunting_cooldown": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether the axolotl is in a hunting cooldown.\n",
						"key": "value",
						"type": {
							"kind": "boolean"
						}
					}
				]
			},
			"home": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "Position of the villager's home.\n",
						"key": "value",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::global_pos::GlobalPos"
						}
					}
				]
			},
			"hunted_recently": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether the piglin just hunted recently.\n\nSet after hunting or spawning in a bastion remnant.\n",
						"key": "value",
						"type": {
							"kind": "boolean"
						}
					}
				]
			},
			"is_emerging": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether the warden is currently emerging from the ground.\n",
						"key": "value",
						"type": {
							"kind": "struct",
							"fields": []
						}
					}
				]
			},
			"is_in_water": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether the frog is currently in water.\n",
						"key": "value",
						"type": {
							"kind": "struct",
							"fields": []
						}
					}
				]
			},
			"is_panicking": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether the mob is currently panicking.\n",
						"key": "value",
						"type": {
							"kind": "boolean"
						}
					}
				]
			},
			"is_pregnant": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether the frog is pregnant.\n",
						"key": "value",
						"type": {
							"kind": "struct",
							"fields": []
						}
					}
				]
			},
			"is_sniffing": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether the warden or sniffer is currently sniffing.\n",
						"key": "value",
						"type": {
							"kind": "struct",
							"fields": []
						}
					}
				]
			},
			"is_tempted": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether the mob is currently tempted by a player.\n",
						"key": "value",
						"type": {
							"kind": "boolean"
						}
					}
				]
			},
			"item_pickup_cooldown_ticks": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "Ticks before the allay goes to pick up an item again.\n",
						"key": "value",
						"type": {
							"kind": "int"
						}
					}
				]
			},
			"job_site": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "Position of the villager's job site.\n",
						"key": "value",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::global_pos::GlobalPos"
						}
					}
				]
			},
			"last_slept": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "The gametime tick that the villager last slept in a bed.\n",
						"key": "value",
						"type": {
							"kind": "long"
						}
					}
				]
			},
			"last_woken": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "The gametime tick that the villager last woke up from a bed.\n",
						"key": "value",
						"type": {
							"kind": "long"
						}
					}
				]
			},
			"last_worked_at_poi": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "The gametime tick that the villager last worked at their job site.\n",
						"key": "value",
						"type": {
							"kind": "long"
						}
					}
				]
			},
			"liked_noteblock": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "The position and dimension of the note block that the allay likes.\n",
						"key": "value",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::global_pos::GlobalPos"
						}
					}
				]
			},
			"liked_noteblock_cooldown_ticks": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "Ticks before the allay stops putting items at the liked note block. \n",
						"key": "value",
						"type": {
							"kind": "int"
						}
					}
				]
			},
			"liked_player": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "The UUID of the player entity that the allay likes.\n",
						"key": "value",
						"type": {
							"kind": "int_array",
							"lengthRange": {
								"kind": 0,
								"min": 4,
								"max": 4
							},
							"attributes": [
								{
									"name": "uuid"
								}
							]
						}
					}
				]
			},
			"long_jump_cooling_down": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "Ticks before the goat can long jump again.\n",
						"key": "value",
						"type": {
							"kind": "int"
						}
					}
				]
			},
			"meeting_point": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "Position of the villager's meeting point.\n",
						"key": "value",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::global_pos::GlobalPos"
						}
					}
				]
			},
			"play_dead_ticks": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "Ticks until the axolotl stops playing dead.\n",
						"key": "value",
						"type": {
							"kind": "int"
						}
					}
				]
			},
			"potential_job_site": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "Position of a potential job site of the villager.\n",
						"key": "value",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::global_pos::GlobalPos"
						}
					}
				]
			},
			"ram_cooldown_ticks": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "Ticks before the goat can ram again.\n",
						"key": "value",
						"type": {
							"kind": "int"
						}
					}
				]
			},
			"recent_projectile": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether the warden has recently noticed a projectile vibration.\n",
						"key": "value",
						"type": {
							"kind": "struct",
							"fields": []
						}
					}
				]
			},
			"roar_sound_cooldown": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "If present, the warden doesn't roar.\n",
						"key": "value",
						"type": {
							"kind": "struct",
							"fields": []
						}
					}
				]
			},
			"roar_sound_delay": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "If present, the warden doesn't roar.\n",
						"key": "value",
						"type": {
							"kind": "struct",
							"fields": []
						}
					}
				]
			},
			"sniff_cooldown": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "If present, the warden or sniffer will not sniff.\n",
						"key": "value",
						"type": {
							"kind": "struct",
							"fields": []
						}
					}
				]
			},
			"sniffer_explored_positions": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "Last 20 block positions that the sniffer has dug up. The sniffer will not dig in these positions.\n",
						"key": "value",
						"type": {
							"kind": "list",
							"item": {
								"kind": "int_array",
								"lengthRange": {
									"kind": 0,
									"min": 3,
									"max": 3
								}
							},
							"lengthRange": {
								"kind": 0,
								"max": 20
							}
						}
					}
				]
			},
			"sonic_boom_cooldown": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "If present, the warden will not use the sonic boom attack.\n",
						"key": "value",
						"type": {
							"kind": "struct",
							"fields": []
						}
					}
				]
			},
			"sonic_boom_sound_cooldown": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "If present, the warden's sonic boom animation will not spawn particles and play sounds.\n",
						"key": "value",
						"type": {
							"kind": "struct",
							"fields": []
						}
					}
				]
			},
			"sonic_boom_sound_delay": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "If present, will delay the warden's sonic boom animation.\n",
						"key": "value",
						"type": {
							"kind": "struct",
							"fields": []
						}
					}
				]
			},
			"temptation_cooldown_ticks": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "Ticks before the mob can be tempted again.\n",
						"key": "value",
						"type": {
							"kind": "int"
						}
					}
				]
			},
			"touch_cooldown": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "If present, the warden will not react to being pushed by another mob. Set to 20 when touched.\n",
						"key": "value",
						"type": {
							"kind": "struct",
							"fields": []
						}
					}
				]
			},
			"universal_anger": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether the piglin is being universally angered. Only used when the `universalAnger` gamerule is enabled.\n",
						"key": "value",
						"type": {
							"kind": "boolean"
						}
					}
				]
			},
			"vibration_cooldown": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::memory::ExpirableValue"
						}
					},
					{
						"kind": "pair",
						"desc": "If present, the warden will not react to vibrations. Set to 40 when receiving a vibration.\n",
						"key": "value",
						"type": {
							"kind": "struct",
							"fields": []
						}
					}
				]
			}
		},
		"minecraft:multi_noise_biome_source": {
			"%none": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16.2"
									}
								}
							},
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.18"
									}
								}
							}
						],
						"key": "temperature_noise",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::dimension::biome_source::NoiseParameters"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16.2"
									}
								}
							},
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.18"
									}
								}
							}
						],
						"key": "humidity_noise",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::dimension::biome_source::NoiseParameters"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16.2"
									}
								}
							},
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.18"
									}
								}
							}
						],
						"key": "altitude_noise",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::dimension::biome_source::NoiseParameters"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16.2"
									}
								}
							},
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.18"
									}
								}
							}
						],
						"key": "weirdness_noise",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::dimension::biome_source::NoiseParameters"
						}
					},
					{
						"kind": "pair",
						"key": "biomes",
						"type": {
							"kind": "list",
							"item": {
								"kind": "struct",
								"fields": [
									{
										"kind": "pair",
										"key": "biome",
										"type": {
											"kind": "string",
											"attributes": [
												{
													"name": "id",
													"value": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "worldgen/biome"
														}
													}
												}
											]
										}
									},
									{
										"kind": "pair",
										"key": "parameters",
										"type": {
											"kind": "reference",
											"path": "::java::data::worldgen::dimension::biome_source::ClimateParameters"
										}
									}
								]
							}
						}
					}
				]
			},
			"%unknown": {
				"kind": "struct",
				"fields": []
			}
		},
		"minecraft:nbt_provider": {
			"context": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "target",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::function::CopyNameSource"
						}
					}
				]
			},
			"storage": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "source",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "storage"
										}
									}
								}
							]
						}
					}
				]
			}
		},
		"minecraft:number_provider": {
			"%none": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "min",
						"type": {
							"kind": "reference",
							"path": "::java::data::util::NumberProvider"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "max",
						"type": {
							"kind": "reference",
							"path": "::java::data::util::NumberProvider"
						},
						"optional": true
					}
				]
			},
			"binomial": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "n",
						"type": {
							"kind": "reference",
							"path": "::java::data::util::NumberProvider"
						}
					},
					{
						"kind": "pair",
						"key": "p",
						"type": {
							"kind": "reference",
							"path": "::java::data::util::NumberProvider"
						}
					}
				]
			},
			"constant": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "value",
						"type": {
							"kind": "float"
						}
					}
				]
			},
			"enchantment_level": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "amount",
						"type": {
							"kind": "reference",
							"path": "::java::data::enchantment::LevelBasedValue"
						}
					}
				]
			},
			"score": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "target",
						"type": {
							"kind": "reference",
							"path": "::java::data::util::ScoreProvider"
						}
					},
					{
						"kind": "pair",
						"key": "score",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "objective"
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "scale",
						"type": {
							"kind": "float"
						},
						"optional": true
					}
				]
			},
			"storage": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "storage",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "storage"
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "path",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "nbt_path",
									"value": {
										"kind": "dispatcher",
										"parallelIndices": [
											{
												"kind": "dynamic",
												"accessor": [
													"source"
												]
											}
										],
										"registry": "minecraft:storage"
									}
								}
							]
						}
					}
				]
			},
			"uniform": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "min",
						"type": {
							"kind": "reference",
							"path": "::java::data::util::NumberProvider"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "max",
						"type": {
							"kind": "reference",
							"path": "::java::data::util::NumberProvider"
						},
						"optional": true
					}
				]
			}
		},
		"minecraft:numeric_item_property": {
			"%unknown": {
				"kind": "struct",
				"fields": []
			},
			"compass": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "target",
						"type": {
							"kind": "reference",
							"path": "::java::assets::item_definition::CompassTarget"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether to oscillate for some time around target before settling. Defaults to true.\n",
						"key": "wobble",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"count": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "If false, returns count clamped to `0..max_stack_size`.\n\nIf true, returns count divided by the `max_stack_size` component, clamped to `0..1`.\n\nDefaults to true.\n",
						"key": "normalize",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"custom_model_data": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "The index of the `floats` list in the `custom_model_data` component. Defaults to 0.\n",
						"key": "index",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0
							}
						},
						"optional": true
					}
				]
			},
			"damage": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "If false, returns value of damage, clamped to `0..max_damage`.\n\nIf true, returns value of damage divided by the `max_damage` component, clamped to `0..1`.\n\nDefaults to true.\n",
						"key": "normalize",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"time": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "source",
						"type": {
							"kind": "reference",
							"path": "::java::assets::item_definition::TimeSource"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether to oscillate for some time around target before settling. Defaults to true.\n",
						"key": "wobble",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"use_cycle": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "returns remaining item use ticks modulo `period`.\n\nDefaults to 1.\n",
						"key": "period",
						"type": {
							"kind": "float"
						},
						"optional": true
					}
				]
			},
			"use_duration": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "If true, returns remaining item use ticks.\n\nIf false, returns item use ticks so far.\n\nDefaults to false.\n",
						"key": "remaining",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			}
		},
		"minecraft:particle": {
			"%none": {
				"kind": "any"
			},
			"%unknown": {
				"kind": "struct",
				"fields": []
			},
			"block": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::server::util::particle::ParticleSettings"
				},
				"typeArgs": [
					{
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::server::util::block_state::BlockState",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::server::util::particle::BlockParticle",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							}
						]
					}
				]
			},
			"block_crumble": {
				"kind": "reference",
				"path": "::java::server::util::particle::BlockParticle",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"block_marker": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::server::util::particle::ParticleSettings"
				},
				"typeArgs": [
					{
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::server::util::block_state::BlockState",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::server::util::particle::BlockParticle",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							}
						]
					}
				]
			},
			"dust": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::server::util::particle::ParticleSettings"
				},
				"typeArgs": [
					{
						"kind": "union",
						"members": [
							{
								"kind": "struct",
								"fields": [
									{
										"kind": "pair",
										"key": "r",
										"type": {
											"kind": "float"
										}
									},
									{
										"kind": "pair",
										"key": "g",
										"type": {
											"kind": "float"
										}
									},
									{
										"kind": "pair",
										"key": "b",
										"type": {
											"kind": "float"
										}
									},
									{
										"kind": "pair",
										"key": "scale",
										"type": {
											"kind": "float",
											"valueRange": {
												"kind": 0,
												"min": 0.01,
												"max": 4
											}
										}
									}
								],
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							},
							{
								"kind": "struct",
								"fields": [
									{
										"kind": "pair",
										"key": "color",
										"type": {
											"kind": "reference",
											"path": "::java::server::util::particle::DustColor"
										}
									},
									{
										"kind": "pair",
										"key": "scale",
										"type": {
											"kind": "float",
											"valueRange": {
												"kind": 0,
												"min": 0.01,
												"max": 4
											}
										}
									}
								],
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							}
						]
					}
				]
			},
			"dust_color_transition": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::server::util::particle::ParticleSettings"
				},
				"typeArgs": [
					{
						"kind": "union",
						"members": [
							{
								"kind": "struct",
								"fields": [
									{
										"kind": "pair",
										"key": "fromColor",
										"type": {
											"kind": "reference",
											"path": "::java::server::util::particle::DustColor"
										}
									},
									{
										"kind": "pair",
										"key": "toColor",
										"type": {
											"kind": "reference",
											"path": "::java::server::util::particle::DustColor"
										}
									},
									{
										"kind": "pair",
										"key": "scale",
										"type": {
											"kind": "float",
											"valueRange": {
												"kind": 0,
												"min": 0.01,
												"max": 4
											}
										}
									}
								],
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							},
							{
								"kind": "struct",
								"fields": [
									{
										"kind": "pair",
										"key": "from_color",
										"type": {
											"kind": "reference",
											"path": "::java::server::util::particle::DustColor"
										}
									},
									{
										"kind": "pair",
										"key": "to_color",
										"type": {
											"kind": "reference",
											"path": "::java::server::util::particle::DustColor"
										}
									},
									{
										"kind": "pair",
										"key": "scale",
										"type": {
											"kind": "float",
											"valueRange": {
												"kind": 0,
												"min": 0.01,
												"max": 4
											}
										}
									}
								],
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							}
						]
					}
				]
			},
			"dust_pillar": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::server::util::particle::ParticleSettings"
				},
				"typeArgs": [
					{
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::server::util::block_state::BlockState",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::server::util::particle::BlockParticle",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							}
						]
					}
				]
			},
			"entity_effect": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::server::util::particle::ParticleSettings"
				},
				"typeArgs": [
					{
						"kind": "union",
						"members": [
							{
								"kind": "struct",
								"fields": [
									{
										"kind": "pair",
										"key": "r",
										"type": {
											"kind": "float"
										}
									},
									{
										"kind": "pair",
										"key": "g",
										"type": {
											"kind": "float"
										}
									},
									{
										"kind": "pair",
										"key": "b",
										"type": {
											"kind": "float"
										}
									},
									{
										"kind": "pair",
										"key": "a",
										"type": {
											"kind": "float"
										}
									}
								],
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							},
							{
								"kind": "struct",
								"fields": [
									{
										"kind": "pair",
										"desc": " Translucent color interpreted from four floats.\n\n\n\n Cheat Sheet:\n\n - Floats between 0 and 1 are interpreted as a percentage of the original color.\n\n - Negative values & values above 1 simply loop the 0-255 range, since there isn't randomization there's no weirdness.\n\n\n\n Simplified internal behavior ([graph demo](https://www.desmos.com/calculator/drwzjaxgks)):\n\n ```js\n\n function integerToByte(integer) {\n\n \tif (integer >= 0) {\n\n \t\t// Integer is positive\n\n \t\tif (integer <= 255) {\n\n \t\t\t// Integer already fits in a color channel\n\n \t\t\treturn integer\n\n \t\t}\n\n \t\t// Integer doesn't fit in color channel; modulo it\n\n \t\treturn integer % 256\n\n \t}\n\n \t// Integer is negative\n\n \treturn Math.abs((Math.floor(integer / 256) * 256)) + integer\n\n }\n\n ```\n",
										"key": "color",
										"type": {
											"kind": "reference",
											"path": "::java::server::util::color::RGBA"
										}
									}
								],
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							}
						]
					}
				]
			},
			"falling_dust": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::server::util::particle::ParticleSettings"
				},
				"typeArgs": [
					{
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::server::util::block_state::BlockState",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							},
							{
								"kind": "reference",
								"path": "::java::server::util::particle::BlockParticle",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							}
						]
					}
				]
			},
			"item": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::server::util::particle::ParticleSettings"
				},
				"typeArgs": [
					{
						"kind": "union",
						"members": [
							{
								"kind": "reference",
								"path": "::java::server::world::item::ItemStack",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							},
							{
								"kind": "struct",
								"fields": [
									{
										"kind": "pair",
										"key": "item",
										"type": {
											"kind": "union",
											"members": [
												{
													"kind": "string",
													"attributes": [
														{
															"name": "id",
															"value": {
																"kind": "tree",
																"values": {
																	"registry": {
																		"kind": "literal",
																		"value": {
																			"kind": "string",
																			"value": "item"
																		}
																	},
																	"exclude": {
																		"kind": "tree",
																		"values": {
																			"0": {
																				"kind": "literal",
																				"value": {
																					"kind": "string",
																					"value": "air"
																				}
																			}
																		}
																	}
																}
															}
														}
													]
												},
												{
													"kind": "reference",
													"path": "::java::server::world::item::SingleItem"
												}
											]
										}
									}
								],
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							}
						]
					}
				]
			},
			"sculk_charge": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::server::util::particle::ParticleSettings"
				},
				"typeArgs": [
					{
						"kind": "union",
						"members": [
							{
								"kind": "float",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							},
							{
								"kind": "struct",
								"fields": [
									{
										"kind": "pair",
										"desc": "Angle the particle texture is rotated to, measured in radians (π ~ 3.14 for 180° clockwise, negative for counter clockwise).\n",
										"key": "roll",
										"type": {
											"kind": "float"
										}
									}
								],
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							}
						]
					}
				]
			},
			"shriek": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::server::util::particle::ParticleSettings"
				},
				"typeArgs": [
					{
						"kind": "union",
						"members": [
							{
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": 0
								},
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							},
							{
								"kind": "struct",
								"fields": [
									{
										"kind": "pair",
										"desc": "Ticks until the particle renders.\n",
										"key": "delay",
										"type": {
											"kind": "int",
											"valueRange": {
												"kind": 0,
												"min": 0
											}
										}
									}
								],
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20.5"
											}
										}
									}
								]
							}
						]
					}
				]
			},
			"trail": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "target",
						"type": {
							"kind": "list",
							"item": {
								"kind": "double"
							},
							"lengthRange": {
								"kind": 0,
								"min": 3,
								"max": 3
							}
						}
					},
					{
						"kind": "pair",
						"key": "color",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::color::RGB"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.4"
									}
								}
							}
						],
						"key": "duration",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 1
							}
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"vibration": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::server::util::particle::ParticleSettings"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "pair",
								"desc": "Ticks in which to interpolate the particle's initial position to the destination.\n",
								"key": "arrival_in_ticks",
								"type": {
									"kind": "int"
								}
							},
							{
								"kind": "pair",
								"key": "destination",
								"type": {
									"kind": "reference",
									"path": "::java::server::util::particle::SafePositionSource"
								}
							}
						]
					}
				]
			}
		},
		"minecraft:placement_modifier": {
			"block_predicate_filter": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "predicate",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_predicate::BlockPredicate"
						}
					}
				]
			},
			"carving_mask": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "step",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::CarveStep"
						}
					}
				],
				"attributes": [
					{
						"name": "until",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"count": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "count",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::IntProvider"
							},
							"typeArgs": [
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 256
									}
								}
							]
						}
					}
				]
			},
			"count_on_every_layer": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "count",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::IntProvider"
							},
							"typeArgs": [
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 256
									}
								}
							]
						}
					}
				]
			},
			"environment_scan": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "direction_of_search",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::placement::SearchDirection"
						}
					},
					{
						"kind": "pair",
						"key": "max_steps",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 1,
								"max": 32
							}
						}
					},
					{
						"kind": "pair",
						"key": "target_condition",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_predicate::BlockPredicate"
						}
					},
					{
						"kind": "pair",
						"key": "allowed_search_condition",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_predicate::BlockPredicate"
						},
						"optional": true
					}
				]
			},
			"fixed_placement": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Fixed list of block positions to place the feature at.\n",
						"key": "positions",
						"type": {
							"kind": "list",
							"item": {
								"kind": "list",
								"item": {
									"kind": "int"
								},
								"lengthRange": {
									"kind": 0,
									"min": 3,
									"max": 3
								}
							}
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21"
							}
						}
					}
				]
			},
			"height_range": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "height",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::HeightProvider"
						}
					}
				]
			},
			"heightmap": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "heightmap",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::HeightmapType"
						}
					}
				]
			},
			"noise_based_count": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "noise_to_count_ratio",
						"type": {
							"kind": "int"
						}
					},
					{
						"kind": "pair",
						"key": "noise_factor",
						"type": {
							"kind": "float"
						}
					},
					{
						"kind": "pair",
						"key": "noise_offset",
						"type": {
							"kind": "float"
						},
						"optional": true
					}
				]
			},
			"noise_threshold_count": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "noise_level",
						"type": {
							"kind": "float"
						}
					},
					{
						"kind": "pair",
						"key": "below_noise",
						"type": {
							"kind": "int"
						}
					},
					{
						"kind": "pair",
						"key": "above_noise",
						"type": {
							"kind": "int"
						}
					}
				]
			},
			"random_offset": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "xz_spread",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::IntProvider"
							},
							"typeArgs": [
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": -16,
										"max": 16
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "y_spread",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::IntProvider"
							},
							"typeArgs": [
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": -16,
										"max": 16
									}
								}
							]
						}
					}
				]
			},
			"rarity_filter": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "chance",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0
							}
						}
					}
				]
			},
			"surface_relative_threshold_filter": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "heightmap",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::HeightmapType"
						}
					},
					{
						"kind": "pair",
						"key": "min_inclusive",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "max_inclusive",
						"type": {
							"kind": "int"
						},
						"optional": true
					}
				]
			},
			"surface_water_depth_filter": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "max_water_depth",
						"type": {
							"kind": "int"
						}
					}
				]
			}
		},
		"minecraft:pos_rule_test": {
			"axis_aligned_linear_pos": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "axis",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::processor_list::Axis"
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::processor_list::LinearPos"
						}
					}
				]
			},
			"linear_pos": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "min_dist",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 255
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "max_dist",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 255
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "min_chance",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "max_chance",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						},
						"optional": true
					}
				]
			}
		},
		"minecraft:position_source": {
			"block": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Block position\n",
						"key": "pos",
						"type": {
							"kind": "list",
							"item": {
								"kind": "int"
							},
							"lengthRange": {
								"kind": 0,
								"min": 3,
								"max": 3
							}
						}
					}
				]
			},
			"entity": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "uuid"
							}
						],
						"key": "source_entity",
						"type": {
							"kind": "list",
							"item": {
								"kind": "int"
							},
							"lengthRange": {
								"kind": 0,
								"min": 4,
								"max": 4
							}
						}
					},
					{
						"kind": "pair",
						"desc": "offset from the entity's feet to the source position\n",
						"key": "y_offset",
						"type": {
							"kind": "float"
						},
						"optional": true
					}
				]
			}
		},
		"minecraft:random_int_generator": {
			"%none": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "min",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "max",
						"type": {
							"kind": "int"
						},
						"optional": true
					}
				]
			},
			"binomial": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "n",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0
							}
						}
					},
					{
						"kind": "pair",
						"key": "p",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					}
				]
			},
			"constant": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "value",
						"type": {
							"kind": "int"
						}
					}
				]
			},
			"uniform": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "min",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "max",
						"type": {
							"kind": "int"
						},
						"optional": true
					}
				]
			}
		},
		"minecraft:recipe_serializer": {
			"%unknown": {
				"kind": "struct",
				"fields": []
			},
			"blasting": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "group",
						"type": {
							"kind": "string"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Identifier for the category this goes in the recipe book.\n",
						"key": "category",
						"type": {
							"kind": "reference",
							"path": "::java::data::recipe::CookingBookCategory"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "ingredient",
						"type": {
							"kind": "reference",
							"path": "::java::data::recipe::Ingredient"
						}
					},
					{
						"kind": "pair",
						"key": "result",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.5"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "item"
												}
											}
										}
									]
								},
								{
									"kind": "reference",
									"path": "::java::server::world::item::SingleItem",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.5"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "experience",
						"type": {
							"kind": "float"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "cookingtime",
						"type": {
							"kind": "int"
						},
						"optional": true
					}
				]
			},
			"campfire_cooking": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "group",
						"type": {
							"kind": "string"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Identifier for the category this goes in the recipe book.\n",
						"key": "category",
						"type": {
							"kind": "reference",
							"path": "::java::data::recipe::CookingBookCategory"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "ingredient",
						"type": {
							"kind": "reference",
							"path": "::java::data::recipe::Ingredient"
						}
					},
					{
						"kind": "pair",
						"key": "result",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.5"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "item"
												}
											}
										}
									]
								},
								{
									"kind": "reference",
									"path": "::java::server::world::item::SingleItem",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.5"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "experience",
						"type": {
							"kind": "float"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "cookingtime",
						"type": {
							"kind": "int"
						},
						"optional": true
					}
				]
			},
			"crafting_shaped": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Identifier to group multiple recipes in the recipe book.\n",
						"key": "group",
						"type": {
							"kind": "string"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Identifier for the category this goes in the recipe book.\n",
						"key": "category",
						"type": {
							"kind": "reference",
							"path": "::java::data::recipe::CraftingBookCategory"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "pattern",
						"type": {
							"kind": "list",
							"item": {
								"kind": "string",
								"lengthRange": {
									"kind": 0,
									"min": 1,
									"max": 3
								},
								"attributes": [
									{
										"name": "crafting_ingredient",
										"value": {
											"kind": "tree",
											"values": {
												"definition": {
													"kind": "literal",
													"value": {
														"kind": "boolean",
														"value": true
													}
												}
											}
										}
									}
								]
							},
							"lengthRange": {
								"kind": 0,
								"min": 1,
								"max": 3
							}
						}
					},
					{
						"kind": "pair",
						"key": "key",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": {
										"kind": "string",
										"attributes": [
											{
												"name": "crafting_ingredient"
											}
										]
									},
									"type": {
										"kind": "reference",
										"path": "::java::data::recipe::Ingredient"
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "result",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "reference",
									"path": "::java::data::recipe::ItemResult",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.5"
												}
											}
										}
									]
								},
								{
									"kind": "reference",
									"path": "::java::server::world::item::ItemStack",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.5"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19.4"
									}
								}
							}
						],
						"desc": "Determines if a notification is shown when unlocking this recipe. Defaults to true.\n",
						"key": "show_notification",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"crafting_shapeless": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "group",
						"type": {
							"kind": "string"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Identifier for the category this goes in the recipe book.\n",
						"key": "category",
						"type": {
							"kind": "reference",
							"path": "::java::data::recipe::CraftingBookCategory"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "ingredients",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::recipe::Ingredient"
							},
							"lengthRange": {
								"kind": 0,
								"min": 1,
								"max": 9
							}
						}
					},
					{
						"kind": "pair",
						"key": "result",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "reference",
									"path": "::java::data::recipe::ItemResult",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.5"
												}
											}
										}
									]
								},
								{
									"kind": "reference",
									"path": "::java::server::world::item::ItemStack",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.5"
												}
											}
										}
									]
								}
							]
						}
					}
				]
			},
			"crafting_transmute": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "group",
						"type": {
							"kind": "string"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Identifier for the category this goes in the recipe book.\n",
						"key": "category",
						"type": {
							"kind": "reference",
							"path": "::java::data::recipe::CraftingBookCategory"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "The ingredient that will transfer its data components to the result item.\n",
						"key": "input",
						"type": {
							"kind": "reference",
							"path": "::java::data::recipe::Ingredient"
						}
					},
					{
						"kind": "pair",
						"desc": "An additional ingredient.\n",
						"key": "material",
						"type": {
							"kind": "reference",
							"path": "::java::data::recipe::Ingredient"
						}
					},
					{
						"kind": "pair",
						"key": "result",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "item"
										}
									}
								}
							]
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"smelting": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "group",
						"type": {
							"kind": "string"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Identifier for the category this goes in the recipe book.\n",
						"key": "category",
						"type": {
							"kind": "reference",
							"path": "::java::data::recipe::CookingBookCategory"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "ingredient",
						"type": {
							"kind": "reference",
							"path": "::java::data::recipe::Ingredient"
						}
					},
					{
						"kind": "pair",
						"key": "result",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.5"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "item"
												}
											}
										}
									]
								},
								{
									"kind": "reference",
									"path": "::java::server::world::item::SingleItem",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.5"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "experience",
						"type": {
							"kind": "float"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "cookingtime",
						"type": {
							"kind": "int"
						},
						"optional": true
					}
				]
			},
			"smithing": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "base",
						"type": {
							"kind": "reference",
							"path": "::java::data::recipe::IngredientValue"
						}
					},
					{
						"kind": "pair",
						"key": "addition",
						"type": {
							"kind": "reference",
							"path": "::java::data::recipe::IngredientValue"
						}
					},
					{
						"kind": "pair",
						"key": "result",
						"type": {
							"kind": "reference",
							"path": "::java::data::recipe::ItemResult"
						}
					}
				],
				"attributes": [
					{
						"name": "until",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.20"
							}
						}
					}
				]
			},
			"smithing_transform": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::recipe::SmithingIngredients"
						}
					},
					{
						"kind": "pair",
						"desc": "Resulting transformed item.\n",
						"key": "result",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "struct",
									"fields": [
										{
											"kind": "pair",
											"key": "item",
											"type": {
												"kind": "string",
												"attributes": [
													{
														"name": "id",
														"value": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "item"
															}
														}
													}
												]
											}
										}
									],
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.5"
												}
											}
										}
									]
								},
								{
									"kind": "reference",
									"path": "::java::server::world::item::ItemStack",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.5"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19.4"
							}
						}
					}
				]
			},
			"smithing_trim": {
				"kind": "reference",
				"path": "::java::data::recipe::SmithingIngredients",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19.4"
							}
						}
					}
				]
			},
			"smoking": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "group",
						"type": {
							"kind": "string"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Identifier for the category this goes in the recipe book.\n",
						"key": "category",
						"type": {
							"kind": "reference",
							"path": "::java::data::recipe::CookingBookCategory"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "ingredient",
						"type": {
							"kind": "reference",
							"path": "::java::data::recipe::Ingredient"
						}
					},
					{
						"kind": "pair",
						"key": "result",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.5"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "item"
												}
											}
										}
									]
								},
								{
									"kind": "reference",
									"path": "::java::server::world::item::SingleItem",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.5"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "experience",
						"type": {
							"kind": "float"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "cookingtime",
						"type": {
							"kind": "int"
						},
						"optional": true
					}
				]
			},
			"stonecutting": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "group",
						"type": {
							"kind": "string"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "ingredient",
						"type": {
							"kind": "reference",
							"path": "::java::data::recipe::Ingredient"
						}
					},
					{
						"kind": "pair",
						"key": "result",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.5"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "item"
												}
											}
										}
									]
								},
								{
									"kind": "reference",
									"path": "::java::server::world::item::ItemStack",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.5"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.5"
									}
								}
							}
						],
						"key": "count",
						"type": {
							"kind": "int"
						}
					}
				]
			}
		},
		"minecraft:resource": {
			"advancement": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "If present, advancement will be visible in the advancement tabs.\n",
						"key": "display",
						"type": {
							"kind": "reference",
							"path": "::java::data::advancement::AdvancementDisplay"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "If this field is absent, this advancement is a root advancement.\n\nCircular references cause a loading failure.\n",
						"key": "parent",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "advancement"
										}
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "If `requirements` is not defined, all defined criteria will be required.\n",
						"key": "criteria",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": {
										"kind": "string",
										"attributes": [
											{
												"name": "criterion",
												"value": {
													"kind": "tree",
													"values": {
														"definition": {
															"kind": "literal",
															"value": {
																"kind": "boolean",
																"value": true
															}
														}
													}
												}
											}
										]
									},
									"type": {
										"kind": "reference",
										"path": "::java::data::advancement::AdvancementCriterion"
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"desc": "Contains all of the `criteria` keys.\n\nIf all criteria are required at once, this may be omitted.\n\nWith multiple criteria: this contains a list of lists with criteria (all criteria must be mentioned).\n\nIf all of the lists each have any criteria met, the advancement is complete (basically AND grouping of OR groups).\n",
						"key": "requirements",
						"type": {
							"kind": "list",
							"item": {
								"kind": "list",
								"item": {
									"kind": "string",
									"attributes": [
										{
											"name": "criterion"
										}
									]
								}
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Provided to the player when this advancement is obtained.\n",
						"key": "rewards",
						"type": {
							"kind": "reference",
							"path": "::java::data::advancement::AdvancementRewards"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Defaults to `false`. The vanilla game client only reads this for advancements from the `minecraft` namespace.\n",
						"key": "sends_telemetry_event",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"atlas": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "sources",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::assets::atlas::SpriteSource"
							}
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19.3"
							}
						}
					}
				]
			},
			"banner_pattern": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Also resolves to `assets/<namespace>/textures/entity/shield/<name>.png`.\n",
						"key": "asset_id",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "tree",
										"values": {
											"registry": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "texture"
												}
											},
											"path": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "entity/banner/"
												}
											}
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"desc": "Translation key prefix per dye color (e.g. `block.minecraft.banner.custom.pattern` resolves to `block.minecraft.banner.custom.pattern.<dye color>`).\n",
						"key": "translation_key",
						"type": {
							"kind": "string"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.20.5"
							}
						}
					}
				]
			},
			"block_definition": {
				"kind": "reference",
				"path": "::java::assets::block_state_definition::BlockStateDefinition"
			},
			"chat_type": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "chat",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "reference",
									"path": "::java::data::chat_type::TextDisplay",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.19.1"
												}
											}
										}
									]
								},
								{
									"kind": "reference",
									"path": "::java::data::chat_type::ChatDecoration",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.19.1"
												}
											}
										}
									]
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19.1"
									}
								}
							}
						],
						"key": "overlay",
						"type": {
							"kind": "reference",
							"path": "::java::data::chat_type::TextDisplay"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "narration",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "reference",
									"path": "::java::data::chat_type::Narration",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.19.1"
												}
											}
										}
									]
								},
								{
									"kind": "reference",
									"path": "::java::data::chat_type::ChatDecoration",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.19.1"
												}
											}
										}
									]
								}
							]
						},
						"optional": true
					}
				]
			},
			"credits": {
				"kind": "reference",
				"path": "::java::assets::credits::Credits"
			},
			"damage_type": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "The message id used for deaths caused by this damage type.\n\nIs combined with the result of `death_message_type` to form a translation key.\n",
						"key": "message_id",
						"type": {
							"kind": "string"
						}
					},
					{
						"kind": "pair",
						"desc": "Amount of hunger exhaustion to cause.\n",
						"key": "exhaustion",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0
							}
						}
					},
					{
						"kind": "pair",
						"desc": "Whether to scale damage with difficulty levels.\n",
						"key": "scaling",
						"type": {
							"kind": "reference",
							"path": "::java::data::damage_type::DamageScaling"
						}
					},
					{
						"kind": "pair",
						"desc": "Controls how damage manifests when inflicted on players. Defaults to `hurt`.\n",
						"key": "effects",
						"type": {
							"kind": "reference",
							"path": "::java::data::damage_type::DamageEffects"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": " Controls if special death message variants are used. Defaults to `default`.\n\n\n\n For more info see: https://minecraft.wiki/w/Damage_type#Death_messages\n",
						"key": "death_message_type",
						"type": {
							"kind": "reference",
							"path": "::java::data::damage_type::DeathMessageType"
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19.4"
							}
						}
					}
				]
			},
			"dimension": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "type",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::dimension::DimensionTypeRef"
						}
					},
					{
						"kind": "pair",
						"key": "generator",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::dimension::chunk_generator::ChunkGenerator"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.16"
							}
						}
					}
				]
			},
			"dimension_type": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "If true, water will evaporate and sponges will dry.\n",
						"key": "ultrawarm",
						"type": {
							"kind": "boolean"
						}
					},
					{
						"kind": "pair",
						"desc": "If true, portals will spawn zombified piglins. If false, compasses and clocks spin randomly.\n",
						"key": "natural",
						"type": {
							"kind": "boolean"
						}
					},
					{
						"kind": "pair",
						"desc": "If false, piglins will shake and convert to zombified piglins.\n",
						"key": "piglin_safe",
						"type": {
							"kind": "boolean"
						}
					},
					{
						"kind": "pair",
						"desc": "If true, players can charge and use respawn anchors to set their spawn. If false, respawn anchors will blow up when used.\n",
						"key": "respawn_anchor_works",
						"type": {
							"kind": "boolean"
						}
					},
					{
						"kind": "pair",
						"desc": "If true, players can use beds to set their spawn and advance time. If false, beds will blow up when used.\n",
						"key": "bed_works",
						"type": {
							"kind": "boolean"
						}
					},
					{
						"kind": "pair",
						"desc": "If true, players with the Bad Omen effect can cause a raid.\n",
						"key": "has_raids",
						"type": {
							"kind": "boolean"
						}
					},
					{
						"kind": "pair",
						"desc": "Affects the weather, lighting engine and respawning rules.\n",
						"key": "has_skylight",
						"type": {
							"kind": "boolean"
						}
					},
					{
						"kind": "pair",
						"desc": "Affects the weather, map items and respawning rules.\n",
						"key": "has_ceiling",
						"type": {
							"kind": "boolean"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16.2"
									}
								}
							}
						],
						"key": "shrunk",
						"type": {
							"kind": "boolean"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16.2"
									}
								}
							}
						],
						"key": "coordinate_scale",
						"type": {
							"kind": "double",
							"valueRange": {
								"kind": 0,
								"min": 0.00001,
								"max": 30000000
							}
						}
					},
					{
						"kind": "pair",
						"key": "ambient_light",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					},
					{
						"kind": "pair",
						"desc": "Setting this value will keep the sun in a fixed position.\n",
						"key": "fixed_time",
						"type": {
							"kind": "int"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Portals can't spawn and chorus fruit can't teleport players above this height.\n",
						"key": "logical_height",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 256
									},
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								},
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 4064
									},
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.16.2"
									}
								}
							}
						],
						"desc": "Sky effects.\n",
						"key": "effects",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::dimension::DimensionTypeEffects",
							"attributes": [
								{
									"name": "id"
								}
							]
						}
					},
					{
						"kind": "pair",
						"desc": "Block tag defining what blocks keep fire infinitely burning.\n",
						"key": "infiniburn",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.18.2"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "block"
														}
													},
													"tags": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "implicit"
														}
													}
												}
											}
										}
									]
								},
								{
									"kind": "string",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.18.2"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "block"
														}
													},
													"tags": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "required"
														}
													}
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.17"
									}
								}
							}
						],
						"desc": "The minimum height in which blocks can exist.\n",
						"key": "min_y",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": -2032,
								"max": 2031
							}
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.17"
									}
								}
							}
						],
						"desc": "The total height in which blocks can exist. Max Y = Min Y + Height.\n",
						"key": "height",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 16,
								"max": 4064
							}
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"key": "monster_spawn_light_level",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::IntProvider"
							},
							"typeArgs": [
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 15
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"key": "monster_spawn_block_light_limit",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 15
							}
						}
					}
				]
			},
			"enchantment": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "description",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::text::Text"
						}
					},
					{
						"kind": "pair",
						"key": "exclusive_set",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "enchantment"
														}
													},
													"tags": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "allowed"
														}
													}
												}
											}
										}
									]
								},
								{
									"kind": "list",
									"item": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "enchantment"
													}
												}
											}
										]
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "supported_items",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "item"
														}
													},
													"tags": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "allowed"
														}
													}
												}
											}
										}
									]
								},
								{
									"kind": "list",
									"item": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "item"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"desc": " Item types for which this Enchantment shows up in Enchanting Tables and on traded equipment.\n\n\n\n Must be a subset of `supported_items`.\n",
						"key": "primary_items",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "item"
														}
													},
													"tags": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "allowed"
														}
													}
												}
											}
										}
									]
								},
								{
									"kind": "list",
									"item": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "item"
													}
												}
											}
										]
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "How commonly the Enchantment appears, compared to the total combined `weight` of all available Enchantments.\n",
						"key": "weight",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 1,
								"max": 1024
							}
						}
					},
					{
						"kind": "pair",
						"desc": "Maximum level of the enchantment.\n",
						"key": "max_level",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 1,
								"max": 255
							}
						}
					},
					{
						"kind": "pair",
						"desc": "Minimum experience cost.\n",
						"key": "min_cost",
						"type": {
							"kind": "reference",
							"path": "::java::data::enchantment::EnchantmentCost"
						}
					},
					{
						"kind": "pair",
						"desc": "Maximum experience cost.\n",
						"key": "max_cost",
						"type": {
							"kind": "reference",
							"path": "::java::data::enchantment::EnchantmentCost"
						}
					},
					{
						"kind": "pair",
						"desc": "Halved when an Enchantment is added to a book.\n\nThe effective fee is multiplied by the level of the Enchantment.\n",
						"key": "anvil_cost",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0
							}
						}
					},
					{
						"kind": "pair",
						"key": "slots",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::util::attribute::AttributeSlot"
							}
						}
					},
					{
						"kind": "pair",
						"key": "effects",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "enchantment_effect_component_type"
													}
												}
											}
										]
									},
									"type": {
										"kind": "dispatcher",
										"parallelIndices": [
											{
												"kind": "dynamic",
												"accessor": [
													{
														"keyword": "key"
													}
												]
											}
										],
										"registry": "minecraft:effect_component"
									},
									"optional": true
								}
							]
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21"
							}
						}
					}
				]
			},
			"enchantment_provider": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "type",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "enchantment_provider_type"
										}
									}
								}
							]
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "dispatcher",
							"parallelIndices": [
								{
									"kind": "dynamic",
									"accessor": [
										"type"
									]
								}
							],
							"registry": "minecraft:enchantment_provider"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21"
							}
						}
					}
				]
			},
			"equipment": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "List of layers for each model layer type.\n",
						"key": "layers",
						"type": {
							"kind": "reference",
							"path": "::java::assets::equipment::Layers"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"font": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "providers",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::assets::font::GlyphProvider"
							}
						}
					}
				]
			},
			"gpu_warnlist": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "renderer",
						"type": {
							"kind": "list",
							"item": {
								"kind": "string",
								"attributes": [
									{
										"name": "regex_pattern"
									}
								]
							}
						}
					},
					{
						"kind": "pair",
						"key": "version",
						"type": {
							"kind": "list",
							"item": {
								"kind": "string",
								"attributes": [
									{
										"name": "regex_pattern"
									}
								]
							}
						}
					},
					{
						"kind": "pair",
						"key": "vendor",
						"type": {
							"kind": "list",
							"item": {
								"kind": "string",
								"attributes": [
									{
										"name": "regex_pattern"
									}
								]
							}
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.16"
							}
						}
					}
				]
			},
			"instrument": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "sound_event",
						"type": {
							"kind": "reference",
							"path": "::java::data::util::SoundEventRef"
						}
					},
					{
						"kind": "pair",
						"desc": "Maximum range in blocks that the sound can be heard\n",
						"key": "range",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 2,
								"min": 0
							}
						}
					},
					{
						"kind": "pair",
						"desc": "Duration of use in seconds, used as item cooldown\n",
						"key": "use_duration",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 2,
								"min": 0
							}
						}
					},
					{
						"kind": "pair",
						"key": "description",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::text::Text"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"item_definition": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "model",
						"type": {
							"kind": "reference",
							"path": "::java::assets::item_definition::ItemModel"
						}
					},
					{
						"kind": "pair",
						"desc": "Whether the down-and-up animation should be played in first-person view when the item stack is changed.\n\nDefaults to `true`.\n",
						"key": "hand_animation_on_swap",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.4"
							}
						}
					}
				]
			},
			"item_modifier": {
				"kind": "reference",
				"path": "::java::data::item_modifier::ItemModifier",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"jukebox_song": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Displayed in the HUD actionbar & item tooltip.\n",
						"key": "description",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::text::Text"
						}
					},
					{
						"kind": "pair",
						"key": "comparator_output",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 15
							}
						}
					},
					{
						"kind": "pair",
						"key": "length_in_seconds",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 2,
								"min": 0
							}
						}
					},
					{
						"kind": "pair",
						"key": "sound_event",
						"type": {
							"kind": "reference",
							"path": "::java::data::util::SoundEventRef"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21"
							}
						}
					}
				]
			},
			"lang": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": {
							"kind": "string",
							"attributes": [
								{
									"name": "translation_key",
									"value": {
										"kind": "tree",
										"values": {
											"definition": {
												"kind": "literal",
												"value": {
													"kind": "boolean",
													"value": true
												}
											}
										}
									}
								}
							]
						},
						"type": {
							"kind": "string"
						}
					}
				]
			},
			"loot_table": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "type",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::LootContextType",
							"attributes": [
								{
									"name": "id"
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "pools",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::loot::LootPool"
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "functions",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::loot::LootFunction"
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20"
									}
								}
							}
						],
						"key": "random_sequence",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "tree",
										"values": {
											"registry": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "random_sequence"
												}
											},
											"definition": {
												"kind": "literal",
												"value": {
													"kind": "boolean",
													"value": true
												}
											}
										}
									}
								}
							]
						},
						"optional": true
					}
				]
			},
			"model": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "parent",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "model"
										}
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "ambientocclusion",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "gui_light",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "front"
									}
								},
								{
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "side"
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "textures",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": {
										"kind": "string",
										"attributes": [
											{
												"name": "model_texture",
												"value": {
													"kind": "tree",
													"values": {
														"definition": {
															"kind": "literal",
															"value": {
																"kind": "boolean",
																"value": true
															}
														}
													}
												}
											}
										]
									},
									"type": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "texture"
													}
												}
											}
										]
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "particle",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "texture"
										}
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "elements",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::assets::model::ModelElement"
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "display",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": {
										"kind": "reference",
										"path": "::java::assets::model::ItemTransformType"
									},
									"type": {
										"kind": "struct",
										"fields": [
											{
												"kind": "pair",
												"key": "rotation",
												"type": {
													"kind": "list",
													"item": {
														"kind": "float"
													},
													"lengthRange": {
														"kind": 0,
														"min": 3,
														"max": 3
													}
												},
												"optional": true
											},
											{
												"kind": "pair",
												"key": "translation",
												"type": {
													"kind": "list",
													"item": {
														"kind": "float",
														"valueRange": {
															"kind": 0,
															"min": -80,
															"max": 80
														}
													},
													"lengthRange": {
														"kind": 0,
														"min": 3,
														"max": 3
													}
												},
												"optional": true
											},
											{
												"kind": "pair",
												"key": "scale",
												"type": {
													"kind": "list",
													"item": {
														"kind": "float",
														"valueRange": {
															"kind": 0,
															"min": -4,
															"max": 4
														}
													},
													"lengthRange": {
														"kind": 0,
														"min": 3,
														"max": 3
													}
												},
												"optional": true
											}
										]
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.4"
									}
								}
							}
						],
						"key": "overrides",
						"type": {
							"kind": "list",
							"item": {
								"kind": "struct",
								"fields": [
									{
										"kind": "pair",
										"key": "predicate",
										"type": {
											"kind": "struct",
											"fields": [
												{
													"kind": "pair",
													"key": {
														"kind": "reference",
														"path": "::java::assets::model::Predicates"
													},
													"type": {
														"kind": "float"
													}
												}
											]
										}
									},
									{
										"kind": "pair",
										"key": "model",
										"type": {
											"kind": "reference",
											"path": "::java::assets::model::ModelRef"
										}
									}
								]
							}
						},
						"optional": true
					}
				]
			},
			"painting_variant": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "asset_id",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "tree",
										"values": {
											"registry": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "texture"
												}
											},
											"path": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "painting/"
												}
											}
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"desc": "Dimension in blocks.\n",
						"key": "width",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 1,
								"max": 16
							}
						}
					},
					{
						"kind": "pair",
						"desc": "Dimension in blocks.\n",
						"key": "height",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 1,
								"max": 16
							}
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.2"
									}
								}
							}
						],
						"key": "title",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::text::Text"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.2"
									}
								}
							}
						],
						"key": "author",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::text::Text"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21"
							}
						}
					}
				]
			},
			"particle": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "textures",
						"type": {
							"kind": "list",
							"item": {
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "tree",
											"values": {
												"registry": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "texture"
													}
												},
												"path": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "particle/"
													}
												}
											}
										}
									}
								]
							}
						}
					}
				]
			},
			"post_effect": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "targets",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "list",
									"item": {
										"kind": "union",
										"members": [
											{
												"kind": "string"
											},
											{
												"kind": "reference",
												"path": "::java::assets::shader::post::OldTarget"
											}
										]
									},
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.21.2"
												}
											}
										}
									]
								},
								{
									"kind": "reference",
									"path": "::java::assets::shader::post::Targets",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.21.2"
												}
											}
										}
									]
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "passes",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::assets::shader::post::Pass"
							}
						},
						"optional": true
					}
				]
			},
			"predicate": {
				"kind": "reference",
				"path": "::java::data::predicate::Predicate"
			},
			"recipe": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "type",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "recipe_serializer"
										}
									}
								}
							]
						}
					},
					{
						"kind": "spread",
						"type": {
							"kind": "dispatcher",
							"parallelIndices": [
								{
									"kind": "dynamic",
									"accessor": [
										"type"
									]
								}
							],
							"registry": "minecraft:recipe_serializer"
						}
					}
				]
			},
			"regional_compliancies": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": {
							"kind": "string"
						},
						"type": {
							"kind": "reference",
							"path": "::java::assets::regional_compliancies::Notification"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.18.2"
							}
						}
					}
				]
			},
			"shader": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "vertex",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.21.2"
												}
											}
										}
									]
								},
								{
									"kind": "string",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.21.2"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "shader/vertex"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "fragment",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.21.2"
												}
											}
										}
									]
								},
								{
									"kind": "string",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.21.2"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "shader/fragment"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "samplers",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::assets::shader::program::Sampler"
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.2"
									}
								}
							}
						],
						"key": "attributes",
						"type": {
							"kind": "list",
							"item": {
								"kind": "string"
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "uniforms",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::assets::shader::program::Uniform"
							}
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.2"
									}
								}
							}
						],
						"desc": "Unused.\n",
						"key": "blend",
						"type": {
							"kind": "reference",
							"path": "::java::assets::shader::program::BlendMode"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.2"
									}
								}
							}
						],
						"key": "cull",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.2"
									}
								}
							}
						],
						"desc": "Defines GLSL directives to be injected into the shader source.\n",
						"key": "defines",
						"type": {
							"kind": "reference",
							"path": "::java::assets::shader::program::Defines"
						},
						"optional": true
					}
				]
			},
			"sounds": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "weighed_sound_event"
										}
									}
								}
							]
						},
						"type": {
							"kind": "reference",
							"path": "::java::assets::sounds::SoundEventRegistration"
						}
					}
				]
			},
			"texture_meta": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "animation",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"desc": "If true, additional frames will be generated between frames with a frame time greater than 1 between them. Defaults to false.\n",
									"key": "interpolate",
									"type": {
										"kind": "boolean"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"desc": "The width of the tile, as a direct ratio rather than in pixels. Can be used by resource packs to have frames that are not perfect squares.\n",
									"key": "width",
									"type": {
										"kind": "int"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"desc": "The height of the tile, as a direct ratio rather than in pixels. Can be used by resource packs to have frames that are not perfect squares.\n",
									"key": "height",
									"type": {
										"kind": "int"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"desc": "Sets the default time for each frame in increments of one game tick. Defaults to 1.\n",
									"key": "frametime",
									"type": {
										"kind": "int"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"desc": "Defaults to displaying all the frames from top to bottom.\n",
									"key": "frames",
									"type": {
										"kind": "list",
										"item": {
											"kind": "union",
											"members": [
												{
													"kind": "struct",
													"fields": [
														{
															"kind": "pair",
															"desc": "A number corresponding to position of a frame from the top, with the top frame being 0.\n",
															"key": "index",
															"type": {
																"kind": "int"
															}
														},
														{
															"kind": "pair",
															"desc": "The time in ticks to show this frame, overriding `frametime` above.\n",
															"key": "time",
															"type": {
																"kind": "int"
															}
														}
													]
												},
												{
													"kind": "int"
												}
											]
										}
									},
									"optional": true
								}
							]
						}
					},
					{
						"kind": "pair",
						"desc": "Only available for villager textures.\n",
						"key": "villager",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"desc": "Determines whether the villager's 'profession' hat layer should allow the 'type' hat layer to render or not. If this mcmeta is undefined the default is used.\n",
									"key": "hat",
									"type": {
										"kind": "union",
										"members": [
											{
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "full"
												}
											},
											{
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "partial"
												}
											}
										]
									},
									"optional": true
								}
							]
						}
					},
					{
						"kind": "pair",
						"desc": "Only available for colormaps.\n",
						"key": "texture",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"desc": "Causes the texture to blur when viewed from close up. Defaults to false.\n",
									"key": "blur",
									"type": {
										"kind": "boolean"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"desc": "Causes the texture to stretch instead of tiling in cases where it otherwise would, such as on the shadow. Defaults to false.\n",
									"key": "clamp",
									"type": {
										"kind": "boolean"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"desc": "Custom mipmap values for the texture.\n",
									"key": "mipmaps",
									"type": {
										"kind": "int_array"
									},
									"optional": true
								}
							]
						}
					}
				]
			},
			"trial_spawner": {
				"kind": "reference",
				"path": "::java::data::trial_spawner::TrialSpawnerConfig",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"trim_material": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "ID which will be used in the resource pack.\n",
						"key": "asset_name",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "tree",
										"values": {
											"registry": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "texture"
												}
											},
											"path": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "trims/color_palettes/"
												}
											}
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"desc": "Text displayed in the item tooltip.\n",
						"key": "description",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::text::Text"
						}
					},
					{
						"kind": "pair",
						"desc": "Item used in the smithing table for this material.\n",
						"key": "ingredient",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.21.2"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "item"
												}
											}
										}
									]
								},
								{
									"kind": "string",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.21.2"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "item"
														}
													},
													"exclude": {
														"kind": "tree",
														"values": {
															"0": {
																"kind": "literal",
																"value": {
																	"kind": "string",
																	"value": "air"
																}
															}
														}
													}
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21.4"
									}
								}
							}
						],
						"desc": "Model override predicate float.\n",
						"key": "item_model_index",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					},
					{
						"kind": "pair",
						"desc": "Armor materials that should have a different color palette.\n",
						"key": "override_armor_materials",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": {
										"kind": "reference",
										"path": "::java::data::trim::ArmorMaterial",
										"attributes": [
											{
												"name": "id"
											}
										]
									},
									"type": {
										"kind": "string"
									}
								}
							]
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19.4"
							}
						}
					}
				]
			},
			"trim_pattern": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "ID of the pattern that will be used in the resource pack as an overlay on the armor.\n",
						"key": "asset_id",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "tree",
										"values": {
											"registry": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "texture"
												}
											},
											"path": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "trims/models/armor/"
												}
											}
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"desc": "Text displayed in the item tooltip.\n",
						"key": "description",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::text::Text"
						}
					},
					{
						"kind": "pair",
						"desc": "The item used in the smithing table for this pattern.\n",
						"key": "template_item",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.21.2"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "item"
												}
											}
										}
									]
								},
								{
									"kind": "string",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.21.2"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "item"
														}
													},
													"exclude": {
														"kind": "tree",
														"values": {
															"0": {
																"kind": "literal",
																"value": {
																	"kind": "string",
																	"value": "air"
																}
															}
														}
													}
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.2"
									}
								}
							}
						],
						"desc": "Whether the pattern texture will be masked based on the underlying armor. Defaults to `false`.\n",
						"key": "decal",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19.4"
							}
						}
					}
				]
			},
			"wolf_variant": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "biomes",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "worldgen/biome"
														}
													},
													"tags": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "allowed"
														}
													}
												}
											}
										}
									]
								},
								{
									"kind": "list",
									"item": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "worldgen/biome"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "wild_texture",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "texture"
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "tame_texture",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "texture"
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "angry_texture",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "texture"
										}
									}
								}
							]
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.20.5"
							}
						}
					}
				]
			},
			"worldgen/biome": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"key": "category",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::biome::BiomeCategory"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.18"
									}
								}
							}
						],
						"desc": "Raises or lowers the terrain. Positive values are considered land and negative are oceans.\n",
						"key": "depth",
						"type": {
							"kind": "float"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.18"
									}
								}
							}
						],
						"desc": "Vertically stretches the terrain. Lower values produce flatter terrain.\n",
						"key": "scale",
						"type": {
							"kind": "float"
						}
					},
					{
						"kind": "pair",
						"key": "temperature",
						"type": {
							"kind": "float"
						}
					},
					{
						"kind": "pair",
						"key": "downfall",
						"type": {
							"kind": "float"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19.4"
									}
								}
							}
						],
						"key": "precipitation",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::biome::Precipitation"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19.4"
									}
								}
							}
						],
						"key": "has_precipitation",
						"type": {
							"kind": "boolean"
						}
					},
					{
						"kind": "pair",
						"key": "temperature_modifier",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::biome::TemperatureModifier"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.18"
									}
								}
							}
						],
						"desc": "If true, the world spawn will be preferred in this biome.\n",
						"key": "player_spawn_friendly",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "creature_spawn_probability",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "effects",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::biome::BiomeEffects"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.18"
									}
								}
							}
						],
						"key": "surface_builder",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::surface_builder::ConfiguredSurfaceBuilderRef"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.18"
									}
								}
							}
						],
						"key": "starts",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::worldgen::structure::StructureRef"
							}
						}
					},
					{
						"kind": "pair",
						"key": "spawners",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": {
										"kind": "reference",
										"path": "::java::data::worldgen::biome::MobCategory"
									},
									"type": {
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::data::worldgen::biome::SpawnerData"
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "spawn_costs",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "entity_type"
													}
												}
											}
										]
									},
									"type": {
										"kind": "reference",
										"path": "::java::data::worldgen::biome::MobSpawnCost"
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "carvers",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "struct",
									"fields": [
										{
											"kind": "pair",
											"key": {
												"kind": "reference",
												"path": "::java::data::worldgen::CarveStep"
											},
											"type": {
												"kind": "union",
												"members": [
													{
														"kind": "list",
														"item": {
															"kind": "reference",
															"path": "::java::data::worldgen::carver::CarverRef"
														}
													},
													{
														"kind": "string",
														"attributes": [
															{
																"name": "since",
																"value": {
																	"kind": "literal",
																	"value": {
																		"kind": "string",
																		"value": "1.18.2"
																	}
																}
															},
															{
																"name": "id",
																"value": {
																	"kind": "tree",
																	"values": {
																		"registry": {
																			"kind": "literal",
																			"value": {
																				"kind": "string",
																				"value": "worldgen/configured_carver"
																			}
																		},
																		"tags": {
																			"kind": "reference",
																			"path": "::java::data::worldgen::biome::allowed"
																		}
																	}
																}
															}
														]
													}
												]
											}
										}
									],
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.21.2"
												}
											}
										}
									]
								},
								{
									"kind": "union",
									"members": [
										{
											"kind": "list",
											"item": {
												"kind": "reference",
												"path": "::java::data::worldgen::carver::CarverRef"
											}
										},
										{
											"kind": "string",
											"attributes": [
												{
													"name": "id",
													"value": {
														"kind": "tree",
														"values": {
															"registry": {
																"kind": "literal",
																"value": {
																	"kind": "string",
																	"value": "worldgen/configured_carver"
																}
															},
															"tags": {
																"kind": "reference",
																"path": "::java::data::worldgen::biome::allowed"
															}
														}
													}
												}
											]
										}
									],
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.21.2"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "features",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "list",
									"item": {
										"kind": "list",
										"item": {
											"kind": "reference",
											"path": "::java::data::worldgen::feature::ConfiguredFeatureRef"
										}
									},
									"lengthRange": {
										"kind": 0,
										"max": 10
									},
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.18"
												}
											}
										}
									]
								},
								{
									"kind": "list",
									"item": {
										"kind": "union",
										"members": [
											{
												"kind": "list",
												"item": {
													"kind": "reference",
													"path": "::java::data::worldgen::feature::placement::PlacedFeatureRef"
												}
											},
											{
												"kind": "string",
												"attributes": [
													{
														"name": "since",
														"value": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "1.18.2"
															}
														}
													},
													{
														"name": "id",
														"value": {
															"kind": "tree",
															"values": {
																"registry": {
																	"kind": "literal",
																	"value": {
																		"kind": "string",
																		"value": "worldgen/placed_feature"
																	}
																},
																"tags": {
																	"kind": "reference",
																	"path": "::java::data::worldgen::biome::allowed"
																}
															}
														}
													}
												]
											}
										]
									},
									"lengthRange": {
										"kind": 0,
										"max": 11
									},
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.18"
												}
											}
										}
									]
								}
							]
						}
					}
				]
			},
			"worldgen/configured_carver": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "type",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "worldgen/carver"
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "config",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "probability",
									"type": {
										"kind": "float",
										"valueRange": {
											"kind": 0,
											"min": 0,
											"max": 1
										}
									}
								},
								{
									"kind": "pair",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.19"
												}
											}
										}
									],
									"key": "replaceable",
									"type": {
										"kind": "union",
										"members": [
											{
												"kind": "list",
												"item": {
													"kind": "string",
													"attributes": [
														{
															"name": "id",
															"value": {
																"kind": "literal",
																"value": {
																	"kind": "string",
																	"value": "block"
																}
															}
														}
													]
												}
											},
											{
												"kind": "string",
												"attributes": [
													{
														"name": "id",
														"value": {
															"kind": "tree",
															"values": {
																"registry": {
																	"kind": "literal",
																	"value": {
																		"kind": "string",
																		"value": "block"
																	}
																},
																"tags": {
																	"kind": "literal",
																	"value": {
																		"kind": "string",
																		"value": "allowed"
																	}
																}
															}
														}
													}
												]
											}
										]
									},
									"optional": true
								},
								{
									"kind": "spread",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									],
									"type": {
										"kind": "struct",
										"fields": [
											{
												"kind": "pair",
												"key": "y",
												"type": {
													"kind": "reference",
													"path": "::java::data::worldgen::HeightProvider"
												}
											},
											{
												"kind": "pair",
												"key": "yScale",
												"type": {
													"kind": "concrete",
													"child": {
														"kind": "reference",
														"path": "::java::data::worldgen::FloatProvider"
													},
													"typeArgs": [
														{
															"kind": "float"
														}
													]
												}
											},
											{
												"kind": "pair",
												"key": "lava_level",
												"type": {
													"kind": "reference",
													"path": "::java::data::worldgen::VerticalAnchor"
												}
											},
											{
												"kind": "pair",
												"attributes": [
													{
														"name": "until",
														"value": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "1.18"
															}
														}
													}
												],
												"key": "aquifers_enabled",
												"type": {
													"kind": "boolean"
												}
											},
											{
												"kind": "pair",
												"key": "debug_settings",
												"type": {
													"kind": "reference",
													"path": "::java::data::worldgen::carver::CarverDebugSettings"
												},
												"optional": true
											}
										]
									}
								},
								{
									"kind": "spread",
									"type": {
										"kind": "dispatcher",
										"parallelIndices": [
											{
												"kind": "dynamic",
												"accessor": [
													{
														"keyword": "parent"
													},
													"type"
												]
											}
										],
										"registry": "minecraft:carver_config"
									}
								}
							]
						}
					}
				]
			},
			"worldgen/configured_feature": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "type",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "worldgen/feature"
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "config",
						"type": {
							"kind": "dispatcher",
							"parallelIndices": [
								{
									"kind": "dynamic",
									"accessor": [
										"type"
									]
								}
							],
							"registry": "minecraft:feature_config"
						}
					}
				]
			},
			"worldgen/configured_structure_feature": {
				"kind": "reference",
				"path": "::java::data::worldgen::structure::Structure",
				"attributes": [
					{
						"name": "until",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.18.2"
							}
						}
					}
				]
			},
			"worldgen/configured_surface_builder": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "type",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "worldgen/surface_builder"
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "config",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "top_material",
									"type": {
										"kind": "reference",
										"path": "::java::server::util::block_state::BlockState"
									}
								},
								{
									"kind": "pair",
									"key": "under_material",
									"type": {
										"kind": "reference",
										"path": "::java::server::util::block_state::BlockState"
									}
								},
								{
									"kind": "pair",
									"key": "underwater_material",
									"type": {
										"kind": "reference",
										"path": "::java::server::util::block_state::BlockState"
									}
								}
							]
						}
					}
				],
				"attributes": [
					{
						"name": "until",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.18"
							}
						}
					}
				]
			},
			"worldgen/density_function": {
				"kind": "reference",
				"path": "::java::data::worldgen::density_function::DensityFunction"
			},
			"worldgen/flat_level_generator_preset": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "display",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.21.2"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "item"
												}
											}
										}
									]
								},
								{
									"kind": "string",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.21.2"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "item"
														}
													},
													"exclude": {
														"kind": "tree",
														"values": {
															"0": {
																"kind": "literal",
																"value": {
																	"kind": "string",
																	"value": "air"
																}
															}
														}
													}
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "settings",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::dimension::chunk_generator::FlatGeneratorSettings"
						}
					}
				]
			},
			"worldgen/multi_noise_biome_source_parameter_list": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "preset",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::dimension::biome_source::MultiNoisePreset",
							"attributes": [
								{
									"name": "id"
								}
							]
						}
					}
				]
			},
			"worldgen/noise": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "firstOctave",
						"type": {
							"kind": "int"
						}
					},
					{
						"kind": "pair",
						"key": "amplitudes",
						"type": {
							"kind": "list",
							"item": {
								"kind": "double"
							}
						}
					}
				]
			},
			"worldgen/noise_settings": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "default_block",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					},
					{
						"kind": "pair",
						"key": "default_fluid",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.18"
									}
								}
							}
						],
						"desc": "Relative position of the bedrock roof starting at the world height. Higher numbers move the roof down.\n",
						"key": "bedrock_roof_position",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": -20,
										"max": 276
									},
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								},
								{
									"kind": "int",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.18"
									}
								}
							}
						],
						"key": "bedrock_floor_position",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": -20,
										"max": 276
									},
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								},
								{
									"kind": "int",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "sea_level",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 255
									},
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								},
								{
									"kind": "int",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.17"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.17"
									}
								}
							},
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.18"
									}
								}
							}
						],
						"key": "min_surface_level",
						"type": {
							"kind": "int"
						}
					},
					{
						"kind": "pair",
						"desc": "If true, mobs will not spawn during generation.\n",
						"key": "disable_mob_generation",
						"type": {
							"kind": "boolean"
						}
					},
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.17"
									}
								}
							}
						],
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.18.2"
												}
											}
										}
									],
									"key": "noise_caves_enabled",
									"type": {
										"kind": "boolean"
									}
								},
								{
									"kind": "pair",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.18.2"
												}
											}
										}
									],
									"key": "noodle_caves_enabled",
									"type": {
										"kind": "boolean"
									}
								},
								{
									"kind": "pair",
									"key": "aquifers_enabled",
									"type": {
										"kind": "boolean"
									}
								},
								{
									"kind": "pair",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.18"
												}
											}
										}
									],
									"key": "deepslate_enabled",
									"type": {
										"kind": "boolean"
									}
								},
								{
									"kind": "pair",
									"key": "ore_veins_enabled",
									"type": {
										"kind": "boolean"
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.18"
									}
								}
							}
						],
						"key": "legacy_random_source",
						"type": {
							"kind": "boolean"
						}
					},
					{
						"kind": "pair",
						"key": "noise",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::noise_settings::NoiseSettings"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.18.2"
									}
								}
							}
						],
						"key": "noise_router",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::noise_settings::NoiseRouter"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"key": "spawn_target",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::worldgen::dimension::biome_source::ClimateParameters"
							}
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.18"
									}
								}
							}
						],
						"key": "surface_rule",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::surface_rule::SurfaceRule"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.18.2"
									}
								}
							}
						],
						"key": "structures",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::noise_settings::StructureSettings"
						}
					}
				]
			},
			"worldgen/placed_feature": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "feature",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::ConfiguredFeatureRef"
						}
					},
					{
						"kind": "pair",
						"key": "placement",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::worldgen::feature::placement::PlacementModifier"
							}
						}
					}
				]
			},
			"worldgen/processor_list": {
				"kind": "reference",
				"path": "::java::data::worldgen::processor_list::ProcessorList"
			},
			"worldgen/structure": {
				"kind": "reference",
				"path": "::java::data::worldgen::structure::Structure",
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.18.2"
							}
						}
					}
				]
			},
			"worldgen/structure_set": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "structures",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::worldgen::structure_set::StructureSetElement"
							}
						}
					},
					{
						"kind": "pair",
						"key": "placement",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::structure_set::StructurePlacement"
						}
					}
				]
			},
			"worldgen/template_pool": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19.3"
									}
								}
							}
						],
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "name",
									"type": {
										"kind": "string"
									}
								}
							]
						}
					},
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19.3"
									}
								}
							}
						],
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "name",
									"type": {
										"kind": "string"
									},
									"optional": true
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "fallback",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "worldgen/template_pool"
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "elements",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::worldgen::template_pool::WeightedElement"
							}
						}
					}
				]
			},
			"worldgen/world_preset": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "dimensions",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "tree",
													"values": {
														"registry": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "dimension"
															}
														},
														"definition": {
															"kind": "literal",
															"value": {
																"kind": "boolean",
																"value": true
															}
														}
													}
												}
											}
										]
									},
									"type": {
										"kind": "reference",
										"path": "::java::data::worldgen::dimension::Dimension"
									}
								}
							]
						}
					}
				]
			}
		},
		"minecraft:root_placer": {
			"mangrove_root_placer": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "mangrove_root_placement",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::tree::MangroveRootPlacement"
						}
					}
				]
			}
		},
		"minecraft:rule_block_entity_modifier": {
			"append_loot": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "loot_table",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "loot_table"
										}
									}
								}
							]
						}
					}
				]
			},
			"append_static": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "data",
						"type": {
							"kind": "dispatcher",
							"parallelIndices": [
								{
									"kind": "dynamic",
									"accessor": [
										{
											"keyword": "parent"
										},
										"output_state",
										"Name"
									]
								}
							],
							"registry": "minecraft:block"
						}
					}
				]
			},
			"clear": {
				"kind": "struct",
				"fields": []
			},
			"passthrough": {
				"kind": "struct",
				"fields": []
			}
		},
		"minecraft:rule_test": {
			"block_match": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "block",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "block"
										}
									}
								}
							]
						}
					}
				]
			},
			"blockstate_match": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "block_state",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					}
				]
			},
			"random_block_match": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "block",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "block"
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "probability",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					}
				]
			},
			"random_blockstate_match": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "block_state",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					},
					{
						"kind": "pair",
						"key": "probability",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					}
				]
			},
			"tag_match": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "tag",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "tree",
										"values": {
											"registry": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "block"
												}
											},
											"tags": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "implicit"
												}
											}
										}
									}
								}
							]
						}
					}
				]
			}
		},
		"minecraft:score_provider": {
			"context": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "target",
						"type": {
							"kind": "reference",
							"path": "::java::data::loot::EntityTarget"
						}
					}
				]
			},
			"fixed": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "name",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "score_holder"
								}
							]
						}
					}
				]
			}
		},
		"minecraft:select_item_property": {
			"%unknown": {
				"kind": "struct",
				"fields": []
			},
			"block_state": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "block_state_property",
						"type": {
							"kind": "dispatcher",
							"parallelIndices": [
								{
									"kind": "static",
									"value": "%fallback"
								}
							],
							"registry": "mcdoc:block_state_keys"
						}
					}
				]
			},
			"custom_model_data": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "The index of the `strings` list in the `custom_model_data` component. Defaults to 0.\n",
						"key": "index",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0
							}
						},
						"optional": true
					}
				]
			},
			"local_time": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Format to use for time formatting.\n\nExamples: `yyyy-MM-dd`, `HH:mm:ss`.\n",
						"key": "pattern",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "time_pattern"
								}
							]
						}
					},
					{
						"kind": "pair",
						"desc": "Defaults to the root locale.\n\nExamples: `en_US`, `cs_AU@numbers=thai;calendar=japanese`.\n",
						"key": "locale",
						"type": {
							"kind": "string"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Defaults to the timezone set on the client.\n\nExamples: `Europe/Stockholm`, `GMT+0:45`.\n",
						"key": "time_zone",
						"type": {
							"kind": "string"
						},
						"optional": true
					}
				]
			}
		},
		"minecraft:sound_type": {
			"%none": {
				"kind": "string",
				"attributes": [
					{
						"name": "id",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "sound"
							}
						}
					}
				]
			},
			"event": {
				"kind": "string",
				"attributes": [
					{
						"name": "id",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "weighed_sound_event"
							}
						}
					}
				]
			},
			"file": {
				"kind": "string",
				"attributes": [
					{
						"name": "id",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "sound"
							}
						}
					}
				]
			}
		},
		"minecraft:special_item_model": {
			"%unknown": {
				"kind": "struct",
				"fields": []
			},
			"banner": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "color",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::color::ColorString"
						}
					}
				]
			},
			"bed": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "texture",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "tree",
										"values": {
											"registry": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "texture"
												}
											},
											"path": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "entity/bed/"
												}
											}
										}
									}
								}
							]
						}
					}
				]
			},
			"hanging_sign": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "wood_type",
						"type": {
							"kind": "reference",
							"path": "::java::assets::item_definition::WoodType"
						}
					},
					{
						"kind": "pair",
						"key": "texture",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "tree",
										"values": {
											"registry": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "texture"
												}
											},
											"path": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "entity/signs/hanging/"
												}
											}
										}
									}
								}
							]
						}
					}
				]
			},
			"head": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "kind",
						"type": {
							"kind": "reference",
							"path": "::java::assets::item_definition::HeadType"
						}
					},
					{
						"kind": "pair",
						"desc": "Texture to use instead of the texture from `kind`.\n\nIf present, will ignore the `profile` compnent.\n",
						"key": "texture",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "tree",
										"values": {
											"registry": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "texture"
												}
											},
											"path": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "entity/"
												}
											}
										}
									}
								}
							]
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Controls the animation time for piglin and dragon heads. Defaults to `0`.\n",
						"key": "animation",
						"type": {
							"kind": "float"
						},
						"optional": true
					}
				]
			},
			"shulker_box": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "texture",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "tree",
										"values": {
											"registry": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "texture"
												}
											},
											"path": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "entity/shulker/"
												}
											}
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "openness",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Defaults to `up`.\n",
						"key": "orientation",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::direction::Direction"
						},
						"optional": true
					}
				]
			},
			"standing_sign": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "wood_type",
						"type": {
							"kind": "reference",
							"path": "::java::assets::item_definition::WoodType"
						}
					},
					{
						"kind": "pair",
						"key": "texture",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "tree",
										"values": {
											"registry": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "texture"
												}
											},
											"path": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "entity/signs/"
												}
											}
										}
									}
								}
							]
						}
					}
				]
			},
			"texture": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "texture",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "tree",
										"values": {
											"registry": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "texture"
												}
											},
											"path": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "entity/chest/"
												}
											}
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"desc": "Defaults to `0`.\n",
						"key": "openness",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						},
						"optional": true
					}
				]
			}
		},
		"minecraft:sprite_source": {
			"directory": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "source",
						"type": {
							"kind": "string"
						}
					},
					{
						"kind": "pair",
						"key": "prefix",
						"type": {
							"kind": "string"
						}
					}
				]
			},
			"filter": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "pattern",
						"type": {
							"kind": "reference",
							"path": "::java::assets::atlas::FilterPattern"
						}
					}
				]
			},
			"paletted_permutations": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "textures",
						"type": {
							"kind": "list",
							"item": {
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "texture"
											}
										}
									}
								]
							}
						}
					},
					{
						"kind": "pair",
						"key": "palette_key",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "texture"
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "permutations",
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": {
										"kind": "string",
										"attributes": [
											{
												"name": "permutation",
												"value": {
													"kind": "tree",
													"values": {
														"definition": {
															"kind": "literal",
															"value": {
																"kind": "boolean",
																"value": true
															}
														}
													}
												}
											}
										]
									},
									"type": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "texture"
													}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19.4"
							}
						}
					}
				]
			},
			"single": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "resource",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "texture"
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "sprite",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "tree",
										"values": {
											"registry": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "texture"
												}
											},
											"definition": {
												"kind": "literal",
												"value": {
													"kind": "boolean",
													"value": true
												}
											}
										}
									}
								}
							]
						},
						"optional": true
					}
				]
			},
			"unstitch": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "resource",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "texture"
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"desc": "If set to the resource width, regions will use pixel coordinates.\n",
						"key": "divisor_x",
						"type": {
							"kind": "double"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "If set to the resource height, regions will use pixel coordinates.\n",
						"key": "divisor_y",
						"type": {
							"kind": "double"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"key": "regions",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::assets::atlas::UnstitchRegion"
							}
						}
					}
				]
			}
		},
		"minecraft:statistic_type": {
			"%unknown": {
				"kind": "string"
			},
			"broken": {
				"kind": "string",
				"attributes": [
					{
						"name": "id",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "item"
							}
						}
					}
				]
			},
			"crafted": {
				"kind": "string",
				"attributes": [
					{
						"name": "id",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "item"
							}
						}
					}
				]
			},
			"custom": {
				"kind": "string",
				"attributes": [
					{
						"name": "id",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "custom_stat"
							}
						}
					}
				]
			},
			"dropped": {
				"kind": "string",
				"attributes": [
					{
						"name": "id",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "item"
							}
						}
					}
				]
			},
			"killed": {
				"kind": "string",
				"attributes": [
					{
						"name": "id",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "entity_type"
							}
						}
					}
				]
			},
			"killed_by": {
				"kind": "string",
				"attributes": [
					{
						"name": "id",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "entity_type"
							}
						}
					}
				]
			},
			"mined": {
				"kind": "string",
				"attributes": [
					{
						"name": "id",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "block"
							}
						}
					}
				]
			},
			"picked_up": {
				"kind": "string",
				"attributes": [
					{
						"name": "id",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "item"
							}
						}
					}
				]
			},
			"used": {
				"kind": "string",
				"attributes": [
					{
						"name": "id",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "item"
							}
						}
					}
				]
			}
		},
		"minecraft:storage": {
			"%unknown": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": {
							"kind": "string"
						},
						"type": {
							"kind": "any"
						}
					}
				]
			}
		},
		"minecraft:structure_config": {
			"bastion_remnant": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "start_pool",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "worldgen/template_pool"
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "size",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 7
									},
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.3"
												}
											}
										}
									]
								},
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 1,
										"max": 20
									},
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.3"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "start_height",
									"type": {
										"kind": "reference",
										"path": "::java::data::worldgen::HeightProvider"
									}
								},
								{
									"kind": "pair",
									"key": "start_jigsaw_name",
									"type": {
										"kind": "string",
										"attributes": [
											{
												"name": "id"
											}
										]
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "project_start_to_heightmap",
									"type": {
										"kind": "reference",
										"path": "::java::data::worldgen::HeightmapType"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "max_distance_from_center",
									"type": {
										"kind": "dispatcher",
										"parallelIndices": [
											{
												"kind": "dynamic",
												"accessor": [
													"terrain_adaptation"
												]
											}
										],
										"registry": "minecraft:jigsaw_max_distance_from_center"
									}
								},
								{
									"kind": "pair",
									"key": "use_expansion_hack",
									"type": {
										"kind": "boolean"
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.3"
									}
								}
							}
						],
						"key": "pool_aliases",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::worldgen::structure::PoolAlias"
							}
						},
						"optional": true
					},
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21"
									}
								}
							}
						],
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "dimension_padding",
									"type": {
										"kind": "union",
										"members": [
											{
												"kind": "int",
												"valueRange": {
													"kind": 0,
													"min": 0
												}
											},
											{
												"kind": "struct",
												"fields": [
													{
														"kind": "pair",
														"key": "bottom",
														"type": {
															"kind": "int",
															"valueRange": {
																"kind": 0,
																"min": 0
															}
														},
														"optional": true
													},
													{
														"kind": "pair",
														"key": "top",
														"type": {
															"kind": "int",
															"valueRange": {
																"kind": 0,
																"min": 0
															}
														},
														"optional": true
													}
												]
											}
										]
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "liquid_settings",
									"type": {
										"kind": "reference",
										"path": "::java::data::worldgen::structure::LiquidSettings"
									},
									"optional": true
								}
							]
						}
					}
				]
			},
			"buried_treasure": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"key": "probability",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					}
				]
			},
			"desert_pyramid": {
				"kind": "struct",
				"fields": []
			},
			"end_city": {
				"kind": "struct",
				"fields": []
			},
			"fortress": {
				"kind": "struct",
				"fields": []
			},
			"igloo": {
				"kind": "struct",
				"fields": []
			},
			"jigsaw": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "start_pool",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "worldgen/template_pool"
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "size",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 7
									},
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.3"
												}
											}
										}
									]
								},
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 1,
										"max": 20
									},
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.3"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "start_height",
									"type": {
										"kind": "reference",
										"path": "::java::data::worldgen::HeightProvider"
									}
								},
								{
									"kind": "pair",
									"key": "start_jigsaw_name",
									"type": {
										"kind": "string",
										"attributes": [
											{
												"name": "id"
											}
										]
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "project_start_to_heightmap",
									"type": {
										"kind": "reference",
										"path": "::java::data::worldgen::HeightmapType"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "max_distance_from_center",
									"type": {
										"kind": "dispatcher",
										"parallelIndices": [
											{
												"kind": "dynamic",
												"accessor": [
													"terrain_adaptation"
												]
											}
										],
										"registry": "minecraft:jigsaw_max_distance_from_center"
									}
								},
								{
									"kind": "pair",
									"key": "use_expansion_hack",
									"type": {
										"kind": "boolean"
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.3"
									}
								}
							}
						],
						"key": "pool_aliases",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::worldgen::structure::PoolAlias"
							}
						},
						"optional": true
					},
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21"
									}
								}
							}
						],
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "dimension_padding",
									"type": {
										"kind": "union",
										"members": [
											{
												"kind": "int",
												"valueRange": {
													"kind": 0,
													"min": 0
												}
											},
											{
												"kind": "struct",
												"fields": [
													{
														"kind": "pair",
														"key": "bottom",
														"type": {
															"kind": "int",
															"valueRange": {
																"kind": 0,
																"min": 0
															}
														},
														"optional": true
													},
													{
														"kind": "pair",
														"key": "top",
														"type": {
															"kind": "int",
															"valueRange": {
																"kind": 0,
																"min": 0
															}
														},
														"optional": true
													}
												]
											}
										]
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "liquid_settings",
									"type": {
										"kind": "reference",
										"path": "::java::data::worldgen::structure::LiquidSettings"
									},
									"optional": true
								}
							]
						}
					}
				]
			},
			"jungle_temple": {
				"kind": "struct",
				"fields": []
			},
			"mineshaft": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"key": "type",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::structure::MineshaftType"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"key": "mineshaft_type",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::structure::MineshaftType"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"key": "probability",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					}
				]
			},
			"nether_fossil": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "height",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::HeightProvider"
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"ocean_monument": {
				"kind": "struct",
				"fields": []
			},
			"ocean_ruin": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "biome_temp",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::structure::BiomeTemperature"
						}
					},
					{
						"kind": "pair",
						"key": "large_probability",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					},
					{
						"kind": "pair",
						"key": "cluster_probability",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					}
				]
			},
			"pillager_outpost": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "start_pool",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "worldgen/template_pool"
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "size",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 7
									},
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.3"
												}
											}
										}
									]
								},
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 1,
										"max": 20
									},
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.3"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "start_height",
									"type": {
										"kind": "reference",
										"path": "::java::data::worldgen::HeightProvider"
									}
								},
								{
									"kind": "pair",
									"key": "start_jigsaw_name",
									"type": {
										"kind": "string",
										"attributes": [
											{
												"name": "id"
											}
										]
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "project_start_to_heightmap",
									"type": {
										"kind": "reference",
										"path": "::java::data::worldgen::HeightmapType"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "max_distance_from_center",
									"type": {
										"kind": "dispatcher",
										"parallelIndices": [
											{
												"kind": "dynamic",
												"accessor": [
													"terrain_adaptation"
												]
											}
										],
										"registry": "minecraft:jigsaw_max_distance_from_center"
									}
								},
								{
									"kind": "pair",
									"key": "use_expansion_hack",
									"type": {
										"kind": "boolean"
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.3"
									}
								}
							}
						],
						"key": "pool_aliases",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::worldgen::structure::PoolAlias"
							}
						},
						"optional": true
					},
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21"
									}
								}
							}
						],
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "dimension_padding",
									"type": {
										"kind": "union",
										"members": [
											{
												"kind": "int",
												"valueRange": {
													"kind": 0,
													"min": 0
												}
											},
											{
												"kind": "struct",
												"fields": [
													{
														"kind": "pair",
														"key": "bottom",
														"type": {
															"kind": "int",
															"valueRange": {
																"kind": 0,
																"min": 0
															}
														},
														"optional": true
													},
													{
														"kind": "pair",
														"key": "top",
														"type": {
															"kind": "int",
															"valueRange": {
																"kind": 0,
																"min": 0
															}
														},
														"optional": true
													}
												]
											}
										]
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "liquid_settings",
									"type": {
										"kind": "reference",
										"path": "::java::data::worldgen::structure::LiquidSettings"
									},
									"optional": true
								}
							]
						}
					}
				]
			},
			"ruined_portal": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"key": "portal_type",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::structure::RuinedPortalType"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"key": "setups",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::worldgen::structure::RuinedPortalSetup"
							}
						}
					}
				]
			},
			"shipwreck": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "is_beached",
						"type": {
							"kind": "boolean"
						},
						"optional": true
					}
				]
			},
			"stronghold": {
				"kind": "struct",
				"fields": []
			},
			"swamp_hut": {
				"kind": "struct",
				"fields": []
			},
			"village": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "start_pool",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "worldgen/template_pool"
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "size",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 0,
										"max": 7
									},
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.3"
												}
											}
										}
									]
								},
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 1,
										"max": 20
									},
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.20.3"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "start_height",
									"type": {
										"kind": "reference",
										"path": "::java::data::worldgen::HeightProvider"
									}
								},
								{
									"kind": "pair",
									"key": "start_jigsaw_name",
									"type": {
										"kind": "string",
										"attributes": [
											{
												"name": "id"
											}
										]
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "project_start_to_heightmap",
									"type": {
										"kind": "reference",
										"path": "::java::data::worldgen::HeightmapType"
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "max_distance_from_center",
									"type": {
										"kind": "dispatcher",
										"parallelIndices": [
											{
												"kind": "dynamic",
												"accessor": [
													"terrain_adaptation"
												]
											}
										],
										"registry": "minecraft:jigsaw_max_distance_from_center"
									}
								},
								{
									"kind": "pair",
									"key": "use_expansion_hack",
									"type": {
										"kind": "boolean"
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.20.3"
									}
								}
							}
						],
						"key": "pool_aliases",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::worldgen::structure::PoolAlias"
							}
						},
						"optional": true
					},
					{
						"kind": "spread",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21"
									}
								}
							}
						],
						"type": {
							"kind": "struct",
							"fields": [
								{
									"kind": "pair",
									"key": "dimension_padding",
									"type": {
										"kind": "union",
										"members": [
											{
												"kind": "int",
												"valueRange": {
													"kind": 0,
													"min": 0
												}
											},
											{
												"kind": "struct",
												"fields": [
													{
														"kind": "pair",
														"key": "bottom",
														"type": {
															"kind": "int",
															"valueRange": {
																"kind": 0,
																"min": 0
															}
														},
														"optional": true
													},
													{
														"kind": "pair",
														"key": "top",
														"type": {
															"kind": "int",
															"valueRange": {
																"kind": 0,
																"min": 0
															}
														},
														"optional": true
													}
												]
											}
										]
									},
									"optional": true
								},
								{
									"kind": "pair",
									"key": "liquid_settings",
									"type": {
										"kind": "reference",
										"path": "::java::data::worldgen::structure::LiquidSettings"
									},
									"optional": true
								}
							]
						}
					}
				]
			},
			"woodland_mansion": {
				"kind": "struct",
				"fields": []
			}
		},
		"minecraft:structure_placement": {
			"concentric_rings": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "distance",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1023
							}
						}
					},
					{
						"kind": "pair",
						"key": "spread",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1023
							}
						}
					},
					{
						"kind": "pair",
						"key": "count",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 1,
								"max": 4095
							}
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"key": "preferred_biomes",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "list",
									"item": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "worldgen/biome"
													}
												}
											}
										]
									}
								},
								{
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "worldgen/biome"
														}
													},
													"tags": {
														"kind": "reference",
														"path": "::java::data::worldgen::structure_set::allowed"
													}
												}
											}
										}
									]
								}
							]
						}
					}
				]
			},
			"random_spread": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Average distance in chunks between two structures of this type.\n",
						"key": "spacing",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 4096
							}
						}
					},
					{
						"kind": "pair",
						"desc": "Minimum distance in chunks between two structures of this type.\n",
						"key": "separation",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 4096
							}
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"key": "salt",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0
							}
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.18.2"
									}
								}
							}
						],
						"key": "spread_type",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::structure_set::SpreadType"
						},
						"optional": true
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.18.2"
									}
								}
							},
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"key": "locate_offset",
						"type": {
							"kind": "list",
							"item": {
								"kind": "int",
								"valueRange": {
									"kind": 0,
									"min": -16,
									"max": 16
								}
							},
							"lengthRange": {
								"kind": 0,
								"min": 3,
								"max": 3
							}
						},
						"optional": true
					}
				]
			}
		},
		"minecraft:surface_condition": {
			"biome": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "biome_is",
						"type": {
							"kind": "list",
							"item": {
								"kind": "string",
								"attributes": [
									{
										"name": "id",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "worldgen/biome"
											}
										}
									}
								]
							}
						}
					}
				]
			},
			"noise_threshold": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "noise",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "worldgen/noise"
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "min_threshold",
						"type": {
							"kind": "float"
						}
					},
					{
						"kind": "pair",
						"key": "max_threshold",
						"type": {
							"kind": "float"
						}
					}
				]
			},
			"not": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "invert",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::surface_rule::SurfaceCondition"
						}
					}
				]
			},
			"stone_depth": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "offset",
						"type": {
							"kind": "int"
						}
					},
					{
						"kind": "pair",
						"key": "surface_type",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::CaveSurface"
						}
					},
					{
						"kind": "pair",
						"key": "add_surface_depth",
						"type": {
							"kind": "boolean"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "until",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.18.2"
									}
								}
							}
						],
						"key": "add_surface_secondary_depth",
						"type": {
							"kind": "boolean"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.18.2"
									}
								}
							}
						],
						"key": "secondary_depth_range",
						"type": {
							"kind": "int"
						}
					}
				]
			},
			"vertical_gradient": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "random_name",
						"type": {
							"kind": "string"
						}
					},
					{
						"kind": "pair",
						"key": "true_at_and_below",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::VerticalAnchor"
						}
					},
					{
						"kind": "pair",
						"key": "false_at_and_above",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::VerticalAnchor"
						}
					}
				]
			},
			"water": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "offset",
						"type": {
							"kind": "int"
						}
					},
					{
						"kind": "pair",
						"key": "surface_depth_multiplier",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": -20,
								"max": 20
							}
						}
					},
					{
						"kind": "pair",
						"key": "add_stone_depth",
						"type": {
							"kind": "boolean"
						}
					}
				]
			},
			"y_above": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "anchor",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::VerticalAnchor"
						}
					},
					{
						"kind": "pair",
						"key": "surface_depth_multiplier",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": -20,
								"max": 20
							}
						}
					},
					{
						"kind": "pair",
						"key": "add_stone_depth",
						"type": {
							"kind": "boolean"
						}
					}
				]
			}
		},
		"minecraft:surface_rule": {
			"block": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "result_state",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::block_state::BlockState"
						}
					}
				]
			},
			"condition": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "if_true",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::surface_rule::SurfaceCondition"
						}
					},
					{
						"kind": "pair",
						"key": "then_run",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::surface_rule::SurfaceRule"
						}
					}
				]
			},
			"sequence": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "sequence",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::worldgen::surface_rule::SurfaceRule"
							}
						}
					}
				]
			}
		},
		"minecraft:template_pool_element": {
			"feature_pool_element": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::template_pool::ElementBase"
						}
					},
					{
						"kind": "pair",
						"key": "feature",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "reference",
									"path": "::java::data::worldgen::feature::ConfiguredFeatureRef",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.18"
												}
											}
										}
									]
								},
								{
									"kind": "reference",
									"path": "::java::data::worldgen::feature::placement::PlacedFeatureRef",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.18"
												}
											}
										}
									]
								}
							]
						}
					}
				]
			},
			"legacy_single_pool_element": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::template_pool::ElementBase"
						}
					},
					{
						"kind": "pair",
						"key": "location",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "structure"
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "processors",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::processor_list::ProcessorListRef"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21"
									}
								}
							}
						],
						"key": "override_liquid_settings",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::structure::LiquidSettings"
						},
						"optional": true
					}
				]
			},
			"list_pool_element": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::template_pool::ElementBase"
						}
					},
					{
						"kind": "pair",
						"key": "elements",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::worldgen::template_pool::Element"
							}
						}
					}
				]
			},
			"single_pool_element": {
				"kind": "struct",
				"fields": [
					{
						"kind": "spread",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::template_pool::ElementBase"
						}
					},
					{
						"kind": "pair",
						"key": "location",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "structure"
										}
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "processors",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::processor_list::ProcessorListRef"
						}
					},
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.21"
									}
								}
							}
						],
						"key": "override_liquid_settings",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::structure::LiquidSettings"
						},
						"optional": true
					}
				]
			}
		},
		"minecraft:template_processor": {
			"block_age": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "mossiness",
						"type": {
							"kind": "float"
						}
					}
				]
			},
			"block_ignore": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "blocks",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::util::block_state::BlockState"
							}
						}
					}
				]
			},
			"block_rot": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "integrity",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					},
					{
						"kind": "pair",
						"key": "rottable_blocks",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "list",
									"item": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "block"
													}
												}
											}
										]
									}
								},
								{
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "block"
														}
													},
													"tags": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "allowed"
														}
													}
												}
											}
										}
									]
								}
							]
						},
						"optional": true
					}
				]
			},
			"capped": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "delegate",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::processor_list::Processor"
						}
					},
					{
						"kind": "pair",
						"key": "limit",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::IntProvider"
							},
							"typeArgs": [
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 0
									}
								}
							]
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19"
							}
						}
					}
				]
			},
			"gravity": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "heightmap",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::HeightmapType"
						}
					},
					{
						"kind": "pair",
						"key": "offset",
						"type": {
							"kind": "int"
						}
					}
				]
			},
			"protected_blocks": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "value",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "string",
									"attributes": [
										{
											"name": "until",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.18.2"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "block"
														}
													},
													"tags": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "implicit"
														}
													}
												}
											}
										}
									]
								},
								{
									"kind": "string",
									"attributes": [
										{
											"name": "since",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "1.18.2"
												}
											}
										},
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "block"
														}
													},
													"tags": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "required"
														}
													}
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"rule": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "rules",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::worldgen::processor_list::ProcessorRule"
							}
						}
					}
				]
			}
		},
		"minecraft:tint_source": {
			"constant": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Constant tint color to apply.\n",
						"key": "value",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::color::RGB"
						}
					}
				]
			},
			"custom_model_data": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "The index of the `colors` list in the `custom_model_data` component. Defaults to 0.\n",
						"key": "index",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0
							}
						},
						"optional": true
					},
					{
						"kind": "pair",
						"desc": "Tint to apply when the `custom_model_data` component is not present, or when it doesn't have a color in the specified index.\n",
						"key": "default",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::color::RGB"
						}
					}
				]
			},
			"dye": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Tint to apply when the `dyed_color` component is not present.\n",
						"key": "default",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "int",
									"attributes": [
										{
											"name": "canonical"
										},
										{
											"name": "color",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "composite_argb"
												}
											}
										}
									]
								},
								{
									"kind": "list",
									"item": {
										"kind": "float"
									},
									"lengthRange": {
										"kind": 0,
										"min": 3,
										"max": 3
									},
									"attributes": [
										{
											"name": "color",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "dec_rgb"
												}
											}
										}
									]
								}
							]
						}
					}
				]
			},
			"firework": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Tint to apply when the `firework_explosion` component is not present.\n",
						"key": "default",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "int",
									"attributes": [
										{
											"name": "canonical"
										},
										{
											"name": "color",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "composite_argb"
												}
											}
										}
									]
								},
								{
									"kind": "list",
									"item": {
										"kind": "float"
									},
									"lengthRange": {
										"kind": 0,
										"min": 3,
										"max": 3
									},
									"attributes": [
										{
											"name": "color",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "dec_rgb"
												}
											}
										}
									]
								}
							]
						}
					}
				]
			},
			"grass": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "temperature",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					},
					{
						"kind": "pair",
						"key": "downfall",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					}
				]
			},
			"map_color": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Tint to apply when the `map_color` component is not present.\n",
						"key": "default",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::color::RGB"
						}
					}
				]
			},
			"potion": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Tint to apply when the `potion_contents` component is not present, or it has no effects and no `custom_color` is set.\n",
						"key": "default",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::color::RGB"
						}
					}
				]
			},
			"team": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Tint to apply when there is no context entity, entity is not in a team or the team has no color.\n",
						"key": "default",
						"type": {
							"kind": "reference",
							"path": "::java::server::util::color::RGB"
						}
					}
				]
			}
		},
		"minecraft:tree_decorator": {
			"alter_ground": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "provider",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
						}
					}
				]
			},
			"attached_to_leaves": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "probability",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					},
					{
						"kind": "pair",
						"key": "exclusion_radius_xz",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 16
							}
						}
					},
					{
						"kind": "pair",
						"key": "exclusion_radius_y",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 16
							}
						}
					},
					{
						"kind": "pair",
						"key": "required_empty_blocks",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 1,
								"max": 16
							}
						}
					},
					{
						"kind": "pair",
						"key": "block_provider",
						"type": {
							"kind": "reference",
							"path": "::java::data::worldgen::feature::block_state_provider::BlockStateProvider"
						}
					},
					{
						"kind": "pair",
						"key": "directions",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::server::util::direction::Direction"
							}
						}
					}
				]
			},
			"beehive": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "probability",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					}
				]
			},
			"cocoa": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "probability",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					}
				]
			},
			"creaking_heart": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "probability",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"leave_vine": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"attributes": [
							{
								"name": "since",
								"value": {
									"kind": "literal",
									"value": {
										"kind": "string",
										"value": "1.19"
									}
								}
							}
						],
						"key": "probability",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					}
				]
			},
			"pale_moss": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "leaves_probability",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					},
					{
						"kind": "pair",
						"key": "trunk_probability",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					},
					{
						"kind": "pair",
						"key": "ground_probability",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			}
		},
		"minecraft:trigger": {
			"allay_drop_item_on_block": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20"
											}
										}
									}
								],
								"key": "item",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::ItemPredicate"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "location",
								"type": {
									"kind": "union",
									"members": [
										{
											"kind": "reference",
											"path": "::java::data::advancement::predicate::LocationPredicate",
											"attributes": [
												{
													"name": "until",
													"value": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "1.20"
														}
													}
												}
											]
										},
										{
											"kind": "list",
											"item": {
												"kind": "reference",
												"path": "::java::data::loot::LootCondition"
											},
											"attributes": [
												{
													"name": "since",
													"value": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "1.20"
														}
													}
												}
											]
										}
									]
								},
								"optional": true
							}
						]
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19"
							}
						}
					}
				]
			},
			"any_block_use": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"key": "location",
								"type": {
									"kind": "list",
									"item": {
										"kind": "reference",
										"path": "::java::data::loot::LootCondition"
									}
								},
								"optional": true
							}
						]
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.20.5"
							}
						}
					}
				]
			},
			"bee_nest_destroyed": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"key": "block",
								"type": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "block"
												}
											}
										}
									]
								},
								"optional": true
							},
							{
								"kind": "pair",
								"desc": "Number of bees that were inside the bee nest/beehive before it was broken.\n",
								"key": "num_bees_inside",
								"type": {
									"kind": "int"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"desc": "Item used to break the block.\n",
								"key": "item",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::ItemPredicate"
								},
								"optional": true
							}
						]
					}
				]
			},
			"bred_animals": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"key": "parent",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::CompositeEntity"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "partner",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::CompositeEntity"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "child",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::CompositeEntity"
								},
								"optional": true
							}
						]
					}
				]
			},
			"brewed_potion": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"key": "potion",
								"type": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "potion"
												}
											}
										}
									]
								},
								"optional": true
							}
						]
					}
				]
			},
			"changed_dimension": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"key": "from",
								"type": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "dimension"
												}
											}
										}
									]
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "to",
								"type": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "dimension"
												}
											}
										}
									]
								},
								"optional": true
							}
						]
					}
				]
			},
			"channeled_lightning": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"key": "victims",
								"type": {
									"kind": "list",
									"item": {
										"kind": "reference",
										"path": "::java::data::advancement::trigger::CompositeEntity"
									}
								},
								"optional": true
							}
						]
					}
				]
			},
			"construct_beacon": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"desc": "Tier of the updated beacon base.\n",
								"key": "level",
								"type": {
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::util::MinMaxBounds"
									},
									"typeArgs": [
										{
											"kind": "int"
										}
									]
								},
								"optional": true
							}
						]
					}
				]
			},
			"consume_item": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"key": "item",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::ItemPredicate"
								},
								"optional": true
							}
						]
					}
				]
			},
			"crafter_recipe_crafted": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::RequiredConditions"
				},
				"typeArgs": [
					{
						"kind": "reference",
						"path": "::java::data::advancement::trigger::RecipeCrafted"
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.20.5"
							}
						}
					}
				]
			},
			"cured_zombie_villager": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"key": "villager",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::CompositeEntity"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "zombie",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::CompositeEntity"
								},
								"optional": true
							}
						]
					}
				]
			},
			"default_block_use": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"desc": "The location of the block.\n",
								"key": "location",
								"type": {
									"kind": "list",
									"item": {
										"kind": "reference",
										"path": "::java::data::loot::LootCondition"
									}
								},
								"optional": true
							}
						]
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.20.5"
							}
						}
					}
				]
			},
			"effects_changed": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"key": "effects",
								"type": {
									"kind": "struct",
									"fields": [
										{
											"kind": "pair",
											"key": {
												"kind": "string",
												"attributes": [
													{
														"name": "id",
														"value": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "mob_effect"
															}
														}
													}
												]
											},
											"type": {
												"kind": "reference",
												"path": "::java::data::advancement::predicate::MobEffectPredicate"
											}
										}
									]
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "source",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::CompositeEntity"
								},
								"optional": true
							}
						]
					}
				]
			},
			"enchanted_item": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"key": "item",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::ItemPredicate"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "levels",
								"type": {
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::util::MinMaxBounds"
									},
									"typeArgs": [
										{
											"kind": "int"
										}
									]
								},
								"optional": true
							}
						]
					}
				]
			},
			"enter_block": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"key": "block",
								"type": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "block"
												}
											}
										}
									]
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "state",
								"type": {
									"kind": "dispatcher",
									"parallelIndices": [
										{
											"kind": "dynamic",
											"accessor": [
												"block"
											]
										}
									],
									"registry": "mcdoc:block_states"
								},
								"optional": true
							}
						]
					}
				]
			},
			"entity_hurt_player": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"key": "damage",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::DamagePredicate"
								},
								"optional": true
							}
						]
					}
				]
			},
			"entity_killed_player": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"key": "entity",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::CompositeEntity"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "killing_blow",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::DamageSourcePredicate"
								},
								"optional": true
							}
						]
					}
				]
			},
			"fall_after_explosion": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"key": "start_position",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::LocationPredicate"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "distance",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::DistancePredicate"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "cause",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::CompositeEntity"
								},
								"optional": true
							}
						]
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.20.5"
							}
						}
					}
				]
			},
			"fall_from_height": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"key": "start_position",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::LocationPredicate"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "distance",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::DistancePredicate"
								},
								"optional": true
							}
						]
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.18"
							}
						}
					}
				]
			},
			"filled_bucket": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"key": "item",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::ItemPredicate"
								},
								"optional": true
							}
						]
					}
				]
			},
			"fishing_rod_hooked": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"desc": "Entity that was pulled.\n",
								"key": "entity",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::CompositeEntity"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"desc": "Item that was caught.\n",
								"key": "item",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::ItemPredicate"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"desc": "Fishing rod used.\n",
								"key": "rod",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::ItemPredicate"
								},
								"optional": true
							}
						]
					}
				]
			},
			"hero_of_the_village": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "reference",
						"path": "::java::data::advancement::trigger::Location"
					}
				]
			},
			"impossible": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				]
			},
			"inventory_changed": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"key": "slots",
								"type": {
									"kind": "struct",
									"fields": [
										{
											"kind": "pair",
											"desc": "Amount of empty slots.\n",
											"key": "empty",
											"type": {
												"kind": "concrete",
												"child": {
													"kind": "reference",
													"path": "::java::data::util::MinMaxBounds"
												},
												"typeArgs": [
													{
														"kind": "int"
													}
												]
											},
											"optional": true
										},
										{
											"kind": "pair",
											"desc": "Amount of occupied slots.\n",
											"key": "occupied",
											"type": {
												"kind": "concrete",
												"child": {
													"kind": "reference",
													"path": "::java::data::util::MinMaxBounds"
												},
												"typeArgs": [
													{
														"kind": "int"
													}
												]
											},
											"optional": true
										},
										{
											"kind": "pair",
											"desc": "Amount of slots that are a full stack.\n",
											"key": "full",
											"type": {
												"kind": "concrete",
												"child": {
													"kind": "reference",
													"path": "::java::data::util::MinMaxBounds"
												},
												"typeArgs": [
													{
														"kind": "int"
													}
												]
											},
											"optional": true
										}
									]
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "items",
								"type": {
									"kind": "list",
									"item": {
										"kind": "reference",
										"path": "::java::data::advancement::predicate::ItemPredicate"
									}
								},
								"optional": true
							}
						]
					}
				]
			},
			"item_durability_changed": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"desc": "Change in durability (negative numbers are used to indicate a decrease in durability).\n",
								"key": "delta",
								"type": {
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::util::MinMaxBounds"
									},
									"typeArgs": [
										{
											"kind": "int"
										}
									]
								},
								"optional": true
							},
							{
								"kind": "pair",
								"desc": "The resulting durability.\n",
								"key": "durability",
								"type": {
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::util::MinMaxBounds"
									},
									"typeArgs": [
										{
											"kind": "int"
										}
									]
								},
								"optional": true
							},
							{
								"kind": "pair",
								"desc": "The item before its durability changed.\n",
								"key": "item",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::ItemPredicate"
								},
								"optional": true
							}
						]
					}
				]
			},
			"item_used_on_block": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20"
											}
										}
									}
								],
								"key": "item",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::ItemPredicate"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "location",
								"type": {
									"kind": "union",
									"members": [
										{
											"kind": "reference",
											"path": "::java::data::advancement::predicate::LocationPredicate",
											"attributes": [
												{
													"name": "until",
													"value": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "1.20"
														}
													}
												}
											]
										},
										{
											"kind": "list",
											"item": {
												"kind": "reference",
												"path": "::java::data::loot::LootCondition"
											},
											"attributes": [
												{
													"name": "since",
													"value": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "1.20"
														}
													}
												}
											]
										}
									]
								},
								"optional": true
							}
						]
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.16"
							}
						}
					}
				]
			},
			"kill_mob_near_sculk_catalyst": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"key": "entity",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::EntityPredicate"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "killing_blow",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::DamageSourcePredicate"
								},
								"optional": true
							}
						]
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19"
							}
						}
					}
				]
			},
			"killed_by_arrow": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"desc": "How many different types of entities were killed.\n",
								"key": "unique_entity_types",
								"type": {
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::util::MinMaxBounds"
									},
									"typeArgs": [
										{
											"kind": "int"
										}
									]
								},
								"optional": true
							},
							{
								"kind": "pair",
								"desc": "The weapon item that was used to fire the arrow.\n",
								"key": "fired_from_weapon",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::ItemPredicate"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "victims",
								"type": {
									"kind": "list",
									"item": {
										"kind": "reference",
										"path": "::java::data::advancement::trigger::CompositeEntity"
									}
								},
								"optional": true
							}
						]
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"killed_by_crossbow": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"desc": "How many different types of entities were killed.\n",
								"key": "unique_entity_types",
								"type": {
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::util::MinMaxBounds"
									},
									"typeArgs": [
										{
											"kind": "int"
										}
									]
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "victims",
								"type": {
									"kind": "list",
									"item": {
										"kind": "reference",
										"path": "::java::data::advancement::trigger::CompositeEntity"
									}
								},
								"optional": true
							}
						]
					}
				],
				"attributes": [
					{
						"name": "until",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.21.2"
							}
						}
					}
				]
			},
			"levitation": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"key": "distance",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::DistancePredicate"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "duration",
								"type": {
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::util::MinMaxBounds"
									},
									"typeArgs": [
										{
											"kind": "int"
										}
									]
								},
								"optional": true
							}
						]
					}
				]
			},
			"lightning_strike": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"key": "lightning",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::CompositeEntity"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "bystander",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::CompositeEntity"
								},
								"optional": true
							}
						]
					}
				]
			},
			"location": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "reference",
						"path": "::java::data::advancement::trigger::Location"
					}
				]
			},
			"nether_travel": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"attributes": [
									{
										"name": "since",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18"
											}
										}
									}
								],
								"desc": "Where in the Overworld the player was when they travelled to the Nether.\n",
								"key": "start_position",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::LocationPredicate"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"desc": "How far the player now is from the coordinate they started at in the Overworld before travelling.\n",
								"key": "distance",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::DistancePredicate"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18"
											}
										}
									}
								],
								"desc": "Where in the Overworld the player was when they travelled to the Nether.\n",
								"key": "entered",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::LocationPredicate"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.18"
											}
										}
									}
								],
								"desc": "Where in the Nether the player was when they travelled back to the Overworld.\n",
								"key": "exited",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::LocationPredicate"
								},
								"optional": true
							}
						]
					}
				]
			},
			"placed_block": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20"
											}
										}
									}
								],
								"key": "block",
								"type": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "block"
												}
											}
										}
									]
								},
								"optional": true
							},
							{
								"kind": "pair",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20"
											}
										}
									}
								],
								"key": "state",
								"type": {
									"kind": "dispatcher",
									"parallelIndices": [
										{
											"kind": "dynamic",
											"accessor": [
												"block"
											]
										}
									],
									"registry": "mcdoc:block_states"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"attributes": [
									{
										"name": "until",
										"value": {
											"kind": "literal",
											"value": {
												"kind": "string",
												"value": "1.20"
											}
										}
									}
								],
								"desc": "Item that was used to place the block before the item was consumed.\n",
								"key": "item",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::ItemPredicate"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"desc": "Where the block was placed.\n",
								"key": "location",
								"type": {
									"kind": "union",
									"members": [
										{
											"kind": "reference",
											"path": "::java::data::advancement::predicate::LocationPredicate",
											"attributes": [
												{
													"name": "until",
													"value": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "1.20"
														}
													}
												}
											]
										},
										{
											"kind": "list",
											"item": {
												"kind": "reference",
												"path": "::java::data::loot::LootCondition"
											},
											"attributes": [
												{
													"name": "since",
													"value": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "1.20"
														}
													}
												}
											]
										}
									]
								},
								"optional": true
							}
						]
					}
				]
			},
			"player_generates_container_loot": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::RequiredConditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"key": "loot_table",
								"type": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "loot_table"
												}
											}
										}
									]
								}
							}
						]
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.16"
							}
						}
					}
				]
			},
			"player_hurt_entity": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"key": "damage",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::DamagePredicate"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "entity",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::CompositeEntity"
								},
								"optional": true
							}
						]
					}
				]
			},
			"player_interacted_with_entity": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"key": "item",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::ItemPredicate"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "entity",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::CompositeEntity"
								},
								"optional": true
							}
						]
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.16"
							}
						}
					}
				]
			},
			"player_killed_entity": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"key": "entity",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::CompositeEntity"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "killing_blow",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::DamageSourcePredicate"
								},
								"optional": true
							}
						]
					}
				]
			},
			"recipe_crafted": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::RequiredConditions"
				},
				"typeArgs": [
					{
						"kind": "reference",
						"path": "::java::data::advancement::trigger::RecipeCrafted"
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.20"
							}
						}
					}
				]
			},
			"recipe_unlocked": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::RequiredConditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"key": "recipe",
								"type": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "recipe"
												}
											}
										}
									]
								}
							}
						]
					}
				]
			},
			"ride_entity_in_lava": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"key": "start_position",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::LocationPredicate"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "distance",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::DistancePredicate"
								},
								"optional": true
							}
						]
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.18"
							}
						}
					}
				]
			},
			"safely_harvest_honey": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"key": "block",
								"type": {
									"kind": "struct",
									"fields": [
										{
											"kind": "pair",
											"key": "block",
											"type": {
												"kind": "string",
												"attributes": [
													{
														"name": "id",
														"value": {
															"kind": "literal",
															"value": {
																"kind": "string",
																"value": "block"
															}
														}
													}
												]
											},
											"optional": true
										},
										{
											"kind": "pair",
											"key": "tag",
											"type": {
												"kind": "string",
												"attributes": [
													{
														"name": "id",
														"value": {
															"kind": "tree",
															"values": {
																"registry": {
																	"kind": "literal",
																	"value": {
																		"kind": "string",
																		"value": "block"
																	}
																},
																"tags": {
																	"kind": "literal",
																	"value": {
																		"kind": "string",
																		"value": "implicit"
																	}
																}
															}
														}
													}
												]
											},
											"optional": true
										}
									]
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "item",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::ItemPredicate"
								},
								"optional": true
							}
						]
					}
				],
				"attributes": [
					{
						"name": "until",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.16"
							}
						}
					}
				]
			},
			"shot_crossbow": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"desc": "Crossbow that was used.\n",
								"key": "item",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::ItemPredicate"
								},
								"optional": true
							}
						]
					}
				]
			},
			"slept_in_bed": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "reference",
						"path": "::java::data::advancement::trigger::Location"
					}
				]
			},
			"slide_down_block": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"key": "block",
								"type": {
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "literal",
												"value": {
													"kind": "string",
													"value": "block"
												}
											}
										}
									]
								},
								"optional": true
							}
						]
					}
				]
			},
			"summoned_entity": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"key": "entity",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::CompositeEntity"
								},
								"optional": true
							}
						]
					}
				]
			},
			"tame_animal": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"key": "entity",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::CompositeEntity"
								},
								"optional": true
							}
						]
					}
				]
			},
			"target_hit": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"key": "projectile",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::CompositeEntity"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "shooter",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::CompositeEntity"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "signal_strength",
								"type": {
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::util::MinMaxBounds"
									},
									"typeArgs": [
										{
											"kind": "int"
										}
									]
								},
								"optional": true
							}
						]
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.16"
							}
						}
					}
				]
			},
			"thrown_item_picked_up_by_entity": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"key": "item",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::ItemPredicate"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "entity",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::CompositeEntity"
								},
								"optional": true
							}
						]
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.16"
							}
						}
					}
				]
			},
			"thrown_item_picked_up_by_player": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"key": "item",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::ItemPredicate"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"key": "entity",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::CompositeEntity"
								},
								"optional": true
							}
						]
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19"
							}
						}
					}
				]
			},
			"tick": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "reference",
						"path": "::java::data::advancement::trigger::TriggerBase"
					}
				]
			},
			"used_ender_eye": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"desc": "Horizontal distance between the player and the stronghold.\n",
								"key": "distance",
								"type": {
									"kind": "concrete",
									"child": {
										"kind": "reference",
										"path": "::java::data::util::MinMaxBounds"
									},
									"typeArgs": [
										{
											"kind": "float"
										}
									]
								},
								"optional": true
							}
						]
					}
				]
			},
			"used_totem": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"key": "item",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::ItemPredicate"
								},
								"optional": true
							}
						]
					}
				]
			},
			"using_item": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"key": "item",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::ItemPredicate"
								},
								"optional": true
							}
						]
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"villager_trade": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "struct",
						"fields": [
							{
								"kind": "spread",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::TriggerBase"
								}
							},
							{
								"kind": "pair",
								"key": "villager",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::trigger::CompositeEntity"
								},
								"optional": true
							},
							{
								"kind": "pair",
								"desc": "Item that was purchased. `count` tag checks the item count from one trade, not the total amount traded for.\n",
								"key": "item",
								"type": {
									"kind": "reference",
									"path": "::java::data::advancement::predicate::ItemPredicate"
								},
								"optional": true
							}
						]
					}
				]
			},
			"voluntary_exile": {
				"kind": "concrete",
				"child": {
					"kind": "reference",
					"path": "::java::data::advancement::trigger::Conditions"
				},
				"typeArgs": [
					{
						"kind": "reference",
						"path": "::java::data::advancement::trigger::Location"
					}
				]
			}
		},
		"minecraft:trunk_placer": {
			"bending_trunk_placer": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "bend_length",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::IntProvider"
							},
							"typeArgs": [
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 1,
										"max": 64
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "min_height_for_leaves",
						"type": {
							"kind": "int",
							"valueRange": {
								"kind": 0,
								"min": 1
							}
						},
						"optional": true
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.17"
							}
						}
					}
				]
			},
			"cherry_trunk_placer": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "branch_count",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::IntProvider"
							},
							"typeArgs": [
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 1,
										"max": 3
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "branch_horizontal_length",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::IntProvider"
							},
							"typeArgs": [
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 2,
										"max": 16
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "branch_start_offset_from_top",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::UniformIntProvider"
							},
							"typeArgs": [
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": -16,
										"max": 0
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "branch_end_offset_from_top",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::IntProvider"
							},
							"typeArgs": [
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": -16,
										"max": 16
									}
								}
							]
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19.4"
							}
						}
					}
				]
			},
			"dark_oak_trunk_placer": {
				"kind": "struct",
				"fields": []
			},
			"fancy_trunk_placer": {
				"kind": "struct",
				"fields": []
			},
			"forking_trunk_placer": {
				"kind": "struct",
				"fields": []
			},
			"giant_trunk_placer": {
				"kind": "struct",
				"fields": []
			},
			"mega_jungle_trunk_placer": {
				"kind": "struct",
				"fields": []
			},
			"straight_trunk_placer": {
				"kind": "struct",
				"fields": []
			},
			"upwards_branching_trunk_placer": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "extra_branch_steps",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::IntProvider"
							},
							"typeArgs": [
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 1
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "extra_branch_length",
						"type": {
							"kind": "concrete",
							"child": {
								"kind": "reference",
								"path": "::java::data::worldgen::IntProvider"
							},
							"typeArgs": [
								{
									"kind": "int",
									"valueRange": {
										"kind": 0,
										"min": 0
									}
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "place_branch_per_log_probability",
						"type": {
							"kind": "float",
							"valueRange": {
								"kind": 0,
								"min": 0,
								"max": 1
							}
						}
					},
					{
						"kind": "pair",
						"key": "can_grow_through",
						"type": {
							"kind": "union",
							"members": [
								{
									"kind": "list",
									"item": {
										"kind": "string",
										"attributes": [
											{
												"name": "id",
												"value": {
													"kind": "literal",
													"value": {
														"kind": "string",
														"value": "block"
													}
												}
											}
										]
									}
								},
								{
									"kind": "string",
									"attributes": [
										{
											"name": "id",
											"value": {
												"kind": "tree",
												"values": {
													"registry": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "block"
														}
													},
													"tags": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "allowed"
														}
													}
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"attributes": [
					{
						"name": "since",
						"value": {
							"kind": "literal",
							"value": {
								"kind": "string",
								"value": "1.19"
							}
						}
					}
				]
			}
		},
		"minecraft:value_effect": {
			"add": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "value",
						"type": {
							"kind": "reference",
							"path": "::java::data::enchantment::LevelBasedValue"
						}
					}
				]
			},
			"all_of": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "effects",
						"type": {
							"kind": "list",
							"item": {
								"kind": "reference",
								"path": "::java::data::enchantment::ValueEffect"
							},
							"lengthRange": {
								"kind": 0,
								"min": 1
							}
						}
					}
				]
			},
			"multiply": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": "Level-Based Value determining the factor to multiply in\n",
						"key": "factor",
						"type": {
							"kind": "reference",
							"path": "::java::data::enchantment::LevelBasedValue"
						}
					}
				]
			},
			"remove_binomial": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"desc": " Chance that an input value is dropped by 1.\n\n\n\n The span is 0 to 1, with 0 being no chance to drop an input value and 1 dropping all input values.\n",
						"key": "chance",
						"type": {
							"kind": "reference",
							"path": "::java::data::enchantment::LevelBasedValue"
						}
					}
				]
			},
			"set": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "value",
						"type": {
							"kind": "reference",
							"path": "::java::data::enchantment::LevelBasedValue"
						}
					}
				]
			}
		},
		"minecraft:worldgen/pool_alias_binding": {
			"direct": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "alias",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id"
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "target",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id",
									"value": {
										"kind": "literal",
										"value": {
											"kind": "string",
											"value": "worldgen/template_pool"
										}
									}
								}
							]
						}
					}
				]
			},
			"random": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "alias",
						"type": {
							"kind": "string",
							"attributes": [
								{
									"name": "id"
								}
							]
						}
					},
					{
						"kind": "pair",
						"key": "targets",
						"type": {
							"kind": "list",
							"item": {
								"kind": "struct",
								"fields": [
									{
										"kind": "pair",
										"key": "weight",
										"type": {
											"kind": "int"
										}
									},
									{
										"kind": "pair",
										"key": "data",
										"type": {
											"kind": "string",
											"attributes": [
												{
													"name": "id",
													"value": {
														"kind": "literal",
														"value": {
															"kind": "string",
															"value": "worldgen/template_pool"
														}
													}
												}
											]
										}
									}
								]
							}
						}
					}
				]
			},
			"random_group": {
				"kind": "struct",
				"fields": [
					{
						"kind": "pair",
						"key": "groups",
						"type": {
							"kind": "list",
							"item": {
								"kind": "struct",
								"fields": [
									{
										"kind": "pair",
										"key": "weight",
										"type": {
											"kind": "int"
										}
									},
									{
										"kind": "pair",
										"key": "data",
										"type": {
											"kind": "list",
											"item": {
												"kind": "reference",
												"path": "::java::data::worldgen::structure::PoolAlias"
											}
										}
									}
								]
							}
						}
					}
				]
			}
		}
	}
}
